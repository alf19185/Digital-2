

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 14 11:51:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.31
    16                           ; Generated 13/10/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	idataCOMMON
   208  073B                     __pidataCOMMON:
   209                           
   210                           ;initializer for _BANDERA
   211  073B  3401               	retlw	1
   212  0006                     _PORTB	set	6
   213  0009                     _PORTE	set	9
   214  0005                     _PORTA	set	5
   215  0008                     _PORTD	set	8
   216  0007                     _PORTC	set	7
   217  0005                     _PORTAbits	set	5
   218  0089                     _TRISE	set	137
   219  0088                     _TRISD	set	136
   220  0087                     _TRISC	set	135
   221  0085                     _TRISA	set	133
   222  0189                     _ANSELH	set	393
   223  0188                     _ANSEL	set	392
   224                           
   225                           	psect	cinit
   226  07F3                     start_initialization:	
   227                           ; #config settings
   228                           
   229  07F3                     __initialization:
   230                           
   231                           ; Initialize objects allocated to COMMON
   232  07F3  120A  118A  273B  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   233  07F8  00F8               	movwf	__pdataCOMMON& (0+127)
   234                           
   235                           ; Clear objects allocated to COMMON
   236  07F9  01F5               	clrf	__pbssCOMMON& (0+127)
   237  07FA  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   238  07FB  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   239  07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  07FC                     __end_of__initialization:
   243  07FC  0183               	clrf	3
   244  07FD  120A  118A  2F7E   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMMON
   247  0075                     __pbssCOMMON:
   248  0075                     _INICIAR:
   249  0075                     	ds	1
   250  0076                     _BANDERAJ2:
   251  0076                     	ds	1
   252  0077                     _BANDERAJ1:
   253  0077                     	ds	1
   254                           
   255                           	psect	dataCOMMON
   256  0078                     __pdataCOMMON:
   257  0078                     _BANDERA:
   258  0078                     	ds	1
   259                           
   260                           	psect	cstackCOMMON
   261  0070                     __pcstackCOMMON:
   262  0070                     ?_Setup:
   263  0070                     ??_Setup:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_Race:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ??_Race:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_main:	
   273                           ; 1 bytes @ 0x0
   274                           
   275                           
   276                           ; 1 bytes @ 0x0
   277  0070                     	ds	2
   278  0072                     Race@i:
   279                           
   280                           ; 2 bytes @ 0x2
   281  0072                     	ds	2
   282  0074                     ??_main:
   283                           
   284                           ; 1 bytes @ 0x4
   285  0074                     	ds	1
   286                           
   287                           	psect	maintext
   288  077E                     __pmaintext:	
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 40 in file "Principal1.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : B00/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0
   310 ;;      Temps:          1       0       0       0       0
   311 ;;      Totals:         1       0       0       0       0
   312 ;;Total ram usage:        1 bytes
   313 ;; Hardware stack levels required when called:    1
   314 ;; This function calls:
   315 ;;		_Race
   316 ;;		_Setup
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           
   323                           ;psect for function _main
   324  077E                     _main:
   325  077E                     l699:	
   326                           ;incstack = 0
   327                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   328                           
   329                           
   330                           ;Principal1.c: 42:         else{
   331  077E  120A  118A  273C  120A  118A  	fcall	_Setup
   332  0783                     l701:
   333                           
   334                           ;Principal1.c: 46: 
   335  0783  1283               	bcf	3,5	;RP0=0, select bank0
   336  0784  1303               	bcf	3,6	;RP1=0, select bank0
   337  0785  1C05               	btfss	5,0	;volatile
   338  0786  2F88               	goto	u21
   339  0787  2F89               	goto	u20
   340  0788                     u21:
   341  0788  2F8B               	goto	l705
   342  0789                     u20:
   343  0789                     l703:
   344                           
   345                           ;Principal1.c: 47:                     PORTC = 1;
   346  0789  01F8               	clrf	_BANDERA
   347                           
   348                           ;Principal1.c: 48:                 }
   349  078A  2F97               	goto	l711
   350  078B                     l705:
   351                           
   352                           ;Principal1.c: 50: 
   353  078B  0878               	movf	_BANDERA,w
   354  078C  1D03               	btfss	3,2
   355  078D  2F8F               	goto	u31
   356  078E  2F90               	goto	u30
   357  078F                     u31:
   358  078F  2F97               	goto	l711
   359  0790                     u30:
   360  0790                     l707:
   361                           
   362                           ;Principal1.c: 51:                     PORTC = PORTC<<1;
   363  0790  01F8               	clrf	_BANDERA
   364  0791  0AF8               	incf	_BANDERA,f
   365  0792                     l709:
   366                           
   367                           ;Principal1.c: 52: 
   368  0792  120A  118A  274F  120A  118A  	fcall	_Race
   369  0797                     l711:
   370                           
   371                           ;Principal1.c: 57:                 else{
   372  0797  1283               	bcf	3,5	;RP0=0, select bank0
   373  0798  1303               	bcf	3,6	;RP1=0, select bank0
   374  0799  1C85               	btfss	5,1	;volatile
   375  079A  2F9C               	goto	u41
   376  079B  2F9D               	goto	u40
   377  079C                     u41:
   378  079C  2FA5               	goto	l717
   379  079D                     u40:
   380  079D                     l713:
   381  079D  0375               	decf	_INICIAR,w
   382  079E  1D03               	btfss	3,2
   383  079F  2FA1               	goto	u51
   384  07A0  2FA2               	goto	u50
   385  07A1                     u51:
   386  07A1  2FA5               	goto	l717
   387  07A2                     u50:
   388  07A2                     l715:
   389                           
   390                           ;Principal1.c: 58:                     PORTC = PORTC<<1;
   391  07A2  01F7               	clrf	_BANDERAJ1
   392  07A3  0AF7               	incf	_BANDERAJ1,f
   393                           
   394                           ;Principal1.c: 59:                 }
   395  07A4  2FC4               	goto	l735
   396  07A5                     l717:
   397                           
   398                           ;Principal1.c: 61:         }
   399  07A5  0377               	decf	_BANDERAJ1,w
   400  07A6  1D03               	btfss	3,2
   401  07A7  2FA9               	goto	u61
   402  07A8  2FAA               	goto	u60
   403  07A9                     u61:
   404  07A9  2FC4               	goto	l735
   405  07AA                     u60:
   406  07AA                     l719:
   407                           
   408                           ;Principal1.c: 62: 
   409  07AA  01F7               	clrf	_BANDERAJ1
   410  07AB                     l721:
   411                           
   412                           ;Principal1.c: 63: 
   413  07AB  0807               	movf	7,w	;volatile
   414  07AC  1D03               	btfss	3,2
   415  07AD  2FAF               	goto	u71
   416  07AE  2FB0               	goto	u70
   417  07AF                     u71:
   418  07AF  2FB3               	goto	l725
   419  07B0                     u70:
   420  07B0                     l723:
   421                           
   422                           ;Principal1.c: 65:         if (PORTAbits.RA2 == 1 && INICIAR== 1){
   423  07B0  3001               	movlw	1
   424  07B1  0087               	movwf	7	;volatile
   425                           
   426                           ;Principal1.c: 66:             BANDERAJ2 = 1;
   427  07B2  2FC4               	goto	l735
   428  07B3                     l725:
   429  07B3  3040               	movlw	64
   430  07B4  0607               	xorwf	7,w	;volatile
   431  07B5  1D03               	btfss	3,2
   432  07B6  2FB8               	goto	u81
   433  07B7  2FB9               	goto	u80
   434  07B8                     u81:
   435  07B8  2FC0               	goto	l733
   436  07B9                     u80:
   437  07B9                     l727:
   438                           
   439                           ;Principal1.c: 69:             if (BANDERAJ2 == 1){
   440  07B9  0807               	movf	7,w	;volatile
   441  07BA  00F4               	movwf	??_main
   442  07BB  0774               	addwf	??_main,w
   443  07BC  0087               	movwf	7	;volatile
   444  07BD                     l729:
   445                           
   446                           ;Principal1.c: 71:                 if (PORTD == 0){
   447  07BD  1585               	bsf	5,3	;volatile
   448  07BE                     l731:
   449                           
   450                           ;Principal1.c: 73:                 }
   451  07BE  01F5               	clrf	_INICIAR
   452                           
   453                           ;Principal1.c: 74:                 else if (PORTD == 0b01000000) {
   454  07BF  2FC4               	goto	l735
   455  07C0                     l733:
   456                           
   457                           ;Principal1.c: 76:                     PORTAbits.RA4 = 1;
   458  07C0  0807               	movf	7,w	;volatile
   459  07C1  00F4               	movwf	??_main
   460  07C2  0774               	addwf	??_main,w
   461  07C3  0087               	movwf	7	;volatile
   462  07C4                     l735:
   463                           
   464                           ;Principal1.c: 83:         }
   465  07C4  1D05               	btfss	5,2	;volatile
   466  07C5  2FC7               	goto	u91
   467  07C6  2FC8               	goto	u90
   468  07C7                     u91:
   469  07C7  2FD0               	goto	l741
   470  07C8                     u90:
   471  07C8                     l737:
   472  07C8  0375               	decf	_INICIAR,w
   473  07C9  1D03               	btfss	3,2
   474  07CA  2FCC               	goto	u101
   475  07CB  2FCD               	goto	u100
   476  07CC                     u101:
   477  07CC  2FD0               	goto	l741
   478  07CD                     u100:
   479  07CD                     l739:
   480                           
   481                           ;Principal1.c: 84: 
   482  07CD  01F6               	clrf	_BANDERAJ2
   483  07CE  0AF6               	incf	_BANDERAJ2,f
   484                           
   485                           ;Principal1.c: 85:     }
   486  07CF  2F83               	goto	l701
   487  07D0                     l741:
   488                           
   489                           ;Principal1.c: 87: 
   490  07D0  0376               	decf	_BANDERAJ2,w
   491  07D1  1D03               	btfss	3,2
   492  07D2  2FD4               	goto	u111
   493  07D3  2FD5               	goto	u110
   494  07D4                     u111:
   495  07D4  2F83               	goto	l701
   496  07D5                     u110:
   497  07D5                     l743:
   498                           
   499                           ;Principal1.c: 88: 
   500  07D5  01F6               	clrf	_BANDERAJ2
   501  07D6                     l745:
   502                           
   503                           ;Principal1.c: 89: 
   504  07D6  0808               	movf	8,w	;volatile
   505  07D7  1D03               	btfss	3,2
   506  07D8  2FDA               	goto	u121
   507  07D9  2FDB               	goto	u120
   508  07DA                     u121:
   509  07DA  2FDE               	goto	l749
   510  07DB                     u120:
   511  07DB                     l747:
   512                           
   513                           ;Principal1.c: 90: 
   514  07DB  3001               	movlw	1
   515  07DC  0088               	movwf	8	;volatile
   516                           
   517                           ;Principal1.c: 91: 
   518  07DD  2F83               	goto	l701
   519  07DE                     l749:
   520  07DE  3040               	movlw	64
   521  07DF  0608               	xorwf	8,w	;volatile
   522  07E0  1D03               	btfss	3,2
   523  07E1  2FE3               	goto	u131
   524  07E2  2FE4               	goto	u130
   525  07E3                     u131:
   526  07E3  2FEB               	goto	l757
   527  07E4                     u130:
   528  07E4                     l751:
   529                           
   530                           ;Principal1.c: 93:     PORTA = 0;
   531  07E4  0808               	movf	8,w	;volatile
   532  07E5  00F4               	movwf	??_main
   533  07E6  0774               	addwf	??_main,w
   534  07E7  0088               	movwf	8	;volatile
   535  07E8                     l753:
   536                           
   537                           ;Principal1.c: 94:     PORTC = 0;
   538  07E8  1605               	bsf	5,4	;volatile
   539  07E9                     l755:
   540                           
   541                           ;Principal1.c: 95:     PORTD = 0;
   542  07E9  01F5               	clrf	_INICIAR
   543                           
   544                           ;Principal1.c: 96:     PORTE = 0;
   545  07EA  2F83               	goto	l701
   546  07EB                     l757:
   547                           
   548                           ;Principal1.c: 98:     TRISA = 0b00000111;
   549  07EB  0808               	movf	8,w	;volatile
   550  07EC  00F4               	movwf	??_main
   551  07ED  0774               	addwf	??_main,w
   552  07EE  0088               	movwf	8	;volatile
   553  07EF  2F83               	goto	l701
   554  07F0  120A  118A  2800   	ljmp	start
   555  07F3                     __end_of_main:
   556                           
   557                           	psect	text1
   558  073C                     __ptext1:	
   559 ;; *************** function _Setup *****************
   560 ;; Defined at:
   561 ;;		line 110 in file "Principal1.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           
   589                           ;psect for function _Setup
   590  073C                     _Setup:
   591  073C                     l663:	
   592                           ;incstack = 0
   593                           ; Regs used in _Setup: [wreg+status,2]
   594                           
   595                           
   596                           ;Principal1.c: 111: void Race(void){
   597  073C  1283               	bcf	3,5	;RP0=0, select bank0
   598  073D  1303               	bcf	3,6	;RP1=0, select bank0
   599  073E  0185               	clrf	5	;volatile
   600                           
   601                           ;Principal1.c: 112: 
   602  073F  0187               	clrf	7	;volatile
   603                           
   604                           ;Principal1.c: 113:     PORTC = 0;
   605  0740  0188               	clrf	8	;volatile
   606                           
   607                           ;Principal1.c: 114:     PORTD = 0;
   608  0741  0189               	clrf	9	;volatile
   609                           
   610                           ;Principal1.c: 115:     PORTAbits.RA3 = 0;
   611  0742  0186               	clrf	6	;volatile
   612  0743                     l665:
   613                           
   614                           ;Principal1.c: 116:     PORTAbits.RA4 = 0;
   615  0743  3007               	movlw	7
   616  0744  1683               	bsf	3,5	;RP0=1, select bank1
   617  0745  1303               	bcf	3,6	;RP1=0, select bank1
   618  0746  0085               	movwf	5	;volatile
   619  0747                     l667:
   620                           
   621                           ;Principal1.c: 117: 
   622  0747  0187               	clrf	7	;volatile
   623  0748                     l669:
   624                           
   625                           ;Principal1.c: 118:     PORTE=1;
   626  0748  0188               	clrf	8	;volatile
   627  0749                     l671:
   628                           
   629                           ;Principal1.c: 119: 
   630  0749  0189               	clrf	9	;volatile
   631  074A                     l673:
   632                           
   633                           ;Principal1.c: 120:     for(int i = 0; i < 3; i++){
   634  074A  1683               	bsf	3,5	;RP0=1, select bank3
   635  074B  1703               	bsf	3,6	;RP1=1, select bank3
   636  074C  0188               	clrf	8	;volatile
   637  074D                     l675:
   638                           
   639                           ;Principal1.c: 121:         _delay((unsigned long)((50)*(8000000/4000.0)));
   640  074D  0189               	clrf	9	;volatile
   641  074E                     l66:
   642  074E  0008               	return
   643  074F                     __end_of_Setup:
   644                           
   645                           	psect	text2
   646  074F                     __ptext2:	
   647 ;; *************** function _Race *****************
   648 ;; Defined at:
   649 ;;		line 129 in file "Principal1.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  i               2    2[COMMON] int 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0, btemp+1
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         0       0       0       0       0
   664 ;;      Locals:         2       0       0       0       0
   665 ;;      Temps:          2       0       0       0       0
   666 ;;      Totals:         4       0       0       0       0
   667 ;;Total ram usage:        4 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function _Race
   678  074F                     _Race:
   679  074F                     l677:	
   680                           ;incstack = 0
   681                           ; Regs used in _Race: [wreg+status,2+status,0+btemp+1]
   682                           
   683  074F  1283               	bcf	3,5	;RP0=0, select bank0
   684  0750  1303               	bcf	3,6	;RP1=0, select bank0
   685  0751  0187               	clrf	7	;volatile
   686  0752  0188               	clrf	8	;volatile
   687  0753                     l679:
   688  0753  1185               	bcf	5,3	;volatile
   689  0754                     l681:
   690  0754  1205               	bcf	5,4	;volatile
   691  0755                     l683:
   692  0755  3001               	movlw	1
   693  0756  0089               	movwf	9	;volatile
   694  0757                     l685:
   695  0757  01F2               	clrf	Race@i
   696  0758  01F3               	clrf	Race@i+1
   697  0759                     l691:
   698  0759  3082               	movlw	130
   699  075A  00F1               	movwf	??_Race+1
   700  075B  30DD               	movlw	221
   701  075C  00F0               	movwf	??_Race
   702  075D                     u147:
   703  075D  0BF0               	decfsz	??_Race,f
   704  075E  2F5D               	goto	u147
   705  075F  0BF1               	decfsz	??_Race+1,f
   706  0760  2F5D               	goto	u147
   707  0761  2F62               	nop2
   708  0762                     l693:
   709  0762  1283               	bcf	3,5	;RP0=0, select bank0
   710  0763  1303               	bcf	3,6	;RP1=0, select bank0
   711  0764  0809               	movf	9,w	;volatile
   712  0765  00F0               	movwf	??_Race
   713  0766  0770               	addwf	??_Race,w
   714  0767  0089               	movwf	9	;volatile
   715  0768                     l695:
   716  0768  3001               	movlw	1
   717  0769  07F2               	addwf	Race@i,f
   718  076A  1803               	skipnc
   719  076B  0AF3               	incf	Race@i+1,f
   720  076C  3000               	movlw	0
   721  076D  07F3               	addwf	Race@i+1,f
   722  076E                     l697:
   723  076E  0873               	movf	Race@i+1,w
   724  076F  3A80               	xorlw	128
   725  0770  00FF               	movwf	btemp+1
   726  0771  3080               	movlw	128
   727  0772  027F               	subwf	btemp+1,w
   728  0773  1D03               	skipz
   729  0774  2F77               	goto	u15
   730  0775  3003               	movlw	3
   731  0776  0272               	subwf	Race@i,w
   732  0777                     u15:
   733  0777  1C03               	skipc
   734  0778  2F7A               	goto	u11
   735  0779  2F7B               	goto	u10
   736  077A                     u11:
   737  077A  2F59               	goto	l691
   738  077B                     u10:
   739  077B                     l70:
   740  077B  01F5               	clrf	_INICIAR
   741  077C  0AF5               	incf	_INICIAR,f
   742  077D                     l71:
   743  077D  0008               	return
   744  077E                     __end_of_Race:
   745  007E                     btemp	set	126	;btemp
   746  007E                     wtemp0	set	126
   747                           
   748                           	psect	config
   749                           
   750                           ;Config register CONFIG1 @ 0x2007
   751                           ;	Oscillator Selection bits
   752                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   753                           ;	Watchdog Timer Enable bit
   754                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   755                           ;	Power-up Timer Enable bit
   756                           ;	PWRTE = OFF, PWRT disabled
   757                           ;	RE3/MCLR pin function select bit
   758                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   759                           ;	Code Protection bit
   760                           ;	CP = OFF, Program memory code protection is disabled
   761                           ;	Data Code Protection bit
   762                           ;	CPD = OFF, Data memory code protection is disabled
   763                           ;	Brown Out Reset Selection bits
   764                           ;	BOREN = OFF, BOR disabled
   765                           ;	Internal External Switchover bit
   766                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   767                           ;	Fail-Safe Clock Monitor Enabled bit
   768                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   769                           ;	Low Voltage Programming Enable bit
   770                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   771                           ;	In-Circuit Debugger Mode bit
   772                           ;	DEBUG = 0x1, unprogrammed default
   773  2007                     	org	8199
   774  2007  20D6               	dw	8406
   775                           
   776                           ;Config register CONFIG2 @ 0x2008
   777                           ;	Brown-out Reset Selection bit
   778                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   779                           ;	Flash Program Memory Self Write Enable bits
   780                           ;	WRT = OFF, Write protection off
   781  2008                     	org	8200
   782  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Race

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              4 COMMON     1     1      0
                               _Race
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Race                                                 4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Race
   _Setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       9      12        0.0%
ABS                  0      0       9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 14 11:51:40 2021

                     l70 077B                       l71 077D                       l66 074E  
                     u10 077B                       u11 077A                       u20 0789  
                     u21 0788                       u30 0790                       u15 0777  
                     u31 078F                       u40 079D                       u41 079C  
                     u50 07A2                       u51 07A1                       u60 07AA  
                     u61 07A9                       u70 07B0                       u71 07AF  
                     u80 07B9                       u81 07B8                       u90 07C8  
                     u91 07C7                      l701 0783                      l711 0797  
                    l703 0789                      l721 07AB                      l713 079D  
                    l705 078B                      l731 07BE                      l723 07B0  
                    l715 07A2                      l707 0790                      l741 07D0  
                    l733 07C0                      l725 07B3                      l717 07A5  
                    l709 0792                      l671 0749                      l663 073C  
                    l751 07E4                      l743 07D5                      l727 07B9  
                    l719 07AA                      l735 07C4                      l681 0754  
                    l673 074A                      l665 0743                      l753 07E8  
                    l745 07D6                      l737 07C8                      l729 07BD  
                    l691 0759                      l683 0755                      l675 074D  
                    l667 0747                      l755 07E9                      l747 07DB  
                    l739 07CD                      l693 0762                      l685 0757  
                    l677 074F                      l669 0748                      l757 07EB  
                    l749 07DE                      l695 0768                      l679 0753  
                    l697 076E                      l699 077E                      u100 07CD  
                    u101 07CC                      u110 07D5                      u111 07D4  
                    u120 07DB                      u121 07DA                      u130 07E4  
                    u131 07E3                      u147 075D                     _Race 074F  
                   _main 077E                     btemp 007E                     start 0000  
                  ?_Race 0070                    ?_main 0070                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  Race@i 0072                    _Setup 073C                    status 0003  
                  wtemp0 007E          __initialization 07F3             __end_of_Race 077E  
           __end_of_main 07F3                   ??_Race 0070                   ??_main 0074  
                 ?_Setup 0070                   _ANSELH 0189             __pdataCOMMON 0078  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_Setup 074F  
                ??_Setup 0070               __pmaintext 077E                  _BANDERA 0078  
                _INICIAR 0075                _BANDERAJ1 0077                _BANDERAJ2 0076  
                __ptext1 073C                  __ptext2 074F     end_of_initialization 07FC  
              _PORTAbits 0005            __pidataCOMMON 073B      start_initialization 07F3  
            __pbssCOMMON 0075                ___latbits 0002           __size_of_Setup 0013  
          __size_of_Race 002F            __size_of_main 0075  
