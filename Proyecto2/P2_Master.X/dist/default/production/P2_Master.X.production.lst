

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Mar 05 19:35:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.31
    37                           ; Generated 13/10/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383                           
   384                           	psect	idataBANK0
   385  03BC                     __pidataBANK0:
   386                           
   387                           ;initializer for _DZ1
   388  03BC  3437               	retlw	55
   389                           
   390                           ;initializer for _DZ0
   391  03BD  3436               	retlw	54
   392                           
   393                           ;initializer for _DY1
   394  03BE  3435               	retlw	53
   395                           
   396                           ;initializer for _DY0
   397  03BF  3434               	retlw	52
   398                           
   399                           ;initializer for _DX1
   400  03C0  3433               	retlw	51
   401                           
   402                           ;initializer for _DX0
   403  03C1  3432               	retlw	50
   404                           
   405                           ;initializer for _D_FRMT
   406  03C2  3431               	retlw	49
   407                           
   408                           ;initializer for _P_CTL
   409  03C3  342D               	retlw	45
   410                           
   411                           ;initializer for _READ
   412  03C4  34A7               	retlw	167
   413                           
   414                           ;initializer for _WRITE
   415  03C5  34A6               	retlw	166
   416  0018                     _RCSTAbits	set	24
   417  0013                     _SSPBUF	set	19
   418  0014                     _SSPCON	set	20
   419  0009                     _PORTE	set	9
   420  0008                     _PORTD	set	8
   421  0007                     _PORTC	set	7
   422  0006                     _PORTB	set	6
   423  0005                     _PORTAbits	set	5
   424  001A                     _RCREG	set	26
   425  0005                     _PORTA	set	5
   426  0001                     _TMR0	set	1
   427  0019                     _TXREG	set	25
   428  000C                     _PIR1bits	set	12
   429  000B                     _INTCONbits	set	11
   430  0063                     _SSPIF	set	99
   431  005E                     _PEIE	set	94
   432  005F                     _GIE	set	95
   433  009A                     _SPBRGH	set	154
   434  0099                     _SPBRG	set	153
   435  0098                     _TXSTAbits	set	152
   436  0091                     _SSPCON2bits	set	145
   437  0087                     _TRISCbits	set	135
   438  0094                     _SSPSTAT	set	148
   439  0093                     _SSPADD	set	147
   440  0091                     _SSPCON2	set	145
   441  0089                     _TRISE	set	137
   442  0088                     _TRISD	set	136
   443  0087                     _TRISC	set	135
   444  0086                     _TRISB	set	134
   445  0085                     _TRISA	set	133
   446  008F                     _OSCCONbits	set	143
   447  0081                     _OPTION_REG	set	129
   448  008C                     _PIE1bits	set	140
   449  0463                     _SSPIE	set	1123
   450  043C                     _TRISC4	set	1084
   451  043B                     _TRISC3	set	1083
   452  048A                     _PEN	set	1162
   453  0489                     _RSEN	set	1161
   454  0488                     _SEN	set	1160
   455  0187                     _BAUDCTLbits	set	391
   456  0189                     _ANSELH	set	393
   457  0188                     _ANSEL	set	392
   458                           
   459                           	psect	cinit
   460  0011                     start_initialization:	
   461                           ; #config settings
   462                           
   463  0011                     __initialization:
   464                           
   465                           ; Initialize objects allocated to BANK0
   466  0011  1383               	bcf	3,7	;select IRP bank0
   467  0012  305E               	movlw	low (__pdataBANK0+10)
   468  0013  00FD               	movwf	btemp+-1
   469  0014  3003               	movlw	high __pidataBANK0
   470  0015  00FE               	movwf	btemp
   471  0016  30BC               	movlw	low __pidataBANK0
   472  0017  00FF               	movwf	btemp+1
   473  0018  3054               	movlw	low __pdataBANK0
   474  0019  0084               	movwf	4
   475  001A  120A  118A  23A0  120A  118A  	fcall	init_ram0
   476                           
   477                           ; Clear objects allocated to BANK0
   478  001F  3020               	movlw	low __pbssBANK0
   479  0020  0084               	movwf	4
   480  0021  303E               	movlw	low (__pbssBANK0+30)
   481  0022  120A  118A  23EB  120A  118A  	fcall	clear_ram0
   482                           
   483                           ; Clear objects allocated to COMMON
   484  0027  01F0               	clrf	__pbssCOMMON& (0+127)
   485  0028  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   486  0029  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   487  002A  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   488  002B  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   489  002C  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   490  002D                     end_of_initialization:	
   491                           ;End of C runtime variable initialization code
   492                           
   493  002D                     __end_of__initialization:
   494  002D  0183               	clrf	3
   495  002E  120A  118A  2A9B   	ljmp	_main	;jump to C main() function
   496                           
   497                           	psect	bssCOMMON
   498  0070                     __pbssCOMMON:
   499  0070                     _X3:
   500  0070                     	ds	1
   501  0071                     _X2:
   502  0071                     	ds	1
   503  0072                     _X1:
   504  0072                     	ds	1
   505  0073                     _X0:
   506  0073                     	ds	1
   507  0074                     _BANDERA_T:
   508  0074                     	ds	1
   509  0075                     _LECTURA:
   510  0075                     	ds	1
   511                           
   512                           	psect	bssBANK0
   513  0020                     __pbssBANK0:
   514  0020                     _FLAG_RC:
   515  0020                     	ds	1
   516  0021                     _ENTER:
   517  0021                     	ds	1
   518  0022                     _LED2:
   519  0022                     	ds	1
   520  0023                     _LED1:
   521  0023                     	ds	1
   522  0024                     _b:
   523  0024                     	ds	1
   524  0025                     _a:
   525  0025                     	ds	1
   526  0026                     _variable:
   527  0026                     	ds	1
   528  0027                     _Z_D:
   529  0027                     	ds	1
   530  0028                     _Z_U:
   531  0028                     	ds	1
   532  0029                     _Y_D:
   533  0029                     	ds	1
   534  002A                     _Y_U:
   535  002A                     	ds	1
   536  002B                     _X_D:
   537  002B                     	ds	1
   538  002C                     _X_U:
   539  002C                     	ds	1
   540  002D                     _Y_1:
   541  002D                     	ds	1
   542  002E                     _Z_1:
   543  002E                     	ds	1
   544  002F                     _X_1:
   545  002F                     	ds	1
   546  0030                     _Z3:
   547  0030                     	ds	1
   548  0031                     _Z2:
   549  0031                     	ds	1
   550  0032                     _Z1:
   551  0032                     	ds	1
   552  0033                     _Z0:
   553  0033                     	ds	1
   554  0034                     _Y3:
   555  0034                     	ds	1
   556  0035                     _Y2:
   557  0035                     	ds	1
   558  0036                     _Y1:
   559  0036                     	ds	1
   560  0037                     _Y0:
   561  0037                     	ds	1
   562  0038                     _ZH:
   563  0038                     	ds	1
   564  0039                     _ZL:
   565  0039                     	ds	1
   566  003A                     _YH:
   567  003A                     	ds	1
   568  003B                     _YL:
   569  003B                     	ds	1
   570  003C                     _XH:
   571  003C                     	ds	1
   572  003D                     _XL:
   573  003D                     	ds	1
   574                           
   575                           	psect	dataBANK0
   576  0054                     __pdataBANK0:
   577  0054                     _DZ1:
   578  0054                     	ds	1
   579  0055                     _DZ0:
   580  0055                     	ds	1
   581  0056                     _DY1:
   582  0056                     	ds	1
   583  0057                     _DY0:
   584  0057                     	ds	1
   585  0058                     _DX1:
   586  0058                     	ds	1
   587  0059                     _DX0:
   588  0059                     	ds	1
   589  005A                     _D_FRMT:
   590  005A                     	ds	1
   591  005B                     _P_CTL:
   592  005B                     	ds	1
   593  005C                     _READ:
   594  005C                     	ds	1
   595  005D                     _WRITE:
   596  005D                     	ds	1
   597                           
   598                           	psect	inittext
   599  039C                     init_fetch0:	
   600                           ;	Called with low address in FSR and high address in W
   601                           
   602  039C  087E               	movf	btemp,w
   603  039D  008A               	movwf	10
   604  039E  087F               	movf	btemp+1,w
   605  039F  0082               	movwf	2
   606  03A0                     init_ram0:	
   607                           ;Called with:
   608                           ;	high address of idata address in btemp 
   609                           ;	low address of idata address in btemp+1 
   610                           ;	low address of data in FSR
   611                           ;	high address + 1 of data in btemp-1
   612                           
   613  03A0  120A  118A  239C  120A  118A  	fcall	init_fetch0
   614  03A5  0080               	movwf	0
   615  03A6  0A84               	incf	4,f
   616  03A7  0804               	movf	4,w
   617  03A8  067D               	xorwf	btemp+-1,w
   618  03A9  1903               	btfsc	3,2
   619  03AA  3400               	retlw	0
   620  03AB  0AFF               	incf	btemp+1,f
   621  03AC  1903               	btfsc	3,2
   622  03AD  0AFE               	incf	btemp,f
   623  03AE  2BA0               	goto	init_ram0
   624                           
   625                           	psect	clrtext
   626  03EB                     clear_ram0:	
   627                           ;	Called with FSR containing the base address, and
   628                           ;	W with the last address+1
   629                           
   630  03EB  0064               	clrwdt	;clear the watchdog before getting into this loop
   631  03EC                     clrloop0:
   632  03EC  0180               	clrf	0	;clear RAM location pointed to by FSR
   633  03ED  0A84               	incf	4,f	;increment pointer
   634  03EE  0604               	xorwf	4,w	;XOR with final address
   635  03EF  1903               	btfsc	3,2	;have we reached the end yet?
   636  03F0  3400               	retlw	0	;all done for this memory range, return
   637  03F1  0604               	xorwf	4,w	;XOR again to restore value
   638  03F2  2BEC               	goto	clrloop0	;do the next byte
   639                           
   640                           	psect	cstackCOMMON
   641  0076                     __pcstackCOMMON:
   642  0076                     ?_TX:
   643  0076                     ??_TX:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0076                     ?_SETUP:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0076                     ?_ACELEROMETRO_CONFIG:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0076                     ?_LEER_VALORES:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0076                     ?_EJEX_TO_CHARS:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0076                     ?_CONFIG_USART:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0076                     ?_I2C_Master_Start:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0076                     ?_I2C_Master_RepeatedStart:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0076                     ?_I2C_Master_Stop:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0076                     ?_ASCII:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0076                     ?_isr:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0076                     ?_main:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0076                     ?_I2C_Master_Wait:	
   680                           ; 1 bytes @ 0x0
   681                           
   682                           
   683                           ; 1 bytes @ 0x0
   684  0076                     	ds	2
   685  0078                     ??_isr:
   686                           
   687                           ; 1 bytes @ 0x2
   688  0078                     	ds	4
   689                           
   690                           	psect	cstackBANK0
   691  003E                     __pcstackBANK0:
   692  003E                     ??_SETUP:
   693  003E                     ??_CONFIG_USART:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  003E                     ??_I2C_Master_Start:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  003E                     ?_I2C_Master_Write:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  003E                     ??_I2C_Master_RepeatedStart:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  003E                     ??_I2C_Master_Stop:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  003E                     ??_ASCII:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  003E                     ??_I2C_Master_Wait:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  003E                     ?_I2C_Master_Read:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  003E                     ?___lldiv:	
   718                           ; 2 bytes @ 0x0
   719                           
   720  003E                     I2C_Master_Write@d:	
   721                           ; 4 bytes @ 0x0
   722                           
   723  003E                     I2C_Master_Read@a:	
   724                           ; 2 bytes @ 0x0
   725                           
   726  003E                     ___lldiv@divisor:	
   727                           ; 2 bytes @ 0x0
   728                           
   729                           
   730                           ; 4 bytes @ 0x0
   731  003E                     	ds	2
   732  0040                     ?_ACELEROMETRO_W:
   733  0040                     ??_I2C_Master_Write:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0040                     ??_I2C_Master_Read:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0040                     ACELEROMETRO_W@data:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0040                     ASCII@aconvertir:	
   743                           ; 1 bytes @ 0x2
   744                           
   745                           
   746                           ; 1 bytes @ 0x2
   747  0040                     	ds	1
   748  0041                     ??_EJEX_TO_CHARS:
   749  0041                     ??_ACELEROMETRO_W:	
   750                           ; 1 bytes @ 0x3
   751                           
   752                           
   753                           ; 1 bytes @ 0x3
   754  0041                     	ds	1
   755  0042                     I2C_Master_Read@temp:
   756  0042                     ___lldiv@dividend:	
   757                           ; 2 bytes @ 0x4
   758                           
   759                           
   760                           ; 4 bytes @ 0x4
   761  0042                     	ds	1
   762  0043                     ACELEROMETRO_W@num:
   763                           
   764                           ; 1 bytes @ 0x5
   765  0043                     	ds	1
   766  0044                     ??_ACELEROMETRO_CONFIG:
   767  0044                     ?_ACELEROMETRO_R:	
   768                           ; 1 bytes @ 0x6
   769                           
   770                           
   771                           ; 2 bytes @ 0x6
   772  0044                     	ds	2
   773  0046                     ??_ACELEROMETRO_R:
   774  0046                     ??___lldiv:	
   775                           ; 1 bytes @ 0x8
   776                           
   777                           
   778                           ; 1 bytes @ 0x8
   779  0046                     	ds	1
   780  0047                     ___lldiv@quotient:
   781                           
   782                           ; 4 bytes @ 0x9
   783  0047                     	ds	1
   784  0048                     ACELEROMETRO_R@num:
   785                           
   786                           ; 1 bytes @ 0xA
   787  0048                     	ds	1
   788  0049                     ACELEROMETRO_R@LECTURA:
   789                           
   790                           ; 2 bytes @ 0xB
   791  0049                     	ds	2
   792  004B                     ??_LEER_VALORES:
   793  004B                     ___lldiv@counter:	
   794                           ; 1 bytes @ 0xD
   795                           
   796                           
   797                           ; 1 bytes @ 0xD
   798  004B                     	ds	1
   799  004C                     ?_I2C_Master_Init:
   800  004C                     I2C_Master_Init@c:	
   801                           ; 1 bytes @ 0xE
   802                           
   803                           
   804                           ; 4 bytes @ 0xE
   805  004C                     	ds	4
   806  0050                     ??_I2C_Master_Init:
   807                           
   808                           ; 1 bytes @ 0x12
   809  0050                     	ds	4
   810  0054                     ??_main:
   811                           
   812                           	psect	maintext
   813  029B                     __pmaintext:	
   814                           ; 1 bytes @ 0x16
   815 ;;
   816 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   817 ;;
   818 ;; *************** function _main *****************
   819 ;; Defined at:
   820 ;;		line 181 in file "Principal_Master.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : B00/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0
   837 ;;      Totals:         0       0       0       0       0
   838 ;;Total ram usage:        0 bytes
   839 ;; Hardware stack levels required when called:    6
   840 ;; This function calls:
   841 ;;		_ACELEROMETRO_CONFIG
   842 ;;		_EJEX_TO_CHARS
   843 ;;		_I2C_Master_Init
   844 ;;		_LEER_VALORES
   845 ;;		_SETUP
   846 ;; This function is called by:
   847 ;;		Startup code after reset
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _main
   853  029B                     _main:
   854  029B                     l2067:	
   855                           ;incstack = 0
   856                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   857                           
   858                           
   859                           ;Principal_Master.c: 182:     SETUP();
   860  029B  120A  118A  235E  120A  118A  	fcall	_SETUP
   861                           
   862                           ;Principal_Master.c: 183:     I2C_Master_Init(100000);
   863  02A0  3000               	movlw	0
   864  02A1  1283               	bcf	3,5	;RP0=0, select bank0
   865  02A2  1303               	bcf	3,6	;RP1=0, select bank0
   866  02A3  00CF               	movwf	I2C_Master_Init@c+3
   867  02A4  3001               	movlw	1
   868  02A5  00CE               	movwf	I2C_Master_Init@c+2
   869  02A6  3086               	movlw	134
   870  02A7  00CD               	movwf	I2C_Master_Init@c+1
   871  02A8  30A0               	movlw	160
   872  02A9  00CC               	movwf	I2C_Master_Init@c
   873  02AA  120A  118A  222C  120A  118A  	fcall	_I2C_Master_Init
   874                           
   875                           ;Principal_Master.c: 184:     ACELEROMETRO_CONFIG();
   876  02AF  120A  118A  2300  120A  118A  	fcall	_ACELEROMETRO_CONFIG
   877  02B4                     l2069:
   878                           
   879                           ;Principal_Master.c: 190:         if (a > 10) {
   880  02B4  300B               	movlw	11
   881  02B5  1283               	bcf	3,5	;RP0=0, select bank0
   882  02B6  1303               	bcf	3,6	;RP1=0, select bank0
   883  02B7  0225               	subwf	_a,w
   884  02B8  1C03               	skipc
   885  02B9  2ABB               	goto	u601
   886  02BA  2ABC               	goto	u600
   887  02BB                     u601:
   888  02BB  2AC0               	goto	l2075
   889  02BC                     u600:
   890  02BC                     l2071:
   891                           
   892                           ;Principal_Master.c: 191:             a = 0;
   893  02BC  01A5               	clrf	_a
   894  02BD                     l2073:
   895                           
   896                           ;Principal_Master.c: 192:             PIE1bits.TXIE = 1;
   897  02BD  1683               	bsf	3,5	;RP0=1, select bank1
   898  02BE  1303               	bcf	3,6	;RP1=0, select bank1
   899  02BF  160C               	bsf	12,4	;volatile
   900  02C0                     l2075:
   901                           
   902                           ;Principal_Master.c: 196:         LEER_VALORES();
   903  02C0  120A  118A  2031  120A  118A  	fcall	_LEER_VALORES
   904  02C5                     l2077:
   905                           
   906                           ;Principal_Master.c: 197:         EJEX_TO_CHARS();
   907  02C5  120A  118A  21B2  120A  118A  	fcall	_EJEX_TO_CHARS
   908  02CA  2AB4               	goto	l2069
   909  02CB  120A  118A  280E   	ljmp	start
   910  02CE                     __end_of_main:
   911                           
   912                           	psect	text1
   913  035E                     __ptext1:	
   914 ;; *************** function _SETUP *****************
   915 ;; Defined at:
   916 ;;		line 230 in file "Principal_Master.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0, pclath, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    3
   937 ;; This function calls:
   938 ;;		_CONFIG_USART
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _SETUP
   946  035E                     _SETUP:
   947  035E                     l1965:	
   948                           ;incstack = 0
   949                           ; Regs used in _SETUP: [wreg+status,2+status,0+pclath+cstack]
   950                           
   951                           
   952                           ;Principal_Master.c: 233:     OPTION_REG = 0b11010111;
   953  035E  30D7               	movlw	215
   954  035F  1683               	bsf	3,5	;RP0=1, select bank1
   955  0360  1303               	bcf	3,6	;RP1=0, select bank1
   956  0361  0081               	movwf	1	;volatile
   957  0362                     l1967:
   958                           
   959                           ;Principal_Master.c: 239:     OSCCONbits.IRCF2 = 1;
   960  0362  170F               	bsf	15,6	;volatile
   961  0363                     l1969:
   962                           
   963                           ;Principal_Master.c: 240:     OSCCONbits.IRCF1 = 1;
   964  0363  168F               	bsf	15,5	;volatile
   965  0364                     l1971:
   966                           
   967                           ;Principal_Master.c: 241:     OSCCONbits.IRCF0 = 0;
   968  0364  120F               	bcf	15,4	;volatile
   969  0365                     l1973:
   970                           
   971                           ;Principal_Master.c: 243:     PORTA = 0;
   972  0365  1283               	bcf	3,5	;RP0=0, select bank0
   973  0366  1303               	bcf	3,6	;RP1=0, select bank0
   974  0367  0185               	clrf	5	;volatile
   975  0368                     l1975:
   976                           
   977                           ;Principal_Master.c: 244:     PORTB = 0;
   978  0368  0186               	clrf	6	;volatile
   979  0369                     l1977:
   980                           
   981                           ;Principal_Master.c: 245:     PORTC = 0;
   982  0369  0187               	clrf	7	;volatile
   983  036A                     l1979:
   984                           
   985                           ;Principal_Master.c: 246:     PORTD = 0;
   986  036A  0188               	clrf	8	;volatile
   987  036B                     l1981:
   988                           
   989                           ;Principal_Master.c: 247:     PORTE = 0;
   990  036B  0189               	clrf	9	;volatile
   991  036C                     l1983:
   992                           
   993                           ;Principal_Master.c: 249:     TRISA = 0;
   994  036C  1683               	bsf	3,5	;RP0=1, select bank1
   995  036D  1303               	bcf	3,6	;RP1=0, select bank1
   996  036E  0185               	clrf	5	;volatile
   997  036F                     l1985:
   998                           
   999                           ;Principal_Master.c: 250:     TRISB = 0;
  1000  036F  0186               	clrf	6	;volatile
  1001  0370                     l1987:
  1002                           
  1003                           ;Principal_Master.c: 251:     TRISC = 0;
  1004  0370  0187               	clrf	7	;volatile
  1005  0371                     l1989:
  1006                           
  1007                           ;Principal_Master.c: 252:     TRISD = 0;
  1008  0371  0188               	clrf	8	;volatile
  1009  0372                     l1991:
  1010                           
  1011                           ;Principal_Master.c: 253:     TRISE = 0;
  1012  0372  0189               	clrf	9	;volatile
  1013  0373                     l1993:
  1014                           
  1015                           ;Principal_Master.c: 257:     ANSEL = 0;
  1016  0373  1683               	bsf	3,5	;RP0=1, select bank3
  1017  0374  1703               	bsf	3,6	;RP1=1, select bank3
  1018  0375  0188               	clrf	8	;volatile
  1019  0376                     l1995:
  1020                           
  1021                           ;Principal_Master.c: 258:     ANSELH = 0;
  1022  0376  0189               	clrf	9	;volatile
  1023  0377                     l1997:
  1024                           
  1025                           ;Principal_Master.c: 260:     CONFIG_USART();
  1026  0377  120A  118A  2388  120A  118A  	fcall	_CONFIG_USART
  1027  037C                     l1999:
  1028                           
  1029                           ;Principal_Master.c: 262:     INTCONbits.GIE = 1;
  1030  037C  178B               	bsf	11,7	;volatile
  1031  037D                     l2001:
  1032                           
  1033                           ;Principal_Master.c: 263:     INTCONbits.PEIE = 1;
  1034  037D  170B               	bsf	11,6	;volatile
  1035  037E                     l2003:
  1036                           
  1037                           ;Principal_Master.c: 264:     PIE1bits.TXIE = 1;
  1038  037E  1683               	bsf	3,5	;RP0=1, select bank1
  1039  037F  1303               	bcf	3,6	;RP1=0, select bank1
  1040  0380  160C               	bsf	12,4	;volatile
  1041  0381                     l2005:
  1042                           
  1043                           ;Principal_Master.c: 265:     PIE1bits.RCIE = 1;
  1044  0381  168C               	bsf	12,5	;volatile
  1045  0382                     l2007:
  1046                           
  1047                           ;Principal_Master.c: 266:     PIR1bits.RCIF =0;
  1048  0382  1283               	bcf	3,5	;RP0=0, select bank0
  1049  0383  1303               	bcf	3,6	;RP1=0, select bank0
  1050  0384  128C               	bcf	12,5	;volatile
  1051  0385                     l2009:
  1052                           
  1053                           ;Principal_Master.c: 268:     INTCONbits.TMR0IE = 1;
  1054  0385  168B               	bsf	11,5	;volatile
  1055  0386                     l2011:
  1056                           
  1057                           ;Principal_Master.c: 269:     INTCONbits.T0IF = 0;
  1058  0386  110B               	bcf	11,2	;volatile
  1059  0387                     l191:
  1060  0387  0008               	return
  1061  0388                     __end_of_SETUP:
  1062                           
  1063                           	psect	text2
  1064  0388                     __ptext2:	
  1065 ;; *************** function _CONFIG_USART *****************
  1066 ;; Defined at:
  1067 ;;		line 7 in file "USART.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1081 ;;      Params:         0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    2
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_SETUP
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           
  1096                           ;psect for function _CONFIG_USART
  1097  0388                     _CONFIG_USART:
  1098  0388                     l1811:	
  1099                           ;incstack = 0
  1100                           ; Regs used in _CONFIG_USART: [wreg+status,2]
  1101                           
  1102                           
  1103                           ;USART.c: 24:     TXSTAbits.TX9 = 0;
  1104  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1105  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1106  038A  1318               	bcf	24,6	;volatile
  1107                           
  1108                           ;USART.c: 25:     TXSTAbits.SYNC = 0;
  1109  038B  1218               	bcf	24,4	;volatile
  1110                           
  1111                           ;USART.c: 26:     TXSTAbits.BRGH = 1;
  1112  038C  1518               	bsf	24,2	;volatile
  1113                           
  1114                           ;USART.c: 27:     BAUDCTLbits.BRG16 = 0;
  1115  038D  1683               	bsf	3,5	;RP0=1, select bank3
  1116  038E  1703               	bsf	3,6	;RP1=1, select bank3
  1117  038F  1187               	bcf	7,3	;volatile
  1118  0390                     l1813:
  1119                           
  1120                           ;USART.c: 28:     SPBRG = 25;
  1121  0390  3019               	movlw	25
  1122  0391  1683               	bsf	3,5	;RP0=1, select bank1
  1123  0392  1303               	bcf	3,6	;RP1=0, select bank1
  1124  0393  0099               	movwf	25	;volatile
  1125  0394                     l1815:
  1126                           
  1127                           ;USART.c: 29:     SPBRGH = 0;
  1128  0394  019A               	clrf	26	;volatile
  1129  0395                     l1817:
  1130                           
  1131                           ;USART.c: 30:     TXSTAbits.TXEN = 1;
  1132  0395  1698               	bsf	24,5	;volatile
  1133  0396                     l1819:
  1134                           
  1135                           ;USART.c: 31:     RCSTAbits.SPEN = 1;
  1136  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0398  1798               	bsf	24,7	;volatile
  1139  0399                     l1821:
  1140                           
  1141                           ;USART.c: 32:     RCSTAbits.RX9 = 0;
  1142  0399  1318               	bcf	24,6	;volatile
  1143  039A                     l1823:
  1144                           
  1145                           ;USART.c: 33:     RCSTAbits.CREN = 1;
  1146  039A  1618               	bsf	24,4	;volatile
  1147  039B                     l296:
  1148  039B  0008               	return
  1149  039C                     __end_of_CONFIG_USART:
  1150                           
  1151                           	psect	text3
  1152  0031                     __ptext3:	
  1153 ;; *************** function _LEER_VALORES *****************
  1154 ;; Defined at:
  1155 ;;		line 378 in file "Principal_Master.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, status,2, status,0, pclath, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         0       0       0       0       0
  1170 ;;      Locals:         0       0       0       0       0
  1171 ;;      Temps:          0       1       0       0       0
  1172 ;;      Totals:         0       1       0       0       0
  1173 ;;Total ram usage:        1 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    5
  1176 ;; This function calls:
  1177 ;;		_ACELEROMETRO_R
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           
  1184                           ;psect for function _LEER_VALORES
  1185  0031                     _LEER_VALORES:
  1186  0031                     l2031:	
  1187                           ;incstack = 0
  1188                           ; Regs used in _LEER_VALORES: [wreg+status,2+status,0+pclath+cstack]
  1189                           
  1190                           
  1191                           ;Principal_Master.c: 380:     XL = ACELEROMETRO_R(DX0);
  1192  0031  3032               	movlw	50
  1193  0032  120A  118A  2165  120A  118A  	fcall	_ACELEROMETRO_R
  1194  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0039  0844               	movf	?_ACELEROMETRO_R,w
  1197  003A  00CB               	movwf	??_LEER_VALORES
  1198  003B  084B               	movf	??_LEER_VALORES,w
  1199  003C  00BD               	movwf	_XL
  1200                           
  1201                           ;Principal_Master.c: 381:     XH = ACELEROMETRO_R(DX1);
  1202  003D  3033               	movlw	51
  1203  003E  120A  118A  2165  120A  118A  	fcall	_ACELEROMETRO_R
  1204  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0045  0844               	movf	?_ACELEROMETRO_R,w
  1207  0046  00CB               	movwf	??_LEER_VALORES
  1208  0047  084B               	movf	??_LEER_VALORES,w
  1209  0048  00BC               	movwf	_XH
  1210  0049                     l2033:
  1211                           
  1212                           ;Principal_Master.c: 383:     if (XL < 0) {
  1213  0049  1FBD               	btfss	_XL,7
  1214  004A  284C               	goto	u541
  1215  004B  284D               	goto	u540
  1216  004C                     u541:
  1217  004C  284F               	goto	l2037
  1218  004D                     u540:
  1219  004D                     l2035:
  1220                           
  1221                           ;Principal_Master.c: 384:         XL = XL*-1;
  1222  004D  09BD               	comf	_XL,f
  1223  004E  0ABD               	incf	_XL,f
  1224  004F                     l2037:
  1225                           
  1226                           ;Principal_Master.c: 387:     if (XH < 0) {
  1227  004F  1FBC               	btfss	_XH,7
  1228  0050  2852               	goto	u551
  1229  0051  2853               	goto	u550
  1230  0052                     u551:
  1231  0052  2855               	goto	l2041
  1232  0053                     u550:
  1233  0053                     l2039:
  1234                           
  1235                           ;Principal_Master.c: 388:         XH = XH*-1;
  1236  0053  09BC               	comf	_XH,f
  1237  0054  0ABC               	incf	_XH,f
  1238  0055                     l2041:
  1239                           
  1240                           ;Principal_Master.c: 391:     YL = ACELEROMETRO_R(DY0);
  1241  0055  3034               	movlw	52
  1242  0056  120A  118A  2165  120A  118A  	fcall	_ACELEROMETRO_R
  1243  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1244  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1245  005D  0844               	movf	?_ACELEROMETRO_R,w
  1246  005E  00CB               	movwf	??_LEER_VALORES
  1247  005F  084B               	movf	??_LEER_VALORES,w
  1248  0060  00BB               	movwf	_YL
  1249  0061                     l2043:
  1250                           
  1251                           ;Principal_Master.c: 392:     YH = ACELEROMETRO_R(DY1);
  1252  0061  3035               	movlw	53
  1253  0062  120A  118A  2165  120A  118A  	fcall	_ACELEROMETRO_R
  1254  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0069  0844               	movf	?_ACELEROMETRO_R,w
  1257  006A  00CB               	movwf	??_LEER_VALORES
  1258  006B  084B               	movf	??_LEER_VALORES,w
  1259  006C  00BA               	movwf	_YH
  1260  006D                     l2045:
  1261                           
  1262                           ;Principal_Master.c: 394:     if (YL < 0) {
  1263  006D  1FBB               	btfss	_YL,7
  1264  006E  2870               	goto	u561
  1265  006F  2871               	goto	u560
  1266  0070                     u561:
  1267  0070  2873               	goto	l2049
  1268  0071                     u560:
  1269  0071                     l2047:
  1270                           
  1271                           ;Principal_Master.c: 395:         YL = YL*-1;
  1272  0071  09BB               	comf	_YL,f
  1273  0072  0ABB               	incf	_YL,f
  1274  0073                     l2049:
  1275                           
  1276                           ;Principal_Master.c: 398:     if (YH < 0) {
  1277  0073  1FBA               	btfss	_YH,7
  1278  0074  2876               	goto	u571
  1279  0075  2877               	goto	u570
  1280  0076                     u571:
  1281  0076  2879               	goto	l2053
  1282  0077                     u570:
  1283  0077                     l2051:
  1284                           
  1285                           ;Principal_Master.c: 399:         YH = YH*-1;
  1286  0077  09BA               	comf	_YH,f
  1287  0078  0ABA               	incf	_YH,f
  1288  0079                     l2053:
  1289                           
  1290                           ;Principal_Master.c: 402:     ZL = ACELEROMETRO_R(DZ0);
  1291  0079  3036               	movlw	54
  1292  007A  120A  118A  2165  120A  118A  	fcall	_ACELEROMETRO_R
  1293  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0081  0844               	movf	?_ACELEROMETRO_R,w
  1296  0082  00CB               	movwf	??_LEER_VALORES
  1297  0083  084B               	movf	??_LEER_VALORES,w
  1298  0084  00B9               	movwf	_ZL
  1299  0085                     l2055:
  1300                           
  1301                           ;Principal_Master.c: 403:     ZH = ACELEROMETRO_R(DZ1);
  1302  0085  3037               	movlw	55
  1303  0086  120A  118A  2165  120A  118A  	fcall	_ACELEROMETRO_R
  1304  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1305  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1306  008D  0844               	movf	?_ACELEROMETRO_R,w
  1307  008E  00CB               	movwf	??_LEER_VALORES
  1308  008F  084B               	movf	??_LEER_VALORES,w
  1309  0090  00B8               	movwf	_ZH
  1310  0091                     l2057:
  1311                           
  1312                           ;Principal_Master.c: 405:     if (ZL < 0) {
  1313  0091  1FB9               	btfss	_ZL,7
  1314  0092  2894               	goto	u581
  1315  0093  2895               	goto	u580
  1316  0094                     u581:
  1317  0094  2897               	goto	l2061
  1318  0095                     u580:
  1319  0095                     l2059:
  1320                           
  1321                           ;Principal_Master.c: 406:         ZL = ZL*-1;
  1322  0095  09B9               	comf	_ZL,f
  1323  0096  0AB9               	incf	_ZL,f
  1324  0097                     l2061:
  1325                           
  1326                           ;Principal_Master.c: 409:     if (ZH < 0) {
  1327  0097  1FB8               	btfss	_ZH,7
  1328  0098  289A               	goto	u591
  1329  0099  289B               	goto	u590
  1330  009A                     u591:
  1331  009A  289D               	goto	l219
  1332  009B                     u590:
  1333  009B                     l2063:
  1334                           
  1335                           ;Principal_Master.c: 410:         ZH = ZH*-1;
  1336  009B  09B8               	comf	_ZH,f
  1337  009C  0AB8               	incf	_ZH,f
  1338  009D                     l219:
  1339  009D  0008               	return
  1340  009E                     __end_of_LEER_VALORES:
  1341                           
  1342                           	psect	text4
  1343  0165                     __ptext4:	
  1344 ;; *************** function _ACELEROMETRO_R *****************
  1345 ;; Defined at:
  1346 ;;		line 283 in file "Principal_Master.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  num             1    wreg     unsigned char 
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  num             1   10[BANK0 ] unsigned char 
  1351 ;;  LECTURA         2   11[BANK0 ] unsigned short 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  2    6[BANK0 ] unsigned short 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0, pclath, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1361 ;;      Params:         0       2       0       0       0
  1362 ;;      Locals:         0       3       0       0       0
  1363 ;;      Temps:          0       2       0       0       0
  1364 ;;      Totals:         0       7       0       0       0
  1365 ;;Total ram usage:        7 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    4
  1368 ;; This function calls:
  1369 ;;		_I2C_Master_Read
  1370 ;;		_I2C_Master_RepeatedStart
  1371 ;;		_I2C_Master_Start
  1372 ;;		_I2C_Master_Stop
  1373 ;;		_I2C_Master_Write
  1374 ;; This function is called by:
  1375 ;;		_LEER_VALORES
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           
  1380                           ;psect for function _ACELEROMETRO_R
  1381  0165                     _ACELEROMETRO_R:
  1382                           
  1383                           ;incstack = 0
  1384                           ; Regs used in _ACELEROMETRO_R: [wreg+status,2+status,0+pclath+cstack]
  1385                           ;ACELEROMETRO_R@num stored from wreg
  1386  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0167  00C8               	movwf	ACELEROMETRO_R@num
  1389  0168                     l1827:
  1390                           
  1391                           ;Principal_Master.c: 285:     unsigned short LECTURA;;Principal_Master.c: 287:     I2C_M
      +                          aster_Start();
  1392  0168  120A  118A  23E2  120A  118A  	fcall	_I2C_Master_Start
  1393                           
  1394                           ;Principal_Master.c: 288:     I2C_Master_Write(WRITE);
  1395  016D  30A6               	movlw	166
  1396  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1397  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0170  00BE               	movwf	I2C_Master_Write@d
  1399  0171  3000               	movlw	0
  1400  0172  00BF               	movwf	I2C_Master_Write@d+1
  1401  0173  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Write
  1402                           
  1403                           ;Principal_Master.c: 289:     I2C_Master_Write(num);
  1404  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1406  017A  0848               	movf	ACELEROMETRO_R@num,w
  1407  017B  00C6               	movwf	??_ACELEROMETRO_R
  1408  017C  01C7               	clrf	??_ACELEROMETRO_R+1
  1409  017D  0846               	movf	??_ACELEROMETRO_R,w
  1410  017E  00BE               	movwf	I2C_Master_Write@d
  1411  017F  0847               	movf	??_ACELEROMETRO_R+1,w
  1412  0180  00BF               	movwf	I2C_Master_Write@d+1
  1413  0181  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Write
  1414                           
  1415                           ;Principal_Master.c: 290:     I2C_Master_RepeatedStart();
  1416  0186  120A  118A  23D0  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1417                           
  1418                           ;Principal_Master.c: 291:     I2C_Master_Write(READ);
  1419  018B  30A7               	movlw	167
  1420  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1421  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1422  018E  00BE               	movwf	I2C_Master_Write@d
  1423  018F  3000               	movlw	0
  1424  0190  00BF               	movwf	I2C_Master_Write@d+1
  1425  0191  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Write
  1426                           
  1427                           ;Principal_Master.c: 292:     LECTURA = I2C_Master_Read(0);
  1428  0196  3000               	movlw	0
  1429  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1431  0199  00BE               	movwf	I2C_Master_Read@a
  1432  019A  00BF               	movwf	I2C_Master_Read@a+1
  1433  019B  120A  118A  22CE  120A  118A  	fcall	_I2C_Master_Read
  1434  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1435  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1436  01A2  083F               	movf	?_I2C_Master_Read+1,w
  1437  01A3  00CA               	movwf	ACELEROMETRO_R@LECTURA+1
  1438  01A4  083E               	movf	?_I2C_Master_Read,w
  1439  01A5  00C9               	movwf	ACELEROMETRO_R@LECTURA
  1440                           
  1441                           ;Principal_Master.c: 293:     I2C_Master_Stop();
  1442  01A6  120A  118A  23D9  120A  118A  	fcall	_I2C_Master_Stop
  1443  01AB                     l1829:
  1444                           
  1445                           ;Principal_Master.c: 295:     return LECTURA;
  1446  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1447  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1448  01AD  084A               	movf	ACELEROMETRO_R@LECTURA+1,w
  1449  01AE  00C5               	movwf	?_ACELEROMETRO_R+1
  1450  01AF  0849               	movf	ACELEROMETRO_R@LECTURA,w
  1451  01B0  00C4               	movwf	?_ACELEROMETRO_R
  1452  01B1                     l197:
  1453  01B1  0008               	return
  1454  01B2                     __end_of_ACELEROMETRO_R:
  1455                           
  1456                           	psect	text5
  1457  03D0                     __ptext5:	
  1458 ;; *************** function _I2C_Master_RepeatedStart *****************
  1459 ;; Defined at:
  1460 ;;		line 28 in file "I2C.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, status,0, pclath, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1474 ;;      Params:         0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0
  1477 ;;      Totals:         0       0       0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    3
  1481 ;; This function calls:
  1482 ;;		_I2C_Master_Wait
  1483 ;; This function is called by:
  1484 ;;		_ACELEROMETRO_R
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _I2C_Master_RepeatedStart
  1490  03D0                     _I2C_Master_RepeatedStart:
  1491  03D0                     l1787:	
  1492                           ;incstack = 0
  1493                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  1494                           
  1495                           
  1496                           ;I2C.c: 30:   I2C_Master_Wait();
  1497  03D0  120A  118A  23AF  120A  118A  	fcall	_I2C_Master_Wait
  1498  03D5                     l1789:
  1499                           
  1500                           ;I2C.c: 31:   RSEN = 1;
  1501  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  1502  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  1503  03D7  1491               	bsf	17,1	;volatile
  1504  03D8                     l269:
  1505  03D8  0008               	return
  1506  03D9                     __end_of_I2C_Master_RepeatedStart:
  1507                           
  1508                           	psect	text6
  1509  02CE                     __ptext6:	
  1510 ;; *************** function _I2C_Master_Read *****************
  1511 ;; Defined at:
  1512 ;;		line 46 in file "I2C.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  a               2    0[BANK0 ] unsigned short 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  temp            2    4[BANK0 ] unsigned short 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  2    0[BANK0 ] unsigned short 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       2       0       0       0
  1527 ;;      Locals:         0       2       0       0       0
  1528 ;;      Temps:          0       2       0       0       0
  1529 ;;      Totals:         0       6       0       0       0
  1530 ;;Total ram usage:        6 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    3
  1533 ;; This function calls:
  1534 ;;		_I2C_Master_Wait
  1535 ;; This function is called by:
  1536 ;;		_ACELEROMETRO_R
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _I2C_Master_Read
  1542  02CE                     _I2C_Master_Read:
  1543  02CE                     l1791:	
  1544                           ;incstack = 0
  1545                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1546                           
  1547                           
  1548                           ;I2C.c: 46: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 47: {;I2C.c: 48:   u
      +                          nsigned short temp;;I2C.c: 49:     I2C_Master_Wait();
  1549  02CE  120A  118A  23AF  120A  118A  	fcall	_I2C_Master_Wait
  1550  02D3                     l1793:
  1551                           
  1552                           ;I2C.c: 50:     SSPCON2bits.RCEN = 1;
  1553  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  1554  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  1555  02D5  1591               	bsf	17,3	;volatile
  1556                           
  1557                           ;I2C.c: 51:     I2C_Master_Wait();
  1558  02D6  120A  118A  23AF  120A  118A  	fcall	_I2C_Master_Wait
  1559  02DB                     l1795:
  1560                           
  1561                           ;I2C.c: 52:     temp = SSPBUF;
  1562  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1563  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1564  02DD  0813               	movf	19,w	;volatile
  1565  02DE  00C0               	movwf	??_I2C_Master_Read
  1566  02DF  01C1               	clrf	??_I2C_Master_Read+1
  1567  02E0  0840               	movf	??_I2C_Master_Read,w
  1568  02E1  00C2               	movwf	I2C_Master_Read@temp
  1569  02E2  0841               	movf	??_I2C_Master_Read+1,w
  1570  02E3  00C3               	movwf	I2C_Master_Read@temp+1
  1571  02E4                     l1797:
  1572                           
  1573                           ;I2C.c: 53:     I2C_Master_Wait();
  1574  02E4  120A  118A  23AF  120A  118A  	fcall	_I2C_Master_Wait
  1575  02E9                     l1799:
  1576                           
  1577                           ;I2C.c: 55:     if(a == 1){
  1578  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1579  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1580  02EB  033E               	decf	I2C_Master_Read@a,w
  1581  02EC  043F               	iorwf	I2C_Master_Read@a+1,w
  1582  02ED  1D03               	btfss	3,2
  1583  02EE  2AF0               	goto	u451
  1584  02EF  2AF1               	goto	u450
  1585  02F0                     u451:
  1586  02F0  2AF5               	goto	l278
  1587  02F1                     u450:
  1588  02F1                     l1801:
  1589                           
  1590                           ;I2C.c: 56:         SSPCON2bits.ACKDT = 0;
  1591  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  1592  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  1593  02F3  1291               	bcf	17,5	;volatile
  1594                           
  1595                           ;I2C.c: 57:     }
  1596  02F4  2AF8               	goto	l279
  1597  02F5                     l278:	
  1598                           ;I2C.c: 58:     else {
  1599                           
  1600                           
  1601                           ;I2C.c: 59:         SSPCON2bits.ACKDT = 1;
  1602  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  1603  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  1604  02F7  1691               	bsf	17,5	;volatile
  1605  02F8                     l279:	
  1606                           ;I2C.c: 60:     }
  1607                           
  1608                           
  1609                           ;I2C.c: 62:     SSPCON2bits.ACKEN = 1;
  1610  02F8  1611               	bsf	17,4	;volatile
  1611  02F9                     l1803:
  1612                           
  1613                           ;I2C.c: 63:     return temp;
  1614  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1615  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1616  02FB  0843               	movf	I2C_Master_Read@temp+1,w
  1617  02FC  00BF               	movwf	?_I2C_Master_Read+1
  1618  02FD  0842               	movf	I2C_Master_Read@temp,w
  1619  02FE  00BE               	movwf	?_I2C_Master_Read
  1620  02FF                     l280:
  1621  02FF  0008               	return
  1622  0300                     __end_of_I2C_Master_Read:
  1623                           
  1624                           	psect	text7
  1625  022C                     __ptext7:	
  1626 ;; *************** function _I2C_Master_Init *****************
  1627 ;; Defined at:
  1628 ;;		line 7 in file "I2C.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  c               4   14[BANK0 ] const unsigned long 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0, pclath, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1642 ;;      Params:         0       4       0       0       0
  1643 ;;      Locals:         0       0       0       0       0
  1644 ;;      Temps:          0       4       0       0       0
  1645 ;;      Totals:         0       8       0       0       0
  1646 ;;Total ram usage:        8 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    3
  1649 ;; This function calls:
  1650 ;;		___lldiv
  1651 ;; This function is called by:
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function _I2C_Master_Init
  1658  022C                     _I2C_Master_Init:
  1659  022C                     l2013:	
  1660                           ;incstack = 0
  1661                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1662                           
  1663                           
  1664                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 9:   SSPCON = 
      +                          0b00101000;
  1665  022C  3028               	movlw	40
  1666  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1667  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1668  022F  0094               	movwf	20	;volatile
  1669  0230                     l2015:
  1670                           
  1671                           ;I2C.c: 10:   SSPCON2 = 0;
  1672  0230  1683               	bsf	3,5	;RP0=1, select bank1
  1673  0231  1303               	bcf	3,6	;RP1=0, select bank1
  1674  0232  0191               	clrf	17	;volatile
  1675  0233                     l2017:
  1676                           
  1677                           ;I2C.c: 11:   SSPADD = (4000000/(4*c))-1;
  1678  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1680  0235  084C               	movf	I2C_Master_Init@c,w
  1681  0236  00D0               	movwf	??_I2C_Master_Init
  1682  0237  084D               	movf	I2C_Master_Init@c+1,w
  1683  0238  00D1               	movwf	??_I2C_Master_Init+1
  1684  0239  084E               	movf	I2C_Master_Init@c+2,w
  1685  023A  00D2               	movwf	??_I2C_Master_Init+2
  1686  023B  084F               	movf	I2C_Master_Init@c+3,w
  1687  023C  00D3               	movwf	??_I2C_Master_Init+3
  1688  023D  3002               	movlw	2
  1689  023E                     u535:
  1690  023E  1003               	clrc
  1691  023F  0DD0               	rlf	??_I2C_Master_Init,f
  1692  0240  0DD1               	rlf	??_I2C_Master_Init+1,f
  1693  0241  0DD2               	rlf	??_I2C_Master_Init+2,f
  1694  0242  0DD3               	rlf	??_I2C_Master_Init+3,f
  1695  0243                     u530:
  1696  0243  3EFF               	addlw	-1
  1697  0244  1D03               	skipz
  1698  0245  2A3E               	goto	u535
  1699  0246  0853               	movf	??_I2C_Master_Init+3,w
  1700  0247  00C1               	movwf	___lldiv@divisor+3
  1701  0248  0852               	movf	??_I2C_Master_Init+2,w
  1702  0249  00C0               	movwf	___lldiv@divisor+2
  1703  024A  0851               	movf	??_I2C_Master_Init+1,w
  1704  024B  00BF               	movwf	___lldiv@divisor+1
  1705  024C  0850               	movf	??_I2C_Master_Init,w
  1706  024D  00BE               	movwf	___lldiv@divisor
  1707  024E  3000               	movlw	0
  1708  024F  00C5               	movwf	___lldiv@dividend+3
  1709  0250  303D               	movlw	61
  1710  0251  00C4               	movwf	___lldiv@dividend+2
  1711  0252  3009               	movlw	9
  1712  0253  00C3               	movwf	___lldiv@dividend+1
  1713  0254  3000               	movlw	0
  1714  0255  00C2               	movwf	___lldiv@dividend
  1715  0256  120A  118A  209E  120A  118A  	fcall	___lldiv
  1716  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1717  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1718  025D  083E               	movf	?___lldiv,w
  1719  025E  3EFF               	addlw	255
  1720  025F  1683               	bsf	3,5	;RP0=1, select bank1
  1721  0260  1303               	bcf	3,6	;RP1=0, select bank1
  1722  0261  0093               	movwf	19	;volatile
  1723  0262                     l2019:
  1724                           
  1725                           ;I2C.c: 12:   SSPSTAT = 0;
  1726  0262  0194               	clrf	20	;volatile
  1727  0263                     l2021:
  1728                           
  1729                           ;I2C.c: 13:   TRISCbits.TRISC3 = 1;
  1730  0263  1587               	bsf	7,3	;volatile
  1731  0264                     l2023:
  1732                           
  1733                           ;I2C.c: 14:   TRISCbits.TRISC4 = 1;
  1734  0264  1607               	bsf	7,4	;volatile
  1735  0265                     l257:
  1736  0265  0008               	return
  1737  0266                     __end_of_I2C_Master_Init:
  1738                           
  1739                           	psect	text8
  1740  009E                     __ptext8:	
  1741 ;; *************** function ___lldiv *****************
  1742 ;; Defined at:
  1743 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  divisor         4    0[BANK0 ] unsigned long 
  1746 ;;  dividend        4    4[BANK0 ] unsigned long 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  quotient        4    9[BANK0 ] unsigned long 
  1749 ;;  counter         1   13[BANK0 ] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  4    0[BANK0 ] unsigned long 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         0       8       0       0       0
  1760 ;;      Locals:         0       5       0       0       0
  1761 ;;      Temps:          0       1       0       0       0
  1762 ;;      Totals:         0      14       0       0       0
  1763 ;;Total ram usage:       14 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    2
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_I2C_Master_Init
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function ___lldiv
  1775  009E                     ___lldiv:
  1776  009E                     l1941:	
  1777                           ;incstack = 0
  1778                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1779                           
  1780  009E  3000               	movlw	0
  1781  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1782  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1783  00A1  00CA               	movwf	___lldiv@quotient+3
  1784  00A2  3000               	movlw	0
  1785  00A3  00C9               	movwf	___lldiv@quotient+2
  1786  00A4  3000               	movlw	0
  1787  00A5  00C8               	movwf	___lldiv@quotient+1
  1788  00A6  3000               	movlw	0
  1789  00A7  00C7               	movwf	___lldiv@quotient
  1790  00A8  0841               	movf	___lldiv@divisor+3,w
  1791  00A9  0440               	iorwf	___lldiv@divisor+2,w
  1792  00AA  043F               	iorwf	___lldiv@divisor+1,w
  1793  00AB  043E               	iorwf	___lldiv@divisor,w
  1794  00AC  1903               	skipnz
  1795  00AD  28AF               	goto	u461
  1796  00AE  28B0               	goto	u460
  1797  00AF                     u461:
  1798  00AF  28FD               	goto	l1961
  1799  00B0                     u460:
  1800  00B0                     l1943:
  1801  00B0  01CB               	clrf	___lldiv@counter
  1802  00B1  0ACB               	incf	___lldiv@counter,f
  1803  00B2  28C0               	goto	l1947
  1804  00B3                     l1945:
  1805  00B3  3001               	movlw	1
  1806  00B4  00C6               	movwf	??___lldiv
  1807  00B5                     u475:
  1808  00B5  1003               	clrc
  1809  00B6  0DBE               	rlf	___lldiv@divisor,f
  1810  00B7  0DBF               	rlf	___lldiv@divisor+1,f
  1811  00B8  0DC0               	rlf	___lldiv@divisor+2,f
  1812  00B9  0DC1               	rlf	___lldiv@divisor+3,f
  1813  00BA  0BC6               	decfsz	??___lldiv,f
  1814  00BB  28B5               	goto	u475
  1815  00BC  3001               	movlw	1
  1816  00BD  00C6               	movwf	??___lldiv
  1817  00BE  0846               	movf	??___lldiv,w
  1818  00BF  07CB               	addwf	___lldiv@counter,f
  1819  00C0                     l1947:
  1820  00C0  1FC1               	btfss	___lldiv@divisor+3,7
  1821  00C1  28C3               	goto	u481
  1822  00C2  28C4               	goto	u480
  1823  00C3                     u481:
  1824  00C3  28B3               	goto	l1945
  1825  00C4                     u480:
  1826  00C4                     l1949:
  1827  00C4  3001               	movlw	1
  1828  00C5  00C6               	movwf	??___lldiv
  1829  00C6                     u495:
  1830  00C6  1003               	clrc
  1831  00C7  0DC7               	rlf	___lldiv@quotient,f
  1832  00C8  0DC8               	rlf	___lldiv@quotient+1,f
  1833  00C9  0DC9               	rlf	___lldiv@quotient+2,f
  1834  00CA  0DCA               	rlf	___lldiv@quotient+3,f
  1835  00CB  0BC6               	decfsz	??___lldiv,f
  1836  00CC  28C6               	goto	u495
  1837  00CD                     l1951:
  1838  00CD  0841               	movf	___lldiv@divisor+3,w
  1839  00CE  0245               	subwf	___lldiv@dividend+3,w
  1840  00CF  1D03               	skipz
  1841  00D0  28DB               	goto	u505
  1842  00D1  0840               	movf	___lldiv@divisor+2,w
  1843  00D2  0244               	subwf	___lldiv@dividend+2,w
  1844  00D3  1D03               	skipz
  1845  00D4  28DB               	goto	u505
  1846  00D5  083F               	movf	___lldiv@divisor+1,w
  1847  00D6  0243               	subwf	___lldiv@dividend+1,w
  1848  00D7  1D03               	skipz
  1849  00D8  28DB               	goto	u505
  1850  00D9  083E               	movf	___lldiv@divisor,w
  1851  00DA  0242               	subwf	___lldiv@dividend,w
  1852  00DB                     u505:
  1853  00DB  1C03               	skipc
  1854  00DC  28DE               	goto	u501
  1855  00DD  28DF               	goto	u500
  1856  00DE                     u501:
  1857  00DE  28EE               	goto	l1957
  1858  00DF                     u500:
  1859  00DF                     l1953:
  1860  00DF  083E               	movf	___lldiv@divisor,w
  1861  00E0  02C2               	subwf	___lldiv@dividend,f
  1862  00E1  083F               	movf	___lldiv@divisor+1,w
  1863  00E2  1C03               	skipc
  1864  00E3  0F3F               	incfsz	___lldiv@divisor+1,w
  1865  00E4  02C3               	subwf	___lldiv@dividend+1,f
  1866  00E5  0840               	movf	___lldiv@divisor+2,w
  1867  00E6  1C03               	skipc
  1868  00E7  0F40               	incfsz	___lldiv@divisor+2,w
  1869  00E8  02C4               	subwf	___lldiv@dividend+2,f
  1870  00E9  0841               	movf	___lldiv@divisor+3,w
  1871  00EA  1C03               	skipc
  1872  00EB  0F41               	incfsz	___lldiv@divisor+3,w
  1873  00EC  02C5               	subwf	___lldiv@dividend+3,f
  1874  00ED                     l1955:
  1875  00ED  1447               	bsf	___lldiv@quotient,0
  1876  00EE                     l1957:
  1877  00EE  3001               	movlw	1
  1878  00EF                     u515:
  1879  00EF  1003               	clrc
  1880  00F0  0CC1               	rrf	___lldiv@divisor+3,f
  1881  00F1  0CC0               	rrf	___lldiv@divisor+2,f
  1882  00F2  0CBF               	rrf	___lldiv@divisor+1,f
  1883  00F3  0CBE               	rrf	___lldiv@divisor,f
  1884  00F4  3EFF               	addlw	-1
  1885  00F5  1D03               	skipz
  1886  00F6  28EF               	goto	u515
  1887  00F7                     l1959:
  1888  00F7  3001               	movlw	1
  1889  00F8  02CB               	subwf	___lldiv@counter,f
  1890  00F9  1D03               	btfss	3,2
  1891  00FA  28FC               	goto	u521
  1892  00FB  28FD               	goto	u520
  1893  00FC                     u521:
  1894  00FC  28C4               	goto	l1949
  1895  00FD                     u520:
  1896  00FD                     l1961:
  1897  00FD  084A               	movf	___lldiv@quotient+3,w
  1898  00FE  00C1               	movwf	?___lldiv+3
  1899  00FF  0849               	movf	___lldiv@quotient+2,w
  1900  0100  00C0               	movwf	?___lldiv+2
  1901  0101  0848               	movf	___lldiv@quotient+1,w
  1902  0102  00BF               	movwf	?___lldiv+1
  1903  0103  0847               	movf	___lldiv@quotient,w
  1904  0104  00BE               	movwf	?___lldiv
  1905  0105                     l439:
  1906  0105  0008               	return
  1907  0106                     __end_of___lldiv:
  1908                           
  1909                           	psect	text9
  1910  01B2                     __ptext9:	
  1911 ;; *************** function _EJEX_TO_CHARS *****************
  1912 ;; Defined at:
  1913 ;;		line 414 in file "Principal_Master.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0
  1929 ;;      Temps:          0       2       0       0       0
  1930 ;;      Totals:         0       2       0       0       0
  1931 ;;Total ram usage:        2 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    3
  1934 ;; This function calls:
  1935 ;;		_ASCII
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           
  1942                           ;psect for function _EJEX_TO_CHARS
  1943  01B2                     _EJEX_TO_CHARS:
  1944  01B2                     l2065:	
  1945                           ;incstack = 0
  1946                           ; Regs used in _EJEX_TO_CHARS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1947                           
  1948                           
  1949                           ;Principal_Master.c: 416:     X0 = ASCII(XH & 0b00001111);
  1950  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1951  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1952  01B4  083C               	movf	_XH,w
  1953  01B5  390F               	andlw	15
  1954  01B6  120A  118A  2106  120A  118A  	fcall	_ASCII
  1955  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1956  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1957  01BD  00C1               	movwf	??_EJEX_TO_CHARS
  1958  01BE  0841               	movf	??_EJEX_TO_CHARS,w
  1959  01BF  00F3               	movwf	_X0
  1960                           
  1961                           ;Principal_Master.c: 417:     X1 = ASCII((XH & 0b11110000) >> 4);
  1962  01C0  083C               	movf	_XH,w
  1963  01C1  00C1               	movwf	??_EJEX_TO_CHARS
  1964  01C2  0E41               	swapf	??_EJEX_TO_CHARS,w
  1965  01C3  390F               	andlw	15
  1966  01C4  1BC1               	btfsc	??_EJEX_TO_CHARS,7
  1967  01C5  38F0               	iorlw	240
  1968  01C6  390F               	andlw	15
  1969  01C7  120A  118A  2106  120A  118A  	fcall	_ASCII
  1970  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1971  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1972  01CE  00C2               	movwf	??_EJEX_TO_CHARS+1
  1973  01CF  0842               	movf	??_EJEX_TO_CHARS+1,w
  1974  01D0  00F2               	movwf	_X1
  1975                           
  1976                           ;Principal_Master.c: 418:     X2 = ASCII(XL & 0b00001111);
  1977  01D1  083D               	movf	_XL,w
  1978  01D2  390F               	andlw	15
  1979  01D3  120A  118A  2106  120A  118A  	fcall	_ASCII
  1980  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1981  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1982  01DA  00C1               	movwf	??_EJEX_TO_CHARS
  1983  01DB  0841               	movf	??_EJEX_TO_CHARS,w
  1984  01DC  00F1               	movwf	_X2
  1985                           
  1986                           ;Principal_Master.c: 419:     X3 = ASCII((XL & 0b11110000) >> 4);
  1987  01DD  083D               	movf	_XL,w
  1988  01DE  00C1               	movwf	??_EJEX_TO_CHARS
  1989  01DF  0E41               	swapf	??_EJEX_TO_CHARS,w
  1990  01E0  390F               	andlw	15
  1991  01E1  1BC1               	btfsc	??_EJEX_TO_CHARS,7
  1992  01E2  38F0               	iorlw	240
  1993  01E3  390F               	andlw	15
  1994  01E4  120A  118A  2106  120A  118A  	fcall	_ASCII
  1995  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1996  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1997  01EB  00C2               	movwf	??_EJEX_TO_CHARS+1
  1998  01EC  0842               	movf	??_EJEX_TO_CHARS+1,w
  1999  01ED  00F0               	movwf	_X3
  2000  01EE                     l222:
  2001  01EE  0008               	return
  2002  01EF                     __end_of_EJEX_TO_CHARS:
  2003                           
  2004                           	psect	text10
  2005  0106                     __ptext10:	
  2006 ;; *************** function _ASCII *****************
  2007 ;; Defined at:
  2008 ;;		line 39 in file "USART.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  aconvertir      1    wreg     unsigned char 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  aconvertir      1    2[BANK0 ] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      unsigned char 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         0       1       0       0       0
  2024 ;;      Temps:          0       2       0       0       0
  2025 ;;      Totals:         0       3       0       0       0
  2026 ;;Total ram usage:        3 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    2
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_EJEX_TO_CHARS
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _ASCII
  2038  0106                     _ASCII:
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _ASCII: [wreg-fsr0h+status,2+status,0]
  2042                           ;ASCII@aconvertir stored from wreg
  2043  0106  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0107  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0108  00C0               	movwf	ASCII@aconvertir
  2046  0109                     l1833:
  2047                           
  2048                           ;USART.c: 40:     switch(aconvertir){
  2049  0109  292A               	goto	l1933
  2050  010A                     l1835:
  2051                           
  2052                           ;USART.c: 42:             return 0x30;
  2053  010A  3030               	movlw	48
  2054  010B  2964               	goto	l301
  2055  010C                     l1841:
  2056                           
  2057                           ;USART.c: 45:             return 0x31;
  2058  010C  3031               	movlw	49
  2059  010D  2964               	goto	l301
  2060  010E                     l1847:
  2061                           
  2062                           ;USART.c: 48:             return 0x32;
  2063  010E  3032               	movlw	50
  2064  010F  2964               	goto	l301
  2065  0110                     l1853:
  2066                           
  2067                           ;USART.c: 51:             return 0x33;
  2068  0110  3033               	movlw	51
  2069  0111  2964               	goto	l301
  2070  0112                     l1859:
  2071                           
  2072                           ;USART.c: 54:             return 0x34;
  2073  0112  3034               	movlw	52
  2074  0113  2964               	goto	l301
  2075  0114                     l1865:
  2076                           
  2077                           ;USART.c: 57:             return 0x35;
  2078  0114  3035               	movlw	53
  2079  0115  2964               	goto	l301
  2080  0116                     l1871:
  2081                           
  2082                           ;USART.c: 60:             return 0x36;
  2083  0116  3036               	movlw	54
  2084  0117  2964               	goto	l301
  2085  0118                     l1877:
  2086                           
  2087                           ;USART.c: 63:             return 0x37;
  2088  0118  3037               	movlw	55
  2089  0119  2964               	goto	l301
  2090  011A                     l1883:
  2091                           
  2092                           ;USART.c: 66:             return 0x38;
  2093  011A  3038               	movlw	56
  2094  011B  2964               	goto	l301
  2095  011C                     l1889:
  2096                           
  2097                           ;USART.c: 69:             return 0x39;
  2098  011C  3039               	movlw	57
  2099  011D  2964               	goto	l301
  2100  011E                     l1895:
  2101                           
  2102                           ;USART.c: 72:             return 0x41;
  2103  011E  3041               	movlw	65
  2104  011F  2964               	goto	l301
  2105  0120                     l1901:
  2106                           
  2107                           ;USART.c: 75:             return 0x42;
  2108  0120  3042               	movlw	66
  2109  0121  2964               	goto	l301
  2110  0122                     l1907:
  2111                           
  2112                           ;USART.c: 78:             return 0x43;
  2113  0122  3043               	movlw	67
  2114  0123  2964               	goto	l301
  2115  0124                     l1913:
  2116                           
  2117                           ;USART.c: 81:             return 0x44;
  2118  0124  3044               	movlw	68
  2119  0125  2964               	goto	l301
  2120  0126                     l1919:
  2121                           
  2122                           ;USART.c: 84:             return 0x45;
  2123  0126  3045               	movlw	69
  2124  0127  2964               	goto	l301
  2125  0128                     l1925:
  2126                           
  2127                           ;USART.c: 87:             return 0x46;
  2128  0128  3046               	movlw	70
  2129  0129  2964               	goto	l301
  2130  012A                     l1933:
  2131  012A  0840               	movf	ASCII@aconvertir,w
  2132  012B  00BE               	movwf	??_ASCII
  2133  012C  01BF               	clrf	??_ASCII+1
  2134                           
  2135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2136                           ; Switch size 1, requested type "simple"
  2137                           ; Number of cases is 1, Range of values is 0 to 0
  2138                           ; switch strategies available:
  2139                           ; Name         Instructions Cycles
  2140                           ; simple_byte            4     3 (average)
  2141                           ; direct_byte           11     8 (fixed)
  2142                           ; jumptable            260     6 (fixed)
  2143                           ;	Chosen strategy is simple_byte
  2144  012D  083F               	movf	??_ASCII+1,w
  2145  012E  3A00               	xorlw	0	; case 0
  2146  012F  1903               	skipnz
  2147  0130  2932               	goto	l2129
  2148  0131  2964               	goto	l301
  2149  0132                     l2129:
  2150                           
  2151                           ; Switch size 1, requested type "simple"
  2152                           ; Number of cases is 16, Range of values is 0 to 15
  2153                           ; switch strategies available:
  2154                           ; Name         Instructions Cycles
  2155                           ; simple_byte           49    25 (average)
  2156                           ; direct_byte           56     8 (fixed)
  2157                           ; jumptable            260     6 (fixed)
  2158                           ;	Chosen strategy is simple_byte
  2159  0132  083E               	movf	??_ASCII,w
  2160  0133  3A00               	xorlw	0	; case 0
  2161  0134  1903               	skipnz
  2162  0135  290A               	goto	l1835
  2163  0136  3A01               	xorlw	1	; case 1
  2164  0137  1903               	skipnz
  2165  0138  290C               	goto	l1841
  2166  0139  3A03               	xorlw	3	; case 2
  2167  013A  1903               	skipnz
  2168  013B  290E               	goto	l1847
  2169  013C  3A01               	xorlw	1	; case 3
  2170  013D  1903               	skipnz
  2171  013E  2910               	goto	l1853
  2172  013F  3A07               	xorlw	7	; case 4
  2173  0140  1903               	skipnz
  2174  0141  2912               	goto	l1859
  2175  0142  3A01               	xorlw	1	; case 5
  2176  0143  1903               	skipnz
  2177  0144  2914               	goto	l1865
  2178  0145  3A03               	xorlw	3	; case 6
  2179  0146  1903               	skipnz
  2180  0147  2916               	goto	l1871
  2181  0148  3A01               	xorlw	1	; case 7
  2182  0149  1903               	skipnz
  2183  014A  2918               	goto	l1877
  2184  014B  3A0F               	xorlw	15	; case 8
  2185  014C  1903               	skipnz
  2186  014D  291A               	goto	l1883
  2187  014E  3A01               	xorlw	1	; case 9
  2188  014F  1903               	skipnz
  2189  0150  291C               	goto	l1889
  2190  0151  3A03               	xorlw	3	; case 10
  2191  0152  1903               	skipnz
  2192  0153  291E               	goto	l1895
  2193  0154  3A01               	xorlw	1	; case 11
  2194  0155  1903               	skipnz
  2195  0156  2920               	goto	l1901
  2196  0157  3A07               	xorlw	7	; case 12
  2197  0158  1903               	skipnz
  2198  0159  2922               	goto	l1907
  2199  015A  3A01               	xorlw	1	; case 13
  2200  015B  1903               	skipnz
  2201  015C  2924               	goto	l1913
  2202  015D  3A03               	xorlw	3	; case 14
  2203  015E  1903               	skipnz
  2204  015F  2926               	goto	l1919
  2205  0160  3A01               	xorlw	1	; case 15
  2206  0161  1903               	skipnz
  2207  0162  2928               	goto	l1925
  2208  0163  2964               	goto	l301
  2209  0164                     l301:
  2210  0164  0008               	return
  2211  0165                     __end_of_ASCII:
  2212                           
  2213                           	psect	text11
  2214  0300                     __ptext11:	
  2215 ;; *************** function _ACELEROMETRO_CONFIG *****************
  2216 ;; Defined at:
  2217 ;;		line 274 in file "Principal_Master.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, pclath, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2231 ;;      Params:         0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0
  2233 ;;      Temps:          0       2       0       0       0
  2234 ;;      Totals:         0       2       0       0       0
  2235 ;;Total ram usage:        2 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    5
  2238 ;; This function calls:
  2239 ;;		_ACELEROMETRO_W
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           
  2246                           ;psect for function _ACELEROMETRO_CONFIG
  2247  0300                     _ACELEROMETRO_CONFIG:
  2248  0300                     l2025:	
  2249                           ;incstack = 0
  2250                           ; Regs used in _ACELEROMETRO_CONFIG: [wreg+status,2+status,0+pclath+cstack]
  2251                           
  2252                           
  2253                           ;Principal_Master.c: 276:     ACELEROMETRO_W(D_FRMT, 0x0B);
  2254  0300  300B               	movlw	11
  2255  0301  1283               	bcf	3,5	;RP0=0, select bank0
  2256  0302  1303               	bcf	3,6	;RP1=0, select bank0
  2257  0303  00C4               	movwf	??_ACELEROMETRO_CONFIG
  2258  0304  0844               	movf	??_ACELEROMETRO_CONFIG,w
  2259  0305  00C0               	movwf	ACELEROMETRO_W@data
  2260  0306  3031               	movlw	49
  2261  0307  120A  118A  2266  120A  118A  	fcall	_ACELEROMETRO_W
  2262  030C                     l2027:
  2263                           
  2264                           ;Principal_Master.c: 277:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2265  030C  3007               	movlw	7
  2266  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2267  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2268  030F  00C5               	movwf	??_ACELEROMETRO_CONFIG+1
  2269  0310  307C               	movlw	124
  2270  0311  00C4               	movwf	??_ACELEROMETRO_CONFIG
  2271  0312                     u617:
  2272  0312  0BC4               	decfsz	??_ACELEROMETRO_CONFIG,f
  2273  0313  2B12               	goto	u617
  2274  0314  0BC5               	decfsz	??_ACELEROMETRO_CONFIG+1,f
  2275  0315  2B12               	goto	u617
  2276  0316  0000               	nop
  2277  0317                     l2029:
  2278                           
  2279                           ;Principal_Master.c: 279:     ACELEROMETRO_W(P_CTL, 0x08);
  2280  0317  3008               	movlw	8
  2281  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2283  031A  00C4               	movwf	??_ACELEROMETRO_CONFIG
  2284  031B  0844               	movf	??_ACELEROMETRO_CONFIG,w
  2285  031C  00C0               	movwf	ACELEROMETRO_W@data
  2286  031D  302D               	movlw	45
  2287  031E  120A  118A  2266  120A  118A  	fcall	_ACELEROMETRO_W
  2288                           
  2289                           ;Principal_Master.c: 280:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2290  0323  3007               	movlw	7
  2291  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2292  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2293  0326  00C5               	movwf	??_ACELEROMETRO_CONFIG+1
  2294  0327  307C               	movlw	124
  2295  0328  00C4               	movwf	??_ACELEROMETRO_CONFIG
  2296  0329                     u627:
  2297  0329  0BC4               	decfsz	??_ACELEROMETRO_CONFIG,f
  2298  032A  2B29               	goto	u627
  2299  032B  0BC5               	decfsz	??_ACELEROMETRO_CONFIG+1,f
  2300  032C  2B29               	goto	u627
  2301  032D  0000               	nop
  2302  032E                     l194:
  2303  032E  0008               	return
  2304  032F                     __end_of_ACELEROMETRO_CONFIG:
  2305                           
  2306                           	psect	text12
  2307  0266                     __ptext12:	
  2308 ;; *************** function _ACELEROMETRO_W *****************
  2309 ;; Defined at:
  2310 ;;		line 298 in file "Principal_Master.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  num             1    wreg     unsigned char 
  2313 ;;  data            1    2[BANK0 ] unsigned char 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  num             1    5[BANK0 ] unsigned char 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, status,0, pclath, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2325 ;;      Params:         0       1       0       0       0
  2326 ;;      Locals:         0       1       0       0       0
  2327 ;;      Temps:          0       2       0       0       0
  2328 ;;      Totals:         0       4       0       0       0
  2329 ;;Total ram usage:        4 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    4
  2332 ;; This function calls:
  2333 ;;		_I2C_Master_Start
  2334 ;;		_I2C_Master_Stop
  2335 ;;		_I2C_Master_Write
  2336 ;; This function is called by:
  2337 ;;		_ACELEROMETRO_CONFIG
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           
  2342                           ;psect for function _ACELEROMETRO_W
  2343  0266                     _ACELEROMETRO_W:
  2344                           
  2345                           ;incstack = 0
  2346                           ; Regs used in _ACELEROMETRO_W: [wreg+status,2+status,0+pclath+cstack]
  2347                           ;ACELEROMETRO_W@num stored from wreg
  2348  0266  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0267  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0268  00C3               	movwf	ACELEROMETRO_W@num
  2351  0269                     l1825:
  2352                           
  2353                           ;Principal_Master.c: 300:     I2C_Master_Start();
  2354  0269  120A  118A  23E2  120A  118A  	fcall	_I2C_Master_Start
  2355                           
  2356                           ;Principal_Master.c: 301:     I2C_Master_Write(WRITE);
  2357  026E  30A6               	movlw	166
  2358  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0271  00BE               	movwf	I2C_Master_Write@d
  2361  0272  3000               	movlw	0
  2362  0273  00BF               	movwf	I2C_Master_Write@d+1
  2363  0274  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Write
  2364                           
  2365                           ;Principal_Master.c: 302:     I2C_Master_Write(num);
  2366  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2367  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2368  027B  0843               	movf	ACELEROMETRO_W@num,w
  2369  027C  00C1               	movwf	??_ACELEROMETRO_W
  2370  027D  01C2               	clrf	??_ACELEROMETRO_W+1
  2371  027E  0841               	movf	??_ACELEROMETRO_W,w
  2372  027F  00BE               	movwf	I2C_Master_Write@d
  2373  0280  0842               	movf	??_ACELEROMETRO_W+1,w
  2374  0281  00BF               	movwf	I2C_Master_Write@d+1
  2375  0282  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Write
  2376                           
  2377                           ;Principal_Master.c: 303:     I2C_Master_Write(data);
  2378  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2380  0289  0840               	movf	ACELEROMETRO_W@data,w
  2381  028A  00C1               	movwf	??_ACELEROMETRO_W
  2382  028B  01C2               	clrf	??_ACELEROMETRO_W+1
  2383  028C  0841               	movf	??_ACELEROMETRO_W,w
  2384  028D  00BE               	movwf	I2C_Master_Write@d
  2385  028E  0842               	movf	??_ACELEROMETRO_W+1,w
  2386  028F  00BF               	movwf	I2C_Master_Write@d+1
  2387  0290  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Write
  2388                           
  2389                           ;Principal_Master.c: 304:     I2C_Master_Stop();
  2390  0295  120A  118A  23D9  120A  118A  	fcall	_I2C_Master_Stop
  2391  029A                     l200:
  2392  029A  0008               	return
  2393  029B                     __end_of_ACELEROMETRO_W:
  2394                           
  2395                           	psect	text13
  2396  03C6                     __ptext13:	
  2397 ;; *************** function _I2C_Master_Write *****************
  2398 ;; Defined at:
  2399 ;;		line 40 in file "I2C.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  d               2    0[BANK0 ] unsigned int 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, pclath, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       2       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0
  2416 ;;      Totals:         0       2       0       0       0
  2417 ;;Total ram usage:        2 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    3
  2420 ;; This function calls:
  2421 ;;		_I2C_Master_Wait
  2422 ;; This function is called by:
  2423 ;;		_ACELEROMETRO_R
  2424 ;;		_ACELEROMETRO_W
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           
  2429                           ;psect for function _I2C_Master_Write
  2430  03C6                     _I2C_Master_Write:
  2431  03C6                     l1783:	
  2432                           ;incstack = 0
  2433                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2434                           
  2435                           
  2436                           ;I2C.c: 40: void I2C_Master_Write(unsigned d);I2C.c: 41: {;I2C.c: 42:   I2C_Master_Wait(
      +                          );
  2437  03C6  120A  118A  23AF  120A  118A  	fcall	_I2C_Master_Wait
  2438  03CB                     l1785:
  2439                           
  2440                           ;I2C.c: 43:   SSPBUF = d;
  2441  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2442  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2443  03CD  083E               	movf	I2C_Master_Write@d,w
  2444  03CE  0093               	movwf	19	;volatile
  2445  03CF                     l275:
  2446  03CF  0008               	return
  2447  03D0                     __end_of_I2C_Master_Write:
  2448                           
  2449                           	psect	text14
  2450  03D9                     __ptext14:	
  2451 ;; *************** function _I2C_Master_Stop *****************
  2452 ;; Defined at:
  2453 ;;		line 34 in file "I2C.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;		None
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;		None
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0, pclath, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2467 ;;      Params:         0       0       0       0       0
  2468 ;;      Locals:         0       0       0       0       0
  2469 ;;      Temps:          0       0       0       0       0
  2470 ;;      Totals:         0       0       0       0       0
  2471 ;;Total ram usage:        0 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:    3
  2474 ;; This function calls:
  2475 ;;		_I2C_Master_Wait
  2476 ;; This function is called by:
  2477 ;;		_ACELEROMETRO_R
  2478 ;;		_ACELEROMETRO_W
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _I2C_Master_Stop
  2484  03D9                     _I2C_Master_Stop:
  2485  03D9                     l1807:	
  2486                           ;incstack = 0
  2487                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2488                           
  2489                           
  2490                           ;I2C.c: 36:   I2C_Master_Wait();
  2491  03D9  120A  118A  23AF  120A  118A  	fcall	_I2C_Master_Wait
  2492  03DE                     l1809:
  2493                           
  2494                           ;I2C.c: 37:   PEN = 1;
  2495  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2496  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2497  03E0  1511               	bsf	17,2	;volatile
  2498  03E1                     l272:
  2499  03E1  0008               	return
  2500  03E2                     __end_of_I2C_Master_Stop:
  2501                           
  2502                           	psect	text15
  2503  03E2                     __ptext15:	
  2504 ;; *************** function _I2C_Master_Start *****************
  2505 ;; Defined at:
  2506 ;;		line 22 in file "I2C.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;		None
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;		None
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg, status,2, status,0, pclath, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2520 ;;      Params:         0       0       0       0       0
  2521 ;;      Locals:         0       0       0       0       0
  2522 ;;      Temps:          0       0       0       0       0
  2523 ;;      Totals:         0       0       0       0       0
  2524 ;;Total ram usage:        0 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; Hardware stack levels required when called:    3
  2527 ;; This function calls:
  2528 ;;		_I2C_Master_Wait
  2529 ;; This function is called by:
  2530 ;;		_ACELEROMETRO_R
  2531 ;;		_ACELEROMETRO_W
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function _I2C_Master_Start
  2537  03E2                     _I2C_Master_Start:
  2538  03E2                     l1779:	
  2539                           ;incstack = 0
  2540                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2541                           
  2542                           
  2543                           ;I2C.c: 24:   I2C_Master_Wait();
  2544  03E2  120A  118A  23AF  120A  118A  	fcall	_I2C_Master_Wait
  2545  03E7                     l1781:
  2546                           
  2547                           ;I2C.c: 25:   SEN = 1;
  2548  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2549  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2550  03E9  1411               	bsf	17,0	;volatile
  2551  03EA                     l266:
  2552  03EA  0008               	return
  2553  03EB                     __end_of_I2C_Master_Start:
  2554                           
  2555                           	psect	text16
  2556  03AF                     __ptext16:	
  2557 ;; *************** function _I2C_Master_Wait *****************
  2558 ;; Defined at:
  2559 ;;		line 17 in file "I2C.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2573 ;;      Params:         0       0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0
  2576 ;;      Totals:         0       0       0       0       0
  2577 ;;Total ram usage:        0 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    2
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_I2C_Master_Start
  2584 ;;		_I2C_Master_RepeatedStart
  2585 ;;		_I2C_Master_Stop
  2586 ;;		_I2C_Master_Write
  2587 ;;		_I2C_Master_Read
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _I2C_Master_Wait
  2593  03AF                     _I2C_Master_Wait:
  2594  03AF                     l1775:	
  2595                           ;incstack = 0
  2596                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2597                           
  2598  03AF                     l260:	
  2599                           ;I2C.c: 19:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2600                           
  2601  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2602  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2603  03B1  1914               	btfsc	20,2	;volatile
  2604  03B2  2BB4               	goto	u431
  2605  03B3  2BB5               	goto	u430
  2606  03B4                     u431:
  2607  03B4  2BAF               	goto	l260
  2608  03B5                     u430:
  2609  03B5                     l1777:
  2610  03B5  0811               	movf	17,w	;volatile
  2611  03B6  391F               	andlw	31
  2612  03B7  1D03               	btfss	3,2
  2613  03B8  2BBA               	goto	u441
  2614  03B9  2BBB               	goto	u440
  2615  03BA                     u441:
  2616  03BA  2BAF               	goto	l260
  2617  03BB                     u440:
  2618  03BB                     l263:
  2619  03BB  0008               	return
  2620  03BC                     __end_of_I2C_Master_Wait:
  2621                           
  2622                           	psect	text17
  2623  032F                     __ptext17:	
  2624 ;; *************** function _isr *****************
  2625 ;; Defined at:
  2626 ;;		line 114 in file "Principal_Master.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0
  2642 ;;      Temps:          4       0       0       0       0
  2643 ;;      Totals:         4       0       0       0       0
  2644 ;;Total ram usage:        4 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    1
  2647 ;; This function calls:
  2648 ;;		_TX
  2649 ;; This function is called by:
  2650 ;;		Interrupt level 1
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _isr
  2656  032F                     _isr:
  2657  032F                     i1l1687:
  2658                           
  2659                           ;Principal_Master.c: 115:     (INTCONbits.GIE = 0);
  2660  032F  138B               	bcf	11,7	;volatile
  2661                           
  2662                           ;Principal_Master.c: 117:     if (PIR1bits.TXIF == 1) {
  2663  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0331  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0332  1E0C               	btfss	12,4	;volatile
  2666  0333  2B35               	goto	u39_21
  2667  0334  2B36               	goto	u39_20
  2668  0335                     u39_21:
  2669  0335  2B41               	goto	i1l1693
  2670  0336                     u39_20:
  2671  0336                     i1l1689:
  2672                           
  2673                           ;Principal_Master.c: 119:         TXREG = TX();
  2674  0336  120A  118A  21EF  120A  118A  	fcall	_TX
  2675  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2676  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2677  033D  0099               	movwf	25	;volatile
  2678  033E                     i1l1691:
  2679                           
  2680                           ;Principal_Master.c: 120:         PIE1bits.TXIE = 0;
  2681  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2682  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0340  120C               	bcf	12,4	;volatile
  2684  0341                     i1l1693:
  2685                           
  2686                           ;Principal_Master.c: 123:     if (INTCONbits.T0IF == 1) {
  2687  0341  1D0B               	btfss	11,2	;volatile
  2688  0342  2B44               	goto	u40_21
  2689  0343  2B45               	goto	u40_20
  2690  0344                     u40_21:
  2691  0344  2B4D               	goto	i1l1701
  2692  0345                     u40_20:
  2693  0345                     i1l1695:
  2694                           
  2695                           ;Principal_Master.c: 124:         TMR0 = 236;
  2696  0345  30EC               	movlw	236
  2697  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2698  0347  0081               	movwf	1	;volatile
  2699  0348                     i1l1697:
  2700                           
  2701                           ;Principal_Master.c: 125:         a++;
  2702  0348  3001               	movlw	1
  2703  0349  00F8               	movwf	??_isr
  2704  034A  0878               	movf	??_isr,w
  2705  034B  07A5               	addwf	_a,f
  2706  034C                     i1l1699:
  2707                           
  2708                           ;Principal_Master.c: 126:         INTCONbits.T0IF = 0;
  2709  034C  110B               	bcf	11,2	;volatile
  2710  034D                     i1l1701:
  2711                           
  2712                           ;Principal_Master.c: 129:     if (PIR1bits.RCIF == 1) {
  2713  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2714  034E  1E8C               	btfss	12,5	;volatile
  2715  034F  2B51               	goto	u41_21
  2716  0350  2B52               	goto	u41_20
  2717  0351                     u41_21:
  2718  0351  2B54               	goto	i1l1705
  2719  0352                     u41_20:
  2720  0352                     i1l1703:
  2721                           
  2722                           ;Principal_Master.c: 131:        PORTA=RCREG;
  2723  0352  081A               	movf	26,w	;volatile
  2724  0353  0085               	movwf	5	;volatile
  2725  0354                     i1l1705:
  2726                           
  2727                           ;Principal_Master.c: 177:     (INTCONbits.GIE = 1);
  2728  0354  178B               	bsf	11,7	;volatile
  2729  0355                     i1l172:
  2730  0355  087B               	movf	??_isr+3,w
  2731  0356  008A               	movwf	10
  2732  0357  087A               	movf	??_isr+2,w
  2733  0358  0084               	movwf	4
  2734  0359  0E79               	swapf	??_isr+1,w
  2735  035A  0083               	movwf	3
  2736  035B  0EFE               	swapf	btemp,f
  2737  035C  0E7E               	swapf	btemp,w
  2738  035D  0009               	retfie
  2739  035E                     __end_of_isr:
  2740                           
  2741                           	psect	intentry
  2742  0004                     __pintentry:	
  2743                           ;incstack = 0
  2744                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2745                           
  2746  0004                     interrupt_function:
  2747  007E                     saved_w	set	btemp
  2748  0004  00FE               	movwf	btemp
  2749  0005  0E03               	swapf	3,w
  2750  0006  00F9               	movwf	??_isr+1
  2751  0007  0804               	movf	4,w
  2752  0008  00FA               	movwf	??_isr+2
  2753  0009  080A               	movf	10,w
  2754  000A  00FB               	movwf	??_isr+3
  2755  000B  120A  118A  2B2F   	ljmp	_isr
  2756                           
  2757                           	psect	text18
  2758  01EF                     __ptext18:	
  2759 ;; *************** function _TX *****************
  2760 ;; Defined at:
  2761 ;;		line 307 in file "Principal_Master.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      unsigned char 
  2768 ;; Registers used:
  2769 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2775 ;;      Params:         0       0       0       0       0
  2776 ;;      Locals:         0       0       0       0       0
  2777 ;;      Temps:          2       0       0       0       0
  2778 ;;      Totals:         2       0       0       0       0
  2779 ;;Total ram usage:        2 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_isr
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           
  2789                           ;psect for function _TX
  2790  01EF                     _TX:
  2791  01EF                     i1l1533:	
  2792                           ;incstack = 0
  2793                           ; Regs used in _TX: [wreg-fsr0h+status,2+status,0]
  2794                           
  2795                           
  2796                           ;Principal_Master.c: 309:     switch (BANDERA_T) {
  2797  01EF  2A12               	goto	i1l1579
  2798  01F0                     i1l1535:
  2799                           
  2800                           ;Principal_Master.c: 312:             BANDERA_T++;
  2801  01F0  3001               	movlw	1
  2802  01F1  00F6               	movwf	??_TX
  2803  01F2  0876               	movf	??_TX,w
  2804  01F3  07F4               	addwf	_BANDERA_T,f
  2805  01F4                     i1l1537:
  2806                           
  2807                           ;Principal_Master.c: 313:             return X0;
  2808  01F4  0873               	movf	_X0,w
  2809  01F5  2A2B               	goto	i1l205
  2810  01F6                     i1l1543:
  2811                           
  2812                           ;Principal_Master.c: 317:             BANDERA_T++;
  2813  01F6  3001               	movlw	1
  2814  01F7  00F6               	movwf	??_TX
  2815  01F8  0876               	movf	??_TX,w
  2816  01F9  07F4               	addwf	_BANDERA_T,f
  2817  01FA                     i1l1545:
  2818                           
  2819                           ;Principal_Master.c: 318:             return X1;
  2820  01FA  0872               	movf	_X1,w
  2821  01FB  2A2B               	goto	i1l205
  2822  01FC                     i1l1551:
  2823                           
  2824                           ;Principal_Master.c: 323:             BANDERA_T++;
  2825  01FC  3001               	movlw	1
  2826  01FD  00F6               	movwf	??_TX
  2827  01FE  0876               	movf	??_TX,w
  2828  01FF  07F4               	addwf	_BANDERA_T,f
  2829  0200                     i1l1553:
  2830                           
  2831                           ;Principal_Master.c: 324:             return X2;
  2832  0200  0871               	movf	_X2,w
  2833  0201  2A2B               	goto	i1l205
  2834  0202                     i1l1559:
  2835                           
  2836                           ;Principal_Master.c: 329:             BANDERA_T++;
  2837  0202  3001               	movlw	1
  2838  0203  00F6               	movwf	??_TX
  2839  0204  0876               	movf	??_TX,w
  2840  0205  07F4               	addwf	_BANDERA_T,f
  2841  0206                     i1l1561:
  2842                           
  2843                           ;Principal_Master.c: 330:             return X3;
  2844  0206  0870               	movf	_X3,w
  2845  0207  2A2B               	goto	i1l205
  2846  0208                     i1l210:	
  2847                           ;Principal_Master.c: 369:         case 4:
  2848                           
  2849                           
  2850                           ;Principal_Master.c: 370:             PORTAbits.RA0 = 0;
  2851  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2853  020A  1005               	bcf	5,0	;volatile
  2854  020B                     i1l1567:
  2855                           
  2856                           ;Principal_Master.c: 371:             BANDERA_T = 0;
  2857  020B  01F4               	clrf	_BANDERA_T
  2858  020C                     i1l1569:
  2859                           
  2860                           ;Principal_Master.c: 372:             b++;
  2861  020C  3001               	movlw	1
  2862  020D  00F6               	movwf	??_TX
  2863  020E  0876               	movf	??_TX,w
  2864  020F  07A4               	addwf	_b,f
  2865  0210                     i1l1571:
  2866                           
  2867                           ;Principal_Master.c: 373:             return 10;
  2868  0210  300A               	movlw	10
  2869  0211  2A2B               	goto	i1l205
  2870  0212                     i1l1579:
  2871  0212  0874               	movf	_BANDERA_T,w
  2872  0213  00F6               	movwf	??_TX
  2873  0214  01F7               	clrf	??_TX+1
  2874                           
  2875                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2876                           ; Switch size 1, requested type "simple"
  2877                           ; Number of cases is 1, Range of values is 0 to 0
  2878                           ; switch strategies available:
  2879                           ; Name         Instructions Cycles
  2880                           ; simple_byte            4     3 (average)
  2881                           ; direct_byte           11     8 (fixed)
  2882                           ; jumptable            260     6 (fixed)
  2883                           ;	Chosen strategy is simple_byte
  2884  0215  0877               	movf	??_TX+1,w
  2885  0216  3A00               	xorlw	0	; case 0
  2886  0217  1903               	skipnz
  2887  0218  2A1A               	goto	i1l2131
  2888  0219  2A2B               	goto	i1l205
  2889  021A                     i1l2131:
  2890                           
  2891                           ; Switch size 1, requested type "simple"
  2892                           ; Number of cases is 5, Range of values is 0 to 4
  2893                           ; switch strategies available:
  2894                           ; Name         Instructions Cycles
  2895                           ; simple_byte           16     9 (average)
  2896                           ; direct_byte           23     8 (fixed)
  2897                           ; jumptable            260     6 (fixed)
  2898                           ;	Chosen strategy is simple_byte
  2899  021A  0876               	movf	??_TX,w
  2900  021B  3A00               	xorlw	0	; case 0
  2901  021C  1903               	skipnz
  2902  021D  29F0               	goto	i1l1535
  2903  021E  3A01               	xorlw	1	; case 1
  2904  021F  1903               	skipnz
  2905  0220  29F6               	goto	i1l1543
  2906  0221  3A03               	xorlw	3	; case 2
  2907  0222  1903               	skipnz
  2908  0223  29FC               	goto	i1l1551
  2909  0224  3A01               	xorlw	1	; case 3
  2910  0225  1903               	skipnz
  2911  0226  2A02               	goto	i1l1559
  2912  0227  3A07               	xorlw	7	; case 4
  2913  0228  1903               	skipnz
  2914  0229  2A08               	goto	i1l210
  2915  022A  2A2B               	goto	i1l205
  2916  022B                     i1l205:
  2917  022B  0008               	return
  2918  022C                     __end_of_TX:
  2919  007E                     btemp	set	126	;btemp
  2920  007E                     wtemp0	set	126
  2921                           
  2922                           	psect	config
  2923                           
  2924                           ;Config register CONFIG1 @ 0x2007
  2925                           ;	Oscillator Selection bits
  2926                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2927                           ;	Watchdog Timer Enable bit
  2928                           ;	WDTE = ON, WDT enabled
  2929                           ;	Power-up Timer Enable bit
  2930                           ;	PWRTE = OFF, PWRT disabled
  2931                           ;	RE3/MCLR pin function select bit
  2932                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2933                           ;	Code Protection bit
  2934                           ;	CP = OFF, Program memory code protection is disabled
  2935                           ;	Data Code Protection bit
  2936                           ;	CPD = OFF, Data memory code protection is disabled
  2937                           ;	Brown Out Reset Selection bits
  2938                           ;	BOREN = ON, BOR enabled
  2939                           ;	Internal External Switchover bit
  2940                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2941                           ;	Fail-Safe Clock Monitor Enabled bit
  2942                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2943                           ;	Low Voltage Programming Enable bit
  2944                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  2945                           ;	In-Circuit Debugger Mode bit
  2946                           ;	DEBUG = 0x1, unprogrammed default
  2947  2007                     	org	8199
  2948  2007  3FFD               	dw	16381
  2949                           
  2950                           ;Config register CONFIG2 @ 0x2008
  2951                           ;	Brown-out Reset Selection bit
  2952                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2953                           ;	Flash Program Memory Self Write Enable bits
  2954                           ;	WRT = OFF, Write protection off
  2955  2008                     	org	8200
  2956  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     22      62
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_TX

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _LEER_VALORES->_ACELEROMETRO_R
    _ACELEROMETRO_R->_I2C_Master_Read
    _I2C_Master_Init->___lldiv
    _EJEX_TO_CHARS->_ASCII
    _ACELEROMETRO_CONFIG->_ACELEROMETRO_W
    _ACELEROMETRO_W->_I2C_Master_Write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2177
                _ACELEROMETRO_CONFIG
                      _EJEX_TO_CHARS
                    _I2C_Master_Init
                       _LEER_VALORES
                              _SETUP
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
                       _CONFIG_USART
 ---------------------------------------------------------------------------------
 (2) _CONFIG_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEER_VALORES                                         1     1      0     791
                                             13 BANK0      1     1      0
                     _ACELEROMETRO_R
 ---------------------------------------------------------------------------------
 (2) _ACELEROMETRO_R                                       7     5      2     791
                                              6 BANK0      7     5      2
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     155
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _EJEX_TO_CHARS                                        2     2      0      31
                                              3 BANK0      2     2      0
                              _ASCII
 ---------------------------------------------------------------------------------
 (2) _ASCII                                                3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ACELEROMETRO_CONFIG                                  2     2      0     813
                                              6 BANK0      2     2      0
                     _ACELEROMETRO_W
 ---------------------------------------------------------------------------------
 (2) _ACELEROMETRO_W                                       4     3      1     813
                                              2 BANK0      4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     571
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              2 COMMON     4     4      0
                                 _TX
 ---------------------------------------------------------------------------------
 (6) _TX                                                   2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ACELEROMETRO_CONFIG
     _ACELEROMETRO_W
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _EJEX_TO_CHARS
     _ASCII
   _I2C_Master_Init
     ___lldiv
   _LEER_VALORES
     _ACELEROMETRO_R
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _SETUP
     _CONFIG_USART

 _isr (ROOT)
   _TX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Mar 05 19:35:23 2021

                    ?_LEER_VALORES 0076                                  _a 0025  
                                _b 0024                                  pc 0002  
           __end_of_ACELEROMETRO_R 01B2             __end_of_ACELEROMETRO_W 029B  
                               _X0 0073                                 _X1 0072  
                               _Y0 0037                                 _X2 0071  
                               _Y1 0036                                 _X3 0070  
                               _Y2 0035                                 _Z0 0033  
                               _Y3 0034                                 _Z1 0032  
                               _Z2 0031                                 _Z3 0030  
                               _XH 003C                                 _YH 003A  
                               _XL 003D                                 _ZH 0038  
                               _YL 003B                                 _ZL 0039  
                               _TX 01EF                                 fsr 0004  
                              ?_TX 0076                                l200 029A  
                              l301 0164                                l222 01EE  
                              l219 009D                                l260 03AF  
                              l263 03BB                                l191 0387  
                              l272 03E1                                l280 02FF  
                              l257 0265                                l266 03EA  
                              l194 032E                                l275 03CF  
                              l269 03D8                                l197 01B1  
                              l278 02F5                                l439 0105  
                              l279 02F8                                l296 039B  
                              _DX0 0059                                _DX1 0058  
                              _DY0 0057                                _DY1 0056  
                              _GIE 005F                                _DZ0 0055  
                              _DZ1 0054                                u500 00DF  
                              u501 00DE                                u430 03B5  
                              u431 03B4                                u440 03BB  
                              u520 00FD                                u600 02BC  
                              _PEN 048A                                u441 03BA  
                              u521 00FC                                u505 00DB  
                              u601 02BB                                u530 0243  
                              u450 02F1                                u515 00EF  
                              u451 02F0                                u460 00B0  
                              u540 004D                                u461 00AF  
                              u541 004C                                u550 0053  
                              u535 023E                                u551 0052  
                              u480 00C4                                u560 0071  
                              u617 0312                                u481 00C3  
                              u561 0070                                u570 0077  
                              u627 0329                                u475 00B5  
                              u571 0076                                u580 0095  
                              _SEN 0488                                u581 0094  
                              u590 009B                                u495 00C6  
                              u591 009A                                _X_1 002F  
                              _Y_1 002D                                _Z_1 002E  
                              _X_D 002B                                _Y_D 0029  
                              _Z_D 0027                                _X_U 002C  
                              _Y_U 002A                                _Z_U 0028  
                              _isr 032F                                fsr0 0004  
                              indf 0000                               ??_TX 0076  
                             l2001 037D                               l2011 0386  
                             l2003 037E                               l2021 0263  
                             l2013 022C                               l2005 0381  
                             l2023 0264                               l2015 0230  
                             l2031 0031                               l2007 0382  
                             l2025 0300                               l2017 0233  
                             l2041 0055                               l2033 0049  
                             l2009 0385                               l2027 030C  
                             l2019 0262                               l2051 0077  
                             l2043 0061                               l2035 004D  
                             l2029 0317                               l2061 0097  
                             l2053 0079                               l2045 006D  
                             l2037 004F                               l2063 009B  
                             l2055 0085                               l2047 0071  
                             l2039 0053                               l2071 02BC  
                             l2129 0132                               l2065 01B2  
                             l2057 0091                               l2049 0073  
                             l2073 02BD                               l2059 0095  
                             l2075 02C0                               l2067 029B  
                             l2077 02C5                               l2069 02B4  
                             l1801 02F1                               l1803 02F9  
                             l1811 0388                               l1901 0120  
                             l1821 0399                               l1813 0390  
                             l1807 03D9                               l1823 039A  
                             l1815 0394                               l1809 03DE  
                             l1825 0269                               l1913 0124  
                             l1841 010C                               l1833 0109  
                             l1817 0395                               l1907 0122  
                             l1835 010A                               l1827 0168  
                             l1819 0396                               l1781 03E7  
                             l1925 0128                               l1853 0110  
                             l1933 012A                               l1941 009E  
                             l1829 01AB                               l1775 03AF  
                             l1783 03C6                               l1919 0126  
                             l1871 0116                               l1847 010E  
                             l1951 00CD                               l1943 00B0  
                             l1791 02CE                               l1777 03B5  
                             l1785 03CB                               l1865 0114  
                             l1953 00DF                               l1945 00B3  
                             l1961 00FD                               l1793 02D3  
                             l1779 03E2                               l1883 011A  
                             l1859 0112                               l1955 00ED  
                             l1947 00C0                               l1795 02DB  
                             l1787 03D0                               l1971 0364  
                             l1877 0118                               l1957 00EE  
                             l1949 00C4                               l1797 02E4  
                             l1789 03D5                               l1981 036B  
                             l1973 0365                               l1965 035E  
                             l1895 011E                               l1959 00F7  
                             l1799 02E9                               l1991 0372  
                             l1983 036C                               l1975 0368  
                             l1967 0362                               l1889 011C  
                             l1993 0373                               l1985 036F  
                             l1977 0369                               l1969 0363  
                             l1995 0376                               l1987 0370  
                             l1979 036A                               l1997 0377  
                             l1989 0371                               l1999 037C  
                             ?_isr 0076                               _LED1 0023  
                             _LED2 0022                               _READ 005C  
                             _PEIE 005E                               _TMR0 0001  
                             _RSEN 0489   __end_of_I2C_Master_RepeatedStart 03D9  
                             _main 029B                               btemp 007E  
                             start 000E                     ??_LEER_VALORES 004B  
                            ??_isr 0078                    ?_ACELEROMETRO_R 0044  
                  ?_ACELEROMETRO_W 0040                   ?_I2C_Master_Init 004C  
                 ?_I2C_Master_Read 003E                   ?_I2C_Master_Wait 0076  
                 ?_I2C_Master_Stop 0076               __end_of_CONFIG_USART 039C  
                            ?_main 0076                              _ASCII 0106  
                            _ANSEL 0188                    __end_of___lldiv 0106  
                            _ENTER 0021                              i1l210 0208  
                            i1l205 022B                              i1l172 0355  
                            _RCREG 001A                              u40_20 0345  
                            u40_21 0344                              u41_20 0352  
                            u41_21 0351                              _SETUP 035E  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            u39_20 0336                              u39_21 0335  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _P_CTL 005B  
                            _WRITE 005D                              _TXREG 0019  
               ACELEROMETRO_W@data 0040                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __initialization 0011                       __end_of_main 02CE  
                           ??_main 0054                             ?_ASCII 0076  
                           ?_SETUP 0076                  ?_I2C_Master_Start 0076  
                ?_I2C_Master_Write 003E                 ??_I2C_Master_Start 003E  
               ??_I2C_Master_Write 0040                             _ANSELH 0189  
                           i1l2131 021A                             i1l1533 01EF  
                           i1l1701 034D                             i1l1551 01FC  
                           i1l1543 01F6                             i1l1535 01F0  
                           i1l1703 0352                             i1l1561 0206  
                           i1l1553 0200                             i1l1545 01FA  
                           i1l1537 01F4                             i1l1705 0354  
                           i1l1571 0210                             i1l1567 020B  
                           i1l1559 0202                             i1l1569 020C  
                           i1l1579 0212                             i1l1691 033E  
                           i1l1693 0341                             i1l1695 0345  
                           i1l1687 032F                             i1l1697 0348  
                           i1l1689 0336                             i1l1699 034C  
                           _D_FRMT 005A                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 03D0  
                        ??___lldiv 0046       __size_of_ACELEROMETRO_CONFIG 002F  
                           saved_w 007E              __end_of_EJEX_TO_CHARS 01EF  
             __end_of_LEER_VALORES 009E            __end_of__initialization 002D  
                    __end_of_ASCII 0165                      __end_of_SETUP 0388  
            __size_of_CONFIG_USART 0014                     __pcstackCOMMON 0076  
                     __pidataBANK0 03BC                         __end_of_TX 022C  
                          ??_ASCII 003E                            ??_SETUP 003E  
                       __pbssBANK0 0020                       _CONFIG_USART 0388  
                 ??_ACELEROMETRO_R 0046                   ??_ACELEROMETRO_W 0041  
                       __pmaintext 029B                         __pintentry 0004  
                          _FLAG_RC 0020                            _LECTURA 0075  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                        _BANDERA_T 0074                            ___lldiv 009E  
                          __ptext1 035E                            __ptext2 0388  
                          __ptext3 0031                            __ptext4 0165  
                          __ptext5 03D0                            __ptext6 02CE  
                          __ptext7 022C                            __ptext8 009E  
                          __ptext9 01B2              __size_of_LEER_VALORES 006D  
                     __size_of_isr 002F           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0032           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            clrloop0 03EC  
              _ACELEROMETRO_CONFIG 0300               end_of_initialization 002D  
       ??_I2C_Master_RepeatedStart 003E          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 003E  
                  ___lldiv@counter 004B                          _RCSTAbits 0018  
                 I2C_Master_Init@c 004C                   I2C_Master_Read@a 003E  
                     _LEER_VALORES 0031               ?_ACELEROMETRO_CONFIG 0076  
                        _PORTAbits 0005                          _TRISCbits 0087  
                        _TXSTAbits 0098              ??_ACELEROMETRO_CONFIG 0044  
                ACELEROMETRO_R@num 0048                        _BAUDCTLbits 0187  
                ACELEROMETRO_W@num 0043                start_initialization 0011  
                      __end_of_isr 035E                  ??_I2C_Master_Init 0050  
                ??_I2C_Master_Read 0040                  ??_I2C_Master_Wait 003E  
                ??_I2C_Master_Stop 003E                         init_fetch0 039C  
           __size_of_EJEX_TO_CHARS 003D                        __pdataBANK0 0054  
                      __pbssCOMMON 0070                          ___latbits 0002  
                    __pcstackBANK0 003E                   _I2C_Master_Start 03E2  
                 _I2C_Master_Write 03C6                           ?___lldiv 003E  
                   __size_of_ASCII 005F                     __size_of_SETUP 002A  
            ACELEROMETRO_R@LECTURA 0049                      _EJEX_TO_CHARS 01B2  
                      __size_of_TX 003D                  interrupt_function 0004  
                        clear_ram0 03EB                           _PIE1bits 008C  
                         _PIR1bits 000C            __size_of_ACELEROMETRO_R 004D  
          __size_of_ACELEROMETRO_W 0035                     ?_EJEX_TO_CHARS 0076  
              I2C_Master_Read@temp 0042  __size_of_I2C_Master_RepeatedStart 0009  
        ?_I2C_Master_RepeatedStart 0076                   __size_of___lldiv 0068  
                  _I2C_Master_Init 022C                    _I2C_Master_Read 02CE  
                  _I2C_Master_Wait 03AF                    _I2C_Master_Stop 03D9  
                         __ptext10 0106                           __ptext11 0300  
                         __ptext12 0266                           __ptext13 03C6  
                         __ptext14 03D9                           __ptext15 03E2  
                         __ptext16 03AF                           __ptext17 032F  
                         __ptext18 01EF                      ?_CONFIG_USART 0076  
                    __size_of_main 0033        __end_of_ACELEROMETRO_CONFIG 032F  
                         _variable 0026           __end_of_I2C_Master_Start 03EB  
         __end_of_I2C_Master_Write 03D0                         _INTCONbits 000B  
                  ??_EJEX_TO_CHARS 0041                           init_ram0 03A0  
                         intlevel1 0000                     ??_CONFIG_USART 003E  
                 ___lldiv@dividend 0042                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 0266            __end_of_I2C_Master_Read 0300  
          __end_of_I2C_Master_Wait 03BC            __end_of_I2C_Master_Stop 03E2  
                   _ACELEROMETRO_R 0165                     _ACELEROMETRO_W 0266  
                       _OPTION_REG 0081                   ___lldiv@quotient 0047  
                I2C_Master_Write@d 003E                        _SSPCON2bits 0091  
                  ASCII@aconvertir 0040  
