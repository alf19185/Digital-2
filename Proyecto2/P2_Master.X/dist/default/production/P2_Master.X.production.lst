

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 14:17:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.31
    38                           ; Generated 13/10/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	idataBANK0
   386  0485                     __pidataBANK0:
   387                           
   388                           ;initializer for _DZ1
   389  0485  3437               	retlw	55
   390                           
   391                           ;initializer for _DZ0
   392  0486  3436               	retlw	54
   393                           
   394                           ;initializer for _DY1
   395  0487  3435               	retlw	53
   396                           
   397                           ;initializer for _DY0
   398  0488  3434               	retlw	52
   399                           
   400                           ;initializer for _DX1
   401  0489  3433               	retlw	51
   402                           
   403                           ;initializer for _DX0
   404  048A  3432               	retlw	50
   405                           
   406                           ;initializer for _D_FRMT
   407  048B  3431               	retlw	49
   408                           
   409                           ;initializer for _P_CTL
   410  048C  342D               	retlw	45
   411                           
   412                           ;initializer for _READ
   413  048D  34A7               	retlw	167
   414                           
   415                           ;initializer for _WRITE
   416  048E  34A6               	retlw	166
   417                           
   418                           	psect	strings
   419  0434                     __pstrings:
   420  0434                     stringtab:
   421  0434                     __stringtab:
   422  0434                     stringcode:	
   423                           ;	String table - string pointers are 1 byte each
   424                           
   425  0434                     stringdir:
   426  0434  3004               	movlw	high stringdir
   427  0435  008A               	movwf	10
   428  0436  0804               	movf	4,w
   429  0437  0A84               	incf	4,f
   430  0438  0782               	addwf	2,f
   431  0439                     __stringbase:
   432  0439  3400               	retlw	0
   433  043A                     __end_of__stringtab:
   434  043A                     _dpowers:
   435  043A  3401               	retlw	1
   436  043B  3400               	retlw	0
   437  043C  340A               	retlw	10
   438  043D  3400               	retlw	0
   439  043E  3464               	retlw	100
   440  043F  3400               	retlw	0
   441  0440  34E8               	retlw	232
   442  0441  3403               	retlw	3
   443  0442  3410               	retlw	16
   444  0443  3427               	retlw	39
   445  0444                     __end_of_dpowers:
   446  0018                     _RCSTAbits	set	24
   447  0013                     _SSPBUF	set	19
   448  0014                     _SSPCON	set	20
   449  0009                     _PORTE	set	9
   450  0008                     _PORTD	set	8
   451  0007                     _PORTC	set	7
   452  0006                     _PORTB	set	6
   453  0005                     _PORTA	set	5
   454  0005                     _PORTAbits	set	5
   455  001A                     _RCREG	set	26
   456  000C                     _PIR1bits	set	12
   457  000B                     _INTCONbits	set	11
   458  0019                     _TXREG	set	25
   459  0063                     _SSPIF	set	99
   460  005E                     _PEIE	set	94
   461  005F                     _GIE	set	95
   462  0064                     _TXIF	set	100
   463  009A                     _SPBRGH	set	154
   464  0099                     _SPBRG	set	153
   465  0098                     _TXSTAbits	set	152
   466  0091                     _SSPCON2bits	set	145
   467  0087                     _TRISCbits	set	135
   468  0094                     _SSPSTAT	set	148
   469  0093                     _SSPADD	set	147
   470  0091                     _SSPCON2	set	145
   471  008C                     _PIE1bits	set	140
   472  0089                     _TRISE	set	137
   473  0088                     _TRISD	set	136
   474  0087                     _TRISC	set	135
   475  0086                     _TRISB	set	134
   476  0085                     _TRISA	set	133
   477  008F                     _OSCCONbits	set	143
   478  0463                     _SSPIE	set	1123
   479  043C                     _TRISC4	set	1084
   480  043B                     _TRISC3	set	1083
   481  048A                     _PEN	set	1162
   482  0489                     _RSEN	set	1161
   483  0488                     _SEN	set	1160
   484  0187                     _BAUDCTLbits	set	391
   485  0189                     _ANSELH	set	393
   486  0188                     _ANSEL	set	392
   487  0444                     STR_1:
   488  0444  3425               	retlw	37	;'%'
   489  0445  3464               	retlw	100	;'d'
   490  0446  342C               	retlw	44	;','
   491  0447  3420               	retlw	32	;' '
   492  0448  3425               	retlw	37	;'%'
   493  0449  3464               	retlw	100	;'d'
   494  044A  342C               	retlw	44	;','
   495  044B  3420               	retlw	32	;' '
   496  044C  3425               	retlw	37	;'%'
   497  044D  3464               	retlw	100	;'d'
   498  044E  340D               	retlw	13
   499  044F  340A               	retlw	10
   500  0450  3400               	retlw	0
   501                           
   502                           	psect	cinit
   503  000F                     start_initialization:	
   504                           ; #config settings
   505                           
   506  000F                     __initialization:
   507                           
   508                           ; Initialize objects allocated to BANK0
   509  000F  1383               	bcf	3,7	;select IRP bank0
   510  0010  3054               	movlw	low (__pdataBANK0+10)
   511  0011  00FD               	movwf	btemp+-1
   512  0012  3004               	movlw	high __pidataBANK0
   513  0013  00FE               	movwf	btemp
   514  0014  3085               	movlw	low __pidataBANK0
   515  0015  00FF               	movwf	btemp+1
   516  0016  304A               	movlw	low __pdataBANK0
   517  0017  0084               	movwf	4
   518  0018  120A  118A  2469  120A  118A  	fcall	init_ram0
   519                           
   520                           ; Clear objects allocated to BANK0
   521  001D  01BC               	clrf	__pbssBANK0& (0+127)
   522  001E  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   523  001F  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   524  0020  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   525  0021  01C0               	clrf	(__pbssBANK0+4)& (0+127)
   526  0022  01C1               	clrf	(__pbssBANK0+5)& (0+127)
   527  0023  01C2               	clrf	(__pbssBANK0+6)& (0+127)
   528  0024  01C3               	clrf	(__pbssBANK0+7)& (0+127)
   529  0025  01C4               	clrf	(__pbssBANK0+8)& (0+127)
   530  0026  01C5               	clrf	(__pbssBANK0+9)& (0+127)
   531  0027  01C6               	clrf	(__pbssBANK0+10)& (0+127)
   532  0028  01C7               	clrf	(__pbssBANK0+11)& (0+127)
   533  0029  01C8               	clrf	(__pbssBANK0+12)& (0+127)
   534  002A  01C9               	clrf	(__pbssBANK0+13)& (0+127)
   535                           
   536                           ; Clear objects allocated to COMMON
   537  002B  01F8               	clrf	__pbssCOMMON& (0+127)
   538  002C  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   539  002D  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   540  002E                     end_of_initialization:	
   541                           ;End of C runtime variable initialization code
   542                           
   543  002E                     __end_of__initialization:
   544  002E  0183               	clrf	3
   545  002F  120A  118A  2A9E   	ljmp	_main	;jump to C main() function
   546                           
   547                           	psect	bssCOMMON
   548  0078                     __pbssCOMMON:
   549  0078                     _c:
   550  0078                     	ds	1
   551  0079                     _BANDERA_T:
   552  0079                     	ds	1
   553  007A                     _LECTURA:
   554  007A                     	ds	1
   555                           
   556                           	psect	bssBANK0
   557  003C                     __pbssBANK0:
   558  003C                     _EJEZ:
   559  003C                     	ds	2
   560  003E                     _EJEY:
   561  003E                     	ds	2
   562  0040                     _EJEX:
   563  0040                     	ds	2
   564  0042                     _LED2:
   565  0042                     	ds	1
   566  0043                     _LED1:
   567  0043                     	ds	1
   568  0044                     _ZH:
   569  0044                     	ds	1
   570  0045                     _ZL:
   571  0045                     	ds	1
   572  0046                     _YH:
   573  0046                     	ds	1
   574  0047                     _YL:
   575  0047                     	ds	1
   576  0048                     _XH:
   577  0048                     	ds	1
   578  0049                     _XL:
   579  0049                     	ds	1
   580                           
   581                           	psect	dataBANK0
   582  004A                     __pdataBANK0:
   583  004A                     _DZ1:
   584  004A                     	ds	1
   585  004B                     _DZ0:
   586  004B                     	ds	1
   587  004C                     _DY1:
   588  004C                     	ds	1
   589  004D                     _DY0:
   590  004D                     	ds	1
   591  004E                     _DX1:
   592  004E                     	ds	1
   593  004F                     _DX0:
   594  004F                     	ds	1
   595  0050                     _D_FRMT:
   596  0050                     	ds	1
   597  0051                     _P_CTL:
   598  0051                     	ds	1
   599  0052                     _READ:
   600  0052                     	ds	1
   601  0053                     _WRITE:
   602  0053                     	ds	1
   603                           
   604                           	psect	inittext
   605  0465                     init_fetch0:	
   606                           ;	Called with low address in FSR and high address in W
   607                           
   608  0465  087E               	movf	btemp,w
   609  0466  008A               	movwf	10
   610  0467  087F               	movf	btemp+1,w
   611  0468  0082               	movwf	2
   612  0469                     init_ram0:	
   613                           ;Called with:
   614                           ;	high address of idata address in btemp 
   615                           ;	low address of idata address in btemp+1 
   616                           ;	low address of data in FSR
   617                           ;	high address + 1 of data in btemp-1
   618                           
   619  0469  120A  118A  2465  120A  118A  	fcall	init_fetch0
   620  046E  0080               	movwf	0
   621  046F  0A84               	incf	4,f
   622  0470  0804               	movf	4,w
   623  0471  067D               	xorwf	btemp+-1,w
   624  0472  1903               	btfsc	3,2
   625  0473  3400               	retlw	0
   626  0474  0AFF               	incf	btemp+1,f
   627  0475  1903               	btfsc	3,2
   628  0476  0AFE               	incf	btemp,f
   629  0477  2C69               	goto	init_ram0
   630                           
   631                           	psect	cstackCOMMON
   632  0070                     __pcstackCOMMON:
   633  0070                     ?_SETUP:
   634  0070                     ?_ACELEROMETRO_CONFIG:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_LEER_VALORES:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_CONFIG_USART:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_I2C_Master_Start:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_I2C_Master_RepeatedStart:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_I2C_Master_Stop:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_putch:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_isr:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_isr:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_main:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_I2C_Master_Wait:	
   665                           ; 1 bytes @ 0x0
   666                           
   667                           
   668                           ; 1 bytes @ 0x0
   669  0070                     	ds	3
   670  0073                     ??_SETUP:
   671  0073                     ??_CONFIG_USART:	
   672                           ; 1 bytes @ 0x3
   673                           
   674  0073                     ??_I2C_Master_Start:	
   675                           ; 1 bytes @ 0x3
   676                           
   677  0073                     ?_I2C_Master_Write:	
   678                           ; 1 bytes @ 0x3
   679                           
   680  0073                     ??_I2C_Master_RepeatedStart:	
   681                           ; 1 bytes @ 0x3
   682                           
   683  0073                     ??_I2C_Master_Stop:	
   684                           ; 1 bytes @ 0x3
   685                           
   686  0073                     ??_putch:	
   687                           ; 1 bytes @ 0x3
   688                           
   689  0073                     ??_I2C_Master_Wait:	
   690                           ; 1 bytes @ 0x3
   691                           
   692  0073                     ??___lldiv:	
   693                           ; 1 bytes @ 0x3
   694                           
   695  0073                     ?_I2C_Master_Read:	
   696                           ; 1 bytes @ 0x3
   697                           
   698  0073                     ?___lwdiv:	
   699                           ; 2 bytes @ 0x3
   700                           
   701  0073                     putch@data:	
   702                           ; 2 bytes @ 0x3
   703                           
   704  0073                     I2C_Master_Write@d:	
   705                           ; 1 bytes @ 0x3
   706                           
   707  0073                     I2C_Master_Read@a:	
   708                           ; 2 bytes @ 0x3
   709                           
   710  0073                     ___lwdiv@divisor:	
   711                           ; 2 bytes @ 0x3
   712                           
   713                           
   714                           ; 2 bytes @ 0x3
   715  0073                     	ds	1
   716  0074                     ??_I2C_Master_Init:
   717                           
   718                           ; 1 bytes @ 0x4
   719  0074                     	ds	1
   720  0075                     ?_ACELEROMETRO_W:
   721  0075                     ??_I2C_Master_Write:	
   722                           ; 1 bytes @ 0x5
   723                           
   724  0075                     ??_I2C_Master_Read:	
   725                           ; 1 bytes @ 0x5
   726                           
   727  0075                     ACELEROMETRO_W@data:	
   728                           ; 1 bytes @ 0x5
   729                           
   730  0075                     ___lwdiv@dividend:	
   731                           ; 1 bytes @ 0x5
   732                           
   733                           
   734                           ; 2 bytes @ 0x5
   735  0075                     	ds	1
   736  0076                     ??_ACELEROMETRO_W:
   737                           
   738                           ; 1 bytes @ 0x6
   739  0076                     	ds	1
   740  0077                     ??___lwdiv:
   741                           
   742                           ; 1 bytes @ 0x7
   743  0077                     	ds	1
   744                           
   745                           	psect	cstackBANK0
   746  0020                     __pcstackBANK0:
   747  0020                     ?___lldiv:
   748  0020                     ACELEROMETRO_W@num:	
   749                           ; 4 bytes @ 0x0
   750                           
   751  0020                     ___lwdiv@counter:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0020                     I2C_Master_Read@temp:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0020                     ___lldiv@divisor:	
   758                           ; 2 bytes @ 0x0
   759                           
   760                           
   761                           ; 4 bytes @ 0x0
   762  0020                     	ds	1
   763  0021                     ??_ACELEROMETRO_CONFIG:
   764  0021                     ___lwdiv@quotient:	
   765                           ; 1 bytes @ 0x1
   766                           
   767                           
   768                           ; 2 bytes @ 0x1
   769  0021                     	ds	1
   770  0022                     ?_ACELEROMETRO_R:
   771                           
   772                           ; 2 bytes @ 0x2
   773  0022                     	ds	1
   774  0023                     ?___lwmod:
   775  0023                     ___lwmod@divisor:	
   776                           ; 2 bytes @ 0x3
   777                           
   778                           
   779                           ; 2 bytes @ 0x3
   780  0023                     	ds	1
   781  0024                     ??_ACELEROMETRO_R:
   782  0024                     ___lldiv@dividend:	
   783                           ; 1 bytes @ 0x4
   784                           
   785                           
   786                           ; 4 bytes @ 0x4
   787  0024                     	ds	1
   788  0025                     ___lwmod@dividend:
   789                           
   790                           ; 2 bytes @ 0x5
   791  0025                     	ds	1
   792  0026                     ACELEROMETRO_R@num:
   793                           
   794                           ; 1 bytes @ 0x6
   795  0026                     	ds	1
   796  0027                     ??___lwmod:
   797  0027                     ACELEROMETRO_R@LECTURA:	
   798                           ; 1 bytes @ 0x7
   799                           
   800                           
   801                           ; 2 bytes @ 0x7
   802  0027                     	ds	1
   803  0028                     ___lwmod@counter:
   804  0028                     ___lldiv@quotient:	
   805                           ; 1 bytes @ 0x8
   806                           
   807                           
   808                           ; 4 bytes @ 0x8
   809  0028                     	ds	1
   810  0029                     ??_LEER_VALORES:
   811  0029                     ?_printf:	
   812                           ; 1 bytes @ 0x9
   813                           
   814                           
   815                           ; 2 bytes @ 0x9
   816  0029                     	ds	2
   817  002B                     LEER_VALORES@tempx:
   818                           
   819                           ; 2 bytes @ 0xB
   820  002B                     	ds	1
   821  002C                     ___lldiv@counter:
   822                           
   823                           ; 1 bytes @ 0xC
   824  002C                     	ds	1
   825  002D                     ?_I2C_Master_Init:
   826  002D                     LEER_VALORES@tempy:	
   827                           ; 1 bytes @ 0xD
   828                           
   829  002D                     I2C_Master_Init@c:	
   830                           ; 2 bytes @ 0xD
   831                           
   832                           
   833                           ; 4 bytes @ 0xD
   834  002D                     	ds	2
   835  002F                     ??_printf:
   836  002F                     LEER_VALORES@tempz:	
   837                           ; 1 bytes @ 0xF
   838                           
   839                           
   840                           ; 2 bytes @ 0xF
   841  002F                     	ds	3
   842  0032                     printf@ap:
   843                           
   844                           ; 1 bytes @ 0x12
   845  0032                     	ds	1
   846  0033                     printf@flag:
   847                           
   848                           ; 1 bytes @ 0x13
   849  0033                     	ds	1
   850  0034                     printf@f:
   851                           
   852                           ; 1 bytes @ 0x14
   853  0034                     	ds	1
   854  0035                     printf@prec:
   855                           
   856                           ; 1 bytes @ 0x15
   857  0035                     	ds	1
   858  0036                     printf@val:
   859                           
   860                           ; 2 bytes @ 0x16
   861  0036                     	ds	2
   862  0038                     printf@c:
   863                           
   864                           ; 1 bytes @ 0x18
   865  0038                     	ds	1
   866  0039                     ??_main:
   867                           
   868                           ; 1 bytes @ 0x19
   869  0039                     	ds	3
   870                           
   871                           	psect	maintext
   872  029E                     __pmaintext:	
   873 ;;
   874 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   875 ;;
   876 ;; *************** function _main *****************
   877 ;; Defined at:
   878 ;;		line 125 in file "Principal_Master.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : B00/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0
   894 ;;      Temps:          0       3       0       0       0
   895 ;;      Totals:         0       3       0       0       0
   896 ;;Total ram usage:        3 bytes
   897 ;; Hardware stack levels required when called:    5
   898 ;; This function calls:
   899 ;;		_ACELEROMETRO_CONFIG
   900 ;;		_I2C_Master_Init
   901 ;;		_LEER_VALORES
   902 ;;		_SETUP
   903 ;;		_printf
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _main
   911  029E                     _main:
   912  029E                     l1691:	
   913                           ;incstack = 0
   914                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   915                           
   916                           
   917                           ;Principal_Master.c: 126:     SETUP();
   918  029E  120A  118A  240F  120A  118A  	fcall	_SETUP
   919                           
   920                           ;Principal_Master.c: 127:     I2C_Master_Init(100000);
   921  02A3  3000               	movlw	0
   922  02A4  1283               	bcf	3,5	;RP0=0, select bank0
   923  02A5  1303               	bcf	3,6	;RP1=0, select bank0
   924  02A6  00B0               	movwf	I2C_Master_Init@c+3
   925  02A7  3001               	movlw	1
   926  02A8  00AF               	movwf	I2C_Master_Init@c+2
   927  02A9  3086               	movlw	134
   928  02AA  00AE               	movwf	I2C_Master_Init@c+1
   929  02AB  30A0               	movlw	160
   930  02AC  00AD               	movwf	I2C_Master_Init@c
   931  02AD  120A  118A  231E  120A  118A  	fcall	_I2C_Master_Init
   932                           
   933                           ;Principal_Master.c: 128:     ACELEROMETRO_CONFIG();
   934  02B2  120A  118A  23B9  120A  118A  	fcall	_ACELEROMETRO_CONFIG
   935  02B7                     l1693:
   936                           
   937                           ;Principal_Master.c: 133:     LEER_VALORES();
   938  02B7  120A  118A  210F  120A  118A  	fcall	_LEER_VALORES
   939  02BC                     l1695:
   940                           
   941                           ;Principal_Master.c: 134:     printf("%d, %d, %d\r\n", EJEX, EJEY, EJEZ);
   942  02BC  1283               	bcf	3,5	;RP0=0, select bank0
   943  02BD  1303               	bcf	3,6	;RP1=0, select bank0
   944  02BE  0841               	movf	_EJEX+1,w
   945  02BF  00AA               	movwf	?_printf+1
   946  02C0  0840               	movf	_EJEX,w
   947  02C1  00A9               	movwf	?_printf
   948  02C2  083F               	movf	_EJEY+1,w
   949  02C3  00AC               	movwf	?_printf+3
   950  02C4  083E               	movf	_EJEY,w
   951  02C5  00AB               	movwf	?_printf+2
   952  02C6  083D               	movf	_EJEZ+1,w
   953  02C7  00AE               	movwf	?_printf+5
   954  02C8  083C               	movf	_EJEZ,w
   955  02C9  00AD               	movwf	?_printf+4
   956  02CA  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   957  02CB  120A  118A  2032  120A  118A  	fcall	_printf
   958  02D0                     l1697:
   959                           
   960                           ;Principal_Master.c: 135:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   961  02D0  300B               	movlw	11
   962  02D1  1283               	bcf	3,5	;RP0=0, select bank0
   963  02D2  1303               	bcf	3,6	;RP1=0, select bank0
   964  02D3  00BB               	movwf	??_main+2
   965  02D4  3026               	movlw	38
   966  02D5  00BA               	movwf	??_main+1
   967  02D6  305D               	movlw	93
   968  02D7  00B9               	movwf	??_main
   969  02D8                     u947:
   970  02D8  0BB9               	decfsz	??_main,f
   971  02D9  2AD8               	goto	u947
   972  02DA  0BBA               	decfsz	??_main+1,f
   973  02DB  2AD8               	goto	u947
   974  02DC  0BBB               	decfsz	??_main+2,f
   975  02DD  2AD8               	goto	u947
   976  02DE  2AB7               	goto	l1693
   977  02DF  120A  118A  280C   	ljmp	start
   978  02E2                     __end_of_main:
   979                           
   980                           	psect	text1
   981  0032                     __ptext1:	
   982 ;; *************** function _printf *****************
   983 ;; Defined at:
   984 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  f               1    wreg     PTR const unsigned char 
   987 ;;		 -> STR_1(13), 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  f               1   20[BANK0 ] PTR const unsigned char 
   990 ;;		 -> STR_1(13), 
   991 ;;  tmpval          4    0        struct .
   992 ;;  val             2   22[BANK0 ] unsigned int 
   993 ;;  cp              2    0        PTR const unsigned char 
   994 ;;  len             2    0        unsigned int 
   995 ;;  c               1   24[BANK0 ] unsigned char 
   996 ;;  prec            1   21[BANK0 ] char 
   997 ;;  flag            1   19[BANK0 ] unsigned char 
   998 ;;  ap              1   18[BANK0 ] PTR void [1]
   999 ;;		 -> ?_printf(2), 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  2    9[BANK0 ] int 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       6       0       0       0
  1010 ;;      Locals:         0       7       0       0       0
  1011 ;;      Temps:          0       3       0       0       0
  1012 ;;      Totals:         0      16       0       0       0
  1013 ;;Total ram usage:       16 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    2
  1016 ;; This function calls:
  1017 ;;		___lwdiv
  1018 ;;		___lwmod
  1019 ;;		_putch
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _printf
  1027  0032                     _printf:
  1028                           
  1029                           ;incstack = 0
  1030                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1031                           ;printf@f stored from wreg
  1032  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0034  00B4               	movwf	printf@f
  1035  0035                     l1639:
  1036                           
  1037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1038  0035  3029               	movlw	(low (?_printf| 0))& (0+255)
  1039  0036  00AF               	movwf	??_printf
  1040  0037  082F               	movf	??_printf,w
  1041  0038  00B2               	movwf	printf@ap
  1042                           
  1043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1044  0039  28FA               	goto	l1685
  1045  003A                     l1641:
  1046                           
  1047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1048  003A  3025               	movlw	37
  1049  003B  0638               	xorwf	printf@c,w
  1050  003C  1903               	btfsc	3,2
  1051  003D  283F               	goto	u871
  1052  003E  2840               	goto	u870
  1053  003F                     u871:
  1054  003F  2847               	goto	l1645
  1055  0040                     u870:
  1056  0040                     l1643:
  1057                           
  1058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1059  0040  0838               	movf	printf@c,w
  1060  0041  120A  118A  248F  120A  118A  	fcall	_putch
  1061                           
  1062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1063  0046  28FA               	goto	l1685
  1064  0047                     l1645:
  1065                           
  1066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1067  0047  01B3               	clrf	printf@flag
  1068  0048                     l1649:	
  1069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1070                           
  1071  0048  3001               	movlw	1
  1072  0049  07B4               	addwf	printf@f,f
  1073  004A  30FF               	movlw	-1
  1074  004B  0734               	addwf	printf@f,w
  1075  004C  0084               	movwf	4
  1076  004D  120A  118A  2434  120A  118A  	fcall	stringdir
  1077  0052  00B8               	movwf	printf@c
  1078  0053  00AF               	movwf	??_printf
  1079  0054  01B0               	clrf	??_printf+1
  1080                           
  1081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1082                           ; Switch size 1, requested type "simple"
  1083                           ; Number of cases is 1, Range of values is 0 to 0
  1084                           ; switch strategies available:
  1085                           ; Name         Instructions Cycles
  1086                           ; simple_byte            4     3 (average)
  1087                           ; direct_byte           11     8 (fixed)
  1088                           ; jumptable            260     6 (fixed)
  1089                           ;	Chosen strategy is simple_byte
  1090  0055  0830               	movf	??_printf+1,w
  1091  0056  3A00               	xorlw	0	; case 0
  1092  0057  1903               	skipnz
  1093  0058  285A               	goto	l1719
  1094  0059  28FA               	goto	l1685
  1095  005A                     l1719:
  1096                           
  1097                           ; Switch size 1, requested type "simple"
  1098                           ; Number of cases is 3, Range of values is 0 to 105
  1099                           ; switch strategies available:
  1100                           ; Name         Instructions Cycles
  1101                           ; simple_byte           10     6 (average)
  1102                           ; jumptable            260     6 (fixed)
  1103                           ;	Chosen strategy is simple_byte
  1104  005A  082F               	movf	??_printf,w
  1105  005B  3A00               	xorlw	0	; case 0
  1106  005C  1903               	skipnz
  1107  005D  290E               	goto	l361
  1108  005E  3A64               	xorlw	100	; case 100
  1109  005F  1903               	skipnz
  1110  0060  2865               	goto	l1651
  1111  0061  3A0D               	xorlw	13	; case 105
  1112  0062  1903               	skipnz
  1113  0063  2865               	goto	l1651
  1114  0064  28FA               	goto	l1685
  1115  0065                     l1651:
  1116                           
  1117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1118  0065  0832               	movf	printf@ap,w
  1119  0066  0084               	movwf	4
  1120  0067  1383               	bcf	3,7	;select IRP bank0
  1121  0068  0800               	movf	0,w
  1122  0069  00B6               	movwf	printf@val
  1123  006A  0A84               	incf	4,f
  1124  006B  0800               	movf	0,w
  1125  006C  00B7               	movwf	printf@val+1
  1126  006D                     l1653:
  1127  006D  3002               	movlw	2
  1128  006E  00AF               	movwf	??_printf
  1129  006F  082F               	movf	??_printf,w
  1130  0070  07B2               	addwf	printf@ap,f
  1131  0071                     l1655:
  1132                           
  1133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1134  0071  1FB7               	btfss	printf@val+1,7
  1135  0072  2874               	goto	u881
  1136  0073  2875               	goto	u880
  1137  0074                     u881:
  1138  0074  287E               	goto	l1661
  1139  0075                     u880:
  1140  0075                     l1657:
  1141                           
  1142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1143  0075  3003               	movlw	3
  1144  0076  00AF               	movwf	??_printf
  1145  0077  082F               	movf	??_printf,w
  1146  0078  04B3               	iorwf	printf@flag,f
  1147  0079                     l1659:
  1148                           
  1149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1150  0079  09B6               	comf	printf@val,f
  1151  007A  09B7               	comf	printf@val+1,f
  1152  007B  0AB6               	incf	printf@val,f
  1153  007C  1903               	skipnz
  1154  007D  0AB7               	incf	printf@val+1,f
  1155  007E                     l1661:
  1156                           
  1157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1158  007E  01B8               	clrf	printf@c
  1159  007F  0AB8               	incf	printf@c,f
  1160  0080                     l1667:
  1161                           
  1162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1163  0080  0838               	movf	printf@c,w
  1164  0081  00AF               	movwf	??_printf
  1165  0082  072F               	addwf	??_printf,w
  1166  0083  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1167  0084  0084               	movwf	4
  1168  0085  120A  118A  2434  120A  118A  	fcall	stringdir
  1169  008A  00B0               	movwf	??_printf+1
  1170  008B  120A  118A  2434  120A  118A  	fcall	stringdir
  1171  0090  00B1               	movwf	??_printf+2
  1172  0091  0831               	movf	??_printf+2,w
  1173  0092  0237               	subwf	printf@val+1,w
  1174  0093  1D03               	skipz
  1175  0094  2897               	goto	u895
  1176  0095  0830               	movf	??_printf+1,w
  1177  0096  0236               	subwf	printf@val,w
  1178  0097                     u895:
  1179  0097  1803               	skipnc
  1180  0098  289A               	goto	u891
  1181  0099  289B               	goto	u890
  1182  009A                     u891:
  1183  009A  289C               	goto	l1671
  1184  009B                     u890:
  1185  009B  28A6               	goto	l1673
  1186  009C                     l1671:
  1187  009C  3001               	movlw	1
  1188  009D  00AF               	movwf	??_printf
  1189  009E  082F               	movf	??_printf,w
  1190  009F  07B8               	addwf	printf@c,f
  1191  00A0  3005               	movlw	5
  1192  00A1  0638               	xorwf	printf@c,w
  1193  00A2  1D03               	btfss	3,2
  1194  00A3  28A5               	goto	u901
  1195  00A4  28A6               	goto	u900
  1196  00A5                     u901:
  1197  00A5  2880               	goto	l1667
  1198  00A6                     u900:
  1199  00A6                     l1673:
  1200                           
  1201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1202  00A6  0833               	movf	printf@flag,w
  1203  00A7  3903               	andlw	3
  1204  00A8  1903               	btfsc	3,2
  1205  00A9  28AB               	goto	u911
  1206  00AA  28AC               	goto	u910
  1207  00AB                     u911:
  1208  00AB  28B2               	goto	l1677
  1209  00AC                     u910:
  1210  00AC                     l1675:
  1211                           
  1212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  1213  00AC  302D               	movlw	45
  1214  00AD  120A  118A  248F  120A  118A  	fcall	_putch
  1215  00B2                     l1677:
  1216                           
  1217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1218  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1219  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1220  00B4  0838               	movf	printf@c,w
  1221  00B5  00AF               	movwf	??_printf
  1222  00B6  082F               	movf	??_printf,w
  1223  00B7  00B5               	movwf	printf@prec
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1226  00B8  28EF               	goto	l1683
  1227  00B9                     l1679:
  1228                           
  1229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1230  00B9  300A               	movlw	10
  1231  00BA  00A3               	movwf	___lwmod@divisor
  1232  00BB  3000               	movlw	0
  1233  00BC  00A4               	movwf	___lwmod@divisor+1
  1234  00BD  0835               	movf	printf@prec,w
  1235  00BE  00AF               	movwf	??_printf
  1236  00BF  072F               	addwf	??_printf,w
  1237  00C0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1238  00C1  0084               	movwf	4
  1239  00C2  120A  118A  2434  120A  118A  	fcall	stringdir
  1240  00C7  00F3               	movwf	___lwdiv@divisor
  1241  00C8  120A  118A  2434  120A  118A  	fcall	stringdir
  1242  00CD  00F4               	movwf	___lwdiv@divisor+1
  1243  00CE  0837               	movf	printf@val+1,w
  1244  00CF  00F6               	movwf	___lwdiv@dividend+1
  1245  00D0  0836               	movf	printf@val,w
  1246  00D1  00F5               	movwf	___lwdiv@dividend
  1247  00D2  120A  118A  2258  120A  118A  	fcall	___lwdiv
  1248  00D7  0874               	movf	?___lwdiv+1,w
  1249  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1250  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1251  00DA  00A6               	movwf	___lwmod@dividend+1
  1252  00DB  0873               	movf	?___lwdiv,w
  1253  00DC  00A5               	movwf	___lwmod@dividend
  1254  00DD  120A  118A  22E2  120A  118A  	fcall	___lwmod
  1255  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1256  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1257  00E4  0823               	movf	?___lwmod,w
  1258  00E5  3E30               	addlw	48
  1259  00E6  00B0               	movwf	??_printf+1
  1260  00E7  0830               	movf	??_printf+1,w
  1261  00E8  00B8               	movwf	printf@c
  1262  00E9                     l1681:
  1263                           
  1264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    (putch(c) );
  1265  00E9  0838               	movf	printf@c,w
  1266  00EA  120A  118A  248F  120A  118A  	fcall	_putch
  1267  00EF                     l1683:
  1268                           
  1269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1270  00EF  30FF               	movlw	255
  1271  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1272  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1273  00F2  00AF               	movwf	??_printf
  1274  00F3  082F               	movf	??_printf,w
  1275  00F4  07B5               	addwf	printf@prec,f
  1276  00F5  0A35               	incf	printf@prec,w
  1277  00F6  1D03               	btfss	3,2
  1278  00F7  28F9               	goto	u921
  1279  00F8  28FA               	goto	u920
  1280  00F9                     u921:
  1281  00F9  28B9               	goto	l1679
  1282  00FA                     u920:
  1283  00FA                     l1685:
  1284                           
  1285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1286  00FA  3001               	movlw	1
  1287  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1288  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1289  00FD  07B4               	addwf	printf@f,f
  1290  00FE  30FF               	movlw	-1
  1291  00FF  0734               	addwf	printf@f,w
  1292  0100  0084               	movwf	4
  1293  0101  120A  118A  2434  120A  118A  	fcall	stringdir
  1294  0106  00AF               	movwf	??_printf
  1295  0107  082F               	movf	??_printf,w
  1296  0108  00B8               	movwf	printf@c
  1297  0109  0838               	movf	printf@c,w
  1298  010A  1D03               	btfss	3,2
  1299  010B  290D               	goto	u931
  1300  010C  290E               	goto	u930
  1301  010D                     u931:
  1302  010D  283A               	goto	l1641
  1303  010E                     u930:
  1304  010E                     l361:
  1305  010E  0008               	return
  1306  010F                     __end_of_printf:
  1307                           
  1308                           	psect	text2
  1309  048F                     __ptext2:	
  1310 ;; *************** function _putch *****************
  1311 ;; Defined at:
  1312 ;;		line 83 in file "Principal_Master.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  data            1    wreg     unsigned char 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  data            1    3[COMMON] unsigned char 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1326 ;;      Params:         0       0       0       0       0
  1327 ;;      Locals:         1       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0
  1329 ;;      Totals:         1       0       0       0       0
  1330 ;;Total ram usage:        1 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_printf
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _putch
  1342  048F                     _putch:
  1343                           
  1344                           ;incstack = 0
  1345                           ; Regs used in _putch: [wreg]
  1346                           ;putch@data stored from wreg
  1347  048F  00F3               	movwf	putch@data
  1348  0490                     l1253:
  1349  0490                     l117:	
  1350                           ;Principal_Master.c: 85:     while (TXIF == 0) {}
  1351                           
  1352  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0492  1E0C               	btfss	12,4	;volatile
  1355  0493  2C95               	goto	u401
  1356  0494  2C96               	goto	u400
  1357  0495                     u401:
  1358  0495  2C90               	goto	l117
  1359  0496                     u400:
  1360  0496                     l1255:
  1361                           
  1362                           ;Principal_Master.c: 86:     TXREG = data;
  1363  0496  0873               	movf	putch@data,w
  1364  0497  0099               	movwf	25	;volatile
  1365  0498                     l120:
  1366  0498  0008               	return
  1367  0499                     __end_of_putch:
  1368                           
  1369                           	psect	text3
  1370  02E2                     __ptext3:	
  1371 ;; *************** function ___lwmod *****************
  1372 ;; Defined at:
  1373 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  divisor         2    3[BANK0 ] unsigned int 
  1376 ;;  dividend        2    5[BANK0 ] unsigned int 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  counter         1    8[BANK0 ] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2    3[BANK0 ] unsigned int 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         0       4       0       0       0
  1389 ;;      Locals:         0       1       0       0       0
  1390 ;;      Temps:          0       1       0       0       0
  1391 ;;      Totals:         0       6       0       0       0
  1392 ;;Total ram usage:        6 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_printf
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function ___lwmod
  1404  02E2                     ___lwmod:
  1405  02E2                     l1329:	
  1406                           ;incstack = 0
  1407                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1408                           
  1409  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1410  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1411  02E4  0823               	movf	___lwmod@divisor,w
  1412  02E5  0424               	iorwf	___lwmod@divisor+1,w
  1413  02E6  1903               	btfsc	3,2
  1414  02E7  2AE9               	goto	u551
  1415  02E8  2AEA               	goto	u550
  1416  02E9                     u551:
  1417  02E9  2B19               	goto	l1347
  1418  02EA                     u550:
  1419  02EA                     l1331:
  1420  02EA  01A8               	clrf	___lwmod@counter
  1421  02EB  0AA8               	incf	___lwmod@counter,f
  1422  02EC  2AF8               	goto	l1337
  1423  02ED                     l1333:
  1424  02ED  3001               	movlw	1
  1425  02EE                     u565:
  1426  02EE  1003               	clrc
  1427  02EF  0DA3               	rlf	___lwmod@divisor,f
  1428  02F0  0DA4               	rlf	___lwmod@divisor+1,f
  1429  02F1  3EFF               	addlw	-1
  1430  02F2  1D03               	skipz
  1431  02F3  2AEE               	goto	u565
  1432  02F4                     l1335:
  1433  02F4  3001               	movlw	1
  1434  02F5  00A7               	movwf	??___lwmod
  1435  02F6  0827               	movf	??___lwmod,w
  1436  02F7  07A8               	addwf	___lwmod@counter,f
  1437  02F8                     l1337:
  1438  02F8  1FA4               	btfss	___lwmod@divisor+1,7
  1439  02F9  2AFB               	goto	u571
  1440  02FA  2AFC               	goto	u570
  1441  02FB                     u571:
  1442  02FB  2AED               	goto	l1333
  1443  02FC                     u570:
  1444  02FC                     l1339:
  1445  02FC  0824               	movf	___lwmod@divisor+1,w
  1446  02FD  0226               	subwf	___lwmod@dividend+1,w
  1447  02FE  1D03               	skipz
  1448  02FF  2B02               	goto	u585
  1449  0300  0823               	movf	___lwmod@divisor,w
  1450  0301  0225               	subwf	___lwmod@dividend,w
  1451  0302                     u585:
  1452  0302  1C03               	skipc
  1453  0303  2B05               	goto	u581
  1454  0304  2B06               	goto	u580
  1455  0305                     u581:
  1456  0305  2B0C               	goto	l1343
  1457  0306                     u580:
  1458  0306                     l1341:
  1459  0306  0823               	movf	___lwmod@divisor,w
  1460  0307  02A5               	subwf	___lwmod@dividend,f
  1461  0308  0824               	movf	___lwmod@divisor+1,w
  1462  0309  1C03               	skipc
  1463  030A  03A6               	decf	___lwmod@dividend+1,f
  1464  030B  02A6               	subwf	___lwmod@dividend+1,f
  1465  030C                     l1343:
  1466  030C  3001               	movlw	1
  1467  030D                     u595:
  1468  030D  1003               	clrc
  1469  030E  0CA4               	rrf	___lwmod@divisor+1,f
  1470  030F  0CA3               	rrf	___lwmod@divisor,f
  1471  0310  3EFF               	addlw	-1
  1472  0311  1D03               	skipz
  1473  0312  2B0D               	goto	u595
  1474  0313                     l1345:
  1475  0313  3001               	movlw	1
  1476  0314  02A8               	subwf	___lwmod@counter,f
  1477  0315  1D03               	btfss	3,2
  1478  0316  2B18               	goto	u601
  1479  0317  2B19               	goto	u600
  1480  0318                     u601:
  1481  0318  2AFC               	goto	l1339
  1482  0319                     u600:
  1483  0319                     l1347:
  1484  0319  0826               	movf	___lwmod@dividend+1,w
  1485  031A  00A4               	movwf	?___lwmod+1
  1486  031B  0825               	movf	___lwmod@dividend,w
  1487  031C  00A3               	movwf	?___lwmod
  1488  031D                     l647:
  1489  031D  0008               	return
  1490  031E                     __end_of___lwmod:
  1491                           
  1492                           	psect	text4
  1493  0258                     __ptext4:	
  1494 ;; *************** function ___lwdiv *****************
  1495 ;; Defined at:
  1496 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  divisor         2    3[COMMON] unsigned int 
  1499 ;;  dividend        2    5[COMMON] unsigned int 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  quotient        2    1[BANK0 ] unsigned int 
  1502 ;;  counter         1    0[BANK0 ] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  2    3[COMMON] unsigned int 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         4       0       0       0       0
  1513 ;;      Locals:         0       3       0       0       0
  1514 ;;      Temps:          1       0       0       0       0
  1515 ;;      Totals:         5       3       0       0       0
  1516 ;;Total ram usage:        8 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_printf
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function ___lwdiv
  1528  0258                     ___lwdiv:
  1529  0258                     l1563:	
  1530                           ;incstack = 0
  1531                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1532                           
  1533  0258  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0259  1303               	bcf	3,6	;RP1=0, select bank0
  1535  025A  01A1               	clrf	___lwdiv@quotient
  1536  025B  01A2               	clrf	___lwdiv@quotient+1
  1537  025C                     l1565:
  1538  025C  0873               	movf	___lwdiv@divisor,w
  1539  025D  0474               	iorwf	___lwdiv@divisor+1,w
  1540  025E  1903               	btfsc	3,2
  1541  025F  2A61               	goto	u791
  1542  0260  2A62               	goto	u790
  1543  0261                     u791:
  1544  0261  2A99               	goto	l1585
  1545  0262                     u790:
  1546  0262                     l1567:
  1547  0262  01A0               	clrf	___lwdiv@counter
  1548  0263  0AA0               	incf	___lwdiv@counter,f
  1549  0264  2A70               	goto	l1573
  1550  0265                     l1569:
  1551  0265  3001               	movlw	1
  1552  0266                     u805:
  1553  0266  1003               	clrc
  1554  0267  0DF3               	rlf	___lwdiv@divisor,f
  1555  0268  0DF4               	rlf	___lwdiv@divisor+1,f
  1556  0269  3EFF               	addlw	-1
  1557  026A  1D03               	skipz
  1558  026B  2A66               	goto	u805
  1559  026C                     l1571:
  1560  026C  3001               	movlw	1
  1561  026D  00F7               	movwf	??___lwdiv
  1562  026E  0877               	movf	??___lwdiv,w
  1563  026F  07A0               	addwf	___lwdiv@counter,f
  1564  0270                     l1573:
  1565  0270  1FF4               	btfss	___lwdiv@divisor+1,7
  1566  0271  2A73               	goto	u811
  1567  0272  2A74               	goto	u810
  1568  0273                     u811:
  1569  0273  2A65               	goto	l1569
  1570  0274                     u810:
  1571  0274                     l1575:
  1572  0274  3001               	movlw	1
  1573  0275                     u825:
  1574  0275  1003               	clrc
  1575  0276  0DA1               	rlf	___lwdiv@quotient,f
  1576  0277  0DA2               	rlf	___lwdiv@quotient+1,f
  1577  0278  3EFF               	addlw	-1
  1578  0279  1D03               	skipz
  1579  027A  2A75               	goto	u825
  1580  027B  0874               	movf	___lwdiv@divisor+1,w
  1581  027C  0276               	subwf	___lwdiv@dividend+1,w
  1582  027D  1D03               	skipz
  1583  027E  2A81               	goto	u835
  1584  027F  0873               	movf	___lwdiv@divisor,w
  1585  0280  0275               	subwf	___lwdiv@dividend,w
  1586  0281                     u835:
  1587  0281  1C03               	skipc
  1588  0282  2A84               	goto	u831
  1589  0283  2A85               	goto	u830
  1590  0284                     u831:
  1591  0284  2A8C               	goto	l1581
  1592  0285                     u830:
  1593  0285                     l1577:
  1594  0285  0873               	movf	___lwdiv@divisor,w
  1595  0286  02F5               	subwf	___lwdiv@dividend,f
  1596  0287  0874               	movf	___lwdiv@divisor+1,w
  1597  0288  1C03               	skipc
  1598  0289  03F6               	decf	___lwdiv@dividend+1,f
  1599  028A  02F6               	subwf	___lwdiv@dividend+1,f
  1600  028B                     l1579:
  1601  028B  1421               	bsf	___lwdiv@quotient,0
  1602  028C                     l1581:
  1603  028C  3001               	movlw	1
  1604  028D                     u845:
  1605  028D  1003               	clrc
  1606  028E  0CF4               	rrf	___lwdiv@divisor+1,f
  1607  028F  0CF3               	rrf	___lwdiv@divisor,f
  1608  0290  3EFF               	addlw	-1
  1609  0291  1D03               	skipz
  1610  0292  2A8D               	goto	u845
  1611  0293                     l1583:
  1612  0293  3001               	movlw	1
  1613  0294  02A0               	subwf	___lwdiv@counter,f
  1614  0295  1D03               	btfss	3,2
  1615  0296  2A98               	goto	u851
  1616  0297  2A99               	goto	u850
  1617  0298                     u851:
  1618  0298  2A74               	goto	l1575
  1619  0299                     u850:
  1620  0299                     l1585:
  1621  0299  0822               	movf	___lwdiv@quotient+1,w
  1622  029A  00F4               	movwf	?___lwdiv+1
  1623  029B  0821               	movf	___lwdiv@quotient,w
  1624  029C  00F3               	movwf	?___lwdiv
  1625  029D                     l637:
  1626  029D  0008               	return
  1627  029E                     __end_of___lwdiv:
  1628                           
  1629                           	psect	text5
  1630  040F                     __ptext5:	
  1631 ;; *************** function _SETUP *****************
  1632 ;; Defined at:
  1633 ;;		line 145 in file "Principal_Master.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0, pclath, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0
  1650 ;;      Totals:         0       0       0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    2
  1654 ;; This function calls:
  1655 ;;		_CONFIG_USART
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _SETUP
  1663  040F                     _SETUP:
  1664  040F                     l1351:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _SETUP: [wreg+status,2+status,0+pclath+cstack]
  1667                           
  1668                           
  1669                           ;Principal_Master.c: 147:     OSCCONbits.IRCF2 = 1;
  1670  040F  1683               	bsf	3,5	;RP0=1, select bank1
  1671  0410  1303               	bcf	3,6	;RP1=0, select bank1
  1672  0411  170F               	bsf	15,6	;volatile
  1673                           
  1674                           ;Principal_Master.c: 148:     OSCCONbits.IRCF1 = 1;
  1675  0412  168F               	bsf	15,5	;volatile
  1676                           
  1677                           ;Principal_Master.c: 149:     OSCCONbits.IRCF0 = 0;
  1678  0413  120F               	bcf	15,4	;volatile
  1679  0414                     l1353:
  1680                           
  1681                           ;Principal_Master.c: 151:     PORTA = 0;
  1682  0414  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0415  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0416  0185               	clrf	5	;volatile
  1685                           
  1686                           ;Principal_Master.c: 152:     PORTB = 0;
  1687  0417  0186               	clrf	6	;volatile
  1688                           
  1689                           ;Principal_Master.c: 153:     PORTC = 0;
  1690  0418  0187               	clrf	7	;volatile
  1691                           
  1692                           ;Principal_Master.c: 154:     PORTD = 0;
  1693  0419  0188               	clrf	8	;volatile
  1694                           
  1695                           ;Principal_Master.c: 155:     PORTE = 0;
  1696  041A  0189               	clrf	9	;volatile
  1697                           
  1698                           ;Principal_Master.c: 157:     TRISA = 0;
  1699  041B  1683               	bsf	3,5	;RP0=1, select bank1
  1700  041C  1303               	bcf	3,6	;RP1=0, select bank1
  1701  041D  0185               	clrf	5	;volatile
  1702                           
  1703                           ;Principal_Master.c: 158:     TRISB = 0;
  1704  041E  0186               	clrf	6	;volatile
  1705                           
  1706                           ;Principal_Master.c: 159:     TRISC = 0;
  1707  041F  0187               	clrf	7	;volatile
  1708                           
  1709                           ;Principal_Master.c: 160:     TRISD = 0;
  1710  0420  0188               	clrf	8	;volatile
  1711                           
  1712                           ;Principal_Master.c: 161:     TRISE = 0;
  1713  0421  0189               	clrf	9	;volatile
  1714                           
  1715                           ;Principal_Master.c: 163:     ANSEL = 0;
  1716  0422  1683               	bsf	3,5	;RP0=1, select bank3
  1717  0423  1703               	bsf	3,6	;RP1=1, select bank3
  1718  0424  0188               	clrf	8	;volatile
  1719                           
  1720                           ;Principal_Master.c: 164:     ANSELH = 0;
  1721  0425  0189               	clrf	9	;volatile
  1722  0426                     l1355:
  1723                           
  1724                           ;Principal_Master.c: 166:     CONFIG_USART();
  1725  0426  120A  118A  2451  120A  118A  	fcall	_CONFIG_USART
  1726  042B                     l1357:
  1727                           
  1728                           ;Principal_Master.c: 168:     PIE1bits.RCIE = 1;
  1729  042B  1683               	bsf	3,5	;RP0=1, select bank1
  1730  042C  1303               	bcf	3,6	;RP1=0, select bank1
  1731  042D  168C               	bsf	12,5	;volatile
  1732  042E                     l1359:
  1733                           
  1734                           ;Principal_Master.c: 169:     PIR1bits.RCIF =0;
  1735  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1736  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0430  128C               	bcf	12,5	;volatile
  1738  0431                     l1361:
  1739                           
  1740                           ;Principal_Master.c: 170:     INTCONbits.PEIE = 1;
  1741  0431  170B               	bsf	11,6	;volatile
  1742  0432                     l1363:
  1743                           
  1744                           ;Principal_Master.c: 171:     INTCONbits.GIE = 1;
  1745  0432  178B               	bsf	11,7	;volatile
  1746  0433                     l142:
  1747  0433  0008               	return
  1748  0434                     __end_of_SETUP:
  1749                           
  1750                           	psect	text6
  1751  0451                     __ptext6:	
  1752 ;; *************** function _CONFIG_USART *****************
  1753 ;; Defined at:
  1754 ;;		line 7 in file "USART.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0
  1771 ;;      Totals:         0       0       0       0       0
  1772 ;;Total ram usage:        0 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    1
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_SETUP
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function _CONFIG_USART
  1784  0451                     _CONFIG_USART:
  1785  0451                     l1257:	
  1786                           ;incstack = 0
  1787                           ; Regs used in _CONFIG_USART: [wreg+status,2]
  1788                           
  1789                           
  1790                           ;USART.c: 24:     TXSTAbits.TX9 = 0;
  1791  0451  1683               	bsf	3,5	;RP0=1, select bank1
  1792  0452  1303               	bcf	3,6	;RP1=0, select bank1
  1793  0453  1318               	bcf	24,6	;volatile
  1794                           
  1795                           ;USART.c: 25:     TXSTAbits.SYNC = 0;
  1796  0454  1218               	bcf	24,4	;volatile
  1797                           
  1798                           ;USART.c: 26:     TXSTAbits.BRGH = 1;
  1799  0455  1518               	bsf	24,2	;volatile
  1800                           
  1801                           ;USART.c: 27:     BAUDCTLbits.BRG16 = 0;
  1802  0456  1683               	bsf	3,5	;RP0=1, select bank3
  1803  0457  1703               	bsf	3,6	;RP1=1, select bank3
  1804  0458  1187               	bcf	7,3	;volatile
  1805  0459                     l1259:
  1806                           
  1807                           ;USART.c: 28:     SPBRG = 25;
  1808  0459  3019               	movlw	25
  1809  045A  1683               	bsf	3,5	;RP0=1, select bank1
  1810  045B  1303               	bcf	3,6	;RP1=0, select bank1
  1811  045C  0099               	movwf	25	;volatile
  1812  045D                     l1261:
  1813                           
  1814                           ;USART.c: 29:     SPBRGH = 0;
  1815  045D  019A               	clrf	26	;volatile
  1816  045E                     l1263:
  1817                           
  1818                           ;USART.c: 30:     TXSTAbits.TXEN = 1;
  1819  045E  1698               	bsf	24,5	;volatile
  1820  045F                     l1265:
  1821                           
  1822                           ;USART.c: 31:     RCSTAbits.SPEN = 1;
  1823  045F  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0460  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0461  1798               	bsf	24,7	;volatile
  1826  0462                     l1267:
  1827                           
  1828                           ;USART.c: 32:     RCSTAbits.RX9 = 0;
  1829  0462  1318               	bcf	24,6	;volatile
  1830  0463                     l1269:
  1831                           
  1832                           ;USART.c: 33:     RCSTAbits.CREN = 1;
  1833  0463  1618               	bsf	24,4	;volatile
  1834  0464                     l228:
  1835  0464  0008               	return
  1836  0465                     __end_of_CONFIG_USART:
  1837                           
  1838                           	psect	text7
  1839  010F                     __ptext7:	
  1840 ;; *************** function _LEER_VALORES *****************
  1841 ;; Defined at:
  1842 ;;		line 209 in file "Principal_Master.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  tempz           2   15[BANK0 ] int 
  1847 ;;  tempy           2   13[BANK0 ] int 
  1848 ;;  tempx           2   11[BANK0 ] int 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1858 ;;      Params:         0       0       0       0       0
  1859 ;;      Locals:         0       6       0       0       0
  1860 ;;      Temps:          0       2       0       0       0
  1861 ;;      Totals:         0       8       0       0       0
  1862 ;;Total ram usage:        8 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    4
  1865 ;; This function calls:
  1866 ;;		_ACELEROMETRO_R
  1867 ;; This function is called by:
  1868 ;;		_main
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           
  1873                           ;psect for function _LEER_VALORES
  1874  010F                     _LEER_VALORES:
  1875  010F                     l1607:	
  1876                           ;incstack = 0
  1877                           ; Regs used in _LEER_VALORES: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1878                           
  1879                           
  1880                           ;Principal_Master.c: 212:     int tempy =0;
  1881  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0111  01AD               	clrf	LEER_VALORES@tempy
  1884  0112  01AE               	clrf	LEER_VALORES@tempy+1
  1885                           
  1886                           ;Principal_Master.c: 213:     int tempz =0;
  1887  0113  01AF               	clrf	LEER_VALORES@tempz
  1888  0114  01B0               	clrf	LEER_VALORES@tempz+1
  1889  0115                     l1609:
  1890                           
  1891                           ;Principal_Master.c: 215:     XL = ACELEROMETRO_R(DX0);
  1892  0115  3032               	movlw	50
  1893  0116  120A  118A  2211  120A  118A  	fcall	_ACELEROMETRO_R
  1894  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1895  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1896  011D  0822               	movf	?_ACELEROMETRO_R,w
  1897  011E  00A9               	movwf	??_LEER_VALORES
  1898  011F  0829               	movf	??_LEER_VALORES,w
  1899  0120  00C9               	movwf	_XL
  1900  0121                     l1611:
  1901                           
  1902                           ;Principal_Master.c: 216:     XH = ACELEROMETRO_R(DX1);
  1903  0121  3033               	movlw	51
  1904  0122  120A  118A  2211  120A  118A  	fcall	_ACELEROMETRO_R
  1905  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0129  0822               	movf	?_ACELEROMETRO_R,w
  1908  012A  00A9               	movwf	??_LEER_VALORES
  1909  012B  0829               	movf	??_LEER_VALORES,w
  1910  012C  00C8               	movwf	_XH
  1911  012D                     l1613:
  1912                           
  1913                           ;Principal_Master.c: 217:     tempx= XH;
  1914  012D  0848               	movf	_XH,w
  1915  012E  00A9               	movwf	??_LEER_VALORES
  1916  012F  01AA               	clrf	??_LEER_VALORES+1
  1917  0130  0829               	movf	??_LEER_VALORES,w
  1918  0131  00AB               	movwf	LEER_VALORES@tempx
  1919  0132  082A               	movf	??_LEER_VALORES+1,w
  1920  0133  00AC               	movwf	LEER_VALORES@tempx+1
  1921  0134                     l1615:
  1922                           
  1923                           ;Principal_Master.c: 218:     tempx = tempx<<8;
  1924  0134  082C               	movf	LEER_VALORES@tempx+1,w
  1925  0135  00AA               	movwf	??_LEER_VALORES+1
  1926  0136  082B               	movf	LEER_VALORES@tempx,w
  1927  0137  00A9               	movwf	??_LEER_VALORES
  1928  0138  0829               	movf	??_LEER_VALORES,w
  1929  0139  00AA               	movwf	??_LEER_VALORES+1
  1930  013A  01A9               	clrf	??_LEER_VALORES
  1931  013B  0829               	movf	??_LEER_VALORES,w
  1932  013C  00AB               	movwf	LEER_VALORES@tempx
  1933  013D  082A               	movf	??_LEER_VALORES+1,w
  1934  013E  00AC               	movwf	LEER_VALORES@tempx+1
  1935  013F                     l1617:
  1936                           
  1937                           ;Principal_Master.c: 219:     EJEX = tempx + XL;
  1938  013F  0849               	movf	_XL,w
  1939  0140  072B               	addwf	LEER_VALORES@tempx,w
  1940  0141  00C0               	movwf	_EJEX
  1941  0142  082C               	movf	LEER_VALORES@tempx+1,w
  1942  0143  1803               	skipnc
  1943  0144  0A2C               	incf	LEER_VALORES@tempx+1,w
  1944  0145  00C1               	movwf	_EJEX+1
  1945  0146                     l1619:
  1946                           
  1947                           ;Principal_Master.c: 221:     YL = ACELEROMETRO_R(DY0);
  1948  0146  3034               	movlw	52
  1949  0147  120A  118A  2211  120A  118A  	fcall	_ACELEROMETRO_R
  1950  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1951  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1952  014E  0822               	movf	?_ACELEROMETRO_R,w
  1953  014F  00A9               	movwf	??_LEER_VALORES
  1954  0150  0829               	movf	??_LEER_VALORES,w
  1955  0151  00C7               	movwf	_YL
  1956  0152                     l1621:
  1957                           
  1958                           ;Principal_Master.c: 222:     YH = ACELEROMETRO_R(DY1);
  1959  0152  3035               	movlw	53
  1960  0153  120A  118A  2211  120A  118A  	fcall	_ACELEROMETRO_R
  1961  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1963  015A  0822               	movf	?_ACELEROMETRO_R,w
  1964  015B  00A9               	movwf	??_LEER_VALORES
  1965  015C  0829               	movf	??_LEER_VALORES,w
  1966  015D  00C6               	movwf	_YH
  1967  015E                     l1623:
  1968                           
  1969                           ;Principal_Master.c: 223:     tempy= YH;
  1970  015E  0846               	movf	_YH,w
  1971  015F  00A9               	movwf	??_LEER_VALORES
  1972  0160  01AA               	clrf	??_LEER_VALORES+1
  1973  0161  0829               	movf	??_LEER_VALORES,w
  1974  0162  00AD               	movwf	LEER_VALORES@tempy
  1975  0163  082A               	movf	??_LEER_VALORES+1,w
  1976  0164  00AE               	movwf	LEER_VALORES@tempy+1
  1977  0165                     l1625:
  1978                           
  1979                           ;Principal_Master.c: 224:     tempy = tempy<<8;
  1980  0165  082E               	movf	LEER_VALORES@tempy+1,w
  1981  0166  00AA               	movwf	??_LEER_VALORES+1
  1982  0167  082D               	movf	LEER_VALORES@tempy,w
  1983  0168  00A9               	movwf	??_LEER_VALORES
  1984  0169  0829               	movf	??_LEER_VALORES,w
  1985  016A  00AA               	movwf	??_LEER_VALORES+1
  1986  016B  01A9               	clrf	??_LEER_VALORES
  1987  016C  0829               	movf	??_LEER_VALORES,w
  1988  016D  00AD               	movwf	LEER_VALORES@tempy
  1989  016E  082A               	movf	??_LEER_VALORES+1,w
  1990  016F  00AE               	movwf	LEER_VALORES@tempy+1
  1991  0170                     l1627:
  1992                           
  1993                           ;Principal_Master.c: 225:     EJEY = tempy + YL;
  1994  0170  0847               	movf	_YL,w
  1995  0171  072D               	addwf	LEER_VALORES@tempy,w
  1996  0172  00BE               	movwf	_EJEY
  1997  0173  082E               	movf	LEER_VALORES@tempy+1,w
  1998  0174  1803               	skipnc
  1999  0175  0A2E               	incf	LEER_VALORES@tempy+1,w
  2000  0176  00BF               	movwf	_EJEY+1
  2001  0177                     l1629:
  2002                           
  2003                           ;Principal_Master.c: 227:     ZL = ACELEROMETRO_R(DZ0);
  2004  0177  3036               	movlw	54
  2005  0178  120A  118A  2211  120A  118A  	fcall	_ACELEROMETRO_R
  2006  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2007  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2008  017F  0822               	movf	?_ACELEROMETRO_R,w
  2009  0180  00A9               	movwf	??_LEER_VALORES
  2010  0181  0829               	movf	??_LEER_VALORES,w
  2011  0182  00C5               	movwf	_ZL
  2012  0183                     l1631:
  2013                           
  2014                           ;Principal_Master.c: 228:     ZH = ACELEROMETRO_R(DZ1);
  2015  0183  3037               	movlw	55
  2016  0184  120A  118A  2211  120A  118A  	fcall	_ACELEROMETRO_R
  2017  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2018  018A  1303               	bcf	3,6	;RP1=0, select bank0
  2019  018B  0822               	movf	?_ACELEROMETRO_R,w
  2020  018C  00A9               	movwf	??_LEER_VALORES
  2021  018D  0829               	movf	??_LEER_VALORES,w
  2022  018E  00C4               	movwf	_ZH
  2023  018F                     l1633:
  2024                           
  2025                           ;Principal_Master.c: 229:     tempz= ZH;
  2026  018F  0844               	movf	_ZH,w
  2027  0190  00A9               	movwf	??_LEER_VALORES
  2028  0191  01AA               	clrf	??_LEER_VALORES+1
  2029  0192  0829               	movf	??_LEER_VALORES,w
  2030  0193  00AF               	movwf	LEER_VALORES@tempz
  2031  0194  082A               	movf	??_LEER_VALORES+1,w
  2032  0195  00B0               	movwf	LEER_VALORES@tempz+1
  2033  0196                     l1635:
  2034                           
  2035                           ;Principal_Master.c: 230:     tempz = tempz<<8;
  2036  0196  0830               	movf	LEER_VALORES@tempz+1,w
  2037  0197  00AA               	movwf	??_LEER_VALORES+1
  2038  0198  082F               	movf	LEER_VALORES@tempz,w
  2039  0199  00A9               	movwf	??_LEER_VALORES
  2040  019A  0829               	movf	??_LEER_VALORES,w
  2041  019B  00AA               	movwf	??_LEER_VALORES+1
  2042  019C  01A9               	clrf	??_LEER_VALORES
  2043  019D  0829               	movf	??_LEER_VALORES,w
  2044  019E  00AF               	movwf	LEER_VALORES@tempz
  2045  019F  082A               	movf	??_LEER_VALORES+1,w
  2046  01A0  00B0               	movwf	LEER_VALORES@tempz+1
  2047  01A1                     l1637:
  2048                           
  2049                           ;Principal_Master.c: 231:     EJEZ = tempz + ZL;
  2050  01A1  0845               	movf	_ZL,w
  2051  01A2  072F               	addwf	LEER_VALORES@tempz,w
  2052  01A3  00BC               	movwf	_EJEZ
  2053  01A4  0830               	movf	LEER_VALORES@tempz+1,w
  2054  01A5  1803               	skipnc
  2055  01A6  0A30               	incf	LEER_VALORES@tempz+1,w
  2056  01A7  00BD               	movwf	_EJEZ+1
  2057  01A8                     l154:
  2058  01A8  0008               	return
  2059  01A9                     __end_of_LEER_VALORES:
  2060                           
  2061                           	psect	text8
  2062  0211                     __ptext8:	
  2063 ;; *************** function _ACELEROMETRO_R *****************
  2064 ;; Defined at:
  2065 ;;		line 184 in file "Principal_Master.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  num             1    wreg     unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  num             1    6[BANK0 ] unsigned char 
  2070 ;;  LECTURA         2    7[BANK0 ] unsigned short 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  2    2[BANK0 ] unsigned short 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         0       2       0       0       0
  2081 ;;      Locals:         0       3       0       0       0
  2082 ;;      Temps:          0       2       0       0       0
  2083 ;;      Totals:         0       7       0       0       0
  2084 ;;Total ram usage:        7 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    3
  2087 ;; This function calls:
  2088 ;;		_I2C_Master_Read
  2089 ;;		_I2C_Master_RepeatedStart
  2090 ;;		_I2C_Master_Start
  2091 ;;		_I2C_Master_Stop
  2092 ;;		_I2C_Master_Write
  2093 ;; This function is called by:
  2094 ;;		_LEER_VALORES
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _ACELEROMETRO_R
  2100  0211                     _ACELEROMETRO_R:
  2101                           
  2102                           ;incstack = 0
  2103                           ; Regs used in _ACELEROMETRO_R: [wreg+status,2+status,0+pclath+cstack]
  2104                           ;ACELEROMETRO_R@num stored from wreg
  2105  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2106  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2107  0213  00A6               	movwf	ACELEROMETRO_R@num
  2108  0214                     l1533:
  2109                           
  2110                           ;Principal_Master.c: 186:     unsigned short LECTURA;;Principal_Master.c: 188:     I2C_M
      +                          aster_Start();
  2111  0214  120A  118A  24B5  120A  118A  	fcall	_I2C_Master_Start
  2112                           
  2113                           ;Principal_Master.c: 189:     I2C_Master_Write(WRITE);
  2114  0219  30A6               	movlw	166
  2115  021A  00F3               	movwf	I2C_Master_Write@d
  2116  021B  3000               	movlw	0
  2117  021C  00F4               	movwf	I2C_Master_Write@d+1
  2118  021D  120A  118A  2499  120A  118A  	fcall	_I2C_Master_Write
  2119                           
  2120                           ;Principal_Master.c: 190:     I2C_Master_Write(num);
  2121  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0224  0826               	movf	ACELEROMETRO_R@num,w
  2124  0225  00A4               	movwf	??_ACELEROMETRO_R
  2125  0226  01A5               	clrf	??_ACELEROMETRO_R+1
  2126  0227  0824               	movf	??_ACELEROMETRO_R,w
  2127  0228  00F3               	movwf	I2C_Master_Write@d
  2128  0229  0825               	movf	??_ACELEROMETRO_R+1,w
  2129  022A  00F4               	movwf	I2C_Master_Write@d+1
  2130  022B  120A  118A  2499  120A  118A  	fcall	_I2C_Master_Write
  2131                           
  2132                           ;Principal_Master.c: 191:     I2C_Master_RepeatedStart();
  2133  0230  120A  118A  24A3  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2134                           
  2135                           ;Principal_Master.c: 192:     I2C_Master_Write(READ);
  2136  0235  30A7               	movlw	167
  2137  0236  00F3               	movwf	I2C_Master_Write@d
  2138  0237  3000               	movlw	0
  2139  0238  00F4               	movwf	I2C_Master_Write@d+1
  2140  0239  120A  118A  2499  120A  118A  	fcall	_I2C_Master_Write
  2141                           
  2142                           ;Principal_Master.c: 193:     LECTURA = I2C_Master_Read(0);
  2143  023E  3000               	movlw	0
  2144  023F  00F3               	movwf	I2C_Master_Read@a
  2145  0240  00F4               	movwf	I2C_Master_Read@a+1
  2146  0241  120A  118A  2389  120A  118A  	fcall	_I2C_Master_Read
  2147  0246  0874               	movf	?_I2C_Master_Read+1,w
  2148  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0249  00A8               	movwf	ACELEROMETRO_R@LECTURA+1
  2151  024A  0873               	movf	?_I2C_Master_Read,w
  2152  024B  00A7               	movwf	ACELEROMETRO_R@LECTURA
  2153                           
  2154                           ;Principal_Master.c: 194:     I2C_Master_Stop();
  2155  024C  120A  118A  24AC  120A  118A  	fcall	_I2C_Master_Stop
  2156  0251                     l1535:
  2157                           
  2158                           ;Principal_Master.c: 196:     return LECTURA;
  2159  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0253  0828               	movf	ACELEROMETRO_R@LECTURA+1,w
  2162  0254  00A3               	movwf	?_ACELEROMETRO_R+1
  2163  0255  0827               	movf	ACELEROMETRO_R@LECTURA,w
  2164  0256  00A2               	movwf	?_ACELEROMETRO_R
  2165  0257                     l148:
  2166  0257  0008               	return
  2167  0258                     __end_of_ACELEROMETRO_R:
  2168                           
  2169                           	psect	text9
  2170  04A3                     __ptext9:	
  2171 ;; *************** function _I2C_Master_RepeatedStart *****************
  2172 ;; Defined at:
  2173 ;;		line 28 in file "I2C.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2187 ;;      Params:         0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    2
  2194 ;; This function calls:
  2195 ;;		_I2C_Master_Wait
  2196 ;; This function is called by:
  2197 ;;		_ACELEROMETRO_R
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function _I2C_Master_RepeatedStart
  2203  04A3                     _I2C_Master_RepeatedStart:
  2204  04A3                     l1507:	
  2205                           ;incstack = 0
  2206                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2207                           
  2208                           
  2209                           ;I2C.c: 30:   I2C_Master_Wait();
  2210  04A3  120A  118A  2478  120A  118A  	fcall	_I2C_Master_Wait
  2211  04A8                     l1509:
  2212                           
  2213                           ;I2C.c: 31:   RSEN = 1;
  2214  04A8  1683               	bsf	3,5	;RP0=1, select bank1
  2215  04A9  1303               	bcf	3,6	;RP1=0, select bank1
  2216  04AA  1491               	bsf	17,1	;volatile
  2217  04AB                     l201:
  2218  04AB  0008               	return
  2219  04AC                     __end_of_I2C_Master_RepeatedStart:
  2220                           
  2221                           	psect	text10
  2222  0389                     __ptext10:	
  2223 ;; *************** function _I2C_Master_Read *****************
  2224 ;; Defined at:
  2225 ;;		line 46 in file "I2C.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  a               2    3[COMMON] unsigned short 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  temp            2    0[BANK0 ] unsigned short 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  2    3[COMMON] unsigned short 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0, pclath, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2239 ;;      Params:         2       0       0       0       0
  2240 ;;      Locals:         0       2       0       0       0
  2241 ;;      Temps:          2       0       0       0       0
  2242 ;;      Totals:         4       2       0       0       0
  2243 ;;Total ram usage:        6 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    2
  2246 ;; This function calls:
  2247 ;;		_I2C_Master_Wait
  2248 ;; This function is called by:
  2249 ;;		_ACELEROMETRO_R
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           
  2254                           ;psect for function _I2C_Master_Read
  2255  0389                     _I2C_Master_Read:
  2256  0389                     l1511:	
  2257                           ;incstack = 0
  2258                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2259                           
  2260                           
  2261                           ;I2C.c: 46: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 47: {;I2C.c: 48:   u
      +                          nsigned short temp;;I2C.c: 49:     I2C_Master_Wait();
  2262  0389  120A  118A  2478  120A  118A  	fcall	_I2C_Master_Wait
  2263  038E                     l1513:
  2264                           
  2265                           ;I2C.c: 50:     SSPCON2bits.RCEN = 1;
  2266  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2267  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2268  0390  1591               	bsf	17,3	;volatile
  2269                           
  2270                           ;I2C.c: 51:     I2C_Master_Wait();
  2271  0391  120A  118A  2478  120A  118A  	fcall	_I2C_Master_Wait
  2272  0396                     l1515:
  2273                           
  2274                           ;I2C.c: 52:     temp = SSPBUF;
  2275  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0398  0813               	movf	19,w	;volatile
  2278  0399  00F5               	movwf	??_I2C_Master_Read
  2279  039A  01F6               	clrf	??_I2C_Master_Read+1
  2280  039B  0875               	movf	??_I2C_Master_Read,w
  2281  039C  00A0               	movwf	I2C_Master_Read@temp
  2282  039D  0876               	movf	??_I2C_Master_Read+1,w
  2283  039E  00A1               	movwf	I2C_Master_Read@temp+1
  2284  039F                     l1517:
  2285                           
  2286                           ;I2C.c: 53:     I2C_Master_Wait();
  2287  039F  120A  118A  2478  120A  118A  	fcall	_I2C_Master_Wait
  2288  03A4                     l1519:
  2289                           
  2290                           ;I2C.c: 55:     if(a == 1){
  2291  03A4  0373               	decf	I2C_Master_Read@a,w
  2292  03A5  0474               	iorwf	I2C_Master_Read@a+1,w
  2293  03A6  1D03               	btfss	3,2
  2294  03A7  2BA9               	goto	u711
  2295  03A8  2BAA               	goto	u710
  2296  03A9                     u711:
  2297  03A9  2BAE               	goto	l210
  2298  03AA                     u710:
  2299  03AA                     l1521:
  2300                           
  2301                           ;I2C.c: 56:         SSPCON2bits.ACKDT = 0;
  2302  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2303  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  2304  03AC  1291               	bcf	17,5	;volatile
  2305                           
  2306                           ;I2C.c: 57:     }
  2307  03AD  2BB1               	goto	l211
  2308  03AE                     l210:	
  2309                           ;I2C.c: 58:     else {
  2310                           
  2311                           
  2312                           ;I2C.c: 59:         SSPCON2bits.ACKDT = 1;
  2313  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2314  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2315  03B0  1691               	bsf	17,5	;volatile
  2316  03B1                     l211:	
  2317                           ;I2C.c: 60:     }
  2318                           
  2319                           
  2320                           ;I2C.c: 62:     SSPCON2bits.ACKEN = 1;
  2321  03B1  1611               	bsf	17,4	;volatile
  2322  03B2                     l1523:
  2323                           
  2324                           ;I2C.c: 63:     return temp;
  2325  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2326  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2327  03B4  0821               	movf	I2C_Master_Read@temp+1,w
  2328  03B5  00F4               	movwf	?_I2C_Master_Read+1
  2329  03B6  0820               	movf	I2C_Master_Read@temp,w
  2330  03B7  00F3               	movwf	?_I2C_Master_Read
  2331  03B8                     l212:
  2332  03B8  0008               	return
  2333  03B9                     __end_of_I2C_Master_Read:
  2334                           
  2335                           	psect	text11
  2336  031E                     __ptext11:	
  2337 ;; *************** function _I2C_Master_Init *****************
  2338 ;; Defined at:
  2339 ;;		line 7 in file "I2C.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  c               4   13[BANK0 ] const unsigned long 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, status,2, status,0, pclath, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2353 ;;      Params:         0       4       0       0       0
  2354 ;;      Locals:         0       0       0       0       0
  2355 ;;      Temps:          4       0       0       0       0
  2356 ;;      Totals:         4       4       0       0       0
  2357 ;;Total ram usage:        8 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    2
  2360 ;; This function calls:
  2361 ;;		___lldiv
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _I2C_Master_Init
  2369  031E                     _I2C_Master_Init:
  2370  031E                     l1589:	
  2371                           ;incstack = 0
  2372                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2373                           
  2374                           
  2375                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 9:   SSPCON = 
      +                          0b00101000;
  2376  031E  3028               	movlw	40
  2377  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2378  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2379  0321  0094               	movwf	20	;volatile
  2380  0322                     l1591:
  2381                           
  2382                           ;I2C.c: 10:   SSPCON2 = 0;
  2383  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2384  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2385  0324  0191               	clrf	17	;volatile
  2386  0325                     l1593:
  2387                           
  2388                           ;I2C.c: 11:   SSPADD = (4000000/(4*c))-1;
  2389  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0327  082D               	movf	I2C_Master_Init@c,w
  2392  0328  00F4               	movwf	??_I2C_Master_Init
  2393  0329  082E               	movf	I2C_Master_Init@c+1,w
  2394  032A  00F5               	movwf	??_I2C_Master_Init+1
  2395  032B  082F               	movf	I2C_Master_Init@c+2,w
  2396  032C  00F6               	movwf	??_I2C_Master_Init+2
  2397  032D  0830               	movf	I2C_Master_Init@c+3,w
  2398  032E  00F7               	movwf	??_I2C_Master_Init+3
  2399  032F  3002               	movlw	2
  2400  0330                     u865:
  2401  0330  1003               	clrc
  2402  0331  0DF4               	rlf	??_I2C_Master_Init,f
  2403  0332  0DF5               	rlf	??_I2C_Master_Init+1,f
  2404  0333  0DF6               	rlf	??_I2C_Master_Init+2,f
  2405  0334  0DF7               	rlf	??_I2C_Master_Init+3,f
  2406  0335                     u860:
  2407  0335  3EFF               	addlw	-1
  2408  0336  1D03               	skipz
  2409  0337  2B30               	goto	u865
  2410  0338  0877               	movf	??_I2C_Master_Init+3,w
  2411  0339  00A3               	movwf	___lldiv@divisor+3
  2412  033A  0876               	movf	??_I2C_Master_Init+2,w
  2413  033B  00A2               	movwf	___lldiv@divisor+2
  2414  033C  0875               	movf	??_I2C_Master_Init+1,w
  2415  033D  00A1               	movwf	___lldiv@divisor+1
  2416  033E  0874               	movf	??_I2C_Master_Init,w
  2417  033F  00A0               	movwf	___lldiv@divisor
  2418  0340  3000               	movlw	0
  2419  0341  00A7               	movwf	___lldiv@dividend+3
  2420  0342  303D               	movlw	61
  2421  0343  00A6               	movwf	___lldiv@dividend+2
  2422  0344  3009               	movlw	9
  2423  0345  00A5               	movwf	___lldiv@dividend+1
  2424  0346  3000               	movlw	0
  2425  0347  00A4               	movwf	___lldiv@dividend
  2426  0348  120A  118A  21A9  120A  118A  	fcall	___lldiv
  2427  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2428  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2429  034F  0820               	movf	?___lldiv,w
  2430  0350  3EFF               	addlw	255
  2431  0351  1683               	bsf	3,5	;RP0=1, select bank1
  2432  0352  1303               	bcf	3,6	;RP1=0, select bank1
  2433  0353  0093               	movwf	19	;volatile
  2434  0354                     l1595:
  2435                           
  2436                           ;I2C.c: 12:   SSPSTAT = 0;
  2437  0354  0194               	clrf	20	;volatile
  2438  0355                     l1597:
  2439                           
  2440                           ;I2C.c: 13:   TRISCbits.TRISC3 = 1;
  2441  0355  1587               	bsf	7,3	;volatile
  2442  0356                     l1599:
  2443                           
  2444                           ;I2C.c: 14:   TRISCbits.TRISC4 = 1;
  2445  0356  1607               	bsf	7,4	;volatile
  2446  0357                     l189:
  2447  0357  0008               	return
  2448  0358                     __end_of_I2C_Master_Init:
  2449                           
  2450                           	psect	text12
  2451  01A9                     __ptext12:	
  2452 ;; *************** function ___lldiv *****************
  2453 ;; Defined at:
  2454 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  divisor         4    0[BANK0 ] unsigned long 
  2457 ;;  dividend        4    4[BANK0 ] unsigned long 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  quotient        4    8[BANK0 ] unsigned long 
  2460 ;;  counter         1   12[BANK0 ] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  4    0[BANK0 ] unsigned long 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2470 ;;      Params:         0       8       0       0       0
  2471 ;;      Locals:         0       5       0       0       0
  2472 ;;      Temps:          1       0       0       0       0
  2473 ;;      Totals:         1      13       0       0       0
  2474 ;;Total ram usage:       14 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_I2C_Master_Init
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function ___lldiv
  2486  01A9                     ___lldiv:
  2487  01A9                     l1539:	
  2488                           ;incstack = 0
  2489                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2490                           
  2491  01A9  3000               	movlw	0
  2492  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2493  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2494  01AC  00AB               	movwf	___lldiv@quotient+3
  2495  01AD  3000               	movlw	0
  2496  01AE  00AA               	movwf	___lldiv@quotient+2
  2497  01AF  3000               	movlw	0
  2498  01B0  00A9               	movwf	___lldiv@quotient+1
  2499  01B1  3000               	movlw	0
  2500  01B2  00A8               	movwf	___lldiv@quotient
  2501  01B3  0823               	movf	___lldiv@divisor+3,w
  2502  01B4  0422               	iorwf	___lldiv@divisor+2,w
  2503  01B5  0421               	iorwf	___lldiv@divisor+1,w
  2504  01B6  0420               	iorwf	___lldiv@divisor,w
  2505  01B7  1903               	skipnz
  2506  01B8  29BA               	goto	u721
  2507  01B9  29BB               	goto	u720
  2508  01BA                     u721:
  2509  01BA  2A08               	goto	l1559
  2510  01BB                     u720:
  2511  01BB                     l1541:
  2512  01BB  01AC               	clrf	___lldiv@counter
  2513  01BC  0AAC               	incf	___lldiv@counter,f
  2514  01BD  29CB               	goto	l1545
  2515  01BE                     l1543:
  2516  01BE  3001               	movlw	1
  2517  01BF  00F3               	movwf	??___lldiv
  2518  01C0                     u735:
  2519  01C0  1003               	clrc
  2520  01C1  0DA0               	rlf	___lldiv@divisor,f
  2521  01C2  0DA1               	rlf	___lldiv@divisor+1,f
  2522  01C3  0DA2               	rlf	___lldiv@divisor+2,f
  2523  01C4  0DA3               	rlf	___lldiv@divisor+3,f
  2524  01C5  0BF3               	decfsz	??___lldiv,f
  2525  01C6  29C0               	goto	u735
  2526  01C7  3001               	movlw	1
  2527  01C8  00F3               	movwf	??___lldiv
  2528  01C9  0873               	movf	??___lldiv,w
  2529  01CA  07AC               	addwf	___lldiv@counter,f
  2530  01CB                     l1545:
  2531  01CB  1FA3               	btfss	___lldiv@divisor+3,7
  2532  01CC  29CE               	goto	u741
  2533  01CD  29CF               	goto	u740
  2534  01CE                     u741:
  2535  01CE  29BE               	goto	l1543
  2536  01CF                     u740:
  2537  01CF                     l1547:
  2538  01CF  3001               	movlw	1
  2539  01D0  00F3               	movwf	??___lldiv
  2540  01D1                     u755:
  2541  01D1  1003               	clrc
  2542  01D2  0DA8               	rlf	___lldiv@quotient,f
  2543  01D3  0DA9               	rlf	___lldiv@quotient+1,f
  2544  01D4  0DAA               	rlf	___lldiv@quotient+2,f
  2545  01D5  0DAB               	rlf	___lldiv@quotient+3,f
  2546  01D6  0BF3               	decfsz	??___lldiv,f
  2547  01D7  29D1               	goto	u755
  2548  01D8                     l1549:
  2549  01D8  0823               	movf	___lldiv@divisor+3,w
  2550  01D9  0227               	subwf	___lldiv@dividend+3,w
  2551  01DA  1D03               	skipz
  2552  01DB  29E6               	goto	u765
  2553  01DC  0822               	movf	___lldiv@divisor+2,w
  2554  01DD  0226               	subwf	___lldiv@dividend+2,w
  2555  01DE  1D03               	skipz
  2556  01DF  29E6               	goto	u765
  2557  01E0  0821               	movf	___lldiv@divisor+1,w
  2558  01E1  0225               	subwf	___lldiv@dividend+1,w
  2559  01E2  1D03               	skipz
  2560  01E3  29E6               	goto	u765
  2561  01E4  0820               	movf	___lldiv@divisor,w
  2562  01E5  0224               	subwf	___lldiv@dividend,w
  2563  01E6                     u765:
  2564  01E6  1C03               	skipc
  2565  01E7  29E9               	goto	u761
  2566  01E8  29EA               	goto	u760
  2567  01E9                     u761:
  2568  01E9  29F9               	goto	l1555
  2569  01EA                     u760:
  2570  01EA                     l1551:
  2571  01EA  0820               	movf	___lldiv@divisor,w
  2572  01EB  02A4               	subwf	___lldiv@dividend,f
  2573  01EC  0821               	movf	___lldiv@divisor+1,w
  2574  01ED  1C03               	skipc
  2575  01EE  0F21               	incfsz	___lldiv@divisor+1,w
  2576  01EF  02A5               	subwf	___lldiv@dividend+1,f
  2577  01F0  0822               	movf	___lldiv@divisor+2,w
  2578  01F1  1C03               	skipc
  2579  01F2  0F22               	incfsz	___lldiv@divisor+2,w
  2580  01F3  02A6               	subwf	___lldiv@dividend+2,f
  2581  01F4  0823               	movf	___lldiv@divisor+3,w
  2582  01F5  1C03               	skipc
  2583  01F6  0F23               	incfsz	___lldiv@divisor+3,w
  2584  01F7  02A7               	subwf	___lldiv@dividend+3,f
  2585  01F8                     l1553:
  2586  01F8  1428               	bsf	___lldiv@quotient,0
  2587  01F9                     l1555:
  2588  01F9  3001               	movlw	1
  2589  01FA                     u775:
  2590  01FA  1003               	clrc
  2591  01FB  0CA3               	rrf	___lldiv@divisor+3,f
  2592  01FC  0CA2               	rrf	___lldiv@divisor+2,f
  2593  01FD  0CA1               	rrf	___lldiv@divisor+1,f
  2594  01FE  0CA0               	rrf	___lldiv@divisor,f
  2595  01FF  3EFF               	addlw	-1
  2596  0200  1D03               	skipz
  2597  0201  29FA               	goto	u775
  2598  0202                     l1557:
  2599  0202  3001               	movlw	1
  2600  0203  02AC               	subwf	___lldiv@counter,f
  2601  0204  1D03               	btfss	3,2
  2602  0205  2A07               	goto	u781
  2603  0206  2A08               	goto	u780
  2604  0207                     u781:
  2605  0207  29CF               	goto	l1547
  2606  0208                     u780:
  2607  0208                     l1559:
  2608  0208  082B               	movf	___lldiv@quotient+3,w
  2609  0209  00A3               	movwf	?___lldiv+3
  2610  020A  082A               	movf	___lldiv@quotient+2,w
  2611  020B  00A2               	movwf	?___lldiv+2
  2612  020C  0829               	movf	___lldiv@quotient+1,w
  2613  020D  00A1               	movwf	?___lldiv+1
  2614  020E  0828               	movf	___lldiv@quotient,w
  2615  020F  00A0               	movwf	?___lldiv
  2616  0210                     l401:
  2617  0210  0008               	return
  2618  0211                     __end_of___lldiv:
  2619                           
  2620                           	psect	text13
  2621  03B9                     __ptext13:	
  2622 ;; *************** function _ACELEROMETRO_CONFIG *****************
  2623 ;; Defined at:
  2624 ;;		line 175 in file "Principal_Master.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0, pclath, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2638 ;;      Params:         0       0       0       0       0
  2639 ;;      Locals:         0       0       0       0       0
  2640 ;;      Temps:          0       2       0       0       0
  2641 ;;      Totals:         0       2       0       0       0
  2642 ;;Total ram usage:        2 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    4
  2645 ;; This function calls:
  2646 ;;		_ACELEROMETRO_W
  2647 ;; This function is called by:
  2648 ;;		_main
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           
  2653                           ;psect for function _ACELEROMETRO_CONFIG
  2654  03B9                     _ACELEROMETRO_CONFIG:
  2655  03B9                     l1601:	
  2656                           ;incstack = 0
  2657                           ; Regs used in _ACELEROMETRO_CONFIG: [wreg+status,2+status,0+pclath+cstack]
  2658                           
  2659                           
  2660                           ;Principal_Master.c: 177:     ACELEROMETRO_W(D_FRMT, 0x0B);
  2661  03B9  300B               	movlw	11
  2662  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2663  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2664  03BC  00A1               	movwf	??_ACELEROMETRO_CONFIG
  2665  03BD  0821               	movf	??_ACELEROMETRO_CONFIG,w
  2666  03BE  00F5               	movwf	ACELEROMETRO_W@data
  2667  03BF  3031               	movlw	49
  2668  03C0  120A  118A  2358  120A  118A  	fcall	_ACELEROMETRO_W
  2669  03C5                     l1603:
  2670                           
  2671                           ;Principal_Master.c: 178:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2672  03C5  3007               	movlw	7
  2673  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2674  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2675  03C8  00A2               	movwf	??_ACELEROMETRO_CONFIG+1
  2676  03C9  307C               	movlw	124
  2677  03CA  00A1               	movwf	??_ACELEROMETRO_CONFIG
  2678  03CB                     u957:
  2679  03CB  0BA1               	decfsz	??_ACELEROMETRO_CONFIG,f
  2680  03CC  2BCB               	goto	u957
  2681  03CD  0BA2               	decfsz	??_ACELEROMETRO_CONFIG+1,f
  2682  03CE  2BCB               	goto	u957
  2683  03CF  0000               	nop
  2684  03D0                     l1605:
  2685                           
  2686                           ;Principal_Master.c: 180:     ACELEROMETRO_W(P_CTL, 0x08);
  2687  03D0  3008               	movlw	8
  2688  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2689  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2690  03D3  00A1               	movwf	??_ACELEROMETRO_CONFIG
  2691  03D4  0821               	movf	??_ACELEROMETRO_CONFIG,w
  2692  03D5  00F5               	movwf	ACELEROMETRO_W@data
  2693  03D6  302D               	movlw	45
  2694  03D7  120A  118A  2358  120A  118A  	fcall	_ACELEROMETRO_W
  2695                           
  2696                           ;Principal_Master.c: 181:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2697  03DC  3007               	movlw	7
  2698  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2699  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2700  03DF  00A2               	movwf	??_ACELEROMETRO_CONFIG+1
  2701  03E0  307C               	movlw	124
  2702  03E1  00A1               	movwf	??_ACELEROMETRO_CONFIG
  2703  03E2                     u967:
  2704  03E2  0BA1               	decfsz	??_ACELEROMETRO_CONFIG,f
  2705  03E3  2BE2               	goto	u967
  2706  03E4  0BA2               	decfsz	??_ACELEROMETRO_CONFIG+1,f
  2707  03E5  2BE2               	goto	u967
  2708  03E6  0000               	nop
  2709  03E7                     l145:
  2710  03E7  0008               	return
  2711  03E8                     __end_of_ACELEROMETRO_CONFIG:
  2712                           
  2713                           	psect	text14
  2714  0358                     __ptext14:	
  2715 ;; *************** function _ACELEROMETRO_W *****************
  2716 ;; Defined at:
  2717 ;;		line 199 in file "Principal_Master.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  num             1    wreg     unsigned char 
  2720 ;;  data            1    5[COMMON] unsigned char 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  num             1    0[BANK0 ] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0, pclath, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         1       0       0       0       0
  2733 ;;      Locals:         0       1       0       0       0
  2734 ;;      Temps:          2       0       0       0       0
  2735 ;;      Totals:         3       1       0       0       0
  2736 ;;Total ram usage:        4 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    3
  2739 ;; This function calls:
  2740 ;;		_I2C_Master_Start
  2741 ;;		_I2C_Master_Stop
  2742 ;;		_I2C_Master_Write
  2743 ;; This function is called by:
  2744 ;;		_ACELEROMETRO_CONFIG
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           
  2749                           ;psect for function _ACELEROMETRO_W
  2750  0358                     _ACELEROMETRO_W:
  2751                           
  2752                           ;incstack = 0
  2753                           ; Regs used in _ACELEROMETRO_W: [wreg+status,2+status,0+pclath+cstack]
  2754                           ;ACELEROMETRO_W@num stored from wreg
  2755  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2756  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2757  035A  00A0               	movwf	ACELEROMETRO_W@num
  2758  035B                     l1531:
  2759                           
  2760                           ;Principal_Master.c: 201:     I2C_Master_Start();
  2761  035B  120A  118A  24B5  120A  118A  	fcall	_I2C_Master_Start
  2762                           
  2763                           ;Principal_Master.c: 202:     I2C_Master_Write(WRITE);
  2764  0360  30A6               	movlw	166
  2765  0361  00F3               	movwf	I2C_Master_Write@d
  2766  0362  3000               	movlw	0
  2767  0363  00F4               	movwf	I2C_Master_Write@d+1
  2768  0364  120A  118A  2499  120A  118A  	fcall	_I2C_Master_Write
  2769                           
  2770                           ;Principal_Master.c: 203:     I2C_Master_Write(num);
  2771  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2772  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2773  036B  0820               	movf	ACELEROMETRO_W@num,w
  2774  036C  00F6               	movwf	??_ACELEROMETRO_W
  2775  036D  01F7               	clrf	??_ACELEROMETRO_W+1
  2776  036E  0876               	movf	??_ACELEROMETRO_W,w
  2777  036F  00F3               	movwf	I2C_Master_Write@d
  2778  0370  0877               	movf	??_ACELEROMETRO_W+1,w
  2779  0371  00F4               	movwf	I2C_Master_Write@d+1
  2780  0372  120A  118A  2499  120A  118A  	fcall	_I2C_Master_Write
  2781                           
  2782                           ;Principal_Master.c: 204:     I2C_Master_Write(data);
  2783  0377  0875               	movf	ACELEROMETRO_W@data,w
  2784  0378  00F6               	movwf	??_ACELEROMETRO_W
  2785  0379  01F7               	clrf	??_ACELEROMETRO_W+1
  2786  037A  0876               	movf	??_ACELEROMETRO_W,w
  2787  037B  00F3               	movwf	I2C_Master_Write@d
  2788  037C  0877               	movf	??_ACELEROMETRO_W+1,w
  2789  037D  00F4               	movwf	I2C_Master_Write@d+1
  2790  037E  120A  118A  2499  120A  118A  	fcall	_I2C_Master_Write
  2791                           
  2792                           ;Principal_Master.c: 205:     I2C_Master_Stop();
  2793  0383  120A  118A  24AC  120A  118A  	fcall	_I2C_Master_Stop
  2794  0388                     l151:
  2795  0388  0008               	return
  2796  0389                     __end_of_ACELEROMETRO_W:
  2797                           
  2798                           	psect	text15
  2799  0499                     __ptext15:	
  2800 ;; *************** function _I2C_Master_Write *****************
  2801 ;; Defined at:
  2802 ;;		line 40 in file "I2C.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  d               2    3[COMMON] unsigned int 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, pclath, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2816 ;;      Params:         2       0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0
  2819 ;;      Totals:         2       0       0       0       0
  2820 ;;Total ram usage:        2 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    2
  2823 ;; This function calls:
  2824 ;;		_I2C_Master_Wait
  2825 ;; This function is called by:
  2826 ;;		_ACELEROMETRO_R
  2827 ;;		_ACELEROMETRO_W
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _I2C_Master_Write
  2833  0499                     _I2C_Master_Write:
  2834  0499                     l1503:	
  2835                           ;incstack = 0
  2836                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2837                           
  2838                           
  2839                           ;I2C.c: 40: void I2C_Master_Write(unsigned d);I2C.c: 41: {;I2C.c: 42:   I2C_Master_Wait(
      +                          );
  2840  0499  120A  118A  2478  120A  118A  	fcall	_I2C_Master_Wait
  2841  049E                     l1505:
  2842                           
  2843                           ;I2C.c: 43:   SSPBUF = d;
  2844  049E  0873               	movf	I2C_Master_Write@d,w
  2845  049F  1283               	bcf	3,5	;RP0=0, select bank0
  2846  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2847  04A1  0093               	movwf	19	;volatile
  2848  04A2                     l207:
  2849  04A2  0008               	return
  2850  04A3                     __end_of_I2C_Master_Write:
  2851                           
  2852                           	psect	text16
  2853  04AC                     __ptext16:	
  2854 ;; *************** function _I2C_Master_Stop *****************
  2855 ;; Defined at:
  2856 ;;		line 34 in file "I2C.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0, pclath, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2870 ;;      Params:         0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0
  2873 ;;      Totals:         0       0       0       0       0
  2874 ;;Total ram usage:        0 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    2
  2877 ;; This function calls:
  2878 ;;		_I2C_Master_Wait
  2879 ;; This function is called by:
  2880 ;;		_ACELEROMETRO_R
  2881 ;;		_ACELEROMETRO_W
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function _I2C_Master_Stop
  2887  04AC                     _I2C_Master_Stop:
  2888  04AC                     l1527:	
  2889                           ;incstack = 0
  2890                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2891                           
  2892                           
  2893                           ;I2C.c: 36:   I2C_Master_Wait();
  2894  04AC  120A  118A  2478  120A  118A  	fcall	_I2C_Master_Wait
  2895  04B1                     l1529:
  2896                           
  2897                           ;I2C.c: 37:   PEN = 1;
  2898  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  2899  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  2900  04B3  1511               	bsf	17,2	;volatile
  2901  04B4                     l204:
  2902  04B4  0008               	return
  2903  04B5                     __end_of_I2C_Master_Stop:
  2904                           
  2905                           	psect	text17
  2906  04B5                     __ptext17:	
  2907 ;; *************** function _I2C_Master_Start *****************
  2908 ;; Defined at:
  2909 ;;		line 22 in file "I2C.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0, pclath, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0
  2926 ;;      Totals:         0       0       0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    2
  2930 ;; This function calls:
  2931 ;;		_I2C_Master_Wait
  2932 ;; This function is called by:
  2933 ;;		_ACELEROMETRO_R
  2934 ;;		_ACELEROMETRO_W
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _I2C_Master_Start
  2940  04B5                     _I2C_Master_Start:
  2941  04B5                     l1499:	
  2942                           ;incstack = 0
  2943                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2944                           
  2945                           
  2946                           ;I2C.c: 24:   I2C_Master_Wait();
  2947  04B5  120A  118A  2478  120A  118A  	fcall	_I2C_Master_Wait
  2948  04BA                     l1501:
  2949                           
  2950                           ;I2C.c: 25:   SEN = 1;
  2951  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  2952  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  2953  04BC  1411               	bsf	17,0	;volatile
  2954  04BD                     l198:
  2955  04BD  0008               	return
  2956  04BE                     __end_of_I2C_Master_Start:
  2957                           
  2958                           	psect	text18
  2959  0478                     __ptext18:	
  2960 ;; *************** function _I2C_Master_Wait *****************
  2961 ;; Defined at:
  2962 ;;		line 17 in file "I2C.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2976 ;;      Params:         0       0       0       0       0
  2977 ;;      Locals:         0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0
  2979 ;;      Totals:         0       0       0       0       0
  2980 ;;Total ram usage:        0 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    1
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		_I2C_Master_Start
  2987 ;;		_I2C_Master_RepeatedStart
  2988 ;;		_I2C_Master_Stop
  2989 ;;		_I2C_Master_Write
  2990 ;;		_I2C_Master_Read
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _I2C_Master_Wait
  2996  0478                     _I2C_Master_Wait:
  2997  0478                     l1495:	
  2998                           ;incstack = 0
  2999                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3000                           
  3001  0478                     l192:	
  3002                           ;I2C.c: 19:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3003                           
  3004  0478  1683               	bsf	3,5	;RP0=1, select bank1
  3005  0479  1303               	bcf	3,6	;RP1=0, select bank1
  3006  047A  1914               	btfsc	20,2	;volatile
  3007  047B  2C7D               	goto	u691
  3008  047C  2C7E               	goto	u690
  3009  047D                     u691:
  3010  047D  2C78               	goto	l192
  3011  047E                     u690:
  3012  047E                     l1497:
  3013  047E  0811               	movf	17,w	;volatile
  3014  047F  391F               	andlw	31
  3015  0480  1D03               	btfss	3,2
  3016  0481  2C83               	goto	u701
  3017  0482  2C84               	goto	u700
  3018  0483                     u701:
  3019  0483  2C78               	goto	l192
  3020  0484                     u700:
  3021  0484                     l195:
  3022  0484  0008               	return
  3023  0485                     __end_of_I2C_Master_Wait:
  3024                           
  3025                           	psect	text19
  3026  03E8                     __ptext19:	
  3027 ;; *************** function _isr *****************
  3028 ;; Defined at:
  3029 ;;		line 92 in file "Principal_Master.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3043 ;;      Params:         0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0
  3045 ;;      Temps:          3       0       0       0       0
  3046 ;;      Totals:         3       0       0       0       0
  3047 ;;Total ram usage:        3 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		Interrupt level 1
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           
  3057                           ;psect for function _isr
  3058  03E8                     _isr:
  3059  03E8                     i1l1121:
  3060                           
  3061                           ;Principal_Master.c: 93:     (INTCONbits.GIE = 0);
  3062  03E8  138B               	bcf	11,7	;volatile
  3063                           
  3064                           ;Principal_Master.c: 96:     if (PIR1bits.RCIF == 1) {
  3065  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  3066  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  3067  03EB  1E8C               	btfss	12,5	;volatile
  3068  03EC  2BEE               	goto	u33_21
  3069  03ED  2BEF               	goto	u33_20
  3070  03EE                     u33_21:
  3071  03EE  2C07               	goto	i1l125
  3072  03EF                     u33_20:
  3073  03EF                     i1l1123:
  3074                           
  3075                           ;Principal_Master.c: 98:         c =RCREG;
  3076  03EF  081A               	movf	26,w	;volatile
  3077  03F0  00F0               	movwf	??_isr
  3078  03F1  0870               	movf	??_isr,w
  3079  03F2  00F8               	movwf	_c
  3080  03F3                     i1l1125:
  3081                           
  3082                           ;Principal_Master.c: 100:         if (c & 0x30) {
  3083  03F3  0878               	movf	_c,w
  3084  03F4  3930               	andlw	48
  3085  03F5  1903               	btfsc	3,2
  3086  03F6  2BF8               	goto	u34_21
  3087  03F7  2BF9               	goto	u34_20
  3088  03F8                     u34_21:
  3089  03F8  2C07               	goto	i1l125
  3090  03F9                     u34_20:
  3091  03F9                     i1l1127:
  3092                           
  3093                           ;Principal_Master.c: 102:             if (c & 0x01) {
  3094  03F9  1C78               	btfss	_c,0
  3095  03FA  2BFC               	goto	u35_21
  3096  03FB  2BFD               	goto	u35_20
  3097  03FC                     u35_21:
  3098  03FC  2BFF               	goto	i1l127
  3099  03FD                     u35_20:
  3100  03FD                     i1l1129:
  3101                           
  3102                           ;Principal_Master.c: 103:                 PORTAbits.RA0= 1;
  3103  03FD  1405               	bsf	5,0	;volatile
  3104                           
  3105                           ;Principal_Master.c: 104:             }
  3106  03FE  2C00               	goto	i1l128
  3107  03FF                     i1l127:	
  3108                           ;Principal_Master.c: 105:             else {
  3109                           
  3110                           
  3111                           ;Principal_Master.c: 106:             PORTAbits.RA0= 0;
  3112  03FF  1005               	bcf	5,0	;volatile
  3113  0400                     i1l128:	
  3114                           ;Principal_Master.c: 107:             }
  3115                           
  3116                           
  3117                           ;Principal_Master.c: 109:             if (c & 0x02) {
  3118  0400  1CF8               	btfss	_c,1
  3119  0401  2C03               	goto	u36_21
  3120  0402  2C04               	goto	u36_20
  3121  0403                     u36_21:
  3122  0403  2C06               	goto	i1l129
  3123  0404                     u36_20:
  3124  0404                     i1l1131:
  3125                           
  3126                           ;Principal_Master.c: 110:                 PORTAbits.RA1= 1;
  3127  0404  1485               	bsf	5,1	;volatile
  3128                           
  3129                           ;Principal_Master.c: 111:             }
  3130  0405  2C07               	goto	i1l125
  3131  0406                     i1l129:	
  3132                           ;Principal_Master.c: 112:             else {
  3133                           
  3134                           
  3135                           ;Principal_Master.c: 113:             PORTAbits.RA1= 0;
  3136  0406  1085               	bcf	5,1	;volatile
  3137  0407                     i1l125:	
  3138                           ;Principal_Master.c: 119:     }
  3139                           
  3140                           
  3141                           ;Principal_Master.c: 121:     (INTCONbits.GIE = 1);
  3142  0407  178B               	bsf	11,7	;volatile
  3143  0408                     i1l131:
  3144  0408  0872               	movf	??_isr+2,w
  3145  0409  008A               	movwf	10
  3146  040A  0E71               	swapf	??_isr+1,w
  3147  040B  0083               	movwf	3
  3148  040C  0EFE               	swapf	btemp,f
  3149  040D  0E7E               	swapf	btemp,w
  3150  040E  0009               	retfie
  3151  040F                     __end_of_isr:
  3152  007E                     btemp	set	126	;btemp
  3153  007E                     wtemp0	set	126
  3154                           
  3155                           	psect	intentry
  3156  0004                     __pintentry:	
  3157                           ;incstack = 0
  3158                           ; Regs used in _isr: [wreg+status,2]
  3159                           
  3160  0004                     interrupt_function:
  3161  007E                     saved_w	set	btemp
  3162  0004  00FE               	movwf	btemp
  3163  0005  0E03               	swapf	3,w
  3164  0006  00F1               	movwf	??_isr+1
  3165  0007  080A               	movf	10,w
  3166  0008  00F2               	movwf	??_isr+2
  3167  0009  120A  118A  2BE8   	ljmp	_isr
  3168                           
  3169                           	psect	config
  3170                           
  3171                           ;Config register CONFIG1 @ 0x2007
  3172                           ;	Oscillator Selection bits
  3173                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3174                           ;	Watchdog Timer Enable bit
  3175                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3176                           ;	Power-up Timer Enable bit
  3177                           ;	PWRTE = OFF, PWRT disabled
  3178                           ;	RE3/MCLR pin function select bit
  3179                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3180                           ;	Code Protection bit
  3181                           ;	CP = OFF, Program memory code protection is disabled
  3182                           ;	Data Code Protection bit
  3183                           ;	CPD = OFF, Data memory code protection is disabled
  3184                           ;	Brown Out Reset Selection bits
  3185                           ;	BOREN = ON, BOR enabled
  3186                           ;	Internal External Switchover bit
  3187                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3188                           ;	Fail-Safe Clock Monitor Enabled bit
  3189                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3190                           ;	Low Voltage Programming Enable bit
  3191                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3192                           ;	In-Circuit Debugger Mode bit
  3193                           ;	DEBUG = 0x1, unprogrammed default
  3194  2007                     	org	8199
  3195  2007  3FF5               	dw	16373
  3196                           
  3197                           ;Config register CONFIG2 @ 0x2008
  3198                           ;	Brown-out Reset Selection bit
  3199                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3200                           ;	Flash Program Memory Self Write Enable bits
  3201                           ;	WRT = OFF, Write protection off
  3202  2008                     	org	8200
  3203  2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    10
    Data        10
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     28      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _printf->___lwdiv
    ___lwmod->___lwdiv
    _ACELEROMETRO_R->_I2C_Master_Read
    _I2C_Master_Init->___lldiv
    _ACELEROMETRO_CONFIG->_ACELEROMETRO_W
    _ACELEROMETRO_W->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _LEER_VALORES->_ACELEROMETRO_R
    _ACELEROMETRO_R->_I2C_Master_Read
    _I2C_Master_Init->___lldiv
    _ACELEROMETRO_CONFIG->_ACELEROMETRO_W

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3712
                                             25 BANK0      3     3      0
                _ACELEROMETRO_CONFIG
                    _I2C_Master_Init
                       _LEER_VALORES
                              _SETUP
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              24    18      6    1353
                                              9 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
                       _CONFIG_USART
 ---------------------------------------------------------------------------------
 (2) _CONFIG_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEER_VALORES                                         8     8      0    1004
                                              9 BANK0      8     8      0
                     _ACELEROMETRO_R
 ---------------------------------------------------------------------------------
 (2) _ACELEROMETRO_R                                       7     5      2     791
                                              2 BANK0      7     5      2
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     155
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _ACELEROMETRO_CONFIG                                  2     2      0     813
                                              1 BANK0      2     2      0
                     _ACELEROMETRO_W
 ---------------------------------------------------------------------------------
 (2) _ACELEROMETRO_W                                       4     3      1     813
                                              5 COMMON     3     2      1
                                              0 BANK0      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     571
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ACELEROMETRO_CONFIG
     _ACELEROMETRO_W
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
   _LEER_VALORES
     _ACELEROMETRO_R
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _SETUP
     _CONFIG_USART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      34       5       65.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3F      12        0.0%
ABS                  0      0      3F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 14:17:49 2021

                    ?_LEER_VALORES 0070                                  _c 0078  
                                pc 0002             __end_of_ACELEROMETRO_R 0258  
           __end_of_ACELEROMETRO_W 0389                                 _XH 0048  
                               _YH 0046                                 _XL 0049  
                               _ZH 0044                                 _YL 0047  
                               _ZL 0045                                 fsr 0004  
                              l120 0498                                l201 04AB  
                              l210 03AE                                l211 03B1  
                              l204 04B4                                l212 03B8  
                              l117 0490                                l142 0433  
                              l207 04A2                                l151 0388  
                              l145 03E7                                l401 0210  
                              l154 01A8                                l148 0257  
                              l228 0464                                l192 0478  
                              l361 010E                                l195 0484  
                              l189 0357                                l198 04BD  
                              l637 029D                                l647 031D  
                              _DX0 004F                                _DX1 004E  
                              _DY0 004D                                _DY1 004C  
                              _GIE 005F                                _DZ0 004B  
                              _DZ1 004A                                u400 0496  
                              u401 0495                                u600 0319  
                              _PEN 048A                                u601 0318  
                              u700 0484                                u701 0483  
                              u710 03AA                                u550 02EA  
                              u711 03A9                                u551 02E9  
                              u720 01BB                                u721 01BA  
                              u810 0274                                u570 02FC  
                              u811 0273                                u571 02FB  
                              u740 01CF                                u580 0306  
                              u900 00A6                                _SEN 0488  
                              u741 01CE                                u805 0266  
                              u581 0305                                u565 02EE  
                              u901 00A5                                u830 0285  
                              u910 00AC                                u735 01C0  
                              u831 0284                                u911 00AB  
                              u760 01EA                                u920 00FA  
                              u761 01E9                                u825 0275  
                              u585 0302                                u921 00F9  
                              u690 047E                                u850 0299  
                              u930 010E                                u691 047D  
                              u755 01D1                                u851 0298  
                              u835 0281                                u595 030D  
                              u931 010D                                u780 0208  
                              u860 0335                                u781 0207  
                              u765 01E6                                u845 028D  
                              u790 0262                                u870 0040  
                              u775 01FA                                u791 0261  
                              u871 003F                                u880 0075  
                              u865 0330                                u881 0074  
                              u890 009B                                u891 009A  
                              u947 02D8                                u957 03CB  
                              u967 03E2                                u895 0097  
                              _isr 03E8                                fsr0 0004  
                              indf 0000                               l1331 02EA  
                             l1501 04BA                               l1261 045D  
                             l1341 0306                               l1333 02ED  
                             l1253 0490                               l1503 0499  
                             l1511 0389                               l1263 045E  
                             l1351 040F                               l1343 030C  
                             l1335 02F4                               l1255 0496  
                             l1505 049E                               l1601 03B9  
                             l1521 03AA                               l1513 038E  
                             l1265 045F                               l1257 0451  
                             l1361 0431                               l1353 0414  
                             l1345 0313                               l1337 02F8  
                             l1329 02E2                               l1531 035B  
                             l1603 03C5                               l1523 03B2  
                             l1515 0396                               l1507 04A3  
                             l1611 0121                               l1267 0462  
                             l1259 0459                               l1363 0432  
                             l1355 0426                               l1339 02FC  
                             l1347 0319                               l1605 03D0  
                             l1541 01BB                               l1517 039F  
                             l1509 04A8                               l1533 0214  
                             l1621 0152                               l1613 012D  
                             l1269 0463                               l1357 042B  
                             l1527 04AC                               l1551 01EA  
                             l1543 01BE                               l1519 03A4  
                             l1535 0251                               l1631 0183  
                             l1623 015E                               l1615 0134  
                             l1607 010F                               l1359 042E  
                             l1529 04B1                               l1553 01F8  
                             l1545 01CB                               l1633 018F  
                             l1625 0165                               l1617 013F  
                             l1609 0115                               l1641 003A  
                             l1555 01F9                               l1547 01CF  
                             l1539 01A9                               l1635 0196  
                             l1627 0170                               l1619 0146  
                             l1571 026C                               l1563 0258  
                             l1651 0065                               l1643 0040  
                             l1557 0202                               l1549 01D8  
                             l1637 01A1                               l1629 0177  
                             l1581 028C                               l1573 0270  
                             l1565 025C                               l1661 007E  
                             l1653 006D                               l1645 0047  
                             l1495 0478                               l1559 0208  
                             l1591 0322                               l1583 0293  
                             l1575 0274                               l1567 0262  
                             l1671 009C                               l1655 0071  
                             l1719 005A                               l1639 0035  
                             l1497 047E                               l1593 0325  
                             l1577 0285                               l1569 0265  
                             l1585 0299                               l1681 00E9  
                             l1673 00A6                               l1657 0075  
                             l1649 0048                               l1499 04B5  
                             l1595 0354                               l1579 028B  
                             l1683 00EF                               l1675 00AC  
                             l1667 0080                               l1659 0079  
                             l1691 029E                               l1597 0355  
                             l1589 031E                               l1677 00B2  
                             l1685 00FA                               l1693 02B7  
                             l1599 0356                               l1679 00B9  
                             l1695 02BC                               l1697 02D0  
                             ?_isr 0070                               STR_1 0444  
                             _LED1 0043                               _LED2 0042  
                             _EJEX 0040                               _EJEY 003E  
                             _EJEZ 003C                               _READ 0052  
                             _PEIE 005E                               _RSEN 0489  
                             _TXIF 0064   __end_of_I2C_Master_RepeatedStart 04AC  
                             _main 029E                               btemp 007E  
                             start 000C                     ??_LEER_VALORES 0029  
                            ??_isr 0070                    ?_ACELEROMETRO_R 0022  
                  ?_ACELEROMETRO_W 0075                   ?_I2C_Master_Init 002D  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070               __end_of_CONFIG_USART 0465  
                            ?_main 0070                              _ANSEL 0188  
                  __end_of___lldiv 0211                    __end_of___lwdiv 029E  
                            i1l131 0408                              i1l125 0407  
                            i1l127 03FF                              i1l128 0400  
                            i1l129 0406                    __end_of___lwmod 031E  
                            _RCREG 001A                              u33_20 03EF  
                            u33_21 03EE                              u34_20 03F9  
                            u34_21 03F8                              _SETUP 040F  
                            _SPBRG 0099                              u35_20 03FD  
                            u35_21 03FC                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            u36_20 0404                              u36_21 0403  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _P_CTL 0051  
                            _WRITE 0053                              _TXREG 0019  
               ACELEROMETRO_W@data 0075                    __end_of_dpowers 0444  
                            _putch 048F                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __initialization 000F                       __end_of_main 02E2  
                           ??_main 0039                             ?_SETUP 0070  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
               ??_I2C_Master_Start 0073                 ??_I2C_Master_Write 0075  
                           ?_putch 0070                             _ANSELH 0189  
                           i1l1121 03E8                             i1l1131 0404  
                           i1l1123 03EF                             i1l1125 03F3  
                           i1l1127 03F9                             i1l1129 03FD  
                           _D_FRMT 0050                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 04A3  
                        ??___lldiv 0073       __size_of_ACELEROMETRO_CONFIG 002F  
                        ??___lwdiv 0077                          ??___lwmod 0027  
                           _printf 0032                             saved_w 007E  
             __end_of_LEER_VALORES 01A9            __end_of__initialization 002E  
                    __end_of_SETUP 0434              __size_of_CONFIG_USART 0014  
                   __pcstackCOMMON 0070                       __pidataBANK0 0485  
                    __end_of_putch 0499                            ??_SETUP 0073  
                          ??_putch 0073                         __pbssBANK0 003C  
                     _CONFIG_USART 0451                   ??_ACELEROMETRO_R 0024  
                 ??_ACELEROMETRO_W 0076                         __pmaintext 029E  
                       __pintentry 0004                            ?_printf 0029  
                          _LECTURA 007A                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 0434  
                        _BANDERA_T 0079                            ___lldiv 01A9  
                          ___lwdiv 0258                            ___lwmod 02E2  
                          __ptext1 0032                            __ptext2 048F  
                          __ptext3 02E2                            __ptext4 0258  
                          __ptext5 040F                            __ptext6 0451  
                          __ptext7 010F                            __ptext8 0211  
                          __ptext9 04A3                    __size_of_printf 00DD  
            __size_of_LEER_VALORES 009A                            _dpowers 043A  
                     __size_of_isr 0027           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                _ACELEROMETRO_CONFIG 03B9  
             end_of_initialization 002E         ??_I2C_Master_RepeatedStart 0073  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0020                    ___lldiv@counter 002C  
                        _RCSTAbits 0018                            printf@c 0038  
                          printf@f 0034                   I2C_Master_Init@c 002D  
                 I2C_Master_Read@a 0073                       _LEER_VALORES 010F  
             ?_ACELEROMETRO_CONFIG 0070                          _PORTAbits 0005  
                        _TRISCbits 0087                          _TXSTAbits 0098  
                LEER_VALORES@tempx 002B                  LEER_VALORES@tempy 002D  
                LEER_VALORES@tempz 002F              ??_ACELEROMETRO_CONFIG 0021  
                ACELEROMETRO_R@num 0026                        _BAUDCTLbits 0187  
                ACELEROMETRO_W@num 0020                     __end_of_printf 010F  
              start_initialization 000F                        __end_of_isr 040F  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
                       init_fetch0 0465                        __pdataBANK0 004A  
                         ??_printf 002F                        __pbssCOMMON 0078  
                        ___latbits 0002                      __pcstackBANK0 0020  
                 _I2C_Master_Start 04B5                   _I2C_Master_Write 0499  
                 ___lwdiv@dividend 0075                           ?___lldiv 0020  
                         ?___lwdiv 0073                           ?___lwmod 0023  
                        __pstrings 0434                     __size_of_SETUP 0025  
            ACELEROMETRO_R@LECTURA 0027                   ___lwdiv@quotient 0021  
                   __size_of_putch 000A                  interrupt_function 0004  
                         _PIE1bits 008C                           _PIR1bits 000C  
                      __stringbase 0439            __size_of_ACELEROMETRO_R 0047  
          __size_of_ACELEROMETRO_W 0031                         printf@flag 0033  
                       printf@prec 0035                I2C_Master_Read@temp 0020  
__size_of_I2C_Master_RepeatedStart 0009          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                   __size_of___lwdiv 0046  
                 __size_of___lwmod 003C                 __end_of__stringtab 043A  
                  _I2C_Master_Init 031E                    _I2C_Master_Read 0389  
                  _I2C_Master_Wait 0478                    _I2C_Master_Stop 04AC  
                  ___lwdiv@divisor 0073                    ___lwdiv@counter 0020  
                         __ptext10 0389                           __ptext11 031E  
                         __ptext12 01A9                           __ptext13 03B9  
                         __ptext14 0358                           __ptext15 0499  
                         __ptext16 04AC                           __ptext17 04B5  
                         __ptext18 0478                           __ptext19 03E8  
                    ?_CONFIG_USART 0070                      __size_of_main 0044  
      __end_of_ACELEROMETRO_CONFIG 03E8                          printf@val 0036  
                        putch@data 0073           __end_of_I2C_Master_Start 04BE  
         __end_of_I2C_Master_Write 04A3                         _INTCONbits 000B  
                         init_ram0 0469                           intlevel1 0000  
                   ??_CONFIG_USART 0073                   ___lwmod@dividend 0025  
                 ___lldiv@dividend 0024                          stringcode 0434  
                       _OSCCONbits 008F                           printf@ap 0032  
          __end_of_I2C_Master_Init 0358            __end_of_I2C_Master_Read 03B9  
          __end_of_I2C_Master_Wait 0485            __end_of_I2C_Master_Stop 04B5  
                   _ACELEROMETRO_R 0211                     _ACELEROMETRO_W 0358  
                 ___lldiv@quotient 0028                  I2C_Master_Write@d 0073  
                  ___lwmod@divisor 0023                    ___lwmod@counter 0028  
                         stringdir 0434                           stringtab 0434  
                      _SSPCON2bits 0091  
