

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 02:12:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.31
    44                           ; Generated 13/10/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  0105                     	;# 
   376  0107                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  0185                     	;# 
   385  0187                     	;# 
   386  0188                     	;# 
   387  0189                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390                           
   391                           	psect	idataCOMMON
   392  0648                     __pidataCOMMON:
   393                           
   394                           ;initializer for _WRITE
   395  0648  34A6               	retlw	166
   396                           
   397                           	psect	idataBANK0
   398  061C                     __pidataBANK0:
   399                           
   400                           ;initializer for _DZ1
   401  061C  3437               	retlw	55
   402                           
   403                           ;initializer for _DZ0
   404  061D  3436               	retlw	54
   405                           
   406                           ;initializer for _DY1
   407  061E  3435               	retlw	53
   408                           
   409                           ;initializer for _DY0
   410  061F  3434               	retlw	52
   411                           
   412                           ;initializer for _DX1
   413  0620  3433               	retlw	51
   414                           
   415                           ;initializer for _DX0
   416  0621  3432               	retlw	50
   417                           
   418                           ;initializer for _D_FRMT
   419  0622  3431               	retlw	49
   420                           
   421                           ;initializer for _P_CTL
   422  0623  342D               	retlw	45
   423                           
   424                           ;initializer for _READ
   425  0624  34A7               	retlw	167
   426                           
   427                           	psect	strings
   428  0366                     __pstrings:
   429  0366                     stringtab:
   430  0366                     __stringtab:
   431  0366                     stringcode:	
   432                           ;	String table - string pointers are 1 byte each
   433                           
   434  0366                     stringdir:
   435  0366  3003               	movlw	high stringdir
   436  0367  008A               	movwf	10
   437  0368  0804               	movf	4,w
   438  0369  0A84               	incf	4,f
   439  036A  0782               	addwf	2,f
   440  036B                     __stringbase:
   441  036B  3400               	retlw	0
   442  036C                     __end_of__stringtab:
   443  036C                     _dpowers:
   444  036C  3401               	retlw	1
   445  036D  3400               	retlw	0
   446  036E  340A               	retlw	10
   447  036F  3400               	retlw	0
   448  0370  3464               	retlw	100
   449  0371  3400               	retlw	0
   450  0372  34E8               	retlw	232
   451  0373  3403               	retlw	3
   452  0374  3410               	retlw	16
   453  0375  3427               	retlw	39
   454  0376                     __end_of_dpowers:
   455  0376                     _hexpowers:
   456  0376  3401               	retlw	1
   457  0377  3400               	retlw	0
   458  0378  3410               	retlw	16
   459  0379  3400               	retlw	0
   460  037A  3400               	retlw	0
   461  037B  3401               	retlw	1
   462  037C  3400               	retlw	0
   463  037D  3410               	retlw	16
   464  037E                     __end_of_hexpowers:
   465  0018                     _RCSTAbits	set	24
   466  0013                     _SSPBUF	set	19
   467  0014                     _SSPCON	set	20
   468  0009                     _PORTE	set	9
   469  0008                     _PORTD	set	8
   470  0007                     _PORTC	set	7
   471  0006                     _PORTB	set	6
   472  0005                     _PORTA	set	5
   473  0005                     _PORTAbits	set	5
   474  001A                     _RCREG	set	26
   475  000C                     _PIR1bits	set	12
   476  000B                     _INTCONbits	set	11
   477  0019                     _TXREG	set	25
   478  0063                     _SSPIF	set	99
   479  005E                     _PEIE	set	94
   480  005F                     _GIE	set	95
   481  0064                     _TXIF	set	100
   482  009A                     _SPBRGH	set	154
   483  0099                     _SPBRG	set	153
   484  0098                     _TXSTAbits	set	152
   485  0091                     _SSPCON2bits	set	145
   486  0087                     _TRISCbits	set	135
   487  0094                     _SSPSTAT	set	148
   488  0093                     _SSPADD	set	147
   489  0091                     _SSPCON2	set	145
   490  0089                     _TRISE	set	137
   491  0088                     _TRISD	set	136
   492  0087                     _TRISC	set	135
   493  0086                     _TRISB	set	134
   494  0085                     _TRISA	set	133
   495  008F                     _OSCCONbits	set	143
   496  0081                     _OPTION_REG	set	129
   497  008C                     _PIE1bits	set	140
   498  0463                     _SSPIE	set	1123
   499  043C                     _TRISC4	set	1084
   500  043B                     _TRISC3	set	1083
   501  048A                     _PEN	set	1162
   502  0489                     _RSEN	set	1161
   503  0488                     _SEN	set	1160
   504  0187                     _BAUDCTLbits	set	391
   505  0189                     _ANSELH	set	393
   506  0188                     _ANSEL	set	392
   507  037E                     STR_4:
   508  037E  3430               	retlw	48	;'0'
   509  037F  3431               	retlw	49	;'1'
   510  0380  3432               	retlw	50	;'2'
   511  0381  3433               	retlw	51	;'3'
   512  0382  3434               	retlw	52	;'4'
   513  0383  3435               	retlw	53	;'5'
   514  0384  3436               	retlw	54	;'6'
   515  0385  3437               	retlw	55	;'7'
   516  0386  3438               	retlw	56	;'8'
   517  0387  3439               	retlw	57	;'9'
   518  0388  3461               	retlw	97	;'a'
   519  0389  3462               	retlw	98	;'b'
   520  038A  3463               	retlw	99	;'c'
   521  038B  3464               	retlw	100	;'d'
   522  038C  3465               	retlw	101	;'e'
   523  038D  3466               	retlw	102	;'f'
   524  038E  3400               	retlw	0
   525  038F                     STR_1:
   526  038F  3442               	retlw	66	;'B'
   527  0390  3475               	retlw	117	;'u'
   528  0391  3465               	retlw	101	;'e'
   529  0392  346E               	retlw	110	;'n'
   530  0393  346F               	retlw	111	;'o'
   531  0394  3473               	retlw	115	;'s'
   532  0395  3420               	retlw	32	;' '
   533  0396  3464               	retlw	100	;'d'
   534  0397  3469               	retlw	105	;'i'
   535  0398  3461               	retlw	97	;'a'
   536  0399  3473               	retlw	115	;'s'
   537  039A  3420               	retlw	32	;' '
   538  039B  340D               	retlw	13
   539  039C  3400               	retlw	0
   540  039D                     STR_2:
   541  039D  3425               	retlw	37	;'%'
   542  039E  3464               	retlw	100	;'d'
   543  039F  342C               	retlw	44	;','
   544  03A0  3420               	retlw	32	;' '
   545  03A1  3425               	retlw	37	;'%'
   546  03A2  3464               	retlw	100	;'d'
   547  03A3  342C               	retlw	44	;','
   548  03A4  3420               	retlw	32	;' '
   549  03A5  3425               	retlw	37	;'%'
   550  03A6  3464               	retlw	100	;'d'
   551  03A7  340D               	retlw	13
   552  03A8  340A               	retlw	10
   553  03A9  3400               	retlw	0
   554  03AA                     STR_3:
   555  03AA  3463               	retlw	99	;'c'
   556  03AB  343D               	retlw	61	;'='
   557  03AC  3425               	retlw	37	;'%'
   558  03AD  3478               	retlw	120	;'x'
   559  03AE  3420               	retlw	32	;' '
   560  03AF  3400               	retlw	0
   561                           
   562                           	psect	cinit
   563  000F                     start_initialization:	
   564                           ; #config settings
   565                           
   566  000F                     __initialization:
   567                           
   568                           ; Initialize objects allocated to BANK0
   569  000F  1383               	bcf	3,7	;select IRP bank0
   570  0010  306E               	movlw	low (__pdataBANK0+9)
   571  0011  00FD               	movwf	btemp+-1
   572  0012  3006               	movlw	high __pidataBANK0
   573  0013  00FE               	movwf	btemp
   574  0014  301C               	movlw	low __pidataBANK0
   575  0015  00FF               	movwf	btemp+1
   576  0016  3065               	movlw	low __pdataBANK0
   577  0017  0084               	movwf	4
   578  0018  120A  118A  25EC  120A  118A  	fcall	init_ram0
   579                           
   580                           ; Initialize objects allocated to COMMON
   581  001D  120A  118A  2648  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   582  0022  00FA               	movwf	__pdataCOMMON& (0+127)
   583                           
   584                           ; Clear objects allocated to BANK0
   585  0023  3020               	movlw	low __pbssBANK0
   586  0024  0084               	movwf	4
   587  0025  304B               	movlw	low (__pbssBANK0+43)
   588  0026  120A  118A  2640  120A  118A  	fcall	clear_ram0
   589                           
   590                           ; Clear objects allocated to COMMON
   591  002B  01F8               	clrf	__pbssCOMMON& (0+127)
   592  002C  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   593  002D                     end_of_initialization:	
   594                           ;End of C runtime variable initialization code
   595                           
   596  002D                     __end_of__initialization:
   597  002D  0183               	clrf	3
   598  002E  120A  118A  2AA2   	ljmp	_main	;jump to C main() function
   599                           
   600                           	psect	bssCOMMON
   601  0078                     __pbssCOMMON:
   602  0078                     _BANDERA_T:
   603  0078                     	ds	1
   604  0079                     _LECTURA:
   605  0079                     	ds	1
   606                           
   607                           	psect	dataCOMMON
   608  007A                     __pdataCOMMON:
   609  007A                     _WRITE:
   610  007A                     	ds	1
   611                           
   612                           	psect	bssBANK0
   613  0020                     __pbssBANK0:
   614  0020                     _contador:
   615  0020                     	ds	2
   616  0022                     _EJEZ:
   617  0022                     	ds	2
   618  0024                     _EJEY:
   619  0024                     	ds	2
   620  0026                     _EJEX:
   621  0026                     	ds	2
   622  0028                     _FLAG_RC:
   623  0028                     	ds	1
   624  0029                     _ENTER:
   625  0029                     	ds	1
   626  002A                     _LED2:
   627  002A                     	ds	1
   628  002B                     _LED1:
   629  002B                     	ds	1
   630  002C                     _c:
   631  002C                     	ds	1
   632  002D                     _b:
   633  002D                     	ds	1
   634  002E                     _a:
   635  002E                     	ds	1
   636  002F                     _variable:
   637  002F                     	ds	1
   638  0030                     _Z_D:
   639  0030                     	ds	1
   640  0031                     _Z_U:
   641  0031                     	ds	1
   642  0032                     _Y_D:
   643  0032                     	ds	1
   644  0033                     _Y_U:
   645  0033                     	ds	1
   646  0034                     _X_D:
   647  0034                     	ds	1
   648  0035                     _X_U:
   649  0035                     	ds	1
   650  0036                     _Y_1:
   651  0036                     	ds	1
   652  0037                     _Z_1:
   653  0037                     	ds	1
   654  0038                     _X_1:
   655  0038                     	ds	1
   656  0039                     _Z3:
   657  0039                     	ds	1
   658  003A                     _Z2:
   659  003A                     	ds	1
   660  003B                     _Z1:
   661  003B                     	ds	1
   662  003C                     _Z0:
   663  003C                     	ds	1
   664  003D                     _Y3:
   665  003D                     	ds	1
   666  003E                     _Y2:
   667  003E                     	ds	1
   668  003F                     _Y1:
   669  003F                     	ds	1
   670  0040                     _Y0:
   671  0040                     	ds	1
   672  0041                     _X3:
   673  0041                     	ds	1
   674  0042                     _X2:
   675  0042                     	ds	1
   676  0043                     _X1:
   677  0043                     	ds	1
   678  0044                     _X0:
   679  0044                     	ds	1
   680  0045                     _ZH:
   681  0045                     	ds	1
   682  0046                     _ZL:
   683  0046                     	ds	1
   684  0047                     _YH:
   685  0047                     	ds	1
   686  0048                     _YL:
   687  0048                     	ds	1
   688  0049                     _XH:
   689  0049                     	ds	1
   690  004A                     _XL:
   691  004A                     	ds	1
   692                           
   693                           	psect	dataBANK0
   694  0065                     __pdataBANK0:
   695  0065                     _DZ1:
   696  0065                     	ds	1
   697  0066                     _DZ0:
   698  0066                     	ds	1
   699  0067                     _DY1:
   700  0067                     	ds	1
   701  0068                     _DY0:
   702  0068                     	ds	1
   703  0069                     _DX1:
   704  0069                     	ds	1
   705  006A                     _DX0:
   706  006A                     	ds	1
   707  006B                     _D_FRMT:
   708  006B                     	ds	1
   709  006C                     _P_CTL:
   710  006C                     	ds	1
   711  006D                     _READ:
   712  006D                     	ds	1
   713                           
   714                           	psect	inittext
   715  05E8                     init_fetch0:	
   716                           ;	Called with low address in FSR and high address in W
   717                           
   718  05E8  087E               	movf	btemp,w
   719  05E9  008A               	movwf	10
   720  05EA  087F               	movf	btemp+1,w
   721  05EB  0082               	movwf	2
   722  05EC                     init_ram0:	
   723                           ;Called with:
   724                           ;	high address of idata address in btemp 
   725                           ;	low address of idata address in btemp+1 
   726                           ;	low address of data in FSR
   727                           ;	high address + 1 of data in btemp-1
   728                           
   729  05EC  120A  118A  25E8  120A  118A  	fcall	init_fetch0
   730  05F1  0080               	movwf	0
   731  05F2  0A84               	incf	4,f
   732  05F3  0804               	movf	4,w
   733  05F4  067D               	xorwf	btemp+-1,w
   734  05F5  1903               	btfsc	3,2
   735  05F6  3400               	retlw	0
   736  05F7  0AFF               	incf	btemp+1,f
   737  05F8  1903               	btfsc	3,2
   738  05F9  0AFE               	incf	btemp,f
   739  05FA  2DEC               	goto	init_ram0
   740                           
   741                           	psect	clrtext
   742  0640                     clear_ram0:	
   743                           ;	Called with FSR containing the base address, and
   744                           ;	W with the last address+1
   745                           
   746  0640  0064               	clrwdt	;clear the watchdog before getting into this loop
   747  0641                     clrloop0:
   748  0641  0180               	clrf	0	;clear RAM location pointed to by FSR
   749  0642  0A84               	incf	4,f	;increment pointer
   750  0643  0604               	xorwf	4,w	;XOR with final address
   751  0644  1903               	btfsc	3,2	;have we reached the end yet?
   752  0645  3400               	retlw	0	;all done for this memory range, return
   753  0646  0604               	xorwf	4,w	;XOR again to restore value
   754  0647  2E41               	goto	clrloop0	;do the next byte
   755                           
   756                           	psect	cstackBANK1
   757  00A0                     __pcstackBANK1:
   758  00A0                     ??_main:
   759                           
   760                           ; 1 bytes @ 0x0
   761  00A0                     	ds	3
   762                           
   763                           	psect	cstackCOMMON
   764  0070                     __pcstackCOMMON:
   765  0070                     ?_SETUP:
   766  0070                     ?_ACELEROMETRO_CONFIG:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_LEER_VALORES:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_EJEX_TO_CHARS:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_CONFIG_USART:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_I2C_Master_Start:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_I2C_Master_RepeatedStart:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_I2C_Master_Stop:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_ASCII:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_putch:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_isr:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ??_isr:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_main:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_I2C_Master_Wait:	
   803                           ; 1 bytes @ 0x0
   804                           
   805                           
   806                           ; 1 bytes @ 0x0
   807  0070                     	ds	3
   808  0073                     ??_SETUP:
   809  0073                     ??_CONFIG_USART:	
   810                           ; 1 bytes @ 0x3
   811                           
   812  0073                     ??_I2C_Master_Start:	
   813                           ; 1 bytes @ 0x3
   814                           
   815  0073                     ?_I2C_Master_Write:	
   816                           ; 1 bytes @ 0x3
   817                           
   818  0073                     ??_I2C_Master_RepeatedStart:	
   819                           ; 1 bytes @ 0x3
   820                           
   821  0073                     ??_I2C_Master_Stop:	
   822                           ; 1 bytes @ 0x3
   823                           
   824  0073                     ??_ASCII:	
   825                           ; 1 bytes @ 0x3
   826                           
   827  0073                     ??_putch:	
   828                           ; 1 bytes @ 0x3
   829                           
   830  0073                     ??_I2C_Master_Wait:	
   831                           ; 1 bytes @ 0x3
   832                           
   833  0073                     ??___lldiv:	
   834                           ; 1 bytes @ 0x3
   835                           
   836  0073                     ?_I2C_Master_Read:	
   837                           ; 1 bytes @ 0x3
   838                           
   839  0073                     ?___lwdiv:	
   840                           ; 2 bytes @ 0x3
   841                           
   842  0073                     putch@data:	
   843                           ; 2 bytes @ 0x3
   844                           
   845  0073                     I2C_Master_Write@d:	
   846                           ; 1 bytes @ 0x3
   847                           
   848  0073                     I2C_Master_Read@a:	
   849                           ; 2 bytes @ 0x3
   850                           
   851  0073                     ___lwdiv@divisor:	
   852                           ; 2 bytes @ 0x3
   853                           
   854                           
   855                           ; 2 bytes @ 0x3
   856  0073                     	ds	1
   857  0074                     ??_I2C_Master_Init:
   858                           
   859                           ; 1 bytes @ 0x4
   860  0074                     	ds	1
   861  0075                     ?_ACELEROMETRO_W:
   862  0075                     ??_I2C_Master_Write:	
   863                           ; 1 bytes @ 0x5
   864                           
   865  0075                     ??_I2C_Master_Read:	
   866                           ; 1 bytes @ 0x5
   867                           
   868  0075                     ACELEROMETRO_W@data:	
   869                           ; 1 bytes @ 0x5
   870                           
   871  0075                     ASCII@aconvertir:	
   872                           ; 1 bytes @ 0x5
   873                           
   874  0075                     ___lwdiv@dividend:	
   875                           ; 1 bytes @ 0x5
   876                           
   877                           
   878                           ; 2 bytes @ 0x5
   879  0075                     	ds	1
   880  0076                     ??_EJEX_TO_CHARS:
   881  0076                     ??_ACELEROMETRO_W:	
   882                           ; 1 bytes @ 0x6
   883                           
   884                           
   885                           ; 1 bytes @ 0x6
   886  0076                     	ds	1
   887  0077                     ??___lwdiv:
   888                           
   889                           ; 1 bytes @ 0x7
   890  0077                     	ds	1
   891                           
   892                           	psect	cstackBANK0
   893  004B                     __pcstackBANK0:
   894  004B                     ?___lldiv:
   895  004B                     ACELEROMETRO_W@num:	
   896                           ; 4 bytes @ 0x0
   897                           
   898  004B                     ___lwdiv@counter:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  004B                     I2C_Master_Read@temp:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  004B                     ___lldiv@divisor:	
   905                           ; 2 bytes @ 0x0
   906                           
   907                           
   908                           ; 4 bytes @ 0x0
   909  004B                     	ds	1
   910  004C                     ??_ACELEROMETRO_CONFIG:
   911  004C                     ___lwdiv@quotient:	
   912                           ; 1 bytes @ 0x1
   913                           
   914                           
   915                           ; 2 bytes @ 0x1
   916  004C                     	ds	1
   917  004D                     ?_ACELEROMETRO_R:
   918                           
   919                           ; 2 bytes @ 0x2
   920  004D                     	ds	1
   921  004E                     ?___lwmod:
   922  004E                     ___lwmod@divisor:	
   923                           ; 2 bytes @ 0x3
   924                           
   925                           
   926                           ; 2 bytes @ 0x3
   927  004E                     	ds	1
   928  004F                     ??_ACELEROMETRO_R:
   929  004F                     ___lldiv@dividend:	
   930                           ; 1 bytes @ 0x4
   931                           
   932                           
   933                           ; 4 bytes @ 0x4
   934  004F                     	ds	1
   935  0050                     ___lwmod@dividend:
   936                           
   937                           ; 2 bytes @ 0x5
   938  0050                     	ds	1
   939  0051                     ACELEROMETRO_R@num:
   940                           
   941                           ; 1 bytes @ 0x6
   942  0051                     	ds	1
   943  0052                     ??___lwmod:
   944  0052                     ACELEROMETRO_R@LECTURA:	
   945                           ; 1 bytes @ 0x7
   946                           
   947                           
   948                           ; 2 bytes @ 0x7
   949  0052                     	ds	1
   950  0053                     ___lwmod@counter:
   951  0053                     ___lldiv@quotient:	
   952                           ; 1 bytes @ 0x8
   953                           
   954                           
   955                           ; 4 bytes @ 0x8
   956  0053                     	ds	1
   957  0054                     ??_LEER_VALORES:
   958  0054                     ?_printf:	
   959                           ; 1 bytes @ 0x9
   960                           
   961                           
   962                           ; 2 bytes @ 0x9
   963  0054                     	ds	2
   964  0056                     LEER_VALORES@tempx:
   965                           
   966                           ; 2 bytes @ 0xB
   967  0056                     	ds	1
   968  0057                     ___lldiv@counter:
   969                           
   970                           ; 1 bytes @ 0xC
   971  0057                     	ds	1
   972  0058                     ?_I2C_Master_Init:
   973  0058                     LEER_VALORES@tempy:	
   974                           ; 1 bytes @ 0xD
   975                           
   976  0058                     I2C_Master_Init@c:	
   977                           ; 2 bytes @ 0xD
   978                           
   979                           
   980                           ; 4 bytes @ 0xD
   981  0058                     	ds	2
   982  005A                     ??_printf:
   983  005A                     LEER_VALORES@tempz:	
   984                           ; 1 bytes @ 0xF
   985                           
   986                           
   987                           ; 2 bytes @ 0xF
   988  005A                     	ds	3
   989  005D                     printf@idx:
   990                           
   991                           ; 1 bytes @ 0x12
   992  005D                     	ds	1
   993  005E                     printf@f:
   994                           
   995                           ; 1 bytes @ 0x13
   996  005E                     	ds	1
   997  005F                     printf@ap:
   998                           
   999                           ; 1 bytes @ 0x14
  1000  005F                     	ds	1
  1001  0060                     printf@prec:
  1002                           
  1003                           ; 1 bytes @ 0x15
  1004  0060                     	ds	1
  1005  0061                     printf@flag:
  1006                           
  1007                           ; 1 bytes @ 0x16
  1008  0061                     	ds	1
  1009  0062                     printf@val:
  1010                           
  1011                           ; 2 bytes @ 0x17
  1012  0062                     	ds	2
  1013  0064                     printf@c:
  1014                           
  1015                           ; 1 bytes @ 0x19
  1016  0064                     	ds	1
  1017                           
  1018                           	psect	maintext
  1019  02A2                     __pmaintext:	
  1020 ;;
  1021 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1022 ;;
  1023 ;; *************** function _main *****************
  1024 ;; Defined at:
  1025 ;;		line 210 in file "Principal_Master.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : B00/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0
  1041 ;;      Temps:          0       0       3       0       0
  1042 ;;      Totals:         0       0       3       0       0
  1043 ;;Total ram usage:        3 bytes
  1044 ;; Hardware stack levels required when called:    5
  1045 ;; This function calls:
  1046 ;;		_ACELEROMETRO_CONFIG
  1047 ;;		_EJEX_TO_CHARS
  1048 ;;		_I2C_Master_Init
  1049 ;;		_LEER_VALORES
  1050 ;;		_SETUP
  1051 ;;		_printf
  1052 ;; This function is called by:
  1053 ;;		Startup code after reset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           
  1058                           ;psect for function _main
  1059  02A2                     _main:
  1060  02A2                     l2444:	
  1061                           ;incstack = 0
  1062                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1063                           
  1064                           
  1065                           ;Principal_Master.c: 211:     SETUP();
  1066  02A2  120A  118A  2586  120A  118A  	fcall	_SETUP
  1067  02A7                     l2446:
  1068                           
  1069                           ;Principal_Master.c: 212:     printf("Buenos dias \r");
  1070  02A7  3024               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1071  02A8  120A  118A  2031  120A  118A  	fcall	_printf
  1072  02AD                     l2448:
  1073                           
  1074                           ;Principal_Master.c: 213:     I2C_Master_Init(100000);
  1075  02AD  3000               	movlw	0
  1076  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1077  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1078  02B0  00DB               	movwf	I2C_Master_Init@c+3
  1079  02B1  3001               	movlw	1
  1080  02B2  00DA               	movwf	I2C_Master_Init@c+2
  1081  02B3  3086               	movlw	134
  1082  02B4  00D9               	movwf	I2C_Master_Init@c+1
  1083  02B5  30A0               	movlw	160
  1084  02B6  00D8               	movwf	I2C_Master_Init@c
  1085  02B7  120A  118A  24BC  120A  118A  	fcall	_I2C_Master_Init
  1086  02BC                     l2450:
  1087                           
  1088                           ;Principal_Master.c: 215:     ACELEROMETRO_CONFIG();
  1089  02BC  120A  118A  2557  120A  118A  	fcall	_ACELEROMETRO_CONFIG
  1090  02C1                     l2452:
  1091                           
  1092                           ;Principal_Master.c: 219:     LEER_VALORES();
  1093  02C1  120A  118A  21A0  120A  118A  	fcall	_LEER_VALORES
  1094  02C6                     l2454:
  1095                           
  1096                           ;Principal_Master.c: 220:     contador++;
  1097  02C6  3001               	movlw	1
  1098  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1099  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1100  02C9  07A0               	addwf	_contador,f
  1101  02CA  1803               	skipnc
  1102  02CB  0AA1               	incf	_contador+1,f
  1103  02CC  3000               	movlw	0
  1104  02CD  07A1               	addwf	_contador+1,f
  1105  02CE                     l2456:
  1106                           
  1107                           ;Principal_Master.c: 222:    printf("%d, %d, %d\r\n", EJEX, EJEY, EJEZ);
  1108  02CE  0827               	movf	_EJEX+1,w
  1109  02CF  00D5               	movwf	?_printf+1
  1110  02D0  0826               	movf	_EJEX,w
  1111  02D1  00D4               	movwf	?_printf
  1112  02D2  0825               	movf	_EJEY+1,w
  1113  02D3  00D7               	movwf	?_printf+3
  1114  02D4  0824               	movf	_EJEY,w
  1115  02D5  00D6               	movwf	?_printf+2
  1116  02D6  0823               	movf	_EJEZ+1,w
  1117  02D7  00D9               	movwf	?_printf+5
  1118  02D8  0822               	movf	_EJEZ,w
  1119  02D9  00D8               	movwf	?_printf+4
  1120  02DA  3032               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1121  02DB  120A  118A  2031  120A  118A  	fcall	_printf
  1122  02E0                     l2458:
  1123                           
  1124                           ;Principal_Master.c: 225:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1125  02E0  300B               	movlw	11
  1126  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  1127  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  1128  02E3  00A2               	movwf	(??_main^(0+128)+2)
  1129  02E4  3026               	movlw	38
  1130  02E5  00A1               	movwf	(??_main^(0+128)+1)
  1131  02E6  305D               	movlw	93
  1132  02E7  00A0               	movwf	??_main^(0+128)
  1133  02E8                     u1117:
  1134  02E8  0BA0               	decfsz	??_main^(0+128),f
  1135  02E9  2AE8               	goto	u1117
  1136  02EA  0BA1               	decfsz	(??_main^(0+128)+1),f
  1137  02EB  2AE8               	goto	u1117
  1138  02EC  0BA2               	decfsz	(??_main^(0+128)+2),f
  1139  02ED  2AE8               	goto	u1117
  1140  02EE                     l2460:
  1141                           
  1142                           ;Principal_Master.c: 227:     printf("c=%x ",c);
  1143  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1144  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1145  02F0  082C               	movf	_c,w
  1146  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  1147  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  1148  02F3  00A0               	movwf	??_main^(0+128)
  1149  02F4  01A1               	clrf	(??_main^(0+128)+1)
  1150  02F5  0820               	movf	??_main^(0+128),w
  1151  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1152  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1153  02F8  00D4               	movwf	?_printf
  1154  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  1155  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  1156  02FB  0821               	movf	(??_main+1)^(0+128),w
  1157  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1158  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1159  02FE  00D5               	movwf	?_printf+1
  1160  02FF  303F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1161  0300  120A  118A  2031  120A  118A  	fcall	_printf
  1162  0305  2AC1               	goto	l2452
  1163  0306  120A  118A  280C   	ljmp	start
  1164  0309                     __end_of_main:
  1165                           
  1166                           	psect	text1
  1167  0031                     __ptext1:	
  1168 ;; *************** function _printf *****************
  1169 ;; Defined at:
  1170 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  f               1    wreg     PTR const unsigned char 
  1173 ;;		 -> STR_3(6), STR_2(13), STR_1(14), 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  f               1   19[BANK0 ] PTR const unsigned char 
  1176 ;;		 -> STR_3(6), STR_2(13), STR_1(14), 
  1177 ;;  idx             1   18[BANK0 ] unsigned char 
  1178 ;;  tmpval          4    0        struct .
  1179 ;;  val             2   23[BANK0 ] unsigned int 
  1180 ;;  cp              2    0        PTR const unsigned char 
  1181 ;;  len             2    0        unsigned int 
  1182 ;;  c               1   25[BANK0 ] unsigned char 
  1183 ;;  flag            1   22[BANK0 ] unsigned char 
  1184 ;;  prec            1   21[BANK0 ] char 
  1185 ;;  ap              1   20[BANK0 ] PTR void [1]
  1186 ;;		 -> ?_printf(2), 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  2    9[BANK0 ] int 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         0       6       0       0       0
  1197 ;;      Locals:         0       8       0       0       0
  1198 ;;      Temps:          0       3       0       0       0
  1199 ;;      Totals:         0      17       0       0       0
  1200 ;;Total ram usage:       17 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; Hardware stack levels required when called:    2
  1203 ;; This function calls:
  1204 ;;		___lwdiv
  1205 ;;		___lwmod
  1206 ;;		_putch
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function _printf
  1214  0031                     _printf:
  1215                           
  1216                           ;incstack = 0
  1217                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1218                           ;printf@f stored from wreg
  1219  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0033  00DE               	movwf	printf@f
  1222  0034                     l2304:
  1223                           
  1224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1225  0034  3054               	movlw	(low (?_printf| 0))& (0+255)
  1226  0035  00DA               	movwf	??_printf
  1227  0036  085A               	movf	??_printf,w
  1228  0037  00DF               	movwf	printf@ap
  1229                           
  1230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1231  0038  298B               	goto	l2374
  1232  0039                     l2306:
  1233                           
  1234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1235  0039  3025               	movlw	37
  1236  003A  0664               	xorwf	printf@c,w
  1237  003B  1903               	btfsc	3,2
  1238  003C  283E               	goto	u1001
  1239  003D  283F               	goto	u1000
  1240  003E                     u1001:
  1241  003E  2846               	goto	l2310
  1242  003F                     u1000:
  1243  003F                     l2308:
  1244                           
  1245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1246  003F  0864               	movf	printf@c,w
  1247  0040  120A  118A  2608  120A  118A  	fcall	_putch
  1248                           
  1249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1250  0045  298B               	goto	l2374
  1251  0046                     l2310:
  1252                           
  1253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1254  0046  01E1               	clrf	printf@flag
  1255                           
  1256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1257  0047  284A               	goto	l2314
  1258  0048                     l430:	
  1259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 744:   case 'x':
  1260                           
  1261                           
  1262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 747:    flag |= 0
      +                          x80;
  1263  0048  17E1               	bsf	printf@flag,7
  1264                           
  1265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 749:    break;
  1266  0049  286A               	goto	l429
  1267  004A                     l2314:
  1268  004A  3001               	movlw	1
  1269  004B  07DE               	addwf	printf@f,f
  1270  004C  30FF               	movlw	-1
  1271  004D  075E               	addwf	printf@f,w
  1272  004E  0084               	movwf	4
  1273  004F  120A  118A  2366  120A  118A  	fcall	stringdir
  1274  0054  00E4               	movwf	printf@c
  1275  0055  00DA               	movwf	??_printf
  1276  0056  01DB               	clrf	??_printf+1
  1277                           
  1278                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1279                           ; Switch size 1, requested type "simple"
  1280                           ; Number of cases is 1, Range of values is 0 to 0
  1281                           ; switch strategies available:
  1282                           ; Name         Instructions Cycles
  1283                           ; simple_byte            4     3 (average)
  1284                           ; direct_byte           11     8 (fixed)
  1285                           ; jumptable            260     6 (fixed)
  1286                           ;	Chosen strategy is simple_byte
  1287  0057  085B               	movf	??_printf+1,w
  1288  0058  3A00               	xorlw	0	; case 0
  1289  0059  1903               	skipnz
  1290  005A  285C               	goto	l2582
  1291  005B  298B               	goto	l2374
  1292  005C                     l2582:
  1293                           
  1294                           ; Switch size 1, requested type "simple"
  1295                           ; Number of cases is 4, Range of values is 0 to 120
  1296                           ; switch strategies available:
  1297                           ; Name         Instructions Cycles
  1298                           ; simple_byte           13     7 (average)
  1299                           ; jumptable            260     6 (fixed)
  1300                           ;	Chosen strategy is simple_byte
  1301  005C  085A               	movf	??_printf,w
  1302  005D  3A00               	xorlw	0	; case 0
  1303  005E  1903               	skipnz
  1304  005F  299F               	goto	l454
  1305  0060  3A64               	xorlw	100	; case 100
  1306  0061  1903               	skipnz
  1307  0062  286A               	goto	l429
  1308  0063  3A0D               	xorlw	13	; case 105
  1309  0064  1903               	skipnz
  1310  0065  286A               	goto	l429
  1311  0066  3A11               	xorlw	17	; case 120
  1312  0067  1903               	skipnz
  1313  0068  2848               	goto	l430
  1314  0069  298B               	goto	l2374
  1315  006A                     l429:
  1316                           
  1317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & 0x80) == 0x00)
  1318  006A  1BE1               	btfsc	printf@flag,7
  1319  006B  286D               	goto	u1011
  1320  006C  286E               	goto	u1010
  1321  006D                     u1011:
  1322  006D  2888               	goto	l2326
  1323  006E                     u1010:
  1324  006E                     l2316:
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1327  006E  085F               	movf	printf@ap,w
  1328  006F  0084               	movwf	4
  1329  0070  1383               	bcf	3,7	;select IRP bank0
  1330  0071  0800               	movf	0,w
  1331  0072  00E2               	movwf	printf@val
  1332  0073  0A84               	incf	4,f
  1333  0074  0800               	movf	0,w
  1334  0075  00E3               	movwf	printf@val+1
  1335  0076                     l2318:
  1336  0076  3002               	movlw	2
  1337  0077  00DA               	movwf	??_printf
  1338  0078  085A               	movf	??_printf,w
  1339  0079  07DF               	addwf	printf@ap,f
  1340  007A                     l2320:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1343  007A  1FE3               	btfss	printf@val+1,7
  1344  007B  287D               	goto	u1021
  1345  007C  287E               	goto	u1020
  1346  007D                     u1021:
  1347  007D  28E7               	goto	l2352
  1348  007E                     u1020:
  1349  007E                     l2322:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1352  007E  3003               	movlw	3
  1353  007F  00DA               	movwf	??_printf
  1354  0080  085A               	movf	??_printf,w
  1355  0081  04E1               	iorwf	printf@flag,f
  1356  0082                     l2324:
  1357                           
  1358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1359  0082  09E2               	comf	printf@val,f
  1360  0083  09E3               	comf	printf@val+1,f
  1361  0084  0AE2               	incf	printf@val,f
  1362  0085  1903               	skipnz
  1363  0086  0AE3               	incf	printf@val+1,f
  1364  0087  28E7               	goto	l2352
  1365  0088                     l2326:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1368  0088  085F               	movf	printf@ap,w
  1369  0089  0084               	movwf	4
  1370  008A  1383               	bcf	3,7	;select IRP bank0
  1371  008B  0800               	movf	0,w
  1372  008C  00E2               	movwf	printf@val
  1373  008D  0A84               	incf	4,f
  1374  008E  0800               	movf	0,w
  1375  008F  00E3               	movwf	printf@val+1
  1376  0090                     l2328:
  1377  0090  3002               	movlw	2
  1378  0091  00DA               	movwf	??_printf
  1379  0092  085A               	movf	??_printf,w
  1380  0093  07DF               	addwf	printf@ap,f
  1381  0094  28E7               	goto	l2352
  1382  0095                     l436:	
  1383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1325:   case 0x00
      +                          :
  1384                           
  1385                           
  1386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1387  0095  01E4               	clrf	printf@c
  1388  0096  0AE4               	incf	printf@c,f
  1389  0097                     l2334:
  1390                           
  1391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1392  0097  0864               	movf	printf@c,w
  1393  0098  00DA               	movwf	??_printf
  1394  0099  075A               	addwf	??_printf,w
  1395  009A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1396  009B  0084               	movwf	4
  1397  009C  120A  118A  2366  120A  118A  	fcall	stringdir
  1398  00A1  00DB               	movwf	??_printf+1
  1399  00A2  120A  118A  2366  120A  118A  	fcall	stringdir
  1400  00A7  00DC               	movwf	??_printf+2
  1401  00A8  085C               	movf	??_printf+2,w
  1402  00A9  0263               	subwf	printf@val+1,w
  1403  00AA  1D03               	skipz
  1404  00AB  28AE               	goto	u1035
  1405  00AC  085B               	movf	??_printf+1,w
  1406  00AD  0262               	subwf	printf@val,w
  1407  00AE                     u1035:
  1408  00AE  1803               	skipnc
  1409  00AF  28B1               	goto	u1031
  1410  00B0  28B2               	goto	u1030
  1411  00B1                     u1031:
  1412  00B1  28B3               	goto	l2338
  1413  00B2                     u1030:
  1414  00B2  28F8               	goto	l2354
  1415  00B3                     l2338:
  1416  00B3  3001               	movlw	1
  1417  00B4  00DA               	movwf	??_printf
  1418  00B5  085A               	movf	??_printf,w
  1419  00B6  07E4               	addwf	printf@c,f
  1420  00B7  3005               	movlw	5
  1421  00B8  0664               	xorwf	printf@c,w
  1422  00B9  1D03               	btfss	3,2
  1423  00BA  28BC               	goto	u1041
  1424  00BB  28BD               	goto	u1040
  1425  00BC                     u1041:
  1426  00BC  2897               	goto	l2334
  1427  00BD                     u1040:
  1428  00BD  28F8               	goto	l2354
  1429  00BE                     l441:	
  1430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1340:   case 0x80
      +                          :
  1431                           
  1432                           
  1433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1342:    for(c = 
      +                          1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1434  00BE  01E4               	clrf	printf@c
  1435  00BF  0AE4               	incf	printf@c,f
  1436  00C0                     l2344:
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1343:     if(val 
      +                          < hexpowers[c])
  1439  00C0  0864               	movf	printf@c,w
  1440  00C1  00DA               	movwf	??_printf
  1441  00C2  075A               	addwf	??_printf,w
  1442  00C3  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  1443  00C4  0084               	movwf	4
  1444  00C5  120A  118A  2366  120A  118A  	fcall	stringdir
  1445  00CA  00DB               	movwf	??_printf+1
  1446  00CB  120A  118A  2366  120A  118A  	fcall	stringdir
  1447  00D0  00DC               	movwf	??_printf+2
  1448  00D1  085C               	movf	??_printf+2,w
  1449  00D2  0263               	subwf	printf@val+1,w
  1450  00D3  1D03               	skipz
  1451  00D4  28D7               	goto	u1055
  1452  00D5  085B               	movf	??_printf+1,w
  1453  00D6  0262               	subwf	printf@val,w
  1454  00D7                     u1055:
  1455  00D7  1803               	skipnc
  1456  00D8  28DA               	goto	u1051
  1457  00D9  28DB               	goto	u1050
  1458  00DA                     u1051:
  1459  00DA  28DC               	goto	l2348
  1460  00DB                     u1050:
  1461  00DB  28F8               	goto	l2354
  1462  00DC                     l2348:
  1463  00DC  3001               	movlw	1
  1464  00DD  00DA               	movwf	??_printf
  1465  00DE  085A               	movf	??_printf,w
  1466  00DF  07E4               	addwf	printf@c,f
  1467  00E0  3004               	movlw	4
  1468  00E1  0664               	xorwf	printf@c,w
  1469  00E2  1D03               	btfss	3,2
  1470  00E3  28E5               	goto	u1061
  1471  00E4  28E6               	goto	u1060
  1472  00E5                     u1061:
  1473  00E5  28C0               	goto	l2344
  1474  00E6                     u1060:
  1475  00E6  28F8               	goto	l2354
  1476  00E7                     l2352:
  1477  00E7  0861               	movf	printf@flag,w
  1478  00E8  3980               	andlw	128
  1479  00E9  00DA               	movwf	??_printf
  1480  00EA  01DB               	clrf	??_printf+1
  1481                           
  1482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1483                           ; Switch size 1, requested type "simple"
  1484                           ; Number of cases is 1, Range of values is 0 to 0
  1485                           ; switch strategies available:
  1486                           ; Name         Instructions Cycles
  1487                           ; simple_byte            4     3 (average)
  1488                           ; direct_byte           11     8 (fixed)
  1489                           ; jumptable            260     6 (fixed)
  1490                           ;	Chosen strategy is simple_byte
  1491  00EB  085B               	movf	??_printf+1,w
  1492  00EC  3A00               	xorlw	0	; case 0
  1493  00ED  1903               	skipnz
  1494  00EE  28F0               	goto	l2584
  1495  00EF  28F8               	goto	l2354
  1496  00F0                     l2584:
  1497                           
  1498                           ; Switch size 1, requested type "simple"
  1499                           ; Number of cases is 2, Range of values is 0 to 128
  1500                           ; switch strategies available:
  1501                           ; Name         Instructions Cycles
  1502                           ; simple_byte            7     4 (average)
  1503                           ; jumptable            260     6 (fixed)
  1504                           ;	Chosen strategy is simple_byte
  1505  00F0  085A               	movf	??_printf,w
  1506  00F1  3A00               	xorlw	0	; case 0
  1507  00F2  1903               	skipnz
  1508  00F3  2895               	goto	l436
  1509  00F4  3A80               	xorlw	128	; case 128
  1510  00F5  1903               	skipnz
  1511  00F6  28BE               	goto	l441
  1512  00F7  28F8               	goto	l2354
  1513  00F8                     l2354:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1516  00F8  0861               	movf	printf@flag,w
  1517  00F9  3903               	andlw	3
  1518  00FA  1903               	btfsc	3,2
  1519  00FB  28FD               	goto	u1071
  1520  00FC  28FE               	goto	u1070
  1521  00FD                     u1071:
  1522  00FD  2904               	goto	l2358
  1523  00FE                     u1070:
  1524  00FE                     l2356:
  1525                           
  1526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  1527  00FE  302D               	movlw	45
  1528  00FF  120A  118A  2608  120A  118A  	fcall	_putch
  1529  0104                     l2358:
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1532  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0106  0864               	movf	printf@c,w
  1535  0107  00DA               	movwf	??_printf
  1536  0108  085A               	movf	??_printf,w
  1537  0109  00E0               	movwf	printf@prec
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1540  010A  2980               	goto	l2372
  1541  010B                     l2360:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (va
      +                          l / dpowers[(unsigned char)prec]) % 10 + '0';
  1544  010B  300A               	movlw	10
  1545  010C  00CE               	movwf	___lwmod@divisor
  1546  010D  3000               	movlw	0
  1547  010E  00CF               	movwf	___lwmod@divisor+1
  1548  010F  0860               	movf	printf@prec,w
  1549  0110  00DA               	movwf	??_printf
  1550  0111  075A               	addwf	??_printf,w
  1551  0112  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1552  0113  0084               	movwf	4
  1553  0114  120A  118A  2366  120A  118A  	fcall	stringdir
  1554  0119  00F3               	movwf	___lwdiv@divisor
  1555  011A  120A  118A  2366  120A  118A  	fcall	stringdir
  1556  011F  00F4               	movwf	___lwdiv@divisor+1
  1557  0120  0863               	movf	printf@val+1,w
  1558  0121  00F6               	movwf	___lwdiv@dividend+1
  1559  0122  0862               	movf	printf@val,w
  1560  0123  00F5               	movwf	___lwdiv@dividend
  1561  0124  120A  118A  23F7  120A  118A  	fcall	___lwdiv
  1562  0129  0874               	movf	?___lwdiv+1,w
  1563  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1564  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1565  012C  00D1               	movwf	___lwmod@dividend+1
  1566  012D  0873               	movf	?___lwdiv,w
  1567  012E  00D0               	movwf	___lwmod@dividend
  1568  012F  120A  118A  2480  120A  118A  	fcall	___lwmod
  1569  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0136  084E               	movf	?___lwmod,w
  1572  0137  3E30               	addlw	48
  1573  0138  00DB               	movwf	??_printf+1
  1574  0139  085B               	movf	??_printf+1,w
  1575  013A  00E4               	movwf	printf@c
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1517:     break;
  1578  013B  297A               	goto	l2370
  1579  013C                     l2362:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1525:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1526:     unsigned char 
      +                          idx = (val / hexpowers[(unsigned char)prec]) & 0xF;
  1582  013C  0860               	movf	printf@prec,w
  1583  013D  00DA               	movwf	??_printf
  1584  013E  075A               	addwf	??_printf,w
  1585  013F  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  1586  0140  0084               	movwf	4
  1587  0141  120A  118A  2366  120A  118A  	fcall	stringdir
  1588  0146  00F3               	movwf	___lwdiv@divisor
  1589  0147  120A  118A  2366  120A  118A  	fcall	stringdir
  1590  014C  00F4               	movwf	___lwdiv@divisor+1
  1591  014D  0863               	movf	printf@val+1,w
  1592  014E  00F6               	movwf	___lwdiv@dividend+1
  1593  014F  0862               	movf	printf@val,w
  1594  0150  00F5               	movwf	___lwdiv@dividend
  1595  0151  120A  118A  23F7  120A  118A  	fcall	___lwdiv
  1596  0156  0873               	movf	?___lwdiv,w
  1597  0157  390F               	andlw	15
  1598  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1600  015A  00DB               	movwf	??_printf+1
  1601  015B  085B               	movf	??_printf+1,w
  1602  015C  00DD               	movwf	printf@idx
  1603  015D                     l2364:
  1604                           
  1605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1532:     c = "01
      +                          23456789abcdef"[idx];
  1606  015D  085D               	movf	printf@idx,w
  1607  015E  3E13               	addlw	low ((STR_4-__stringbase)| (0+32768))
  1608  015F  0084               	movwf	4
  1609  0160  120A  118A  2366  120A  118A  	fcall	stringdir
  1610  0165  00DA               	movwf	??_printf
  1611  0166  085A               	movf	??_printf,w
  1612  0167  00E4               	movwf	printf@c
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1534:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1536:     break;
  1615  0168  297A               	goto	l2370
  1616  0169                     l2368:
  1617  0169  0861               	movf	printf@flag,w
  1618  016A  3980               	andlw	128
  1619  016B  00DA               	movwf	??_printf
  1620  016C  01DB               	clrf	??_printf+1
  1621                           
  1622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1623                           ; Switch size 1, requested type "simple"
  1624                           ; Number of cases is 1, Range of values is 0 to 0
  1625                           ; switch strategies available:
  1626                           ; Name         Instructions Cycles
  1627                           ; simple_byte            4     3 (average)
  1628                           ; direct_byte           11     8 (fixed)
  1629                           ; jumptable            260     6 (fixed)
  1630                           ;	Chosen strategy is simple_byte
  1631  016D  085B               	movf	??_printf+1,w
  1632  016E  3A00               	xorlw	0	; case 0
  1633  016F  1903               	skipnz
  1634  0170  2972               	goto	l2586
  1635  0171  297A               	goto	l2370
  1636  0172                     l2586:
  1637                           
  1638                           ; Switch size 1, requested type "simple"
  1639                           ; Number of cases is 2, Range of values is 0 to 128
  1640                           ; switch strategies available:
  1641                           ; Name         Instructions Cycles
  1642                           ; simple_byte            7     4 (average)
  1643                           ; jumptable            260     6 (fixed)
  1644                           ;	Chosen strategy is simple_byte
  1645  0172  085A               	movf	??_printf,w
  1646  0173  3A00               	xorlw	0	; case 0
  1647  0174  1903               	skipnz
  1648  0175  290B               	goto	l2360
  1649  0176  3A80               	xorlw	128	; case 128
  1650  0177  1903               	skipnz
  1651  0178  293C               	goto	l2362
  1652  0179  297A               	goto	l2370
  1653  017A                     l2370:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    (putch(c
      +                          ) );
  1656  017A  0864               	movf	printf@c,w
  1657  017B  120A  118A  2608  120A  118A  	fcall	_putch
  1658  0180                     l2372:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1661  0180  30FF               	movlw	255
  1662  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0183  00DA               	movwf	??_printf
  1665  0184  085A               	movf	??_printf,w
  1666  0185  07E0               	addwf	printf@prec,f
  1667  0186  0A60               	incf	printf@prec,w
  1668  0187  1D03               	btfss	3,2
  1669  0188  298A               	goto	u1081
  1670  0189  298B               	goto	u1080
  1671  018A                     u1081:
  1672  018A  2969               	goto	l2368
  1673  018B                     u1080:
  1674  018B                     l2374:
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1677  018B  3001               	movlw	1
  1678  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1679  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1680  018E  07DE               	addwf	printf@f,f
  1681  018F  30FF               	movlw	-1
  1682  0190  075E               	addwf	printf@f,w
  1683  0191  0084               	movwf	4
  1684  0192  120A  118A  2366  120A  118A  	fcall	stringdir
  1685  0197  00DA               	movwf	??_printf
  1686  0198  085A               	movf	??_printf,w
  1687  0199  00E4               	movwf	printf@c
  1688  019A  0864               	movf	printf@c,w
  1689  019B  1D03               	btfss	3,2
  1690  019C  299E               	goto	u1091
  1691  019D  299F               	goto	u1090
  1692  019E                     u1091:
  1693  019E  2839               	goto	l2306
  1694  019F                     u1090:
  1695  019F                     l454:
  1696  019F  0008               	return
  1697  01A0                     __end_of_printf:
  1698                           
  1699                           	psect	text2
  1700  0608                     __ptext2:	
  1701 ;; *************** function _putch *****************
  1702 ;; Defined at:
  1703 ;;		line 123 in file "Principal_Master.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  data            1    wreg     unsigned char 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  data            1    3[COMMON] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       0       0       0       0
  1718 ;;      Locals:         1       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0
  1720 ;;      Totals:         1       0       0       0       0
  1721 ;;Total ram usage:        1 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_printf
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           
  1732                           ;psect for function _putch
  1733  0608                     _putch:
  1734                           
  1735                           ;incstack = 0
  1736                           ; Regs used in _putch: [wreg]
  1737                           ;putch@data stored from wreg
  1738  0608  00F3               	movwf	putch@data
  1739  0609                     l1630:
  1740  0609                     l177:	
  1741                           ;Principal_Master.c: 126:     while (TXIF == 0) {}
  1742                           
  1743  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1744  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1745  060B  1E0C               	btfss	12,4	;volatile
  1746  060C  2E0E               	goto	u451
  1747  060D  2E0F               	goto	u450
  1748  060E                     u451:
  1749  060E  2E09               	goto	l177
  1750  060F                     u450:
  1751  060F                     l1632:
  1752                           
  1753                           ;Principal_Master.c: 127:     TXREG = data;
  1754  060F  0873               	movf	putch@data,w
  1755  0610  0099               	movwf	25	;volatile
  1756  0611                     l180:
  1757  0611  0008               	return
  1758  0612                     __end_of_putch:
  1759                           
  1760                           	psect	text3
  1761  0480                     __ptext3:	
  1762 ;; *************** function ___lwmod *****************
  1763 ;; Defined at:
  1764 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  divisor         2    3[BANK0 ] unsigned int 
  1767 ;;  dividend        2    5[BANK0 ] unsigned int 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  counter         1    8[BANK0 ] unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  2    3[BANK0 ] unsigned int 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1779 ;;      Params:         0       4       0       0       0
  1780 ;;      Locals:         0       1       0       0       0
  1781 ;;      Temps:          0       1       0       0       0
  1782 ;;      Totals:         0       6       0       0       0
  1783 ;;Total ram usage:        6 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_printf
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           
  1794                           ;psect for function ___lwmod
  1795  0480                     ___lwmod:
  1796  0480                     l1812:	
  1797                           ;incstack = 0
  1798                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1799                           
  1800  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0482  084E               	movf	___lwmod@divisor,w
  1803  0483  044F               	iorwf	___lwmod@divisor+1,w
  1804  0484  1903               	btfsc	3,2
  1805  0485  2C87               	goto	u601
  1806  0486  2C88               	goto	u600
  1807  0487                     u601:
  1808  0487  2CB7               	goto	l1830
  1809  0488                     u600:
  1810  0488                     l1814:
  1811  0488  01D3               	clrf	___lwmod@counter
  1812  0489  0AD3               	incf	___lwmod@counter,f
  1813  048A  2C96               	goto	l1820
  1814  048B                     l1816:
  1815  048B  3001               	movlw	1
  1816  048C                     u615:
  1817  048C  1003               	clrc
  1818  048D  0DCE               	rlf	___lwmod@divisor,f
  1819  048E  0DCF               	rlf	___lwmod@divisor+1,f
  1820  048F  3EFF               	addlw	-1
  1821  0490  1D03               	skipz
  1822  0491  2C8C               	goto	u615
  1823  0492                     l1818:
  1824  0492  3001               	movlw	1
  1825  0493  00D2               	movwf	??___lwmod
  1826  0494  0852               	movf	??___lwmod,w
  1827  0495  07D3               	addwf	___lwmod@counter,f
  1828  0496                     l1820:
  1829  0496  1FCF               	btfss	___lwmod@divisor+1,7
  1830  0497  2C99               	goto	u621
  1831  0498  2C9A               	goto	u620
  1832  0499                     u621:
  1833  0499  2C8B               	goto	l1816
  1834  049A                     u620:
  1835  049A                     l1822:
  1836  049A  084F               	movf	___lwmod@divisor+1,w
  1837  049B  0251               	subwf	___lwmod@dividend+1,w
  1838  049C  1D03               	skipz
  1839  049D  2CA0               	goto	u635
  1840  049E  084E               	movf	___lwmod@divisor,w
  1841  049F  0250               	subwf	___lwmod@dividend,w
  1842  04A0                     u635:
  1843  04A0  1C03               	skipc
  1844  04A1  2CA3               	goto	u631
  1845  04A2  2CA4               	goto	u630
  1846  04A3                     u631:
  1847  04A3  2CAA               	goto	l1826
  1848  04A4                     u630:
  1849  04A4                     l1824:
  1850  04A4  084E               	movf	___lwmod@divisor,w
  1851  04A5  02D0               	subwf	___lwmod@dividend,f
  1852  04A6  084F               	movf	___lwmod@divisor+1,w
  1853  04A7  1C03               	skipc
  1854  04A8  03D1               	decf	___lwmod@dividend+1,f
  1855  04A9  02D1               	subwf	___lwmod@dividend+1,f
  1856  04AA                     l1826:
  1857  04AA  3001               	movlw	1
  1858  04AB                     u645:
  1859  04AB  1003               	clrc
  1860  04AC  0CCF               	rrf	___lwmod@divisor+1,f
  1861  04AD  0CCE               	rrf	___lwmod@divisor,f
  1862  04AE  3EFF               	addlw	-1
  1863  04AF  1D03               	skipz
  1864  04B0  2CAB               	goto	u645
  1865  04B1                     l1828:
  1866  04B1  3001               	movlw	1
  1867  04B2  02D3               	subwf	___lwmod@counter,f
  1868  04B3  1D03               	btfss	3,2
  1869  04B4  2CB6               	goto	u651
  1870  04B5  2CB7               	goto	u650
  1871  04B6                     u651:
  1872  04B6  2C9A               	goto	l1822
  1873  04B7                     u650:
  1874  04B7                     l1830:
  1875  04B7  0851               	movf	___lwmod@dividend+1,w
  1876  04B8  00CF               	movwf	?___lwmod+1
  1877  04B9  0850               	movf	___lwmod@dividend,w
  1878  04BA  00CE               	movwf	?___lwmod
  1879  04BB                     l740:
  1880  04BB  0008               	return
  1881  04BC                     __end_of___lwmod:
  1882                           
  1883                           	psect	text4
  1884  03F7                     __ptext4:	
  1885 ;; *************** function ___lwdiv *****************
  1886 ;; Defined at:
  1887 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  divisor         2    3[COMMON] unsigned int 
  1890 ;;  dividend        2    5[COMMON] unsigned int 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  quotient        2    1[BANK0 ] unsigned int 
  1893 ;;  counter         1    0[BANK0 ] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  2    3[COMMON] unsigned int 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1903 ;;      Params:         4       0       0       0       0
  1904 ;;      Locals:         0       3       0       0       0
  1905 ;;      Temps:          1       0       0       0       0
  1906 ;;      Totals:         5       3       0       0       0
  1907 ;;Total ram usage:        8 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_printf
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function ___lwdiv
  1919  03F7                     ___lwdiv:
  1920  03F7                     l2278:	
  1921                           ;incstack = 0
  1922                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1923                           
  1924  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1925  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1926  03F9  01CC               	clrf	___lwdiv@quotient
  1927  03FA  01CD               	clrf	___lwdiv@quotient+1
  1928  03FB                     l2280:
  1929  03FB  0873               	movf	___lwdiv@divisor,w
  1930  03FC  0474               	iorwf	___lwdiv@divisor+1,w
  1931  03FD  1903               	btfsc	3,2
  1932  03FE  2C00               	goto	u931
  1933  03FF  2C01               	goto	u930
  1934  0400                     u931:
  1935  0400  2C38               	goto	l2300
  1936  0401                     u930:
  1937  0401                     l2282:
  1938  0401  01CB               	clrf	___lwdiv@counter
  1939  0402  0ACB               	incf	___lwdiv@counter,f
  1940  0403  2C0F               	goto	l2288
  1941  0404                     l2284:
  1942  0404  3001               	movlw	1
  1943  0405                     u945:
  1944  0405  1003               	clrc
  1945  0406  0DF3               	rlf	___lwdiv@divisor,f
  1946  0407  0DF4               	rlf	___lwdiv@divisor+1,f
  1947  0408  3EFF               	addlw	-1
  1948  0409  1D03               	skipz
  1949  040A  2C05               	goto	u945
  1950  040B                     l2286:
  1951  040B  3001               	movlw	1
  1952  040C  00F7               	movwf	??___lwdiv
  1953  040D  0877               	movf	??___lwdiv,w
  1954  040E  07CB               	addwf	___lwdiv@counter,f
  1955  040F                     l2288:
  1956  040F  1FF4               	btfss	___lwdiv@divisor+1,7
  1957  0410  2C12               	goto	u951
  1958  0411  2C13               	goto	u950
  1959  0412                     u951:
  1960  0412  2C04               	goto	l2284
  1961  0413                     u950:
  1962  0413                     l2290:
  1963  0413  3001               	movlw	1
  1964  0414                     u965:
  1965  0414  1003               	clrc
  1966  0415  0DCC               	rlf	___lwdiv@quotient,f
  1967  0416  0DCD               	rlf	___lwdiv@quotient+1,f
  1968  0417  3EFF               	addlw	-1
  1969  0418  1D03               	skipz
  1970  0419  2C14               	goto	u965
  1971  041A  0874               	movf	___lwdiv@divisor+1,w
  1972  041B  0276               	subwf	___lwdiv@dividend+1,w
  1973  041C  1D03               	skipz
  1974  041D  2C20               	goto	u975
  1975  041E  0873               	movf	___lwdiv@divisor,w
  1976  041F  0275               	subwf	___lwdiv@dividend,w
  1977  0420                     u975:
  1978  0420  1C03               	skipc
  1979  0421  2C23               	goto	u971
  1980  0422  2C24               	goto	u970
  1981  0423                     u971:
  1982  0423  2C2B               	goto	l2296
  1983  0424                     u970:
  1984  0424                     l2292:
  1985  0424  0873               	movf	___lwdiv@divisor,w
  1986  0425  02F5               	subwf	___lwdiv@dividend,f
  1987  0426  0874               	movf	___lwdiv@divisor+1,w
  1988  0427  1C03               	skipc
  1989  0428  03F6               	decf	___lwdiv@dividend+1,f
  1990  0429  02F6               	subwf	___lwdiv@dividend+1,f
  1991  042A                     l2294:
  1992  042A  144C               	bsf	___lwdiv@quotient,0
  1993  042B                     l2296:
  1994  042B  3001               	movlw	1
  1995  042C                     u985:
  1996  042C  1003               	clrc
  1997  042D  0CF4               	rrf	___lwdiv@divisor+1,f
  1998  042E  0CF3               	rrf	___lwdiv@divisor,f
  1999  042F  3EFF               	addlw	-1
  2000  0430  1D03               	skipz
  2001  0431  2C2C               	goto	u985
  2002  0432                     l2298:
  2003  0432  3001               	movlw	1
  2004  0433  02CB               	subwf	___lwdiv@counter,f
  2005  0434  1D03               	btfss	3,2
  2006  0435  2C37               	goto	u991
  2007  0436  2C38               	goto	u990
  2008  0437                     u991:
  2009  0437  2C13               	goto	l2290
  2010  0438                     u990:
  2011  0438                     l2300:
  2012  0438  084D               	movf	___lwdiv@quotient+1,w
  2013  0439  00F4               	movwf	?___lwdiv+1
  2014  043A  084C               	movf	___lwdiv@quotient,w
  2015  043B  00F3               	movwf	?___lwdiv
  2016  043C                     l730:
  2017  043C  0008               	return
  2018  043D                     __end_of___lwdiv:
  2019                           
  2020                           	psect	text5
  2021  0586                     __ptext5:	
  2022 ;; *************** function _SETUP *****************
  2023 ;; Defined at:
  2024 ;;		line 252 in file "Principal_Master.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0, pclath, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2038 ;;      Params:         0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0
  2041 ;;      Totals:         0       0       0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    2
  2045 ;; This function calls:
  2046 ;;		_CONFIG_USART
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           
  2053                           ;psect for function _SETUP
  2054  0586                     _SETUP:
  2055  0586                     l1834:	
  2056                           ;incstack = 0
  2057                           ; Regs used in _SETUP: [wreg+status,2+status,0+pclath+cstack]
  2058                           
  2059                           
  2060                           ;Principal_Master.c: 255:     OPTION_REG = 0b11010111;
  2061  0586  30D7               	movlw	215
  2062  0587  1683               	bsf	3,5	;RP0=1, select bank1
  2063  0588  1303               	bcf	3,6	;RP1=0, select bank1
  2064  0589  0081               	movwf	1	;volatile
  2065  058A                     l1836:
  2066                           
  2067                           ;Principal_Master.c: 261:     OSCCONbits.IRCF2 = 1;
  2068  058A  170F               	bsf	15,6	;volatile
  2069  058B                     l1838:
  2070                           
  2071                           ;Principal_Master.c: 262:     OSCCONbits.IRCF1 = 1;
  2072  058B  168F               	bsf	15,5	;volatile
  2073  058C                     l1840:
  2074                           
  2075                           ;Principal_Master.c: 263:     OSCCONbits.IRCF0 = 0;
  2076  058C  120F               	bcf	15,4	;volatile
  2077  058D                     l1842:
  2078                           
  2079                           ;Principal_Master.c: 265:     PORTA = 0;
  2080  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2081  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2082  058F  0185               	clrf	5	;volatile
  2083  0590                     l1844:
  2084                           
  2085                           ;Principal_Master.c: 266:     PORTB = 0;
  2086  0590  0186               	clrf	6	;volatile
  2087  0591                     l1846:
  2088                           
  2089                           ;Principal_Master.c: 267:     PORTC = 0;
  2090  0591  0187               	clrf	7	;volatile
  2091  0592                     l1848:
  2092                           
  2093                           ;Principal_Master.c: 268:     PORTD = 0;
  2094  0592  0188               	clrf	8	;volatile
  2095  0593                     l1850:
  2096                           
  2097                           ;Principal_Master.c: 269:     PORTE = 0;
  2098  0593  0189               	clrf	9	;volatile
  2099  0594                     l1852:
  2100                           
  2101                           ;Principal_Master.c: 271:     TRISA = 0;
  2102  0594  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0595  1303               	bcf	3,6	;RP1=0, select bank1
  2104  0596  0185               	clrf	5	;volatile
  2105  0597                     l1854:
  2106                           
  2107                           ;Principal_Master.c: 272:     TRISB = 0;
  2108  0597  0186               	clrf	6	;volatile
  2109  0598                     l1856:
  2110                           
  2111                           ;Principal_Master.c: 273:     TRISC = 0;
  2112  0598  0187               	clrf	7	;volatile
  2113  0599                     l1858:
  2114                           
  2115                           ;Principal_Master.c: 274:     TRISD = 0;
  2116  0599  0188               	clrf	8	;volatile
  2117  059A                     l1860:
  2118                           
  2119                           ;Principal_Master.c: 275:     TRISE = 0;
  2120  059A  0189               	clrf	9	;volatile
  2121  059B                     l1862:
  2122                           
  2123                           ;Principal_Master.c: 279:     ANSEL = 0;
  2124  059B  1683               	bsf	3,5	;RP0=1, select bank3
  2125  059C  1703               	bsf	3,6	;RP1=1, select bank3
  2126  059D  0188               	clrf	8	;volatile
  2127  059E                     l1864:
  2128                           
  2129                           ;Principal_Master.c: 280:     ANSELH = 0;
  2130  059E  0189               	clrf	9	;volatile
  2131  059F                     l1866:
  2132                           
  2133                           ;Principal_Master.c: 282:     CONFIG_USART();
  2134  059F  120A  118A  25D4  120A  118A  	fcall	_CONFIG_USART
  2135  05A4                     l1868:
  2136                           
  2137                           ;Principal_Master.c: 287:     PIE1bits.RCIE = 1;
  2138  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  2139  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  2140  05A6  168C               	bsf	12,5	;volatile
  2141  05A7                     l1870:
  2142                           
  2143                           ;Principal_Master.c: 288:     PIR1bits.RCIF =0;
  2144  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2145  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2146  05A9  128C               	bcf	12,5	;volatile
  2147  05AA                     l1872:
  2148                           
  2149                           ;Principal_Master.c: 289:     INTCONbits.PEIE = 1;
  2150  05AA  170B               	bsf	11,6	;volatile
  2151  05AB                     l1874:
  2152                           
  2153                           ;Principal_Master.c: 290:     INTCONbits.GIE = 1;
  2154  05AB  178B               	bsf	11,7	;volatile
  2155  05AC                     l206:
  2156  05AC  0008               	return
  2157  05AD                     __end_of_SETUP:
  2158                           
  2159                           	psect	text6
  2160  05D4                     __ptext6:	
  2161 ;; *************** function _CONFIG_USART *****************
  2162 ;; Defined at:
  2163 ;;		line 7 in file "USART.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         0       0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0
  2180 ;;      Totals:         0       0       0       0       0
  2181 ;;Total ram usage:        0 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    1
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_SETUP
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           
  2192                           ;psect for function _CONFIG_USART
  2193  05D4                     _CONFIG_USART:
  2194  05D4                     l1634:	
  2195                           ;incstack = 0
  2196                           ; Regs used in _CONFIG_USART: [wreg+status,2]
  2197                           
  2198                           
  2199                           ;USART.c: 24:     TXSTAbits.TX9 = 0;
  2200  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  2201  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  2202  05D6  1318               	bcf	24,6	;volatile
  2203                           
  2204                           ;USART.c: 25:     TXSTAbits.SYNC = 0;
  2205  05D7  1218               	bcf	24,4	;volatile
  2206                           
  2207                           ;USART.c: 26:     TXSTAbits.BRGH = 1;
  2208  05D8  1518               	bsf	24,2	;volatile
  2209                           
  2210                           ;USART.c: 27:     BAUDCTLbits.BRG16 = 0;
  2211  05D9  1683               	bsf	3,5	;RP0=1, select bank3
  2212  05DA  1703               	bsf	3,6	;RP1=1, select bank3
  2213  05DB  1187               	bcf	7,3	;volatile
  2214  05DC                     l1636:
  2215                           
  2216                           ;USART.c: 28:     SPBRG = 25;
  2217  05DC  3019               	movlw	25
  2218  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  2219  05DE  1303               	bcf	3,6	;RP1=0, select bank1
  2220  05DF  0099               	movwf	25	;volatile
  2221  05E0                     l1638:
  2222                           
  2223                           ;USART.c: 29:     SPBRGH = 0;
  2224  05E0  019A               	clrf	26	;volatile
  2225  05E1                     l1640:
  2226                           
  2227                           ;USART.c: 30:     TXSTAbits.TXEN = 1;
  2228  05E1  1698               	bsf	24,5	;volatile
  2229  05E2                     l1642:
  2230                           
  2231                           ;USART.c: 31:     RCSTAbits.SPEN = 1;
  2232  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2233  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2234  05E4  1798               	bsf	24,7	;volatile
  2235  05E5                     l1644:
  2236                           
  2237                           ;USART.c: 32:     RCSTAbits.RX9 = 0;
  2238  05E5  1318               	bcf	24,6	;volatile
  2239  05E6                     l1646:
  2240                           
  2241                           ;USART.c: 33:     RCSTAbits.CREN = 1;
  2242  05E6  1618               	bsf	24,4	;volatile
  2243  05E7                     l305:
  2244  05E7  0008               	return
  2245  05E8                     __end_of_CONFIG_USART:
  2246                           
  2247                           	psect	text7
  2248  01A0                     __ptext7:	
  2249 ;; *************** function _LEER_VALORES *****************
  2250 ;; Defined at:
  2251 ;;		line 403 in file "Principal_Master.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  tempz           2   15[BANK0 ] int 
  2256 ;;  tempy           2   13[BANK0 ] int 
  2257 ;;  tempx           2   11[BANK0 ] int 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2267 ;;      Params:         0       0       0       0       0
  2268 ;;      Locals:         0       6       0       0       0
  2269 ;;      Temps:          0       2       0       0       0
  2270 ;;      Totals:         0       8       0       0       0
  2271 ;;Total ram usage:        8 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    4
  2274 ;; This function calls:
  2275 ;;		_ACELEROMETRO_R
  2276 ;; This function is called by:
  2277 ;;		_main
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function _LEER_VALORES
  2283  01A0                     _LEER_VALORES:
  2284  01A0                     l2412:	
  2285                           ;incstack = 0
  2286                           ; Regs used in _LEER_VALORES: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2287                           
  2288                           
  2289                           ;Principal_Master.c: 405:     int tempy =0;
  2290  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2291  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2292  01A2  01D8               	clrf	LEER_VALORES@tempy
  2293  01A3  01D9               	clrf	LEER_VALORES@tempy+1
  2294                           
  2295                           ;Principal_Master.c: 406:     int tempz =0;
  2296  01A4  01DA               	clrf	LEER_VALORES@tempz
  2297  01A5  01DB               	clrf	LEER_VALORES@tempz+1
  2298  01A6                     l2414:
  2299                           
  2300                           ;Principal_Master.c: 408:     XL = ACELEROMETRO_R(DX0);
  2301  01A6  3032               	movlw	50
  2302  01A7  120A  118A  23B0  120A  118A  	fcall	_ACELEROMETRO_R
  2303  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2304  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2305  01AE  084D               	movf	?_ACELEROMETRO_R,w
  2306  01AF  00D4               	movwf	??_LEER_VALORES
  2307  01B0  0854               	movf	??_LEER_VALORES,w
  2308  01B1  00CA               	movwf	_XL
  2309  01B2                     l2416:
  2310                           
  2311                           ;Principal_Master.c: 411:     XH = ACELEROMETRO_R(DX1);
  2312  01B2  3033               	movlw	51
  2313  01B3  120A  118A  23B0  120A  118A  	fcall	_ACELEROMETRO_R
  2314  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2315  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2316  01BA  084D               	movf	?_ACELEROMETRO_R,w
  2317  01BB  00D4               	movwf	??_LEER_VALORES
  2318  01BC  0854               	movf	??_LEER_VALORES,w
  2319  01BD  00C9               	movwf	_XH
  2320  01BE                     l2418:
  2321                           
  2322                           ;Principal_Master.c: 414:     tempx= XH;
  2323  01BE  0849               	movf	_XH,w
  2324  01BF  00D4               	movwf	??_LEER_VALORES
  2325  01C0  01D5               	clrf	??_LEER_VALORES+1
  2326  01C1  0854               	movf	??_LEER_VALORES,w
  2327  01C2  00D6               	movwf	LEER_VALORES@tempx
  2328  01C3  0855               	movf	??_LEER_VALORES+1,w
  2329  01C4  00D7               	movwf	LEER_VALORES@tempx+1
  2330  01C5                     l2420:
  2331                           
  2332                           ;Principal_Master.c: 417:     tempx = tempx<<8;
  2333  01C5  0857               	movf	LEER_VALORES@tempx+1,w
  2334  01C6  00D5               	movwf	??_LEER_VALORES+1
  2335  01C7  0856               	movf	LEER_VALORES@tempx,w
  2336  01C8  00D4               	movwf	??_LEER_VALORES
  2337  01C9  0854               	movf	??_LEER_VALORES,w
  2338  01CA  00D5               	movwf	??_LEER_VALORES+1
  2339  01CB  01D4               	clrf	??_LEER_VALORES
  2340  01CC  0854               	movf	??_LEER_VALORES,w
  2341  01CD  00D6               	movwf	LEER_VALORES@tempx
  2342  01CE  0855               	movf	??_LEER_VALORES+1,w
  2343  01CF  00D7               	movwf	LEER_VALORES@tempx+1
  2344  01D0                     l2422:
  2345                           
  2346                           ;Principal_Master.c: 420:     EJEX = tempx + XL;
  2347  01D0  084A               	movf	_XL,w
  2348  01D1  0756               	addwf	LEER_VALORES@tempx,w
  2349  01D2  00A6               	movwf	_EJEX
  2350  01D3  0857               	movf	LEER_VALORES@tempx+1,w
  2351  01D4  1803               	skipnc
  2352  01D5  0A57               	incf	LEER_VALORES@tempx+1,w
  2353  01D6  00A7               	movwf	_EJEX+1
  2354  01D7                     l2424:
  2355                           
  2356                           ;Principal_Master.c: 425:     YL = ACELEROMETRO_R(DY0);
  2357  01D7  3034               	movlw	52
  2358  01D8  120A  118A  23B0  120A  118A  	fcall	_ACELEROMETRO_R
  2359  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2360  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2361  01DF  084D               	movf	?_ACELEROMETRO_R,w
  2362  01E0  00D4               	movwf	??_LEER_VALORES
  2363  01E1  0854               	movf	??_LEER_VALORES,w
  2364  01E2  00C8               	movwf	_YL
  2365  01E3                     l2426:
  2366                           
  2367                           ;Principal_Master.c: 426:     YH = ACELEROMETRO_R(DY1);
  2368  01E3  3035               	movlw	53
  2369  01E4  120A  118A  23B0  120A  118A  	fcall	_ACELEROMETRO_R
  2370  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2371  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2372  01EB  084D               	movf	?_ACELEROMETRO_R,w
  2373  01EC  00D4               	movwf	??_LEER_VALORES
  2374  01ED  0854               	movf	??_LEER_VALORES,w
  2375  01EE  00C7               	movwf	_YH
  2376  01EF                     l2428:
  2377                           
  2378                           ;Principal_Master.c: 428:     tempy= YH;
  2379  01EF  0847               	movf	_YH,w
  2380  01F0  00D4               	movwf	??_LEER_VALORES
  2381  01F1  01D5               	clrf	??_LEER_VALORES+1
  2382  01F2  0854               	movf	??_LEER_VALORES,w
  2383  01F3  00D8               	movwf	LEER_VALORES@tempy
  2384  01F4  0855               	movf	??_LEER_VALORES+1,w
  2385  01F5  00D9               	movwf	LEER_VALORES@tempy+1
  2386  01F6                     l2430:
  2387                           
  2388                           ;Principal_Master.c: 431:     tempy = tempy<<8;
  2389  01F6  0859               	movf	LEER_VALORES@tempy+1,w
  2390  01F7  00D5               	movwf	??_LEER_VALORES+1
  2391  01F8  0858               	movf	LEER_VALORES@tempy,w
  2392  01F9  00D4               	movwf	??_LEER_VALORES
  2393  01FA  0854               	movf	??_LEER_VALORES,w
  2394  01FB  00D5               	movwf	??_LEER_VALORES+1
  2395  01FC  01D4               	clrf	??_LEER_VALORES
  2396  01FD  0854               	movf	??_LEER_VALORES,w
  2397  01FE  00D8               	movwf	LEER_VALORES@tempy
  2398  01FF  0855               	movf	??_LEER_VALORES+1,w
  2399  0200  00D9               	movwf	LEER_VALORES@tempy+1
  2400  0201                     l2432:
  2401                           
  2402                           ;Principal_Master.c: 434:     EJEY = tempy + YL;
  2403  0201  0848               	movf	_YL,w
  2404  0202  0758               	addwf	LEER_VALORES@tempy,w
  2405  0203  00A4               	movwf	_EJEY
  2406  0204  0859               	movf	LEER_VALORES@tempy+1,w
  2407  0205  1803               	skipnc
  2408  0206  0A59               	incf	LEER_VALORES@tempy+1,w
  2409  0207  00A5               	movwf	_EJEY+1
  2410  0208                     l2434:
  2411                           
  2412                           ;Principal_Master.c: 436:     ZL = ACELEROMETRO_R(DZ0);
  2413  0208  3036               	movlw	54
  2414  0209  120A  118A  23B0  120A  118A  	fcall	_ACELEROMETRO_R
  2415  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2416  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0210  084D               	movf	?_ACELEROMETRO_R,w
  2418  0211  00D4               	movwf	??_LEER_VALORES
  2419  0212  0854               	movf	??_LEER_VALORES,w
  2420  0213  00C6               	movwf	_ZL
  2421  0214                     l2436:
  2422                           
  2423                           ;Principal_Master.c: 437:     ZH = ACELEROMETRO_R(DZ1);
  2424  0214  3037               	movlw	55
  2425  0215  120A  118A  23B0  120A  118A  	fcall	_ACELEROMETRO_R
  2426  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2427  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2428  021C  084D               	movf	?_ACELEROMETRO_R,w
  2429  021D  00D4               	movwf	??_LEER_VALORES
  2430  021E  0854               	movf	??_LEER_VALORES,w
  2431  021F  00C5               	movwf	_ZH
  2432  0220                     l2438:
  2433                           
  2434                           ;Principal_Master.c: 439:     tempz= ZH;
  2435  0220  0845               	movf	_ZH,w
  2436  0221  00D4               	movwf	??_LEER_VALORES
  2437  0222  01D5               	clrf	??_LEER_VALORES+1
  2438  0223  0854               	movf	??_LEER_VALORES,w
  2439  0224  00DA               	movwf	LEER_VALORES@tempz
  2440  0225  0855               	movf	??_LEER_VALORES+1,w
  2441  0226  00DB               	movwf	LEER_VALORES@tempz+1
  2442  0227                     l2440:
  2443                           
  2444                           ;Principal_Master.c: 442:     tempz = tempz<<8;
  2445  0227  085B               	movf	LEER_VALORES@tempz+1,w
  2446  0228  00D5               	movwf	??_LEER_VALORES+1
  2447  0229  085A               	movf	LEER_VALORES@tempz,w
  2448  022A  00D4               	movwf	??_LEER_VALORES
  2449  022B  0854               	movf	??_LEER_VALORES,w
  2450  022C  00D5               	movwf	??_LEER_VALORES+1
  2451  022D  01D4               	clrf	??_LEER_VALORES
  2452  022E  0854               	movf	??_LEER_VALORES,w
  2453  022F  00DA               	movwf	LEER_VALORES@tempz
  2454  0230  0855               	movf	??_LEER_VALORES+1,w
  2455  0231  00DB               	movwf	LEER_VALORES@tempz+1
  2456  0232                     l2442:
  2457                           
  2458                           ;Principal_Master.c: 445:     EJEZ = tempz + ZL;
  2459  0232  0846               	movf	_ZL,w
  2460  0233  075A               	addwf	LEER_VALORES@tempz,w
  2461  0234  00A2               	movwf	_EJEZ
  2462  0235  085B               	movf	LEER_VALORES@tempz+1,w
  2463  0236  1803               	skipnc
  2464  0237  0A5B               	incf	LEER_VALORES@tempz+1,w
  2465  0238  00A3               	movwf	_EJEZ+1
  2466  0239                     l228:
  2467  0239  0008               	return
  2468  023A                     __end_of_LEER_VALORES:
  2469                           
  2470                           	psect	text8
  2471  03B0                     __ptext8:	
  2472 ;; *************** function _ACELEROMETRO_R *****************
  2473 ;; Defined at:
  2474 ;;		line 307 in file "Principal_Master.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  num             1    wreg     unsigned char 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  num             1    6[BANK0 ] unsigned char 
  2479 ;;  LECTURA         2    7[BANK0 ] unsigned short 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  2    2[BANK0 ] unsigned short 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0, pclath, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2489 ;;      Params:         0       2       0       0       0
  2490 ;;      Locals:         0       3       0       0       0
  2491 ;;      Temps:          0       2       0       0       0
  2492 ;;      Totals:         0       7       0       0       0
  2493 ;;Total ram usage:        7 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    3
  2496 ;; This function calls:
  2497 ;;		_I2C_Master_Read
  2498 ;;		_I2C_Master_RepeatedStart
  2499 ;;		_I2C_Master_Start
  2500 ;;		_I2C_Master_Stop
  2501 ;;		_I2C_Master_Write
  2502 ;; This function is called by:
  2503 ;;		_LEER_VALORES
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           
  2508                           ;psect for function _ACELEROMETRO_R
  2509  03B0                     _ACELEROMETRO_R:
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in _ACELEROMETRO_R: [wreg+status,2+status,0+pclath+cstack]
  2513                           ;ACELEROMETRO_R@num stored from wreg
  2514  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2515  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2516  03B2  00D1               	movwf	ACELEROMETRO_R@num
  2517  03B3                     l2248:
  2518                           
  2519                           ;Principal_Master.c: 309:     unsigned short LECTURA;;Principal_Master.c: 311:     I2C_M
      +                          aster_Start();
  2520  03B3  120A  118A  2637  120A  118A  	fcall	_I2C_Master_Start
  2521                           
  2522                           ;Principal_Master.c: 312:     I2C_Master_Write(WRITE);
  2523  03B8  30A6               	movlw	166
  2524  03B9  00F3               	movwf	I2C_Master_Write@d
  2525  03BA  3000               	movlw	0
  2526  03BB  00F4               	movwf	I2C_Master_Write@d+1
  2527  03BC  120A  118A  2612  120A  118A  	fcall	_I2C_Master_Write
  2528                           
  2529                           ;Principal_Master.c: 313:     I2C_Master_Write(num);
  2530  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2531  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2532  03C3  0851               	movf	ACELEROMETRO_R@num,w
  2533  03C4  00CF               	movwf	??_ACELEROMETRO_R
  2534  03C5  01D0               	clrf	??_ACELEROMETRO_R+1
  2535  03C6  084F               	movf	??_ACELEROMETRO_R,w
  2536  03C7  00F3               	movwf	I2C_Master_Write@d
  2537  03C8  0850               	movf	??_ACELEROMETRO_R+1,w
  2538  03C9  00F4               	movwf	I2C_Master_Write@d+1
  2539  03CA  120A  118A  2612  120A  118A  	fcall	_I2C_Master_Write
  2540                           
  2541                           ;Principal_Master.c: 314:     I2C_Master_RepeatedStart();
  2542  03CF  120A  118A  2625  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2543                           
  2544                           ;Principal_Master.c: 315:     I2C_Master_Write(READ);
  2545  03D4  30A7               	movlw	167
  2546  03D5  00F3               	movwf	I2C_Master_Write@d
  2547  03D6  3000               	movlw	0
  2548  03D7  00F4               	movwf	I2C_Master_Write@d+1
  2549  03D8  120A  118A  2612  120A  118A  	fcall	_I2C_Master_Write
  2550                           
  2551                           ;Principal_Master.c: 316:     LECTURA = I2C_Master_Read(0);
  2552  03DD  3000               	movlw	0
  2553  03DE  00F3               	movwf	I2C_Master_Read@a
  2554  03DF  00F4               	movwf	I2C_Master_Read@a+1
  2555  03E0  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Read
  2556  03E5  0874               	movf	?_I2C_Master_Read+1,w
  2557  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2558  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2559  03E8  00D3               	movwf	ACELEROMETRO_R@LECTURA+1
  2560  03E9  0873               	movf	?_I2C_Master_Read,w
  2561  03EA  00D2               	movwf	ACELEROMETRO_R@LECTURA
  2562                           
  2563                           ;Principal_Master.c: 317:     I2C_Master_Stop();
  2564  03EB  120A  118A  262E  120A  118A  	fcall	_I2C_Master_Stop
  2565  03F0                     l2250:
  2566                           
  2567                           ;Principal_Master.c: 319:     return LECTURA;
  2568  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2569  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2570  03F2  0853               	movf	ACELEROMETRO_R@LECTURA+1,w
  2571  03F3  00CE               	movwf	?_ACELEROMETRO_R+1
  2572  03F4  0852               	movf	ACELEROMETRO_R@LECTURA,w
  2573  03F5  00CD               	movwf	?_ACELEROMETRO_R
  2574  03F6                     l212:
  2575  03F6  0008               	return
  2576  03F7                     __end_of_ACELEROMETRO_R:
  2577                           
  2578                           	psect	text9
  2579  0625                     __ptext9:	
  2580 ;; *************** function _I2C_Master_RepeatedStart *****************
  2581 ;; Defined at:
  2582 ;;		line 28 in file "I2C.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, pclath, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2596 ;;      Params:         0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0
  2599 ;;      Totals:         0       0       0       0       0
  2600 ;;Total ram usage:        0 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    2
  2603 ;; This function calls:
  2604 ;;		_I2C_Master_Wait
  2605 ;; This function is called by:
  2606 ;;		_ACELEROMETRO_R
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function _I2C_Master_RepeatedStart
  2612  0625                     _I2C_Master_RepeatedStart:
  2613  0625                     l2222:	
  2614                           ;incstack = 0
  2615                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2616                           
  2617                           
  2618                           ;I2C.c: 30:   I2C_Master_Wait();
  2619  0625  120A  118A  25FB  120A  118A  	fcall	_I2C_Master_Wait
  2620  062A                     l2224:
  2621                           
  2622                           ;I2C.c: 31:   RSEN = 1;
  2623  062A  1683               	bsf	3,5	;RP0=1, select bank1
  2624  062B  1303               	bcf	3,6	;RP1=0, select bank1
  2625  062C  1491               	bsf	17,1	;volatile
  2626  062D                     l278:
  2627  062D  0008               	return
  2628  062E                     __end_of_I2C_Master_RepeatedStart:
  2629                           
  2630                           	psect	text10
  2631  0527                     __ptext10:	
  2632 ;; *************** function _I2C_Master_Read *****************
  2633 ;; Defined at:
  2634 ;;		line 46 in file "I2C.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  a               2    3[COMMON] unsigned short 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  temp            2    0[BANK0 ] unsigned short 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  2    3[COMMON] unsigned short 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         2       0       0       0       0
  2649 ;;      Locals:         0       2       0       0       0
  2650 ;;      Temps:          2       0       0       0       0
  2651 ;;      Totals:         4       2       0       0       0
  2652 ;;Total ram usage:        6 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    2
  2655 ;; This function calls:
  2656 ;;		_I2C_Master_Wait
  2657 ;; This function is called by:
  2658 ;;		_ACELEROMETRO_R
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           
  2663                           ;psect for function _I2C_Master_Read
  2664  0527                     _I2C_Master_Read:
  2665  0527                     l2226:	
  2666                           ;incstack = 0
  2667                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2668                           
  2669                           
  2670                           ;I2C.c: 46: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 47: {;I2C.c: 48:   u
      +                          nsigned short temp;;I2C.c: 49:     I2C_Master_Wait();
  2671  0527  120A  118A  25FB  120A  118A  	fcall	_I2C_Master_Wait
  2672  052C                     l2228:
  2673                           
  2674                           ;I2C.c: 50:     SSPCON2bits.RCEN = 1;
  2675  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2676  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2677  052E  1591               	bsf	17,3	;volatile
  2678                           
  2679                           ;I2C.c: 51:     I2C_Master_Wait();
  2680  052F  120A  118A  25FB  120A  118A  	fcall	_I2C_Master_Wait
  2681  0534                     l2230:
  2682                           
  2683                           ;I2C.c: 52:     temp = SSPBUF;
  2684  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0535  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0536  0813               	movf	19,w	;volatile
  2687  0537  00F5               	movwf	??_I2C_Master_Read
  2688  0538  01F6               	clrf	??_I2C_Master_Read+1
  2689  0539  0875               	movf	??_I2C_Master_Read,w
  2690  053A  00CB               	movwf	I2C_Master_Read@temp
  2691  053B  0876               	movf	??_I2C_Master_Read+1,w
  2692  053C  00CC               	movwf	I2C_Master_Read@temp+1
  2693  053D                     l2232:
  2694                           
  2695                           ;I2C.c: 53:     I2C_Master_Wait();
  2696  053D  120A  118A  25FB  120A  118A  	fcall	_I2C_Master_Wait
  2697  0542                     l2234:
  2698                           
  2699                           ;I2C.c: 55:     if(a == 1){
  2700  0542  0373               	decf	I2C_Master_Read@a,w
  2701  0543  0474               	iorwf	I2C_Master_Read@a+1,w
  2702  0544  1D03               	btfss	3,2
  2703  0545  2D47               	goto	u851
  2704  0546  2D48               	goto	u850
  2705  0547                     u851:
  2706  0547  2D4C               	goto	l287
  2707  0548                     u850:
  2708  0548                     l2236:
  2709                           
  2710                           ;I2C.c: 56:         SSPCON2bits.ACKDT = 0;
  2711  0548  1683               	bsf	3,5	;RP0=1, select bank1
  2712  0549  1303               	bcf	3,6	;RP1=0, select bank1
  2713  054A  1291               	bcf	17,5	;volatile
  2714                           
  2715                           ;I2C.c: 57:     }
  2716  054B  2D4F               	goto	l288
  2717  054C                     l287:	
  2718                           ;I2C.c: 58:     else {
  2719                           
  2720                           
  2721                           ;I2C.c: 59:         SSPCON2bits.ACKDT = 1;
  2722  054C  1683               	bsf	3,5	;RP0=1, select bank1
  2723  054D  1303               	bcf	3,6	;RP1=0, select bank1
  2724  054E  1691               	bsf	17,5	;volatile
  2725  054F                     l288:	
  2726                           ;I2C.c: 60:     }
  2727                           
  2728                           
  2729                           ;I2C.c: 62:     SSPCON2bits.ACKEN = 1;
  2730  054F  1611               	bsf	17,4	;volatile
  2731  0550                     l2238:
  2732                           
  2733                           ;I2C.c: 63:     return temp;
  2734  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0552  084C               	movf	I2C_Master_Read@temp+1,w
  2737  0553  00F4               	movwf	?_I2C_Master_Read+1
  2738  0554  084B               	movf	I2C_Master_Read@temp,w
  2739  0555  00F3               	movwf	?_I2C_Master_Read
  2740  0556                     l289:
  2741  0556  0008               	return
  2742  0557                     __end_of_I2C_Master_Read:
  2743                           
  2744                           	psect	text11
  2745  04BC                     __ptext11:	
  2746 ;; *************** function _I2C_Master_Init *****************
  2747 ;; Defined at:
  2748 ;;		line 7 in file "I2C.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  c               4   13[BANK0 ] const unsigned long 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0, pclath, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2762 ;;      Params:         0       4       0       0       0
  2763 ;;      Locals:         0       0       0       0       0
  2764 ;;      Temps:          4       0       0       0       0
  2765 ;;      Totals:         4       4       0       0       0
  2766 ;;Total ram usage:        8 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    2
  2769 ;; This function calls:
  2770 ;;		___lldiv
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           
  2777                           ;psect for function _I2C_Master_Init
  2778  04BC                     _I2C_Master_Init:
  2779  04BC                     l2394:	
  2780                           ;incstack = 0
  2781                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2782                           
  2783                           
  2784                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 9:   SSPCON = 
      +                          0b00101000;
  2785  04BC  3028               	movlw	40
  2786  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2787  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2788  04BF  0094               	movwf	20	;volatile
  2789  04C0                     l2396:
  2790                           
  2791                           ;I2C.c: 10:   SSPCON2 = 0;
  2792  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  2793  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  2794  04C2  0191               	clrf	17	;volatile
  2795  04C3                     l2398:
  2796                           
  2797                           ;I2C.c: 11:   SSPADD = (4000000/(4*c))-1;
  2798  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2799  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2800  04C5  0858               	movf	I2C_Master_Init@c,w
  2801  04C6  00F4               	movwf	??_I2C_Master_Init
  2802  04C7  0859               	movf	I2C_Master_Init@c+1,w
  2803  04C8  00F5               	movwf	??_I2C_Master_Init+1
  2804  04C9  085A               	movf	I2C_Master_Init@c+2,w
  2805  04CA  00F6               	movwf	??_I2C_Master_Init+2
  2806  04CB  085B               	movf	I2C_Master_Init@c+3,w
  2807  04CC  00F7               	movwf	??_I2C_Master_Init+3
  2808  04CD  3002               	movlw	2
  2809  04CE                     u1105:
  2810  04CE  1003               	clrc
  2811  04CF  0DF4               	rlf	??_I2C_Master_Init,f
  2812  04D0  0DF5               	rlf	??_I2C_Master_Init+1,f
  2813  04D1  0DF6               	rlf	??_I2C_Master_Init+2,f
  2814  04D2  0DF7               	rlf	??_I2C_Master_Init+3,f
  2815  04D3                     u1100:
  2816  04D3  3EFF               	addlw	-1
  2817  04D4  1D03               	skipz
  2818  04D5  2CCE               	goto	u1105
  2819  04D6  0877               	movf	??_I2C_Master_Init+3,w
  2820  04D7  00CE               	movwf	___lldiv@divisor+3
  2821  04D8  0876               	movf	??_I2C_Master_Init+2,w
  2822  04D9  00CD               	movwf	___lldiv@divisor+2
  2823  04DA  0875               	movf	??_I2C_Master_Init+1,w
  2824  04DB  00CC               	movwf	___lldiv@divisor+1
  2825  04DC  0874               	movf	??_I2C_Master_Init,w
  2826  04DD  00CB               	movwf	___lldiv@divisor
  2827  04DE  3000               	movlw	0
  2828  04DF  00D2               	movwf	___lldiv@dividend+3
  2829  04E0  303D               	movlw	61
  2830  04E1  00D1               	movwf	___lldiv@dividend+2
  2831  04E2  3009               	movlw	9
  2832  04E3  00D0               	movwf	___lldiv@dividend+1
  2833  04E4  3000               	movlw	0
  2834  04E5  00CF               	movwf	___lldiv@dividend
  2835  04E6  120A  118A  223A  120A  118A  	fcall	___lldiv
  2836  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2837  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2838  04ED  084B               	movf	?___lldiv,w
  2839  04EE  3EFF               	addlw	255
  2840  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2841  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2842  04F1  0093               	movwf	19	;volatile
  2843  04F2                     l2400:
  2844                           
  2845                           ;I2C.c: 12:   SSPSTAT = 0;
  2846  04F2  0194               	clrf	20	;volatile
  2847  04F3                     l2402:
  2848                           
  2849                           ;I2C.c: 13:   TRISCbits.TRISC3 = 1;
  2850  04F3  1587               	bsf	7,3	;volatile
  2851  04F4                     l2404:
  2852                           
  2853                           ;I2C.c: 14:   TRISCbits.TRISC4 = 1;
  2854  04F4  1607               	bsf	7,4	;volatile
  2855  04F5                     l266:
  2856  04F5  0008               	return
  2857  04F6                     __end_of_I2C_Master_Init:
  2858                           
  2859                           	psect	text12
  2860  023A                     __ptext12:	
  2861 ;; *************** function ___lldiv *****************
  2862 ;; Defined at:
  2863 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  divisor         4    0[BANK0 ] unsigned long 
  2866 ;;  dividend        4    4[BANK0 ] unsigned long 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  quotient        4    8[BANK0 ] unsigned long 
  2869 ;;  counter         1   12[BANK0 ] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  4    0[BANK0 ] unsigned long 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         0       8       0       0       0
  2880 ;;      Locals:         0       5       0       0       0
  2881 ;;      Temps:          1       0       0       0       0
  2882 ;;      Totals:         1      13       0       0       0
  2883 ;;Total ram usage:       14 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    1
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_I2C_Master_Init
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function ___lldiv
  2895  023A                     ___lldiv:
  2896  023A                     l2254:	
  2897                           ;incstack = 0
  2898                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2899                           
  2900  023A  3000               	movlw	0
  2901  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2902  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2903  023D  00D6               	movwf	___lldiv@quotient+3
  2904  023E  3000               	movlw	0
  2905  023F  00D5               	movwf	___lldiv@quotient+2
  2906  0240  3000               	movlw	0
  2907  0241  00D4               	movwf	___lldiv@quotient+1
  2908  0242  3000               	movlw	0
  2909  0243  00D3               	movwf	___lldiv@quotient
  2910  0244  084E               	movf	___lldiv@divisor+3,w
  2911  0245  044D               	iorwf	___lldiv@divisor+2,w
  2912  0246  044C               	iorwf	___lldiv@divisor+1,w
  2913  0247  044B               	iorwf	___lldiv@divisor,w
  2914  0248  1903               	skipnz
  2915  0249  2A4B               	goto	u861
  2916  024A  2A4C               	goto	u860
  2917  024B                     u861:
  2918  024B  2A99               	goto	l2274
  2919  024C                     u860:
  2920  024C                     l2256:
  2921  024C  01D7               	clrf	___lldiv@counter
  2922  024D  0AD7               	incf	___lldiv@counter,f
  2923  024E  2A5C               	goto	l2260
  2924  024F                     l2258:
  2925  024F  3001               	movlw	1
  2926  0250  00F3               	movwf	??___lldiv
  2927  0251                     u875:
  2928  0251  1003               	clrc
  2929  0252  0DCB               	rlf	___lldiv@divisor,f
  2930  0253  0DCC               	rlf	___lldiv@divisor+1,f
  2931  0254  0DCD               	rlf	___lldiv@divisor+2,f
  2932  0255  0DCE               	rlf	___lldiv@divisor+3,f
  2933  0256  0BF3               	decfsz	??___lldiv,f
  2934  0257  2A51               	goto	u875
  2935  0258  3001               	movlw	1
  2936  0259  00F3               	movwf	??___lldiv
  2937  025A  0873               	movf	??___lldiv,w
  2938  025B  07D7               	addwf	___lldiv@counter,f
  2939  025C                     l2260:
  2940  025C  1FCE               	btfss	___lldiv@divisor+3,7
  2941  025D  2A5F               	goto	u881
  2942  025E  2A60               	goto	u880
  2943  025F                     u881:
  2944  025F  2A4F               	goto	l2258
  2945  0260                     u880:
  2946  0260                     l2262:
  2947  0260  3001               	movlw	1
  2948  0261  00F3               	movwf	??___lldiv
  2949  0262                     u895:
  2950  0262  1003               	clrc
  2951  0263  0DD3               	rlf	___lldiv@quotient,f
  2952  0264  0DD4               	rlf	___lldiv@quotient+1,f
  2953  0265  0DD5               	rlf	___lldiv@quotient+2,f
  2954  0266  0DD6               	rlf	___lldiv@quotient+3,f
  2955  0267  0BF3               	decfsz	??___lldiv,f
  2956  0268  2A62               	goto	u895
  2957  0269                     l2264:
  2958  0269  084E               	movf	___lldiv@divisor+3,w
  2959  026A  0252               	subwf	___lldiv@dividend+3,w
  2960  026B  1D03               	skipz
  2961  026C  2A77               	goto	u905
  2962  026D  084D               	movf	___lldiv@divisor+2,w
  2963  026E  0251               	subwf	___lldiv@dividend+2,w
  2964  026F  1D03               	skipz
  2965  0270  2A77               	goto	u905
  2966  0271  084C               	movf	___lldiv@divisor+1,w
  2967  0272  0250               	subwf	___lldiv@dividend+1,w
  2968  0273  1D03               	skipz
  2969  0274  2A77               	goto	u905
  2970  0275  084B               	movf	___lldiv@divisor,w
  2971  0276  024F               	subwf	___lldiv@dividend,w
  2972  0277                     u905:
  2973  0277  1C03               	skipc
  2974  0278  2A7A               	goto	u901
  2975  0279  2A7B               	goto	u900
  2976  027A                     u901:
  2977  027A  2A8A               	goto	l2270
  2978  027B                     u900:
  2979  027B                     l2266:
  2980  027B  084B               	movf	___lldiv@divisor,w
  2981  027C  02CF               	subwf	___lldiv@dividend,f
  2982  027D  084C               	movf	___lldiv@divisor+1,w
  2983  027E  1C03               	skipc
  2984  027F  0F4C               	incfsz	___lldiv@divisor+1,w
  2985  0280  02D0               	subwf	___lldiv@dividend+1,f
  2986  0281  084D               	movf	___lldiv@divisor+2,w
  2987  0282  1C03               	skipc
  2988  0283  0F4D               	incfsz	___lldiv@divisor+2,w
  2989  0284  02D1               	subwf	___lldiv@dividend+2,f
  2990  0285  084E               	movf	___lldiv@divisor+3,w
  2991  0286  1C03               	skipc
  2992  0287  0F4E               	incfsz	___lldiv@divisor+3,w
  2993  0288  02D2               	subwf	___lldiv@dividend+3,f
  2994  0289                     l2268:
  2995  0289  1453               	bsf	___lldiv@quotient,0
  2996  028A                     l2270:
  2997  028A  3001               	movlw	1
  2998  028B                     u915:
  2999  028B  1003               	clrc
  3000  028C  0CCE               	rrf	___lldiv@divisor+3,f
  3001  028D  0CCD               	rrf	___lldiv@divisor+2,f
  3002  028E  0CCC               	rrf	___lldiv@divisor+1,f
  3003  028F  0CCB               	rrf	___lldiv@divisor,f
  3004  0290  3EFF               	addlw	-1
  3005  0291  1D03               	skipz
  3006  0292  2A8B               	goto	u915
  3007  0293                     l2272:
  3008  0293  3001               	movlw	1
  3009  0294  02D7               	subwf	___lldiv@counter,f
  3010  0295  1D03               	btfss	3,2
  3011  0296  2A98               	goto	u921
  3012  0297  2A99               	goto	u920
  3013  0298                     u921:
  3014  0298  2A60               	goto	l2262
  3015  0299                     u920:
  3016  0299                     l2274:
  3017  0299  0856               	movf	___lldiv@quotient+3,w
  3018  029A  00CE               	movwf	?___lldiv+3
  3019  029B  0855               	movf	___lldiv@quotient+2,w
  3020  029C  00CD               	movwf	?___lldiv+2
  3021  029D  0854               	movf	___lldiv@quotient+1,w
  3022  029E  00CC               	movwf	?___lldiv+1
  3023  029F  0853               	movf	___lldiv@quotient,w
  3024  02A0  00CB               	movwf	?___lldiv
  3025  02A1                     l494:
  3026  02A1  0008               	return
  3027  02A2                     __end_of___lldiv:
  3028                           
  3029                           	psect	text13
  3030  043D                     __ptext13:	
  3031 ;; *************** function _EJEX_TO_CHARS *****************
  3032 ;; Defined at:
  3033 ;;		line 448 in file "Principal_Master.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0
  3049 ;;      Temps:          2       0       0       0       0
  3050 ;;      Totals:         2       0       0       0       0
  3051 ;;Total ram usage:        2 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    2
  3054 ;; This function calls:
  3055 ;;		_ASCII
  3056 ;; This function is called by:
  3057 ;;		_main
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           
  3062                           ;psect for function _EJEX_TO_CHARS
  3063  043D                     _EJEX_TO_CHARS:
  3064  043D                     l2016:	
  3065                           ;incstack = 0
  3066                           ; Regs used in _EJEX_TO_CHARS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3067                           
  3068                           
  3069                           ;Principal_Master.c: 450:     X0 = ASCII(XH & 0b00001111);
  3070  043D  1283               	bcf	3,5	;RP0=0, select bank0
  3071  043E  1303               	bcf	3,6	;RP1=0, select bank0
  3072  043F  0849               	movf	_XH,w
  3073  0440  390F               	andlw	15
  3074  0441  120A  118A  2309  120A  118A  	fcall	_ASCII
  3075  0446  00F6               	movwf	??_EJEX_TO_CHARS
  3076  0447  0876               	movf	??_EJEX_TO_CHARS,w
  3077  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3078  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3079  044A  00C4               	movwf	_X0
  3080                           
  3081                           ;Principal_Master.c: 451:     X1 = ASCII((XH & 0b11110000) >> 4);
  3082  044B  0849               	movf	_XH,w
  3083  044C  00F6               	movwf	??_EJEX_TO_CHARS
  3084  044D  3004               	movlw	4
  3085  044E                     u775:
  3086  044E  1003               	clrc
  3087  044F  0CF6               	rrf	??_EJEX_TO_CHARS,f
  3088  0450  3EFF               	addlw	-1
  3089  0451  1D03               	skipz
  3090  0452  2C4E               	goto	u775
  3091  0453  0876               	movf	??_EJEX_TO_CHARS,w
  3092  0454  390F               	andlw	15
  3093  0455  120A  118A  2309  120A  118A  	fcall	_ASCII
  3094  045A  00F7               	movwf	??_EJEX_TO_CHARS+1
  3095  045B  0877               	movf	??_EJEX_TO_CHARS+1,w
  3096  045C  1283               	bcf	3,5	;RP0=0, select bank0
  3097  045D  1303               	bcf	3,6	;RP1=0, select bank0
  3098  045E  00C3               	movwf	_X1
  3099                           
  3100                           ;Principal_Master.c: 452:     X2 = ASCII(XL & 0b00001111);
  3101  045F  084A               	movf	_XL,w
  3102  0460  390F               	andlw	15
  3103  0461  120A  118A  2309  120A  118A  	fcall	_ASCII
  3104  0466  00F6               	movwf	??_EJEX_TO_CHARS
  3105  0467  0876               	movf	??_EJEX_TO_CHARS,w
  3106  0468  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0469  1303               	bcf	3,6	;RP1=0, select bank0
  3108  046A  00C2               	movwf	_X2
  3109                           
  3110                           ;Principal_Master.c: 453:     X3 = ASCII((XL & 0b11110000) >> 4);
  3111  046B  084A               	movf	_XL,w
  3112  046C  00F6               	movwf	??_EJEX_TO_CHARS
  3113  046D  3004               	movlw	4
  3114  046E                     u785:
  3115  046E  1003               	clrc
  3116  046F  0CF6               	rrf	??_EJEX_TO_CHARS,f
  3117  0470  3EFF               	addlw	-1
  3118  0471  1D03               	skipz
  3119  0472  2C6E               	goto	u785
  3120  0473  0876               	movf	??_EJEX_TO_CHARS,w
  3121  0474  390F               	andlw	15
  3122  0475  120A  118A  2309  120A  118A  	fcall	_ASCII
  3123  047A  00F7               	movwf	??_EJEX_TO_CHARS+1
  3124  047B  0877               	movf	??_EJEX_TO_CHARS+1,w
  3125  047C  1283               	bcf	3,5	;RP0=0, select bank0
  3126  047D  1303               	bcf	3,6	;RP1=0, select bank0
  3127  047E  00C1               	movwf	_X3
  3128  047F                     l231:
  3129  047F  0008               	return
  3130  0480                     __end_of_EJEX_TO_CHARS:
  3131                           
  3132                           	psect	text14
  3133  0309                     __ptext14:	
  3134 ;; *************** function _ASCII *****************
  3135 ;; Defined at:
  3136 ;;		line 39 in file "USART.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  aconvertir      1    wreg     unsigned char 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  aconvertir      1    5[COMMON] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      unsigned char 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3150 ;;      Params:         0       0       0       0       0
  3151 ;;      Locals:         1       0       0       0       0
  3152 ;;      Temps:          2       0       0       0       0
  3153 ;;      Totals:         3       0       0       0       0
  3154 ;;Total ram usage:        3 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    1
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_EJEX_TO_CHARS
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _ASCII
  3166  0309                     _ASCII:
  3167                           
  3168                           ;incstack = 0
  3169                           ; Regs used in _ASCII: [wreg-fsr0h+status,2+status,0]
  3170                           ;ASCII@aconvertir stored from wreg
  3171  0309  00F5               	movwf	ASCII@aconvertir
  3172  030A                     l1656:
  3173                           
  3174                           ;USART.c: 40:     switch(aconvertir){
  3175  030A  2B2B               	goto	l1756
  3176  030B                     l1658:
  3177                           
  3178                           ;USART.c: 42:             return 0x30;
  3179  030B  3030               	movlw	48
  3180  030C  2B65               	goto	l310
  3181  030D                     l1664:
  3182                           
  3183                           ;USART.c: 45:             return 0x31;
  3184  030D  3031               	movlw	49
  3185  030E  2B65               	goto	l310
  3186  030F                     l1670:
  3187                           
  3188                           ;USART.c: 48:             return 0x32;
  3189  030F  3032               	movlw	50
  3190  0310  2B65               	goto	l310
  3191  0311                     l1676:
  3192                           
  3193                           ;USART.c: 51:             return 0x33;
  3194  0311  3033               	movlw	51
  3195  0312  2B65               	goto	l310
  3196  0313                     l1682:
  3197                           
  3198                           ;USART.c: 54:             return 0x34;
  3199  0313  3034               	movlw	52
  3200  0314  2B65               	goto	l310
  3201  0315                     l1688:
  3202                           
  3203                           ;USART.c: 57:             return 0x35;
  3204  0315  3035               	movlw	53
  3205  0316  2B65               	goto	l310
  3206  0317                     l1694:
  3207                           
  3208                           ;USART.c: 60:             return 0x36;
  3209  0317  3036               	movlw	54
  3210  0318  2B65               	goto	l310
  3211  0319                     l1700:
  3212                           
  3213                           ;USART.c: 63:             return 0x37;
  3214  0319  3037               	movlw	55
  3215  031A  2B65               	goto	l310
  3216  031B                     l1706:
  3217                           
  3218                           ;USART.c: 66:             return 0x38;
  3219  031B  3038               	movlw	56
  3220  031C  2B65               	goto	l310
  3221  031D                     l1712:
  3222                           
  3223                           ;USART.c: 69:             return 0x39;
  3224  031D  3039               	movlw	57
  3225  031E  2B65               	goto	l310
  3226  031F                     l1718:
  3227                           
  3228                           ;USART.c: 72:             return 0x41;
  3229  031F  3041               	movlw	65
  3230  0320  2B65               	goto	l310
  3231  0321                     l1724:
  3232                           
  3233                           ;USART.c: 75:             return 0x42;
  3234  0321  3042               	movlw	66
  3235  0322  2B65               	goto	l310
  3236  0323                     l1730:
  3237                           
  3238                           ;USART.c: 78:             return 0x43;
  3239  0323  3043               	movlw	67
  3240  0324  2B65               	goto	l310
  3241  0325                     l1736:
  3242                           
  3243                           ;USART.c: 81:             return 0x44;
  3244  0325  3044               	movlw	68
  3245  0326  2B65               	goto	l310
  3246  0327                     l1742:
  3247                           
  3248                           ;USART.c: 84:             return 0x45;
  3249  0327  3045               	movlw	69
  3250  0328  2B65               	goto	l310
  3251  0329                     l1748:
  3252                           
  3253                           ;USART.c: 87:             return 0x46;
  3254  0329  3046               	movlw	70
  3255  032A  2B65               	goto	l310
  3256  032B                     l1756:
  3257  032B  0875               	movf	ASCII@aconvertir,w
  3258  032C  00F3               	movwf	??_ASCII
  3259  032D  01F4               	clrf	??_ASCII+1
  3260                           
  3261                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3262                           ; Switch size 1, requested type "simple"
  3263                           ; Number of cases is 1, Range of values is 0 to 0
  3264                           ; switch strategies available:
  3265                           ; Name         Instructions Cycles
  3266                           ; simple_byte            4     3 (average)
  3267                           ; direct_byte           11     8 (fixed)
  3268                           ; jumptable            260     6 (fixed)
  3269                           ;	Chosen strategy is simple_byte
  3270  032E  0874               	movf	??_ASCII+1,w
  3271  032F  3A00               	xorlw	0	; case 0
  3272  0330  1903               	skipnz
  3273  0331  2B33               	goto	l2588
  3274  0332  2B65               	goto	l310
  3275  0333                     l2588:
  3276                           
  3277                           ; Switch size 1, requested type "simple"
  3278                           ; Number of cases is 16, Range of values is 0 to 15
  3279                           ; switch strategies available:
  3280                           ; Name         Instructions Cycles
  3281                           ; simple_byte           49    25 (average)
  3282                           ; direct_byte           56     8 (fixed)
  3283                           ; jumptable            260     6 (fixed)
  3284                           ;	Chosen strategy is simple_byte
  3285  0333  0873               	movf	??_ASCII,w
  3286  0334  3A00               	xorlw	0	; case 0
  3287  0335  1903               	skipnz
  3288  0336  2B0B               	goto	l1658
  3289  0337  3A01               	xorlw	1	; case 1
  3290  0338  1903               	skipnz
  3291  0339  2B0D               	goto	l1664
  3292  033A  3A03               	xorlw	3	; case 2
  3293  033B  1903               	skipnz
  3294  033C  2B0F               	goto	l1670
  3295  033D  3A01               	xorlw	1	; case 3
  3296  033E  1903               	skipnz
  3297  033F  2B11               	goto	l1676
  3298  0340  3A07               	xorlw	7	; case 4
  3299  0341  1903               	skipnz
  3300  0342  2B13               	goto	l1682
  3301  0343  3A01               	xorlw	1	; case 5
  3302  0344  1903               	skipnz
  3303  0345  2B15               	goto	l1688
  3304  0346  3A03               	xorlw	3	; case 6
  3305  0347  1903               	skipnz
  3306  0348  2B17               	goto	l1694
  3307  0349  3A01               	xorlw	1	; case 7
  3308  034A  1903               	skipnz
  3309  034B  2B19               	goto	l1700
  3310  034C  3A0F               	xorlw	15	; case 8
  3311  034D  1903               	skipnz
  3312  034E  2B1B               	goto	l1706
  3313  034F  3A01               	xorlw	1	; case 9
  3314  0350  1903               	skipnz
  3315  0351  2B1D               	goto	l1712
  3316  0352  3A03               	xorlw	3	; case 10
  3317  0353  1903               	skipnz
  3318  0354  2B1F               	goto	l1718
  3319  0355  3A01               	xorlw	1	; case 11
  3320  0356  1903               	skipnz
  3321  0357  2B21               	goto	l1724
  3322  0358  3A07               	xorlw	7	; case 12
  3323  0359  1903               	skipnz
  3324  035A  2B23               	goto	l1730
  3325  035B  3A01               	xorlw	1	; case 13
  3326  035C  1903               	skipnz
  3327  035D  2B25               	goto	l1736
  3328  035E  3A03               	xorlw	3	; case 14
  3329  035F  1903               	skipnz
  3330  0360  2B27               	goto	l1742
  3331  0361  3A01               	xorlw	1	; case 15
  3332  0362  1903               	skipnz
  3333  0363  2B29               	goto	l1748
  3334  0364  2B65               	goto	l310
  3335  0365                     l310:
  3336  0365  0008               	return
  3337  0366                     __end_of_ASCII:
  3338                           
  3339                           	psect	text15
  3340  0557                     __ptext15:	
  3341 ;; *************** function _ACELEROMETRO_CONFIG *****************
  3342 ;; Defined at:
  3343 ;;		line 298 in file "Principal_Master.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, pclath, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3357 ;;      Params:         0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0
  3359 ;;      Temps:          0       2       0       0       0
  3360 ;;      Totals:         0       2       0       0       0
  3361 ;;Total ram usage:        2 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    4
  3364 ;; This function calls:
  3365 ;;		_ACELEROMETRO_W
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           
  3372                           ;psect for function _ACELEROMETRO_CONFIG
  3373  0557                     _ACELEROMETRO_CONFIG:
  3374  0557                     l2406:	
  3375                           ;incstack = 0
  3376                           ; Regs used in _ACELEROMETRO_CONFIG: [wreg+status,2+status,0+pclath+cstack]
  3377                           
  3378                           
  3379                           ;Principal_Master.c: 300:     ACELEROMETRO_W(D_FRMT, 0x0B);
  3380  0557  300B               	movlw	11
  3381  0558  1283               	bcf	3,5	;RP0=0, select bank0
  3382  0559  1303               	bcf	3,6	;RP1=0, select bank0
  3383  055A  00CC               	movwf	??_ACELEROMETRO_CONFIG
  3384  055B  084C               	movf	??_ACELEROMETRO_CONFIG,w
  3385  055C  00F5               	movwf	ACELEROMETRO_W@data
  3386  055D  3031               	movlw	49
  3387  055E  120A  118A  24F6  120A  118A  	fcall	_ACELEROMETRO_W
  3388  0563                     l2408:
  3389                           
  3390                           ;Principal_Master.c: 301:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3391  0563  3007               	movlw	7
  3392  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0565  1303               	bcf	3,6	;RP1=0, select bank0
  3394  0566  00CD               	movwf	??_ACELEROMETRO_CONFIG+1
  3395  0567  307C               	movlw	124
  3396  0568  00CC               	movwf	??_ACELEROMETRO_CONFIG
  3397  0569                     u1127:
  3398  0569  0BCC               	decfsz	??_ACELEROMETRO_CONFIG,f
  3399  056A  2D69               	goto	u1127
  3400  056B  0BCD               	decfsz	??_ACELEROMETRO_CONFIG+1,f
  3401  056C  2D69               	goto	u1127
  3402  056D  0000               	nop
  3403  056E                     l2410:
  3404                           
  3405                           ;Principal_Master.c: 303:     ACELEROMETRO_W(P_CTL, 0x08);
  3406  056E  3008               	movlw	8
  3407  056F  1283               	bcf	3,5	;RP0=0, select bank0
  3408  0570  1303               	bcf	3,6	;RP1=0, select bank0
  3409  0571  00CC               	movwf	??_ACELEROMETRO_CONFIG
  3410  0572  084C               	movf	??_ACELEROMETRO_CONFIG,w
  3411  0573  00F5               	movwf	ACELEROMETRO_W@data
  3412  0574  302D               	movlw	45
  3413  0575  120A  118A  24F6  120A  118A  	fcall	_ACELEROMETRO_W
  3414                           
  3415                           ;Principal_Master.c: 304:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3416  057A  3007               	movlw	7
  3417  057B  1283               	bcf	3,5	;RP0=0, select bank0
  3418  057C  1303               	bcf	3,6	;RP1=0, select bank0
  3419  057D  00CD               	movwf	??_ACELEROMETRO_CONFIG+1
  3420  057E  307C               	movlw	124
  3421  057F  00CC               	movwf	??_ACELEROMETRO_CONFIG
  3422  0580                     u1137:
  3423  0580  0BCC               	decfsz	??_ACELEROMETRO_CONFIG,f
  3424  0581  2D80               	goto	u1137
  3425  0582  0BCD               	decfsz	??_ACELEROMETRO_CONFIG+1,f
  3426  0583  2D80               	goto	u1137
  3427  0584  0000               	nop
  3428  0585                     l209:
  3429  0585  0008               	return
  3430  0586                     __end_of_ACELEROMETRO_CONFIG:
  3431                           
  3432                           	psect	text16
  3433  04F6                     __ptext16:	
  3434 ;; *************** function _ACELEROMETRO_W *****************
  3435 ;; Defined at:
  3436 ;;		line 322 in file "Principal_Master.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  num             1    wreg     unsigned char 
  3439 ;;  data            1    5[COMMON] unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  num             1    0[BANK0 ] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3451 ;;      Params:         1       0       0       0       0
  3452 ;;      Locals:         0       1       0       0       0
  3453 ;;      Temps:          2       0       0       0       0
  3454 ;;      Totals:         3       1       0       0       0
  3455 ;;Total ram usage:        4 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    3
  3458 ;; This function calls:
  3459 ;;		_I2C_Master_Start
  3460 ;;		_I2C_Master_Stop
  3461 ;;		_I2C_Master_Write
  3462 ;; This function is called by:
  3463 ;;		_ACELEROMETRO_CONFIG
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _ACELEROMETRO_W
  3469  04F6                     _ACELEROMETRO_W:
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _ACELEROMETRO_W: [wreg+status,2+status,0+pclath+cstack]
  3473                           ;ACELEROMETRO_W@num stored from wreg
  3474  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  3475  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  3476  04F8  00CB               	movwf	ACELEROMETRO_W@num
  3477  04F9                     l2246:
  3478                           
  3479                           ;Principal_Master.c: 324:     I2C_Master_Start();
  3480  04F9  120A  118A  2637  120A  118A  	fcall	_I2C_Master_Start
  3481                           
  3482                           ;Principal_Master.c: 325:     I2C_Master_Write(WRITE);
  3483  04FE  30A6               	movlw	166
  3484  04FF  00F3               	movwf	I2C_Master_Write@d
  3485  0500  3000               	movlw	0
  3486  0501  00F4               	movwf	I2C_Master_Write@d+1
  3487  0502  120A  118A  2612  120A  118A  	fcall	_I2C_Master_Write
  3488                           
  3489                           ;Principal_Master.c: 326:     I2C_Master_Write(num);
  3490  0507  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0508  1303               	bcf	3,6	;RP1=0, select bank0
  3492  0509  084B               	movf	ACELEROMETRO_W@num,w
  3493  050A  00F6               	movwf	??_ACELEROMETRO_W
  3494  050B  01F7               	clrf	??_ACELEROMETRO_W+1
  3495  050C  0876               	movf	??_ACELEROMETRO_W,w
  3496  050D  00F3               	movwf	I2C_Master_Write@d
  3497  050E  0877               	movf	??_ACELEROMETRO_W+1,w
  3498  050F  00F4               	movwf	I2C_Master_Write@d+1
  3499  0510  120A  118A  2612  120A  118A  	fcall	_I2C_Master_Write
  3500                           
  3501                           ;Principal_Master.c: 327:     I2C_Master_Write(data);
  3502  0515  0875               	movf	ACELEROMETRO_W@data,w
  3503  0516  00F6               	movwf	??_ACELEROMETRO_W
  3504  0517  01F7               	clrf	??_ACELEROMETRO_W+1
  3505  0518  0876               	movf	??_ACELEROMETRO_W,w
  3506  0519  00F3               	movwf	I2C_Master_Write@d
  3507  051A  0877               	movf	??_ACELEROMETRO_W+1,w
  3508  051B  00F4               	movwf	I2C_Master_Write@d+1
  3509  051C  120A  118A  2612  120A  118A  	fcall	_I2C_Master_Write
  3510                           
  3511                           ;Principal_Master.c: 328:     I2C_Master_Stop();
  3512  0521  120A  118A  262E  120A  118A  	fcall	_I2C_Master_Stop
  3513  0526                     l215:
  3514  0526  0008               	return
  3515  0527                     __end_of_ACELEROMETRO_W:
  3516                           
  3517                           	psect	text17
  3518  0612                     __ptext17:	
  3519 ;; *************** function _I2C_Master_Write *****************
  3520 ;; Defined at:
  3521 ;;		line 40 in file "I2C.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  d               2    3[COMMON] unsigned int 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0, pclath, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3535 ;;      Params:         2       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0
  3538 ;;      Totals:         2       0       0       0       0
  3539 ;;Total ram usage:        2 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    2
  3542 ;; This function calls:
  3543 ;;		_I2C_Master_Wait
  3544 ;; This function is called by:
  3545 ;;		_ACELEROMETRO_R
  3546 ;;		_ACELEROMETRO_W
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           
  3551                           ;psect for function _I2C_Master_Write
  3552  0612                     _I2C_Master_Write:
  3553  0612                     l2218:	
  3554                           ;incstack = 0
  3555                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3556                           
  3557                           
  3558                           ;I2C.c: 40: void I2C_Master_Write(unsigned d);I2C.c: 41: {;I2C.c: 42:   I2C_Master_Wait(
      +                          );
  3559  0612  120A  118A  25FB  120A  118A  	fcall	_I2C_Master_Wait
  3560  0617                     l2220:
  3561                           
  3562                           ;I2C.c: 43:   SSPBUF = d;
  3563  0617  0873               	movf	I2C_Master_Write@d,w
  3564  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3566  061A  0093               	movwf	19	;volatile
  3567  061B                     l284:
  3568  061B  0008               	return
  3569  061C                     __end_of_I2C_Master_Write:
  3570                           
  3571                           	psect	text18
  3572  062E                     __ptext18:	
  3573 ;; *************** function _I2C_Master_Stop *****************
  3574 ;; Defined at:
  3575 ;;		line 34 in file "I2C.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, pclath, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3589 ;;      Params:         0       0       0       0       0
  3590 ;;      Locals:         0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0
  3592 ;;      Totals:         0       0       0       0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    2
  3596 ;; This function calls:
  3597 ;;		_I2C_Master_Wait
  3598 ;; This function is called by:
  3599 ;;		_ACELEROMETRO_R
  3600 ;;		_ACELEROMETRO_W
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function _I2C_Master_Stop
  3606  062E                     _I2C_Master_Stop:
  3607  062E                     l2242:	
  3608                           ;incstack = 0
  3609                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3610                           
  3611                           
  3612                           ;I2C.c: 36:   I2C_Master_Wait();
  3613  062E  120A  118A  25FB  120A  118A  	fcall	_I2C_Master_Wait
  3614  0633                     l2244:
  3615                           
  3616                           ;I2C.c: 37:   PEN = 1;
  3617  0633  1683               	bsf	3,5	;RP0=1, select bank1
  3618  0634  1303               	bcf	3,6	;RP1=0, select bank1
  3619  0635  1511               	bsf	17,2	;volatile
  3620  0636                     l281:
  3621  0636  0008               	return
  3622  0637                     __end_of_I2C_Master_Stop:
  3623                           
  3624                           	psect	text19
  3625  0637                     __ptext19:	
  3626 ;; *************** function _I2C_Master_Start *****************
  3627 ;; Defined at:
  3628 ;;		line 22 in file "I2C.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0, pclath, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3642 ;;      Params:         0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0
  3645 ;;      Totals:         0       0       0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    2
  3649 ;; This function calls:
  3650 ;;		_I2C_Master_Wait
  3651 ;; This function is called by:
  3652 ;;		_ACELEROMETRO_R
  3653 ;;		_ACELEROMETRO_W
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _I2C_Master_Start
  3659  0637                     _I2C_Master_Start:
  3660  0637                     l2214:	
  3661                           ;incstack = 0
  3662                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3663                           
  3664                           
  3665                           ;I2C.c: 24:   I2C_Master_Wait();
  3666  0637  120A  118A  25FB  120A  118A  	fcall	_I2C_Master_Wait
  3667  063C                     l2216:
  3668                           
  3669                           ;I2C.c: 25:   SEN = 1;
  3670  063C  1683               	bsf	3,5	;RP0=1, select bank1
  3671  063D  1303               	bcf	3,6	;RP1=0, select bank1
  3672  063E  1411               	bsf	17,0	;volatile
  3673  063F                     l275:
  3674  063F  0008               	return
  3675  0640                     __end_of_I2C_Master_Start:
  3676                           
  3677                           	psect	text20
  3678  05FB                     __ptext20:	
  3679 ;; *************** function _I2C_Master_Wait *****************
  3680 ;; Defined at:
  3681 ;;		line 17 in file "I2C.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg, status,2
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3695 ;;      Params:         0       0       0       0       0
  3696 ;;      Locals:         0       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0
  3698 ;;      Totals:         0       0       0       0       0
  3699 ;;Total ram usage:        0 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:    1
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_I2C_Master_Start
  3706 ;;		_I2C_Master_RepeatedStart
  3707 ;;		_I2C_Master_Stop
  3708 ;;		_I2C_Master_Write
  3709 ;;		_I2C_Master_Read
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function _I2C_Master_Wait
  3715  05FB                     _I2C_Master_Wait:
  3716  05FB                     l2210:	
  3717                           ;incstack = 0
  3718                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3719                           
  3720  05FB                     l269:	
  3721                           ;I2C.c: 19:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3722                           
  3723  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3724  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  3725  05FD  1914               	btfsc	20,2	;volatile
  3726  05FE  2E00               	goto	u831
  3727  05FF  2E01               	goto	u830
  3728  0600                     u831:
  3729  0600  2DFB               	goto	l269
  3730  0601                     u830:
  3731  0601                     l2212:
  3732  0601  0811               	movf	17,w	;volatile
  3733  0602  391F               	andlw	31
  3734  0603  1D03               	btfss	3,2
  3735  0604  2E06               	goto	u841
  3736  0605  2E07               	goto	u840
  3737  0606                     u841:
  3738  0606  2DFB               	goto	l269
  3739  0607                     u840:
  3740  0607                     l272:
  3741  0607  0008               	return
  3742  0608                     __end_of_I2C_Master_Wait:
  3743                           
  3744                           	psect	text21
  3745  05AD                     __ptext21:	
  3746 ;; *************** function _isr *****************
  3747 ;; Defined at:
  3748 ;;		line 134 in file "Principal_Master.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3762 ;;      Params:         0       0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0
  3764 ;;      Temps:          3       0       0       0       0
  3765 ;;      Totals:         3       0       0       0       0
  3766 ;;Total ram usage:        3 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		Interrupt level 1
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function _isr
  3777  05AD                     _isr:
  3778  05AD                     i1l2018:
  3779                           
  3780                           ;Principal_Master.c: 135:     (INTCONbits.GIE = 0);
  3781  05AD  138B               	bcf	11,7	;volatile
  3782                           
  3783                           ;Principal_Master.c: 138:     if (PIR1bits.RCIF == 1) {
  3784  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  3785  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  3786  05B0  1E8C               	btfss	12,5	;volatile
  3787  05B1  2DB3               	goto	u79_21
  3788  05B2  2DB4               	goto	u79_20
  3789  05B3                     u79_21:
  3790  05B3  2DCC               	goto	i1l185
  3791  05B4                     u79_20:
  3792  05B4                     i1l2020:
  3793                           
  3794                           ;Principal_Master.c: 140:         c =RCREG;
  3795  05B4  081A               	movf	26,w	;volatile
  3796  05B5  00F0               	movwf	??_isr
  3797  05B6  0870               	movf	??_isr,w
  3798  05B7  00AC               	movwf	_c
  3799  05B8                     i1l2022:
  3800                           
  3801                           ;Principal_Master.c: 142:         if (c & 0x30) {
  3802  05B8  082C               	movf	_c,w
  3803  05B9  3930               	andlw	48
  3804  05BA  1903               	btfsc	3,2
  3805  05BB  2DBD               	goto	u80_21
  3806  05BC  2DBE               	goto	u80_20
  3807  05BD                     u80_21:
  3808  05BD  2DCC               	goto	i1l185
  3809  05BE                     u80_20:
  3810  05BE                     i1l2024:
  3811                           
  3812                           ;Principal_Master.c: 144:             if (c & 0x01) {
  3813  05BE  1C2C               	btfss	_c,0
  3814  05BF  2DC1               	goto	u81_21
  3815  05C0  2DC2               	goto	u81_20
  3816  05C1                     u81_21:
  3817  05C1  2DC4               	goto	i1l187
  3818  05C2                     u81_20:
  3819  05C2                     i1l2026:
  3820                           
  3821                           ;Principal_Master.c: 145:                 PORTAbits.RA0= 1;
  3822  05C2  1405               	bsf	5,0	;volatile
  3823                           
  3824                           ;Principal_Master.c: 146:             }
  3825  05C3  2DC5               	goto	i1l188
  3826  05C4                     i1l187:	
  3827                           ;Principal_Master.c: 147:             else {
  3828                           
  3829                           
  3830                           ;Principal_Master.c: 148:             PORTAbits.RA0= 0;
  3831  05C4  1005               	bcf	5,0	;volatile
  3832  05C5                     i1l188:	
  3833                           ;Principal_Master.c: 149:             }
  3834                           
  3835                           
  3836                           ;Principal_Master.c: 151:             if (c & 0x02) {
  3837  05C5  1CAC               	btfss	_c,1
  3838  05C6  2DC8               	goto	u82_21
  3839  05C7  2DC9               	goto	u82_20
  3840  05C8                     u82_21:
  3841  05C8  2DCB               	goto	i1l189
  3842  05C9                     u82_20:
  3843  05C9                     i1l2028:
  3844                           
  3845                           ;Principal_Master.c: 152:                 PORTAbits.RA1= 1;
  3846  05C9  1485               	bsf	5,1	;volatile
  3847                           
  3848                           ;Principal_Master.c: 153:             }
  3849  05CA  2DCC               	goto	i1l185
  3850  05CB                     i1l189:	
  3851                           ;Principal_Master.c: 154:             else {
  3852                           
  3853                           
  3854                           ;Principal_Master.c: 155:             PORTAbits.RA1= 0;
  3855  05CB  1085               	bcf	5,1	;volatile
  3856  05CC                     i1l185:	
  3857                           ;Principal_Master.c: 161:     }
  3858                           
  3859                           
  3860                           ;Principal_Master.c: 206:     (INTCONbits.GIE = 1);
  3861  05CC  178B               	bsf	11,7	;volatile
  3862  05CD                     i1l191:
  3863  05CD  0872               	movf	??_isr+2,w
  3864  05CE  008A               	movwf	10
  3865  05CF  0E71               	swapf	??_isr+1,w
  3866  05D0  0083               	movwf	3
  3867  05D1  0EFE               	swapf	btemp,f
  3868  05D2  0E7E               	swapf	btemp,w
  3869  05D3  0009               	retfie
  3870  05D4                     __end_of_isr:
  3871  007E                     btemp	set	126	;btemp
  3872  007E                     wtemp0	set	126
  3873                           
  3874                           	psect	intentry
  3875  0004                     __pintentry:	
  3876                           ;incstack = 0
  3877                           ; Regs used in _isr: [wreg+status,2]
  3878                           
  3879  0004                     interrupt_function:
  3880  007E                     saved_w	set	btemp
  3881  0004  00FE               	movwf	btemp
  3882  0005  0E03               	swapf	3,w
  3883  0006  00F1               	movwf	??_isr+1
  3884  0007  080A               	movf	10,w
  3885  0008  00F2               	movwf	??_isr+2
  3886  0009  120A  118A  2DAD   	ljmp	_isr
  3887                           
  3888                           	psect	config
  3889                           
  3890                           ;Config register CONFIG1 @ 0x2007
  3891                           ;	Oscillator Selection bits
  3892                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3893                           ;	Watchdog Timer Enable bit
  3894                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3895                           ;	Power-up Timer Enable bit
  3896                           ;	PWRTE = OFF, PWRT disabled
  3897                           ;	RE3/MCLR pin function select bit
  3898                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3899                           ;	Code Protection bit
  3900                           ;	CP = OFF, Program memory code protection is disabled
  3901                           ;	Data Code Protection bit
  3902                           ;	CPD = OFF, Data memory code protection is disabled
  3903                           ;	Brown Out Reset Selection bits
  3904                           ;	BOREN = ON, BOR enabled
  3905                           ;	Internal External Switchover bit
  3906                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3907                           ;	Fail-Safe Clock Monitor Enabled bit
  3908                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3909                           ;	Low Voltage Programming Enable bit
  3910                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3911                           ;	In-Circuit Debugger Mode bit
  3912                           ;	DEBUG = 0x1, unprogrammed default
  3913  2007                     	org	8199
  3914  2007  3FF5               	dw	16373
  3915                           
  3916                           ;Config register CONFIG2 @ 0x2008
  3917                           ;	Brown-out Reset Selection bit
  3918                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3919                           ;	Flash Program Memory Self Write Enable bits
  3920                           ;	WRT = OFF, Write protection off
  3921  2008                     	org	8200
  3922  2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    18
    Data        10
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     26      78
    BANK1            80      3       3
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[13]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_EJEX_TO_CHARS
    _main->_I2C_Master_Init
    _printf->___lwdiv
    ___lwmod->___lwdiv
    _ACELEROMETRO_R->_I2C_Master_Read
    _I2C_Master_Init->___lldiv
    _EJEX_TO_CHARS->_ASCII
    _ACELEROMETRO_CONFIG->_ACELEROMETRO_W
    _ACELEROMETRO_W->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _LEER_VALORES->_ACELEROMETRO_R
    _ACELEROMETRO_R->_I2C_Master_Read
    _I2C_Master_Init->___lldiv
    _ACELEROMETRO_CONFIG->_ACELEROMETRO_W

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4348
                                              0 BANK1      3     3      0
                _ACELEROMETRO_CONFIG
                      _EJEX_TO_CHARS
                    _I2C_Master_Init
                       _LEER_VALORES
                              _SETUP
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              25    19      6    1967
                                              9 BANK0     17    11      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
                       _CONFIG_USART
 ---------------------------------------------------------------------------------
 (2) _CONFIG_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEER_VALORES                                         8     8      0    1004
                                              9 BANK0      8     8      0
                     _ACELEROMETRO_R
 ---------------------------------------------------------------------------------
 (2) _ACELEROMETRO_R                                       7     5      2     791
                                              2 BANK0      7     5      2
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     155
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _EJEX_TO_CHARS                                        2     2      0      22
                                              6 COMMON     2     2      0
                              _ASCII
 ---------------------------------------------------------------------------------
 (2) _ASCII                                                3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ACELEROMETRO_CONFIG                                  2     2      0     813
                                              1 BANK0      2     2      0
                     _ACELEROMETRO_W
 ---------------------------------------------------------------------------------
 (2) _ACELEROMETRO_W                                       4     3      1     813
                                              5 COMMON     3     2      1
                                              0 BANK0      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     571
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ACELEROMETRO_CONFIG
     _ACELEROMETRO_W
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _EJEX_TO_CHARS
     _ASCII
   _I2C_Master_Init
     ___lldiv
   _LEER_VALORES
     _ACELEROMETRO_R
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _SETUP
     _CONFIG_USART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      3       3       7        3.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5C      12        0.0%
ABS                  0      0      5C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 02:12:48 2021

                    ?_LEER_VALORES 0070                                  _a 002E  
                                _b 002D                                  _c 002C  
                                pc 0002             __end_of_ACELEROMETRO_R 03F7  
           __end_of_ACELEROMETRO_W 0527                                 _X0 0044  
                               _X1 0043                                 _Y0 0040  
                               _X2 0042                                 _Y1 003F  
                               _X3 0041                                 _Y2 003E  
                               _Z0 003C                                 _Y3 003D  
                               _Z1 003B                                 _Z2 003A  
                               _Z3 0039                                 _XH 0049  
                               _YH 0047                                 _XL 004A  
                               _ZH 0045                                 _YL 0048  
                               _ZL 0046                                 fsr 0004  
                              l212 03F6                                l310 0365  
                              l206 05AC                                l215 0526  
                              l231 047F                                l209 0585  
                              l305 05E7                                l228 0239  
                              l180 0611                                l430 0048  
                              l272 0607                                l281 0636  
                              l177 0609                                l441 00BE  
                              l266 04F5                                l275 063F  
                              l284 061B                                l436 0095  
                              l269 05FB                                l429 006A  
                              l278 062D                                l454 019F  
                              l287 054C                                l288 054F  
                              l289 0556                                l730 043C  
                              l740 04BB                                l494 02A1  
                              _DX0 006A                                _DX1 0069  
                              _DY0 0068                                _DY1 0067  
                              _GIE 005F                                _DZ0 0066  
                              _DZ1 0065                                u600 0488  
                              _PEN 048A                                u601 0487  
                              u450 060F                                u451 060E  
                              u620 049A                                u621 0499  
                              u630 04A4                                u631 04A3  
                              u615 048C                                u650 04B7  
                              u651 04B6                                u635 04A0  
                              u900 027B                                _SEN 0488  
                              u901 027A                                u645 04AB  
                              u830 0601                                u831 0600  
                              u840 0607                                u920 0299  
                              u841 0606                                u921 0298  
                              u905 0277                                u850 0548  
                              u930 0401                                u915 028B  
                              u851 0547                                u931 0400  
                              u860 024C                                u861 024B  
                              u950 0413                                u775 044E  
                              u951 0412                                u880 0260  
                              u785 046E                                u881 025F  
                              u945 0405                                u970 0424  
                              u875 0251                                u971 0423  
                              u965 0414                                u990 0438  
                              u895 0262                                u991 0437  
                              u975 0420                                u985 042C  
                              _X_1 0038                                _Y_1 0036  
                              _Z_1 0037                                _X_D 0034  
                              _Y_D 0032                                _Z_D 0030  
                              _X_U 0035                                _Y_U 0033  
                              _Z_U 0031                                _isr 05AD  
                              fsr0 0004                                indf 0000  
                             l2016 043D                               l2210 05FB  
                             l2212 0601                               l2220 0617  
                             l2300 0438                               l2214 0637  
                             l2230 0534                               l2222 0625  
                             l2310 0046                               l2216 063C  
                             l2400 04F2                               l2232 053D  
                             l2224 062A                               l2320 007A  
                             l2304 0034                               l2242 062E  
                             l2218 0612                               l2410 056E  
                             l2402 04F3                               l2234 0542  
                             l2226 0527                               l2250 03F0  
                             l2322 007E                               l2314 004A  
                             l2306 0039                               l2244 0633  
                             l1700 0319                               l2260 025C  
                             l2404 04F4                               l2236 0548  
                             l2228 052C                               l2420 01C5  
                             l2412 01A0                               l2324 0082  
                             l2316 006E                               l2308 003F  
                             l2246 04F9                               l2406 0557  
                             l2270 028A                               l2262 0260  
                             l2254 023A                               l2238 0550  
                             l2430 01F6                               l2422 01D0  
                             l2414 01A6                               l1630 0609  
                             l2334 0097                               l2318 0076  
                             l2326 0088                               l2408 0563  
                             l1712 031D                               l2272 0293  
                             l2264 0269                               l2256 024C  
                             l2248 03B3                               l2440 0227  
                             l2432 0201                               l2424 01D7  
                             l2416 01B2                               l1640 05E1  
                             l2280 03FB                               l1632 060F  
                             l2360 010B                               l2344 00C0  
                             l2328 0090                               l2352 00E7  
                             l1730 0323                               l1706 031B  
                             l2266 027B                               l2258 024F  
                             l2274 0299                               l2442 0232  
                             l2434 0208                               l2426 01E3  
                             l2418 01BE                               l1642 05E2  
                             l1634 05D4                               l2290 0413  
                             l2282 0401                               l2362 013C  
                             l2370 017A                               l2354 00F8  
                             l2338 00B3                               l2450 02BC  
                             l1724 0321                               l2268 0289  
                             l2436 0214                               l2428 01EF  
                             l1644 05E5                               l1636 05DC  
                             l2292 0424                               l2284 0404  
                             l1820 0496                               l1812 0480  
                             l2364 015D                               l2372 0180  
                             l2356 00FE                               l2348 00DC  
                             l2460 02EE                               l2452 02C1  
                             l2444 02A2                               l1742 0327  
                             l1718 031F                               l1670 030F  
                             l2438 0220                               l1646 05E6  
                             l1638 05E0                               l2294 042A  
                             l2286 040B                               l2278 03F7  
                             l1822 049A                               l1814 0488  
                             l1830 04B7                               l2358 0104  
                             l2374 018B                               l2454 02C6  
                             l2446 02A7                               l1736 0325  
                             l1664 030D                               l1656 030A  
                             l1840 058C                               l2296 042B  
                             l2288 040F                               l1824 04A4  
                             l1816 048B                               l2368 0169  
                             l2456 02CE                               l2448 02AD  
                             l1682 0313                               l1658 030B  
                             l2394 04BC                               l1850 0593  
                             l1842 058D                               l1834 0586  
                             l2298 0432                               l1826 04AA  
                             l1818 0492                               l2458 02E0  
                             l1748 0329                               l1676 0311  
                             l1756 032B                               l2396 04C0  
                             l1860 059A                               l1852 0594  
                             l1844 0590                               l1836 058A  
                             l1828 04B1                               l1694 0317  
                             l2398 04C3                               l1870 05A7  
                             l1862 059B                               l1854 0597  
                             l1846 0591                               l1838 058B  
                             l2582 005C                               l1688 0315  
                             l1872 05AA                               l1864 059E  
                             l1856 0598                               l1848 0592  
                             l2584 00F0                               l1874 05AB  
                             l1866 059F                               l1858 0599  
                             l2586 0172                               l2588 0333  
                             l1868 05A4                               ?_isr 0070  
                             STR_1 038F                               STR_2 039D  
                             STR_3 03AA                               STR_4 037E  
                             _LED1 002B                               _LED2 002A  
                             _EJEX 0026                               _EJEY 0024  
                             _EJEZ 0022                               u1000 003F  
                             u1001 003E                               u1010 006E  
                             u1011 006D                               u1100 04D3  
                             u1020 007E                               u1021 007D  
                             u1030 00B2                               u1031 00B1  
                             u1040 00BD                               u1105 04CE  
                             u1041 00BC                               u1050 00DB  
                             u1051 00DA                               u1035 00AE  
                             u1060 00E6                               u1061 00E5  
                             u1117 02E8                               u1070 00FE  
                             u1127 0569                               u1071 00FD  
                             u1055 00D7                               u1080 018B  
                             u1137 0580                               u1081 018A  
                             u1090 019F                               u1091 019E  
                             _READ 006D                               _PEIE 005E  
                             _RSEN 0489                               _TXIF 0064  
 __end_of_I2C_Master_RepeatedStart 062E                               _main 02A2  
                             btemp 007E                               start 000C  
                   ??_LEER_VALORES 0054                              ??_isr 0070  
                  ?_ACELEROMETRO_R 004D                    ?_ACELEROMETRO_W 0075  
                 ?_I2C_Master_Init 0058                   ?_I2C_Master_Read 0073  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
             __end_of_CONFIG_USART 05E8                              ?_main 0070  
                            _ASCII 0309                              _ANSEL 0188  
                  __end_of___lldiv 02A2                              _ENTER 0029  
                  __end_of___lwdiv 043D                              i1l191 05CD  
                            i1l185 05CC                    __end_of___lwmod 04BC  
                            i1l187 05C4                              i1l188 05C5  
                            i1l189 05CB                              _RCREG 001A  
                            _SETUP 0586                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u80_20 05BE  
                            u80_21 05BD                              u81_20 05C2  
                            u81_21 05C1                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              u82_20 05C9  
                            _SSPIF 0063                              u82_21 05C8  
                            _P_CTL 006C                              u79_20 05B4  
                            u79_21 05B3                              _WRITE 007A  
                            _TXREG 0019                 ACELEROMETRO_W@data 0075  
                  __end_of_dpowers 0376                              _putch 0608  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 000F  
                     __end_of_main 0309                             ??_main 00A0  
                           ?_ASCII 0070                             ?_SETUP 0070  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
               ??_I2C_Master_Start 0073                 ??_I2C_Master_Write 0075  
                           ?_putch 0070                             _ANSELH 0189  
                           i1l2020 05B4                             i1l2022 05B8  
                           i1l2024 05BE                             i1l2026 05C2  
                           i1l2018 05AD                             i1l2028 05C9  
                           _D_FRMT 006B                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 0625  
                        ??___lldiv 0073       __size_of_ACELEROMETRO_CONFIG 002F  
                        ??___lwdiv 0077                          ??___lwmod 0052  
                           _printf 0031                       __pdataCOMMON 007A  
                           saved_w 007E              __end_of_EJEX_TO_CHARS 0480  
             __end_of_LEER_VALORES 023A            __end_of__initialization 002D  
                    __end_of_ASCII 0366                      __end_of_SETUP 05AD  
            __size_of_CONFIG_USART 0014                     __pcstackCOMMON 0070  
                     __pidataBANK0 061C                      __end_of_putch 0612  
                          ??_ASCII 0073                            ??_SETUP 0073  
                          ??_putch 0073                         __pbssBANK0 0020  
                     _CONFIG_USART 05D4                   ??_ACELEROMETRO_R 004F  
                 ??_ACELEROMETRO_W 0076                         __pmaintext 02A2  
                       __pintentry 0004                            ?_printf 0054  
                          _FLAG_RC 0028                            _LECTURA 0079  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 0366                          _BANDERA_T 0078  
                          ___lldiv 023A                            ___lwdiv 03F7  
                          ___lwmod 0480                            __ptext1 0031  
                          __ptext2 0608                            __ptext3 0480  
                          __ptext4 03F7                            __ptext5 0586  
                          __ptext6 05D4                            __ptext7 01A0  
                          __ptext8 03B0                            __ptext9 0625  
                  __size_of_printf 016F              __size_of_LEER_VALORES 009A  
                __end_of_hexpowers 037E                            _dpowers 036C  
                     __size_of_isr 0027           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            clrloop0 0641  
              _ACELEROMETRO_CONFIG 0557               end_of_initialization 002D  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 004B  
                  ___lldiv@counter 0057                          _RCSTAbits 0018  
                          printf@c 0064                            printf@f 005E  
                 I2C_Master_Init@c 0058                   I2C_Master_Read@a 0073  
                     _LEER_VALORES 01A0               ?_ACELEROMETRO_CONFIG 0070  
                        _PORTAbits 0005                          _TRISCbits 0087  
                        _TXSTAbits 0098                  LEER_VALORES@tempx 0056  
                LEER_VALORES@tempy 0058                  LEER_VALORES@tempz 005A  
            ??_ACELEROMETRO_CONFIG 004C                      __pidataCOMMON 0648  
                ACELEROMETRO_R@num 0051                        _BAUDCTLbits 0187  
                ACELEROMETRO_W@num 004B                     __end_of_printf 01A0  
              start_initialization 000F                        __end_of_isr 05D4  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
                       init_fetch0 05E8             __size_of_EJEX_TO_CHARS 0043  
                      __pdataBANK0 0065                           ??_printf 005A  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 004B                      __pcstackBANK1 00A0  
                 _I2C_Master_Start 0637                   _I2C_Master_Write 0612  
                 ___lwdiv@dividend 0075                           ?___lldiv 004B  
                         ?___lwdiv 0073                           ?___lwmod 004E  
                        __pstrings 0366                     __size_of_ASCII 005D  
                   __size_of_SETUP 0027                          _hexpowers 0376  
            ACELEROMETRO_R@LECTURA 0052                   ___lwdiv@quotient 004C  
                    _EJEX_TO_CHARS 043D                     __size_of_putch 000A  
                interrupt_function 0004                          clear_ram0 0640  
                         _PIE1bits 008C                           _PIR1bits 000C  
                      __stringbase 036B            __size_of_ACELEROMETRO_R 0047  
          __size_of_ACELEROMETRO_W 0031                         printf@flag 0061  
                       printf@prec 0060                     ?_EJEX_TO_CHARS 0070  
              I2C_Master_Read@temp 004B  __size_of_I2C_Master_RepeatedStart 0009  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                 __size_of___lwdiv 0046                   __size_of___lwmod 003C  
               __end_of__stringtab 036C                    _I2C_Master_Init 04BC  
                  _I2C_Master_Read 0527                    _I2C_Master_Wait 05FB  
                  _I2C_Master_Stop 062E                    ___lwdiv@divisor 0073  
                  ___lwdiv@counter 004B                           __ptext10 0527  
                         __ptext11 04BC                           __ptext20 05FB  
                         __ptext12 023A                           __ptext21 05AD  
                         __ptext13 043D                           __ptext14 0309  
                         __ptext15 0557                           __ptext16 04F6  
                         __ptext17 0612                           __ptext18 062E  
                         __ptext19 0637                           _contador 0020  
                    ?_CONFIG_USART 0070                      __size_of_main 0067  
      __end_of_ACELEROMETRO_CONFIG 0586                           _variable 002F  
                        printf@idx 005D                          printf@val 0062  
                        putch@data 0073           __end_of_I2C_Master_Start 0640  
         __end_of_I2C_Master_Write 061C                         _INTCONbits 000B  
                  ??_EJEX_TO_CHARS 0076                           init_ram0 05EC  
                         intlevel1 0000                     ??_CONFIG_USART 0073  
                 ___lwmod@dividend 0050                   ___lldiv@dividend 004F  
                        stringcode 0366                         _OSCCONbits 008F  
                         printf@ap 005F            __end_of_I2C_Master_Init 04F6  
          __end_of_I2C_Master_Read 0557            __end_of_I2C_Master_Wait 0608  
          __end_of_I2C_Master_Stop 0637                     _ACELEROMETRO_R 03B0  
                   _ACELEROMETRO_W 04F6                         _OPTION_REG 0081  
                 ___lldiv@quotient 0053                  I2C_Master_Write@d 0073  
                  ___lwmod@divisor 004E                    ___lwmod@counter 0053  
                         stringdir 0366                           stringtab 0366  
                      _SSPCON2bits 0091                    ASCII@aconvertir 0075  
