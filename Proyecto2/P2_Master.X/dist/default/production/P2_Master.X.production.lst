

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 04 12:55:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.31
    39                           ; Generated 13/10/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385                           
   386                           	psect	idataBANK0
   387  04FF                     __pidataBANK0:
   388                           
   389                           ;initializer for _DZ1
   390  04FF  3437               	retlw	55
   391                           
   392                           ;initializer for _DZ0
   393  0500  3436               	retlw	54
   394                           
   395                           ;initializer for _DY1
   396  0501  3435               	retlw	53
   397                           
   398                           ;initializer for _DY0
   399  0502  3434               	retlw	52
   400                           
   401                           ;initializer for _DX1
   402  0503  3433               	retlw	51
   403                           
   404                           ;initializer for _DX0
   405  0504  3432               	retlw	50
   406                           
   407                           ;initializer for _D_FRMT
   408  0505  3431               	retlw	49
   409                           
   410                           ;initializer for _P_CTL
   411  0506  342D               	retlw	45
   412                           
   413                           ;initializer for _READ
   414  0507  34A7               	retlw	167
   415                           
   416                           ;initializer for _WRITE
   417  0508  34A6               	retlw	166
   418  0018                     _RCSTAbits	set	24
   419  0013                     _SSPBUF	set	19
   420  0014                     _SSPCON	set	20
   421  0009                     _PORTE	set	9
   422  0008                     _PORTD	set	8
   423  0007                     _PORTC	set	7
   424  0006                     _PORTB	set	6
   425  0005                     _PORTA	set	5
   426  0019                     _TXREG	set	25
   427  000C                     _PIR1bits	set	12
   428  000B                     _INTCONbits	set	11
   429  0063                     _SSPIF	set	99
   430  005E                     _PEIE	set	94
   431  005F                     _GIE	set	95
   432  009A                     _SPBRGH	set	154
   433  0099                     _SPBRG	set	153
   434  0098                     _TXSTAbits	set	152
   435  0091                     _SSPCON2bits	set	145
   436  0094                     _SSPSTAT	set	148
   437  0093                     _SSPADD	set	147
   438  0091                     _SSPCON2	set	145
   439  008C                     _PIE1bits	set	140
   440  0087                     _TRISCbits	set	135
   441  0089                     _TRISE	set	137
   442  0088                     _TRISD	set	136
   443  0087                     _TRISC	set	135
   444  0086                     _TRISB	set	134
   445  0085                     _TRISA	set	133
   446  008F                     _OSCCONbits	set	143
   447  0463                     _SSPIE	set	1123
   448  043C                     _TRISC4	set	1084
   449  043B                     _TRISC3	set	1083
   450  048A                     _PEN	set	1162
   451  0489                     _RSEN	set	1161
   452  0488                     _SEN	set	1160
   453  0187                     _BAUDCTLbits	set	391
   454  0189                     _ANSELH	set	393
   455  0188                     _ANSEL	set	392
   456                           
   457                           	psect	cinit
   458  0013                     start_initialization:	
   459                           ; #config settings
   460                           
   461  0013                     __initialization:
   462                           
   463                           ; Initialize objects allocated to BANK0
   464  0013  1383               	bcf	3,7	;select IRP bank0
   465  0014  3058               	movlw	low (__pdataBANK0+10)
   466  0015  00FD               	movwf	btemp+-1
   467  0016  3004               	movlw	high __pidataBANK0
   468  0017  00FE               	movwf	btemp
   469  0018  30FF               	movlw	low __pidataBANK0
   470  0019  00FF               	movwf	btemp+1
   471  001A  304E               	movlw	low __pdataBANK0
   472  001B  0084               	movwf	4
   473  001C  120A  118A  24E3  120A  118A  	fcall	init_ram0
   474                           
   475                           ; Clear objects allocated to BANK0
   476  0021  303B               	movlw	low __pbssBANK0
   477  0022  0084               	movwf	4
   478  0023  304E               	movlw	low (__pbssBANK0+19)
   479  0024  120A  118A  2525  120A  118A  	fcall	clear_ram0
   480                           
   481                           ; Clear objects allocated to COMMON
   482  0029  01FD               	clrf	__pbssCOMMON& (0+127)
   483  002A                     end_of_initialization:	
   484                           ;End of C runtime variable initialization code
   485                           
   486  002A                     __end_of__initialization:
   487  002A  0183               	clrf	3
   488  002B  120A  118A  2C66   	ljmp	_main	;jump to C main() function
   489                           
   490                           	psect	bssCOMMON
   491  007D                     __pbssCOMMON:
   492  007D                     _X:
   493  007D                     	ds	1
   494                           
   495                           	psect	bssBANK0
   496  003B                     __pbssBANK0:
   497  003B                     _Z_cents:
   498  003B                     	ds	1
   499  003C                     _Z_decs:
   500  003C                     	ds	1
   501  003D                     _Z_units:
   502  003D                     	ds	1
   503  003E                     _Y_cents:
   504  003E                     	ds	1
   505  003F                     _Y_decs:
   506  003F                     	ds	1
   507  0040                     _Y_units:
   508  0040                     	ds	1
   509  0041                     _X_cents:
   510  0041                     	ds	1
   511  0042                     _X_decs:
   512  0042                     	ds	1
   513  0043                     _X_units:
   514  0043                     	ds	1
   515  0044                     _Y:
   516  0044                     	ds	1
   517  0045                     _Z:
   518  0045                     	ds	1
   519  0046                     _ZH:
   520  0046                     	ds	1
   521  0047                     _ZL:
   522  0047                     	ds	1
   523  0048                     _YH:
   524  0048                     	ds	1
   525  0049                     _YL:
   526  0049                     	ds	1
   527  004A                     _XH:
   528  004A                     	ds	1
   529  004B                     _XL:
   530  004B                     	ds	1
   531  004C                     _BANDERA_T:
   532  004C                     	ds	1
   533  004D                     _LECTURA:
   534  004D                     	ds	1
   535                           
   536                           	psect	dataBANK0
   537  004E                     __pdataBANK0:
   538  004E                     _DZ1:
   539  004E                     	ds	1
   540  004F                     _DZ0:
   541  004F                     	ds	1
   542  0050                     _DY1:
   543  0050                     	ds	1
   544  0051                     _DY0:
   545  0051                     	ds	1
   546  0052                     _DX1:
   547  0052                     	ds	1
   548  0053                     _DX0:
   549  0053                     	ds	1
   550  0054                     _D_FRMT:
   551  0054                     	ds	1
   552  0055                     _P_CTL:
   553  0055                     	ds	1
   554  0056                     _READ:
   555  0056                     	ds	1
   556  0057                     _WRITE:
   557  0057                     	ds	1
   558                           
   559                           	psect	inittext
   560  04DF                     init_fetch0:	
   561                           ;	Called with low address in FSR and high address in W
   562                           
   563  04DF  087E               	movf	btemp,w
   564  04E0  008A               	movwf	10
   565  04E1  087F               	movf	btemp+1,w
   566  04E2  0082               	movwf	2
   567  04E3                     init_ram0:	
   568                           ;Called with:
   569                           ;	high address of idata address in btemp 
   570                           ;	low address of idata address in btemp+1 
   571                           ;	low address of data in FSR
   572                           ;	high address + 1 of data in btemp-1
   573                           
   574  04E3  120A  118A  24DF  120A  118A  	fcall	init_fetch0
   575  04E8  0080               	movwf	0
   576  04E9  0A84               	incf	4,f
   577  04EA  0804               	movf	4,w
   578  04EB  067D               	xorwf	btemp+-1,w
   579  04EC  1903               	btfsc	3,2
   580  04ED  3400               	retlw	0
   581  04EE  0AFF               	incf	btemp+1,f
   582  04EF  1903               	btfsc	3,2
   583  04F0  0AFE               	incf	btemp,f
   584  04F1  2CE3               	goto	init_ram0
   585                           
   586                           	psect	clrtext
   587  0525                     clear_ram0:	
   588                           ;	Called with FSR containing the base address, and
   589                           ;	W with the last address+1
   590                           
   591  0525  0064               	clrwdt	;clear the watchdog before getting into this loop
   592  0526                     clrloop0:
   593  0526  0180               	clrf	0	;clear RAM location pointed to by FSR
   594  0527  0A84               	incf	4,f	;increment pointer
   595  0528  0604               	xorwf	4,w	;XOR with final address
   596  0529  1903               	btfsc	3,2	;have we reached the end yet?
   597  052A  3400               	retlw	0	;all done for this memory range, return
   598  052B  0604               	xorwf	4,w	;XOR again to restore value
   599  052C  2D26               	goto	clrloop0	;do the next byte
   600                           
   601                           	psect	cstackCOMMON
   602  0070                     __pcstackCOMMON:
   603  0070                     ?_TX:
   604  0070                     ?_SETUP:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_CONFIG_USART:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_ACELEROMETRO_CONFIG:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_LEER_VALORES:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_I2C_Master_Start:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_I2C_Master_Stop:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_EJEX_TO_CHARS:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_EJEY_TO_CHARS:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_EJEZ_TO_CHARS:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_isr:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_main:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_I2C_Master_Wait:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?___awdiv:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?___awmod:	
   644                           ; 2 bytes @ 0x0
   645                           
   646  0070                     ___awdiv@divisor:	
   647                           ; 2 bytes @ 0x0
   648                           
   649  0070                     ___awmod@divisor:	
   650                           ; 2 bytes @ 0x0
   651                           
   652                           
   653                           ; 2 bytes @ 0x0
   654  0070                     	ds	2
   655  0072                     ___awdiv@dividend:
   656  0072                     ___awmod@dividend:	
   657                           ; 2 bytes @ 0x2
   658                           
   659                           
   660                           ; 2 bytes @ 0x2
   661  0072                     	ds	2
   662  0074                     ??___awdiv:
   663  0074                     ??___awmod:	
   664                           ; 1 bytes @ 0x4
   665                           
   666                           
   667                           ; 1 bytes @ 0x4
   668  0074                     	ds	1
   669  0075                     ___awdiv@counter:
   670  0075                     ___awmod@counter:	
   671                           ; 1 bytes @ 0x5
   672                           
   673                           
   674                           ; 1 bytes @ 0x5
   675  0075                     	ds	1
   676  0076                     ___awdiv@sign:
   677  0076                     ___awmod@sign:	
   678                           ; 1 bytes @ 0x6
   679                           
   680                           
   681                           ; 1 bytes @ 0x6
   682  0076                     	ds	1
   683  0077                     ___awdiv@quotient:
   684                           
   685                           ; 2 bytes @ 0x7
   686  0077                     	ds	2
   687  0079                     ??_EJEX_TO_CHARS:
   688  0079                     ??_EJEY_TO_CHARS:	
   689                           ; 1 bytes @ 0x9
   690                           
   691  0079                     ??_EJEZ_TO_CHARS:	
   692                           ; 1 bytes @ 0x9
   693                           
   694                           
   695                           ; 1 bytes @ 0x9
   696  0079                     	ds	3
   697  007C                     EJEX_TO_CHARS@valor:
   698  007C                     EJEY_TO_CHARS@valor:	
   699                           ; 1 bytes @ 0xC
   700                           
   701  007C                     EJEZ_TO_CHARS@valor:	
   702                           ; 1 bytes @ 0xC
   703                           
   704                           
   705                           ; 1 bytes @ 0xC
   706  007C                     	ds	1
   707                           
   708                           	psect	cstackBANK0
   709  0020                     __pcstackBANK0:
   710  0020                     ??_TX:
   711                           
   712                           ; 1 bytes @ 0x0
   713  0020                     	ds	2
   714  0022                     ??_isr:
   715                           
   716                           ; 1 bytes @ 0x2
   717  0022                     	ds	3
   718  0025                     ??_SETUP:
   719  0025                     ??_CONFIG_USART:	
   720                           ; 1 bytes @ 0x5
   721                           
   722  0025                     ??_I2C_Master_Start:	
   723                           ; 1 bytes @ 0x5
   724                           
   725  0025                     ?_I2C_Master_Write:	
   726                           ; 1 bytes @ 0x5
   727                           
   728  0025                     ??_I2C_Master_Stop:	
   729                           ; 1 bytes @ 0x5
   730                           
   731  0025                     ??_I2C_Master_Wait:	
   732                           ; 1 bytes @ 0x5
   733                           
   734  0025                     ?_I2C_Master_Read:	
   735                           ; 1 bytes @ 0x5
   736                           
   737  0025                     ?___lldiv:	
   738                           ; 2 bytes @ 0x5
   739                           
   740  0025                     I2C_Master_Write@d:	
   741                           ; 4 bytes @ 0x5
   742                           
   743  0025                     I2C_Master_Read@a:	
   744                           ; 2 bytes @ 0x5
   745                           
   746  0025                     ___lldiv@divisor:	
   747                           ; 2 bytes @ 0x5
   748                           
   749                           
   750                           ; 4 bytes @ 0x5
   751  0025                     	ds	2
   752  0027                     ?_ACELEROMETRO_W:
   753  0027                     ??_I2C_Master_Write:	
   754                           ; 1 bytes @ 0x7
   755                           
   756  0027                     ??_I2C_Master_Read:	
   757                           ; 1 bytes @ 0x7
   758                           
   759  0027                     ACELEROMETRO_W@data:	
   760                           ; 1 bytes @ 0x7
   761                           
   762                           
   763                           ; 1 bytes @ 0x7
   764  0027                     	ds	1
   765  0028                     ??_ACELEROMETRO_W:
   766                           
   767                           ; 1 bytes @ 0x8
   768  0028                     	ds	1
   769  0029                     I2C_Master_Read@temp:
   770  0029                     ___lldiv@dividend:	
   771                           ; 2 bytes @ 0x9
   772                           
   773                           
   774                           ; 4 bytes @ 0x9
   775  0029                     	ds	1
   776  002A                     ACELEROMETRO_W@num:
   777                           
   778                           ; 1 bytes @ 0xA
   779  002A                     	ds	1
   780  002B                     ??_ACELEROMETRO_CONFIG:
   781  002B                     ?_ACELEROMETRO_R:	
   782                           ; 1 bytes @ 0xB
   783                           
   784                           
   785                           ; 2 bytes @ 0xB
   786  002B                     	ds	2
   787  002D                     ??_ACELEROMETRO_R:
   788  002D                     ??___lldiv:	
   789                           ; 1 bytes @ 0xD
   790                           
   791                           
   792                           ; 1 bytes @ 0xD
   793  002D                     	ds	1
   794  002E                     ___lldiv@quotient:
   795                           
   796                           ; 4 bytes @ 0xE
   797  002E                     	ds	1
   798  002F                     ACELEROMETRO_R@LECTURA:
   799                           
   800                           ; 2 bytes @ 0xF
   801  002F                     	ds	2
   802  0031                     ACELEROMETRO_R@num:
   803                           
   804                           ; 1 bytes @ 0x11
   805  0031                     	ds	1
   806  0032                     ??_LEER_VALORES:
   807  0032                     ___lldiv@counter:	
   808                           ; 1 bytes @ 0x12
   809                           
   810                           
   811                           ; 1 bytes @ 0x12
   812  0032                     	ds	1
   813  0033                     ?_I2C_Master_Init:
   814  0033                     I2C_Master_Init@c:	
   815                           ; 1 bytes @ 0x13
   816                           
   817                           
   818                           ; 4 bytes @ 0x13
   819  0033                     	ds	4
   820  0037                     ??_I2C_Master_Init:
   821                           
   822                           ; 1 bytes @ 0x17
   823  0037                     	ds	4
   824  003B                     ??_main:
   825                           
   826                           	psect	maintext
   827  0466                     __pmaintext:	
   828                           ; 1 bytes @ 0x1B
   829 ;;
   830 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   831 ;;
   832 ;; *************** function _main *****************
   833 ;; Defined at:
   834 ;;		line 99 in file "Principal_Master.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0, pclath, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : B00/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       0       0       0       0
   849 ;;      Locals:         0       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0
   851 ;;      Totals:         0       0       0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels required when called:    8
   854 ;; This function calls:
   855 ;;		_ACELEROMETRO_CONFIG
   856 ;;		_CONFIG_USART
   857 ;;		_I2C_Master_Init
   858 ;;		_LEER_VALORES
   859 ;;		_SETUP
   860 ;; This function is called by:
   861 ;;		Startup code after reset
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _main
   867  0466                     _main:
   868  0466                     l1660:	
   869                           ;incstack = 0
   870                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   871                           
   872                           
   873                           ;Principal_Master.c: 100:     SETUP();
   874  0466  120A  118A  2491  120A  118A  	fcall	_SETUP
   875                           
   876                           ;Principal_Master.c: 101:     CONFIG_USART();
   877  046B  120A  118A  24C9  120A  118A  	fcall	_CONFIG_USART
   878                           
   879                           ;Principal_Master.c: 102:     I2C_Master_Init(100000);
   880  0470  3000               	movlw	0
   881  0471  1283               	bcf	3,5	;RP0=0, select bank0
   882  0472  1303               	bcf	3,6	;RP1=0, select bank0
   883  0473  00B6               	movwf	I2C_Master_Init@c+3
   884  0474  3001               	movlw	1
   885  0475  00B5               	movwf	I2C_Master_Init@c+2
   886  0476  3086               	movlw	134
   887  0477  00B4               	movwf	I2C_Master_Init@c+1
   888  0478  30A0               	movlw	160
   889  0479  00B3               	movwf	I2C_Master_Init@c
   890  047A  120A  118A  2398  120A  118A  	fcall	_I2C_Master_Init
   891                           
   892                           ;Principal_Master.c: 103:     ACELEROMETRO_CONFIG();
   893  047F  120A  118A  2439  120A  118A  	fcall	_ACELEROMETRO_CONFIG
   894  0484                     l1662:
   895                           
   896                           ;Principal_Master.c: 104:     PORTA = 255;
   897  0484  30FF               	movlw	255
   898  0485  1283               	bcf	3,5	;RP0=0, select bank0
   899  0486  1303               	bcf	3,6	;RP1=0, select bank0
   900  0487  0085               	movwf	5	;volatile
   901  0488                     l1664:
   902                           
   903                           ;Principal_Master.c: 109:        LEER_VALORES();
   904  0488  120A  118A  22F6  120A  118A  	fcall	_LEER_VALORES
   905  048D  2C88               	goto	l1664
   906  048E  120A  118A  2810   	ljmp	start
   907  0491                     __end_of_main:
   908                           
   909                           	psect	text1
   910  0491                     __ptext1:	
   911 ;; *************** function _SETUP *****************
   912 ;; Defined at:
   913 ;;		line 118 in file "Principal_Master.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, status,2
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   927 ;;      Params:         0       0       0       0       0
   928 ;;      Locals:         0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0
   930 ;;      Totals:         0       0       0       0       0
   931 ;;Total ram usage:        0 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    4
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           
   942                           ;psect for function _SETUP
   943  0491                     _SETUP:
   944  0491                     l1584:	
   945                           ;incstack = 0
   946                           ; Regs used in _SETUP: [wreg+status,2]
   947                           
   948                           
   949                           ;Principal_Master.c: 120:     OSCCONbits.IRCF2 = 1;
   950  0491  1683               	bsf	3,5	;RP0=1, select bank1
   951  0492  1303               	bcf	3,6	;RP1=0, select bank1
   952  0493  170F               	bsf	15,6	;volatile
   953                           
   954                           ;Principal_Master.c: 121:     OSCCONbits.IRCF1 = 1;
   955  0494  168F               	bsf	15,5	;volatile
   956                           
   957                           ;Principal_Master.c: 122:     OSCCONbits.IRCF0 = 1;
   958  0495  160F               	bsf	15,4	;volatile
   959  0496                     l1586:
   960                           
   961                           ;Principal_Master.c: 124:     PORTA = 0;
   962  0496  1283               	bcf	3,5	;RP0=0, select bank0
   963  0497  1303               	bcf	3,6	;RP1=0, select bank0
   964  0498  0185               	clrf	5	;volatile
   965                           
   966                           ;Principal_Master.c: 125:     PORTB = 0;
   967  0499  0186               	clrf	6	;volatile
   968                           
   969                           ;Principal_Master.c: 126:     PORTC = 0;
   970  049A  0187               	clrf	7	;volatile
   971                           
   972                           ;Principal_Master.c: 127:     PORTD = 0;
   973  049B  0188               	clrf	8	;volatile
   974                           
   975                           ;Principal_Master.c: 128:     PORTE = 0;
   976  049C  0189               	clrf	9	;volatile
   977                           
   978                           ;Principal_Master.c: 130:     TRISA = 0;
   979  049D  1683               	bsf	3,5	;RP0=1, select bank1
   980  049E  1303               	bcf	3,6	;RP1=0, select bank1
   981  049F  0185               	clrf	5	;volatile
   982                           
   983                           ;Principal_Master.c: 131:     TRISB = 0;
   984  04A0  0186               	clrf	6	;volatile
   985  04A1                     l1588:
   986                           
   987                           ;Principal_Master.c: 132:     TRISC = 0b00010000;
   988  04A1  3010               	movlw	16
   989  04A2  0087               	movwf	7	;volatile
   990  04A3                     l1590:
   991                           
   992                           ;Principal_Master.c: 133:     TRISD = 0;
   993  04A3  0188               	clrf	8	;volatile
   994  04A4                     l1592:
   995                           
   996                           ;Principal_Master.c: 134:     TRISE = 0;
   997  04A4  0189               	clrf	9	;volatile
   998  04A5                     l1594:
   999                           
  1000                           ;Principal_Master.c: 136:     TRISCbits.TRISC6 = 0;
  1001  04A5  1307               	bcf	7,6	;volatile
  1002  04A6                     l1596:
  1003                           
  1004                           ;Principal_Master.c: 137:     TRISCbits.TRISC7 = 1;
  1005  04A6  1787               	bsf	7,7	;volatile
  1006  04A7                     l1598:
  1007                           
  1008                           ;Principal_Master.c: 139:     ANSEL = 0;
  1009  04A7  1683               	bsf	3,5	;RP0=1, select bank3
  1010  04A8  1703               	bsf	3,6	;RP1=1, select bank3
  1011  04A9  0188               	clrf	8	;volatile
  1012  04AA                     l1600:
  1013                           
  1014                           ;Principal_Master.c: 140:     ANSELH = 0;
  1015  04AA  0189               	clrf	9	;volatile
  1016  04AB                     l1602:
  1017                           
  1018                           ;Principal_Master.c: 142:     INTCONbits.GIE = 1;
  1019  04AB  178B               	bsf	11,7	;volatile
  1020  04AC                     l1604:
  1021                           
  1022                           ;Principal_Master.c: 143:     INTCONbits.PEIE = 1;
  1023  04AC  170B               	bsf	11,6	;volatile
  1024  04AD                     l1606:
  1025                           
  1026                           ;Principal_Master.c: 144:     PIE1bits.TXIE = 1;
  1027  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  1028  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  1029  04AF  160C               	bsf	12,4	;volatile
  1030  04B0                     l143:
  1031  04B0  0008               	return
  1032  04B1                     __end_of_SETUP:
  1033                           
  1034                           	psect	text2
  1035  02F6                     __ptext2:	
  1036 ;; *************** function _LEER_VALORES *****************
  1037 ;; Defined at:
  1038 ;;		line 237 in file "Principal_Master.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0, pclath, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0
  1054 ;;      Temps:          0       1       0       0       0
  1055 ;;      Totals:         0       1       0       0       0
  1056 ;;Total ram usage:        1 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    7
  1059 ;; This function calls:
  1060 ;;		_ACELEROMETRO_R
  1061 ;; This function is called by:
  1062 ;;		_main
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           
  1067                           ;psect for function _LEER_VALORES
  1068  02F6                     _LEER_VALORES:
  1069  02F6                     l1640:	
  1070                           ;incstack = 0
  1071                           ; Regs used in _LEER_VALORES: [wreg+status,2+status,0+pclath+cstack]
  1072                           
  1073                           
  1074                           ;Principal_Master.c: 239:     XL = ACELEROMETRO_R(DX0);
  1075  02F6  3032               	movlw	50
  1076  02F7  120A  118A  234B  120A  118A  	fcall	_ACELEROMETRO_R
  1077  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1078  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1079  02FE  082B               	movf	?_ACELEROMETRO_R,w
  1080  02FF  00B2               	movwf	??_LEER_VALORES
  1081  0300  0832               	movf	??_LEER_VALORES,w
  1082  0301  00CB               	movwf	_XL
  1083                           
  1084                           ;Principal_Master.c: 240:     XH = ACELEROMETRO_R(DX1);
  1085  0302  3033               	movlw	51
  1086  0303  120A  118A  234B  120A  118A  	fcall	_ACELEROMETRO_R
  1087  0308  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0309  1303               	bcf	3,6	;RP1=0, select bank0
  1089  030A  082B               	movf	?_ACELEROMETRO_R,w
  1090  030B  00B2               	movwf	??_LEER_VALORES
  1091  030C  0832               	movf	??_LEER_VALORES,w
  1092  030D  00CA               	movwf	_XH
  1093  030E                     l1642:
  1094                           
  1095                           ;Principal_Master.c: 241:     X = ((XH<<8) | XL) ;
  1096  030E  084B               	movf	_XL,w
  1097  030F  00B2               	movwf	??_LEER_VALORES
  1098  0310  0832               	movf	??_LEER_VALORES,w
  1099  0311  00FD               	movwf	_X
  1100  0312                     l1644:
  1101                           
  1102                           ;Principal_Master.c: 243:     YL = ACELEROMETRO_R(DY0);
  1103  0312  3034               	movlw	52
  1104  0313  120A  118A  234B  120A  118A  	fcall	_ACELEROMETRO_R
  1105  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1107  031A  082B               	movf	?_ACELEROMETRO_R,w
  1108  031B  00B2               	movwf	??_LEER_VALORES
  1109  031C  0832               	movf	??_LEER_VALORES,w
  1110  031D  00C9               	movwf	_YL
  1111  031E                     l1646:
  1112                           
  1113                           ;Principal_Master.c: 244:     YH = ACELEROMETRO_R(DY1);
  1114  031E  3035               	movlw	53
  1115  031F  120A  118A  234B  120A  118A  	fcall	_ACELEROMETRO_R
  1116  0324  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0325  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0326  082B               	movf	?_ACELEROMETRO_R,w
  1119  0327  00B2               	movwf	??_LEER_VALORES
  1120  0328  0832               	movf	??_LEER_VALORES,w
  1121  0329  00C8               	movwf	_YH
  1122  032A                     l1648:
  1123                           
  1124                           ;Principal_Master.c: 245:     Y = ((YH<<8) | YL) ;
  1125  032A  0849               	movf	_YL,w
  1126  032B  00B2               	movwf	??_LEER_VALORES
  1127  032C  0832               	movf	??_LEER_VALORES,w
  1128  032D  00C4               	movwf	_Y
  1129                           
  1130                           ;Principal_Master.c: 247:     ZL = ACELEROMETRO_R(DZ0);
  1131  032E  3036               	movlw	54
  1132  032F  120A  118A  234B  120A  118A  	fcall	_ACELEROMETRO_R
  1133  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0336  082B               	movf	?_ACELEROMETRO_R,w
  1136  0337  00B2               	movwf	??_LEER_VALORES
  1137  0338  0832               	movf	??_LEER_VALORES,w
  1138  0339  00C7               	movwf	_ZL
  1139                           
  1140                           ;Principal_Master.c: 248:     ZH = ACELEROMETRO_R(DZ1);
  1141  033A  3037               	movlw	55
  1142  033B  120A  118A  234B  120A  118A  	fcall	_ACELEROMETRO_R
  1143  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0342  082B               	movf	?_ACELEROMETRO_R,w
  1146  0343  00B2               	movwf	??_LEER_VALORES
  1147  0344  0832               	movf	??_LEER_VALORES,w
  1148  0345  00C6               	movwf	_ZH
  1149  0346                     l1650:
  1150                           
  1151                           ;Principal_Master.c: 249:     Z = ((ZH<<8) | ZL) ;
  1152  0346  0847               	movf	_ZL,w
  1153  0347  00B2               	movwf	??_LEER_VALORES
  1154  0348  0832               	movf	??_LEER_VALORES,w
  1155  0349  00C5               	movwf	_Z
  1156  034A                     l172:
  1157  034A  0008               	return
  1158  034B                     __end_of_LEER_VALORES:
  1159                           
  1160                           	psect	text3
  1161  034B                     __ptext3:	
  1162 ;; *************** function _ACELEROMETRO_R *****************
  1163 ;; Defined at:
  1164 ;;		line 156 in file "Principal_Master.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  num             1    wreg     unsigned char 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  num             1   17[BANK0 ] unsigned char 
  1169 ;;  LECTURA         2   15[BANK0 ] unsigned short 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2   11[BANK0 ] unsigned short 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         0       2       0       0       0
  1180 ;;      Locals:         0       3       0       0       0
  1181 ;;      Temps:          0       2       0       0       0
  1182 ;;      Totals:         0       7       0       0       0
  1183 ;;Total ram usage:        7 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    6
  1186 ;; This function calls:
  1187 ;;		_I2C_Master_Read
  1188 ;;		_I2C_Master_Start
  1189 ;;		_I2C_Master_Stop
  1190 ;;		_I2C_Master_Write
  1191 ;; This function is called by:
  1192 ;;		_LEER_VALORES
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _ACELEROMETRO_R
  1198  034B                     _ACELEROMETRO_R:
  1199                           
  1200                           ;incstack = 0
  1201                           ; Regs used in _ACELEROMETRO_R: [wreg+status,2+status,0+pclath+cstack]
  1202                           ;ACELEROMETRO_R@num stored from wreg
  1203  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1204  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1205  034D  00B1               	movwf	ACELEROMETRO_R@num
  1206  034E                     l1424:
  1207                           
  1208                           ;Principal_Master.c: 157:     unsigned short LECTURA;;Principal_Master.c: 159:     I2C_M
      +                          aster_Start();
  1209  034E  120A  118A  251C  120A  118A  	fcall	_I2C_Master_Start
  1210                           
  1211                           ;Principal_Master.c: 160:     I2C_Master_Write(WRITE);
  1212  0353  30A6               	movlw	166
  1213  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0356  00A5               	movwf	I2C_Master_Write@d
  1216  0357  3000               	movlw	0
  1217  0358  00A6               	movwf	I2C_Master_Write@d+1
  1218  0359  120A  118A  2509  120A  118A  	fcall	_I2C_Master_Write
  1219                           
  1220                           ;Principal_Master.c: 161:     I2C_Master_Write(num);
  1221  035E  1283               	bcf	3,5	;RP0=0, select bank0
  1222  035F  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0360  0831               	movf	ACELEROMETRO_R@num,w
  1224  0361  00AD               	movwf	??_ACELEROMETRO_R
  1225  0362  01AE               	clrf	??_ACELEROMETRO_R+1
  1226  0363  082D               	movf	??_ACELEROMETRO_R,w
  1227  0364  00A5               	movwf	I2C_Master_Write@d
  1228  0365  082E               	movf	??_ACELEROMETRO_R+1,w
  1229  0366  00A6               	movwf	I2C_Master_Write@d+1
  1230  0367  120A  118A  2509  120A  118A  	fcall	_I2C_Master_Write
  1231                           
  1232                           ;Principal_Master.c: 162:     I2C_Master_Start();
  1233  036C  120A  118A  251C  120A  118A  	fcall	_I2C_Master_Start
  1234                           
  1235                           ;Principal_Master.c: 163:     I2C_Master_Write(READ);
  1236  0371  30A7               	movlw	167
  1237  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0374  00A5               	movwf	I2C_Master_Write@d
  1240  0375  3000               	movlw	0
  1241  0376  00A6               	movwf	I2C_Master_Write@d+1
  1242  0377  120A  118A  2509  120A  118A  	fcall	_I2C_Master_Write
  1243                           
  1244                           ;Principal_Master.c: 164:     LECTURA = I2C_Master_Read(0);
  1245  037C  3000               	movlw	0
  1246  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1247  037E  1303               	bcf	3,6	;RP1=0, select bank0
  1248  037F  00A5               	movwf	I2C_Master_Read@a
  1249  0380  00A6               	movwf	I2C_Master_Read@a+1
  1250  0381  120A  118A  2407  120A  118A  	fcall	_I2C_Master_Read
  1251  0386  1283               	bcf	3,5	;RP0=0, select bank0
  1252  0387  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0388  0826               	movf	?_I2C_Master_Read+1,w
  1254  0389  00B0               	movwf	ACELEROMETRO_R@LECTURA+1
  1255  038A  0825               	movf	?_I2C_Master_Read,w
  1256  038B  00AF               	movwf	ACELEROMETRO_R@LECTURA
  1257                           
  1258                           ;Principal_Master.c: 165:     I2C_Master_Stop();
  1259  038C  120A  118A  2513  120A  118A  	fcall	_I2C_Master_Stop
  1260  0391                     l1426:
  1261                           
  1262                           ;Principal_Master.c: 167:     return LECTURA;
  1263  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1264  0392  1303               	bcf	3,6	;RP1=0, select bank0
  1265  0393  0830               	movf	ACELEROMETRO_R@LECTURA+1,w
  1266  0394  00AC               	movwf	?_ACELEROMETRO_R+1
  1267  0395  082F               	movf	ACELEROMETRO_R@LECTURA,w
  1268  0396  00AB               	movwf	?_ACELEROMETRO_R
  1269  0397                     l149:
  1270  0397  0008               	return
  1271  0398                     __end_of_ACELEROMETRO_R:
  1272                           
  1273                           	psect	text4
  1274  0407                     __ptext4:	
  1275 ;; *************** function _I2C_Master_Read *****************
  1276 ;; Defined at:
  1277 ;;		line 46 in file "I2C.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  a               2    5[BANK0 ] unsigned short 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  temp            2    9[BANK0 ] unsigned short 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  2    5[BANK0 ] unsigned short 
  1284 ;; Registers used:
  1285 ;;		wreg, status,2, status,0, pclath, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         0       2       0       0       0
  1292 ;;      Locals:         0       2       0       0       0
  1293 ;;      Temps:          0       2       0       0       0
  1294 ;;      Totals:         0       6       0       0       0
  1295 ;;Total ram usage:        6 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; Hardware stack levels required when called:    5
  1298 ;; This function calls:
  1299 ;;		_I2C_Master_Wait
  1300 ;; This function is called by:
  1301 ;;		_ACELEROMETRO_R
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           
  1306                           ;psect for function _I2C_Master_Read
  1307  0407                     _I2C_Master_Read:
  1308  0407                     l1320:	
  1309                           ;incstack = 0
  1310                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1311                           
  1312                           
  1313                           ;I2C.c: 46: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 47: {;I2C.c: 48:   u
      +                          nsigned short temp;;I2C.c: 49:     I2C_Master_Wait();
  1314  0407  120A  118A  24F2  120A  118A  	fcall	_I2C_Master_Wait
  1315  040C                     l1322:
  1316                           
  1317                           ;I2C.c: 50:     SSPCON2bits.RCEN = 1;
  1318  040C  1683               	bsf	3,5	;RP0=1, select bank1
  1319  040D  1303               	bcf	3,6	;RP1=0, select bank1
  1320  040E  1591               	bsf	17,3	;volatile
  1321                           
  1322                           ;I2C.c: 51:     I2C_Master_Wait();
  1323  040F  120A  118A  24F2  120A  118A  	fcall	_I2C_Master_Wait
  1324  0414                     l1324:
  1325                           
  1326                           ;I2C.c: 52:     temp = SSPBUF;
  1327  0414  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0415  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0416  0813               	movf	19,w	;volatile
  1330  0417  00A7               	movwf	??_I2C_Master_Read
  1331  0418  01A8               	clrf	??_I2C_Master_Read+1
  1332  0419  0827               	movf	??_I2C_Master_Read,w
  1333  041A  00A9               	movwf	I2C_Master_Read@temp
  1334  041B  0828               	movf	??_I2C_Master_Read+1,w
  1335  041C  00AA               	movwf	I2C_Master_Read@temp+1
  1336  041D                     l1326:
  1337                           
  1338                           ;I2C.c: 53:     I2C_Master_Wait();
  1339  041D  120A  118A  24F2  120A  118A  	fcall	_I2C_Master_Wait
  1340  0422                     l1328:
  1341                           
  1342                           ;I2C.c: 55:     if(a == 1){
  1343  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0423  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0424  0325               	decf	I2C_Master_Read@a,w
  1346  0425  0426               	iorwf	I2C_Master_Read@a+1,w
  1347  0426  1D03               	btfss	3,2
  1348  0427  2C29               	goto	u341
  1349  0428  2C2A               	goto	u340
  1350  0429                     u341:
  1351  0429  2C2E               	goto	l237
  1352  042A                     u340:
  1353  042A                     l1330:
  1354                           
  1355                           ;I2C.c: 56:         SSPCON2bits.ACKDT = 0;
  1356  042A  1683               	bsf	3,5	;RP0=1, select bank1
  1357  042B  1303               	bcf	3,6	;RP1=0, select bank1
  1358  042C  1291               	bcf	17,5	;volatile
  1359                           
  1360                           ;I2C.c: 57:     }
  1361  042D  2C31               	goto	l238
  1362  042E                     l237:	
  1363                           ;I2C.c: 58:     else {
  1364                           
  1365                           
  1366                           ;I2C.c: 59:         SSPCON2bits.ACKDT = 1;
  1367  042E  1683               	bsf	3,5	;RP0=1, select bank1
  1368  042F  1303               	bcf	3,6	;RP1=0, select bank1
  1369  0430  1691               	bsf	17,5	;volatile
  1370  0431                     l238:	
  1371                           ;I2C.c: 60:     }
  1372                           
  1373                           
  1374                           ;I2C.c: 62:     SSPCON2bits.ACKEN = 1;
  1375  0431  1611               	bsf	17,4	;volatile
  1376  0432                     l1332:
  1377                           
  1378                           ;I2C.c: 63:     return temp;
  1379  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1381  0434  082A               	movf	I2C_Master_Read@temp+1,w
  1382  0435  00A6               	movwf	?_I2C_Master_Read+1
  1383  0436  0829               	movf	I2C_Master_Read@temp,w
  1384  0437  00A5               	movwf	?_I2C_Master_Read
  1385  0438                     l239:
  1386  0438  0008               	return
  1387  0439                     __end_of_I2C_Master_Read:
  1388                           
  1389                           	psect	text5
  1390  0398                     __ptext5:	
  1391 ;; *************** function _I2C_Master_Init *****************
  1392 ;; Defined at:
  1393 ;;		line 7 in file "I2C.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  c               4   19[BANK0 ] const unsigned long 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         0       4       0       0       0
  1408 ;;      Locals:         0       0       0       0       0
  1409 ;;      Temps:          0       4       0       0       0
  1410 ;;      Totals:         0       8       0       0       0
  1411 ;;Total ram usage:        8 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    5
  1414 ;; This function calls:
  1415 ;;		___lldiv
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _I2C_Master_Init
  1423  0398                     _I2C_Master_Init:
  1424  0398                     l1622:	
  1425                           ;incstack = 0
  1426                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1427                           
  1428                           
  1429                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 9:   SSPCON = 
      +                          0b00101000;
  1430  0398  3028               	movlw	40
  1431  0399  1283               	bcf	3,5	;RP0=0, select bank0
  1432  039A  1303               	bcf	3,6	;RP1=0, select bank0
  1433  039B  0094               	movwf	20	;volatile
  1434  039C                     l1624:
  1435                           
  1436                           ;I2C.c: 10:   SSPCON2 = 0;
  1437  039C  1683               	bsf	3,5	;RP0=1, select bank1
  1438  039D  1303               	bcf	3,6	;RP1=0, select bank1
  1439  039E  0191               	clrf	17	;volatile
  1440  039F                     l1626:
  1441                           
  1442                           ;I2C.c: 11:   SSPADD = (8000000/(4*c))-1;
  1443  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1444  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1445  03A1  0833               	movf	I2C_Master_Init@c,w
  1446  03A2  00B7               	movwf	??_I2C_Master_Init
  1447  03A3  0834               	movf	I2C_Master_Init@c+1,w
  1448  03A4  00B8               	movwf	??_I2C_Master_Init+1
  1449  03A5  0835               	movf	I2C_Master_Init@c+2,w
  1450  03A6  00B9               	movwf	??_I2C_Master_Init+2
  1451  03A7  0836               	movf	I2C_Master_Init@c+3,w
  1452  03A8  00BA               	movwf	??_I2C_Master_Init+3
  1453  03A9  3002               	movlw	2
  1454  03AA                     u615:
  1455  03AA  1003               	clrc
  1456  03AB  0DB7               	rlf	??_I2C_Master_Init,f
  1457  03AC  0DB8               	rlf	??_I2C_Master_Init+1,f
  1458  03AD  0DB9               	rlf	??_I2C_Master_Init+2,f
  1459  03AE  0DBA               	rlf	??_I2C_Master_Init+3,f
  1460  03AF                     u610:
  1461  03AF  3EFF               	addlw	-1
  1462  03B0  1D03               	skipz
  1463  03B1  2BAA               	goto	u615
  1464  03B2  083A               	movf	??_I2C_Master_Init+3,w
  1465  03B3  00A8               	movwf	___lldiv@divisor+3
  1466  03B4  0839               	movf	??_I2C_Master_Init+2,w
  1467  03B5  00A7               	movwf	___lldiv@divisor+2
  1468  03B6  0838               	movf	??_I2C_Master_Init+1,w
  1469  03B7  00A6               	movwf	___lldiv@divisor+1
  1470  03B8  0837               	movf	??_I2C_Master_Init,w
  1471  03B9  00A5               	movwf	___lldiv@divisor
  1472  03BA  3000               	movlw	0
  1473  03BB  00AC               	movwf	___lldiv@dividend+3
  1474  03BC  307A               	movlw	122
  1475  03BD  00AB               	movwf	___lldiv@dividend+2
  1476  03BE  3012               	movlw	18
  1477  03BF  00AA               	movwf	___lldiv@dividend+1
  1478  03C0  3000               	movlw	0
  1479  03C1  00A9               	movwf	___lldiv@dividend
  1480  03C2  120A  118A  20BD  120A  118A  	fcall	___lldiv
  1481  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1482  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1483  03C9  0825               	movf	?___lldiv,w
  1484  03CA  3EFF               	addlw	255
  1485  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  1486  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  1487  03CD  0093               	movwf	19	;volatile
  1488  03CE                     l1628:
  1489                           
  1490                           ;I2C.c: 12:   SSPSTAT = 0;
  1491  03CE  0194               	clrf	20	;volatile
  1492  03CF                     l1630:
  1493                           
  1494                           ;I2C.c: 13:   TRISCbits.TRISC3 = 1;
  1495  03CF  1587               	bsf	7,3	;volatile
  1496  03D0                     l1632:
  1497                           
  1498                           ;I2C.c: 14:   TRISCbits.TRISC4 = 1;
  1499  03D0  1607               	bsf	7,4	;volatile
  1500  03D1                     l216:
  1501  03D1  0008               	return
  1502  03D2                     __end_of_I2C_Master_Init:
  1503                           
  1504                           	psect	text6
  1505  00BD                     __ptext6:	
  1506 ;; *************** function ___lldiv *****************
  1507 ;; Defined at:
  1508 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  divisor         4    5[BANK0 ] unsigned long 
  1511 ;;  dividend        4    9[BANK0 ] unsigned long 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  quotient        4   14[BANK0 ] unsigned long 
  1514 ;;  counter         1   18[BANK0 ] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  4    5[BANK0 ] unsigned long 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         0       8       0       0       0
  1525 ;;      Locals:         0       5       0       0       0
  1526 ;;      Temps:          0       1       0       0       0
  1527 ;;      Totals:         0      14       0       0       0
  1528 ;;Total ram usage:       14 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    4
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_I2C_Master_Init
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           
  1539                           ;psect for function ___lldiv
  1540  00BD                     ___lldiv:
  1541  00BD                     l1460:	
  1542                           ;incstack = 0
  1543                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1544                           
  1545  00BD  3000               	movlw	0
  1546  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1547  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1548  00C0  00B1               	movwf	___lldiv@quotient+3
  1549  00C1  3000               	movlw	0
  1550  00C2  00B0               	movwf	___lldiv@quotient+2
  1551  00C3  3000               	movlw	0
  1552  00C4  00AF               	movwf	___lldiv@quotient+1
  1553  00C5  3000               	movlw	0
  1554  00C6  00AE               	movwf	___lldiv@quotient
  1555  00C7  0828               	movf	___lldiv@divisor+3,w
  1556  00C8  0427               	iorwf	___lldiv@divisor+2,w
  1557  00C9  0426               	iorwf	___lldiv@divisor+1,w
  1558  00CA  0425               	iorwf	___lldiv@divisor,w
  1559  00CB  1903               	skipnz
  1560  00CC  28CE               	goto	u541
  1561  00CD  28CF               	goto	u540
  1562  00CE                     u541:
  1563  00CE  291C               	goto	l1480
  1564  00CF                     u540:
  1565  00CF                     l1462:
  1566  00CF  01B2               	clrf	___lldiv@counter
  1567  00D0  0AB2               	incf	___lldiv@counter,f
  1568  00D1  28DF               	goto	l1466
  1569  00D2                     l1464:
  1570  00D2  3001               	movlw	1
  1571  00D3  00AD               	movwf	??___lldiv
  1572  00D4                     u555:
  1573  00D4  1003               	clrc
  1574  00D5  0DA5               	rlf	___lldiv@divisor,f
  1575  00D6  0DA6               	rlf	___lldiv@divisor+1,f
  1576  00D7  0DA7               	rlf	___lldiv@divisor+2,f
  1577  00D8  0DA8               	rlf	___lldiv@divisor+3,f
  1578  00D9  0BAD               	decfsz	??___lldiv,f
  1579  00DA  28D4               	goto	u555
  1580  00DB  3001               	movlw	1
  1581  00DC  00AD               	movwf	??___lldiv
  1582  00DD  082D               	movf	??___lldiv,w
  1583  00DE  07B2               	addwf	___lldiv@counter,f
  1584  00DF                     l1466:
  1585  00DF  1FA8               	btfss	___lldiv@divisor+3,7
  1586  00E0  28E2               	goto	u561
  1587  00E1  28E3               	goto	u560
  1588  00E2                     u561:
  1589  00E2  28D2               	goto	l1464
  1590  00E3                     u560:
  1591  00E3                     l1468:
  1592  00E3  3001               	movlw	1
  1593  00E4  00AD               	movwf	??___lldiv
  1594  00E5                     u575:
  1595  00E5  1003               	clrc
  1596  00E6  0DAE               	rlf	___lldiv@quotient,f
  1597  00E7  0DAF               	rlf	___lldiv@quotient+1,f
  1598  00E8  0DB0               	rlf	___lldiv@quotient+2,f
  1599  00E9  0DB1               	rlf	___lldiv@quotient+3,f
  1600  00EA  0BAD               	decfsz	??___lldiv,f
  1601  00EB  28E5               	goto	u575
  1602  00EC                     l1470:
  1603  00EC  0828               	movf	___lldiv@divisor+3,w
  1604  00ED  022C               	subwf	___lldiv@dividend+3,w
  1605  00EE  1D03               	skipz
  1606  00EF  28FA               	goto	u585
  1607  00F0  0827               	movf	___lldiv@divisor+2,w
  1608  00F1  022B               	subwf	___lldiv@dividend+2,w
  1609  00F2  1D03               	skipz
  1610  00F3  28FA               	goto	u585
  1611  00F4  0826               	movf	___lldiv@divisor+1,w
  1612  00F5  022A               	subwf	___lldiv@dividend+1,w
  1613  00F6  1D03               	skipz
  1614  00F7  28FA               	goto	u585
  1615  00F8  0825               	movf	___lldiv@divisor,w
  1616  00F9  0229               	subwf	___lldiv@dividend,w
  1617  00FA                     u585:
  1618  00FA  1C03               	skipc
  1619  00FB  28FD               	goto	u581
  1620  00FC  28FE               	goto	u580
  1621  00FD                     u581:
  1622  00FD  290D               	goto	l1476
  1623  00FE                     u580:
  1624  00FE                     l1472:
  1625  00FE  0825               	movf	___lldiv@divisor,w
  1626  00FF  02A9               	subwf	___lldiv@dividend,f
  1627  0100  0826               	movf	___lldiv@divisor+1,w
  1628  0101  1C03               	skipc
  1629  0102  0F26               	incfsz	___lldiv@divisor+1,w
  1630  0103  02AA               	subwf	___lldiv@dividend+1,f
  1631  0104  0827               	movf	___lldiv@divisor+2,w
  1632  0105  1C03               	skipc
  1633  0106  0F27               	incfsz	___lldiv@divisor+2,w
  1634  0107  02AB               	subwf	___lldiv@dividend+2,f
  1635  0108  0828               	movf	___lldiv@divisor+3,w
  1636  0109  1C03               	skipc
  1637  010A  0F28               	incfsz	___lldiv@divisor+3,w
  1638  010B  02AC               	subwf	___lldiv@dividend+3,f
  1639  010C                     l1474:
  1640  010C  142E               	bsf	___lldiv@quotient,0
  1641  010D                     l1476:
  1642  010D  3001               	movlw	1
  1643  010E                     u595:
  1644  010E  1003               	clrc
  1645  010F  0CA8               	rrf	___lldiv@divisor+3,f
  1646  0110  0CA7               	rrf	___lldiv@divisor+2,f
  1647  0111  0CA6               	rrf	___lldiv@divisor+1,f
  1648  0112  0CA5               	rrf	___lldiv@divisor,f
  1649  0113  3EFF               	addlw	-1
  1650  0114  1D03               	skipz
  1651  0115  290E               	goto	u595
  1652  0116                     l1478:
  1653  0116  3001               	movlw	1
  1654  0117  02B2               	subwf	___lldiv@counter,f
  1655  0118  1D03               	btfss	3,2
  1656  0119  291B               	goto	u601
  1657  011A  291C               	goto	u600
  1658  011B                     u601:
  1659  011B  28E3               	goto	l1468
  1660  011C                     u600:
  1661  011C                     l1480:
  1662  011C  0831               	movf	___lldiv@quotient+3,w
  1663  011D  00A8               	movwf	?___lldiv+3
  1664  011E  0830               	movf	___lldiv@quotient+2,w
  1665  011F  00A7               	movwf	?___lldiv+2
  1666  0120  082F               	movf	___lldiv@quotient+1,w
  1667  0121  00A6               	movwf	?___lldiv+1
  1668  0122  082E               	movf	___lldiv@quotient,w
  1669  0123  00A5               	movwf	?___lldiv
  1670  0124                     l400:
  1671  0124  0008               	return
  1672  0125                     __end_of___lldiv:
  1673                           
  1674                           	psect	text7
  1675  04C9                     __ptext7:	
  1676 ;; *************** function _CONFIG_USART *****************
  1677 ;; Defined at:
  1678 ;;		line 7 in file "USART.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0
  1695 ;;      Totals:         0       0       0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    4
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           
  1707                           ;psect for function _CONFIG_USART
  1708  04C9                     _CONFIG_USART:
  1709  04C9                     l1608:	
  1710                           ;incstack = 0
  1711                           ; Regs used in _CONFIG_USART: [wreg+status,2]
  1712                           
  1713                           
  1714                           ;USART.c: 9:     TRISCbits.TRISC6 = 0;
  1715  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  1716  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  1717  04CB  1307               	bcf	7,6	;volatile
  1718                           
  1719                           ;USART.c: 10:     TRISCbits.TRISC7 = 1;
  1720  04CC  1787               	bsf	7,7	;volatile
  1721                           
  1722                           ;USART.c: 12:     TXSTAbits.TX9 = 0;
  1723  04CD  1318               	bcf	24,6	;volatile
  1724                           
  1725                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  1726  04CE  1218               	bcf	24,4	;volatile
  1727                           
  1728                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  1729  04CF  1118               	bcf	24,2	;volatile
  1730                           
  1731                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 0;
  1732  04D0  1683               	bsf	3,5	;RP0=1, select bank3
  1733  04D1  1703               	bsf	3,6	;RP1=1, select bank3
  1734  04D2  1187               	bcf	7,3	;volatile
  1735  04D3                     l1610:
  1736                           
  1737                           ;USART.c: 17:     SPBRG = 12;
  1738  04D3  300C               	movlw	12
  1739  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  1740  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  1741  04D6  0099               	movwf	25	;volatile
  1742  04D7                     l1612:
  1743                           
  1744                           ;USART.c: 18:     SPBRGH = 0;
  1745  04D7  019A               	clrf	26	;volatile
  1746  04D8                     l1614:
  1747                           
  1748                           ;USART.c: 19:     TXSTAbits.TXEN = 1;
  1749  04D8  1698               	bsf	24,5	;volatile
  1750  04D9                     l1616:
  1751                           
  1752                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
  1753  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1754  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1755  04DB  1798               	bsf	24,7	;volatile
  1756  04DC                     l1618:
  1757                           
  1758                           ;USART.c: 21:     RCSTAbits.RX9 = 0;
  1759  04DC  1318               	bcf	24,6	;volatile
  1760  04DD                     l1620:
  1761                           
  1762                           ;USART.c: 22:     RCSTAbits.CREN = 1;
  1763  04DD  1618               	bsf	24,4	;volatile
  1764  04DE                     l257:
  1765  04DE  0008               	return
  1766  04DF                     __end_of_CONFIG_USART:
  1767                           
  1768                           	psect	text8
  1769  0439                     __ptext8:	
  1770 ;; *************** function _ACELEROMETRO_CONFIG *****************
  1771 ;; Defined at:
  1772 ;;		line 147 in file "Principal_Master.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0, pclath, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1786 ;;      Params:         0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0
  1788 ;;      Temps:          0       2       0       0       0
  1789 ;;      Totals:         0       2       0       0       0
  1790 ;;Total ram usage:        2 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    7
  1793 ;; This function calls:
  1794 ;;		_ACELEROMETRO_W
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _ACELEROMETRO_CONFIG
  1802  0439                     _ACELEROMETRO_CONFIG:
  1803  0439                     l1634:	
  1804                           ;incstack = 0
  1805                           ; Regs used in _ACELEROMETRO_CONFIG: [wreg+status,2+status,0+pclath+cstack]
  1806                           
  1807                           
  1808                           ;Principal_Master.c: 149:     ACELEROMETRO_W(D_FRMT, 0x0B);
  1809  0439  300B               	movlw	11
  1810  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1811  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1812  043C  00AB               	movwf	??_ACELEROMETRO_CONFIG
  1813  043D  082B               	movf	??_ACELEROMETRO_CONFIG,w
  1814  043E  00A7               	movwf	ACELEROMETRO_W@data
  1815  043F  3031               	movlw	49
  1816  0440  120A  118A  23D2  120A  118A  	fcall	_ACELEROMETRO_W
  1817  0445                     l1636:
  1818                           
  1819                           ;Principal_Master.c: 150:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1820  0445  300D               	movlw	13
  1821  0446  1283               	bcf	3,5	;RP0=0, select bank0
  1822  0447  1303               	bcf	3,6	;RP1=0, select bank0
  1823  0448  00AC               	movwf	??_ACELEROMETRO_CONFIG+1
  1824  0449  30FB               	movlw	251
  1825  044A  00AB               	movwf	??_ACELEROMETRO_CONFIG
  1826  044B                     u637:
  1827  044B  0BAB               	decfsz	??_ACELEROMETRO_CONFIG,f
  1828  044C  2C4B               	goto	u637
  1829  044D  0BAC               	decfsz	??_ACELEROMETRO_CONFIG+1,f
  1830  044E  2C4B               	goto	u637
  1831  044F                     l1638:
  1832                           
  1833                           ;Principal_Master.c: 152:     ACELEROMETRO_W(P_CTL, 0x08);
  1834  044F  3008               	movlw	8
  1835  0450  1283               	bcf	3,5	;RP0=0, select bank0
  1836  0451  1303               	bcf	3,6	;RP1=0, select bank0
  1837  0452  00AB               	movwf	??_ACELEROMETRO_CONFIG
  1838  0453  082B               	movf	??_ACELEROMETRO_CONFIG,w
  1839  0454  00A7               	movwf	ACELEROMETRO_W@data
  1840  0455  302D               	movlw	45
  1841  0456  120A  118A  23D2  120A  118A  	fcall	_ACELEROMETRO_W
  1842                           
  1843                           ;Principal_Master.c: 153:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1844  045B  300D               	movlw	13
  1845  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1846  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1847  045E  00AC               	movwf	??_ACELEROMETRO_CONFIG+1
  1848  045F  30FB               	movlw	251
  1849  0460  00AB               	movwf	??_ACELEROMETRO_CONFIG
  1850  0461                     u647:
  1851  0461  0BAB               	decfsz	??_ACELEROMETRO_CONFIG,f
  1852  0462  2C61               	goto	u647
  1853  0463  0BAC               	decfsz	??_ACELEROMETRO_CONFIG+1,f
  1854  0464  2C61               	goto	u647
  1855  0465                     l146:
  1856  0465  0008               	return
  1857  0466                     __end_of_ACELEROMETRO_CONFIG:
  1858                           
  1859                           	psect	text9
  1860  03D2                     __ptext9:	
  1861 ;; *************** function _ACELEROMETRO_W *****************
  1862 ;; Defined at:
  1863 ;;		line 170 in file "Principal_Master.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  num             1    wreg     unsigned char 
  1866 ;;  data            1    7[BANK0 ] unsigned char 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  num             1   10[BANK0 ] unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0, pclath, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1878 ;;      Params:         0       1       0       0       0
  1879 ;;      Locals:         0       1       0       0       0
  1880 ;;      Temps:          0       2       0       0       0
  1881 ;;      Totals:         0       4       0       0       0
  1882 ;;Total ram usage:        4 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; Hardware stack levels required when called:    6
  1885 ;; This function calls:
  1886 ;;		_I2C_Master_Start
  1887 ;;		_I2C_Master_Stop
  1888 ;;		_I2C_Master_Write
  1889 ;; This function is called by:
  1890 ;;		_ACELEROMETRO_CONFIG
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _ACELEROMETRO_W
  1896  03D2                     _ACELEROMETRO_W:
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in _ACELEROMETRO_W: [wreg+status,2+status,0+pclath+cstack]
  1900                           ;ACELEROMETRO_W@num stored from wreg
  1901  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  1902  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  1903  03D4  00AA               	movwf	ACELEROMETRO_W@num
  1904  03D5                     l1422:
  1905                           
  1906                           ;Principal_Master.c: 172:     I2C_Master_Start();
  1907  03D5  120A  118A  251C  120A  118A  	fcall	_I2C_Master_Start
  1908                           
  1909                           ;Principal_Master.c: 173:     I2C_Master_Write(WRITE);
  1910  03DA  30A6               	movlw	166
  1911  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1912  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1913  03DD  00A5               	movwf	I2C_Master_Write@d
  1914  03DE  3000               	movlw	0
  1915  03DF  00A6               	movwf	I2C_Master_Write@d+1
  1916  03E0  120A  118A  2509  120A  118A  	fcall	_I2C_Master_Write
  1917                           
  1918                           ;Principal_Master.c: 174:     I2C_Master_Write(num);
  1919  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1920  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1921  03E7  082A               	movf	ACELEROMETRO_W@num,w
  1922  03E8  00A8               	movwf	??_ACELEROMETRO_W
  1923  03E9  01A9               	clrf	??_ACELEROMETRO_W+1
  1924  03EA  0828               	movf	??_ACELEROMETRO_W,w
  1925  03EB  00A5               	movwf	I2C_Master_Write@d
  1926  03EC  0829               	movf	??_ACELEROMETRO_W+1,w
  1927  03ED  00A6               	movwf	I2C_Master_Write@d+1
  1928  03EE  120A  118A  2509  120A  118A  	fcall	_I2C_Master_Write
  1929                           
  1930                           ;Principal_Master.c: 175:     I2C_Master_Write(data);
  1931  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  1932  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  1933  03F5  0827               	movf	ACELEROMETRO_W@data,w
  1934  03F6  00A8               	movwf	??_ACELEROMETRO_W
  1935  03F7  01A9               	clrf	??_ACELEROMETRO_W+1
  1936  03F8  0828               	movf	??_ACELEROMETRO_W,w
  1937  03F9  00A5               	movwf	I2C_Master_Write@d
  1938  03FA  0829               	movf	??_ACELEROMETRO_W+1,w
  1939  03FB  00A6               	movwf	I2C_Master_Write@d+1
  1940  03FC  120A  118A  2509  120A  118A  	fcall	_I2C_Master_Write
  1941                           
  1942                           ;Principal_Master.c: 176:     I2C_Master_Stop();
  1943  0401  120A  118A  2513  120A  118A  	fcall	_I2C_Master_Stop
  1944  0406                     l152:
  1945  0406  0008               	return
  1946  0407                     __end_of_ACELEROMETRO_W:
  1947                           
  1948                           	psect	text10
  1949  0509                     __ptext10:	
  1950 ;; *************** function _I2C_Master_Write *****************
  1951 ;; Defined at:
  1952 ;;		line 40 in file "I2C.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  d               2    5[BANK0 ] unsigned int 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         0       2       0       0       0
  1967 ;;      Locals:         0       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0
  1969 ;;      Totals:         0       2       0       0       0
  1970 ;;Total ram usage:        2 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    5
  1973 ;; This function calls:
  1974 ;;		_I2C_Master_Wait
  1975 ;; This function is called by:
  1976 ;;		_ACELEROMETRO_R
  1977 ;;		_ACELEROMETRO_W
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           
  1982                           ;psect for function _I2C_Master_Write
  1983  0509                     _I2C_Master_Write:
  1984  0509                     l1316:	
  1985                           ;incstack = 0
  1986                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1987                           
  1988                           
  1989                           ;I2C.c: 40: void I2C_Master_Write(unsigned d);I2C.c: 41: {;I2C.c: 42:   I2C_Master_Wait(
      +                          );
  1990  0509  120A  118A  24F2  120A  118A  	fcall	_I2C_Master_Wait
  1991  050E                     l1318:
  1992                           
  1993                           ;I2C.c: 43:   SSPBUF = d;
  1994  050E  1283               	bcf	3,5	;RP0=0, select bank0
  1995  050F  1303               	bcf	3,6	;RP1=0, select bank0
  1996  0510  0825               	movf	I2C_Master_Write@d,w
  1997  0511  0093               	movwf	19	;volatile
  1998  0512                     l234:
  1999  0512  0008               	return
  2000  0513                     __end_of_I2C_Master_Write:
  2001                           
  2002                           	psect	text11
  2003  0513                     __ptext11:	
  2004 ;; *************** function _I2C_Master_Stop *****************
  2005 ;; Defined at:
  2006 ;;		line 34 in file "I2C.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    5
  2027 ;; This function calls:
  2028 ;;		_I2C_Master_Wait
  2029 ;; This function is called by:
  2030 ;;		_ACELEROMETRO_R
  2031 ;;		_ACELEROMETRO_W
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function _I2C_Master_Stop
  2037  0513                     _I2C_Master_Stop:
  2038  0513                     l1336:	
  2039                           ;incstack = 0
  2040                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2041                           
  2042                           
  2043                           ;I2C.c: 36:   I2C_Master_Wait();
  2044  0513  120A  118A  24F2  120A  118A  	fcall	_I2C_Master_Wait
  2045  0518                     l1338:
  2046                           
  2047                           ;I2C.c: 37:   PEN = 1;
  2048  0518  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0519  1303               	bcf	3,6	;RP1=0, select bank1
  2050  051A  1511               	bsf	17,2	;volatile
  2051  051B                     l231:
  2052  051B  0008               	return
  2053  051C                     __end_of_I2C_Master_Stop:
  2054                           
  2055                           	psect	text12
  2056  051C                     __ptext12:	
  2057 ;; *************** function _I2C_Master_Start *****************
  2058 ;; Defined at:
  2059 ;;		line 22 in file "I2C.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, pclath, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2073 ;;      Params:         0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0
  2076 ;;      Totals:         0       0       0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    5
  2080 ;; This function calls:
  2081 ;;		_I2C_Master_Wait
  2082 ;; This function is called by:
  2083 ;;		_ACELEROMETRO_R
  2084 ;;		_ACELEROMETRO_W
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _I2C_Master_Start
  2090  051C                     _I2C_Master_Start:
  2091  051C                     l1312:	
  2092                           ;incstack = 0
  2093                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2094                           
  2095                           
  2096                           ;I2C.c: 24:   I2C_Master_Wait();
  2097  051C  120A  118A  24F2  120A  118A  	fcall	_I2C_Master_Wait
  2098  0521                     l1314:
  2099                           
  2100                           ;I2C.c: 25:   SEN = 1;
  2101  0521  1683               	bsf	3,5	;RP0=1, select bank1
  2102  0522  1303               	bcf	3,6	;RP1=0, select bank1
  2103  0523  1411               	bsf	17,0	;volatile
  2104  0524                     l225:
  2105  0524  0008               	return
  2106  0525                     __end_of_I2C_Master_Start:
  2107                           
  2108                           	psect	text13
  2109  04F2                     __ptext13:	
  2110 ;; *************** function _I2C_Master_Wait *****************
  2111 ;; Defined at:
  2112 ;;		line 17 in file "I2C.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2126 ;;      Params:         0       0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0
  2129 ;;      Totals:         0       0       0       0       0
  2130 ;;Total ram usage:        0 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    4
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_I2C_Master_Start
  2137 ;;		_I2C_Master_Stop
  2138 ;;		_I2C_Master_Write
  2139 ;;		_I2C_Master_Read
  2140 ;;		_I2C_Master_RepeatedStart
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _I2C_Master_Wait
  2146  04F2                     _I2C_Master_Wait:
  2147  04F2                     l1308:	
  2148                           ;incstack = 0
  2149                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2150                           
  2151  04F2                     l219:	
  2152                           ;I2C.c: 19:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2153                           
  2154  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  2155  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  2156  04F4  1914               	btfsc	20,2	;volatile
  2157  04F5  2CF7               	goto	u321
  2158  04F6  2CF8               	goto	u320
  2159  04F7                     u321:
  2160  04F7  2CF2               	goto	l219
  2161  04F8                     u320:
  2162  04F8                     l1310:
  2163  04F8  0811               	movf	17,w	;volatile
  2164  04F9  391F               	andlw	31
  2165  04FA  1D03               	btfss	3,2
  2166  04FB  2CFD               	goto	u331
  2167  04FC  2CFE               	goto	u330
  2168  04FD                     u331:
  2169  04FD  2CF2               	goto	l219
  2170  04FE                     u330:
  2171  04FE                     l222:
  2172  04FE  0008               	return
  2173  04FF                     __end_of_I2C_Master_Wait:
  2174                           
  2175                           	psect	text14
  2176  04B1                     __ptext14:	
  2177 ;; *************** function _isr *****************
  2178 ;; Defined at:
  2179 ;;		line 87 in file "Principal_Master.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0
  2195 ;;      Temps:          0       3       0       0       0
  2196 ;;      Totals:         0       3       0       0       0
  2197 ;;Total ram usage:        3 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    3
  2200 ;; This function calls:
  2201 ;;		_TX
  2202 ;; This function is called by:
  2203 ;;		Interrupt level 1
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function _isr
  2209  04B1                     _isr:
  2210  04B1                     i1l1652:
  2211                           
  2212                           ;Principal_Master.c: 88:  (INTCONbits.GIE = 0);
  2213  04B1  138B               	bcf	11,7	;volatile
  2214                           
  2215                           ;Principal_Master.c: 90:     if(PIR1bits.TXIF == 1){
  2216  04B2  1E0C               	btfss	12,4	;volatile
  2217  04B3  2CB5               	goto	u62_21
  2218  04B4  2CB6               	goto	u62_20
  2219  04B5                     u62_21:
  2220  04B5  2CBF               	goto	i1l1658
  2221  04B6                     u62_20:
  2222  04B6                     i1l1654:
  2223                           
  2224                           ;Principal_Master.c: 91:         PIR1bits.TXIF = 0;
  2225  04B6  120C               	bcf	12,4	;volatile
  2226  04B7                     i1l1656:
  2227                           
  2228                           ;Principal_Master.c: 92:         TXREG = TX();
  2229  04B7  120A  118A  202E  120A  118A  	fcall	_TX
  2230  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2231  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2232  04BE  0099               	movwf	25	;volatile
  2233  04BF                     i1l1658:
  2234                           
  2235                           ;Principal_Master.c: 95:   (INTCONbits.GIE = 1);
  2236  04BF  178B               	bsf	11,7	;volatile
  2237  04C0                     i1l132:
  2238  04C0  0824               	movf	??_isr+2,w
  2239  04C1  008A               	movwf	10
  2240  04C2  0823               	movf	??_isr+1,w
  2241  04C3  0084               	movwf	4
  2242  04C4  0E22               	swapf	??_isr,w
  2243  04C5  0083               	movwf	3
  2244  04C6  0EFE               	swapf	btemp,f
  2245  04C7  0E7E               	swapf	btemp,w
  2246  04C8  0009               	retfie
  2247  04C9                     __end_of_isr:
  2248                           
  2249                           	psect	intentry
  2250  0004                     __pintentry:	
  2251                           ;incstack = 0
  2252                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2253                           
  2254  0004                     interrupt_function:
  2255  007E                     saved_w	set	btemp
  2256  0004  00FE               	movwf	btemp
  2257  0005  0E03               	swapf	3,w
  2258  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0008  00A2               	movwf	??_isr
  2261  0009  0804               	movf	4,w
  2262  000A  00A3               	movwf	??_isr+1
  2263  000B  080A               	movf	10,w
  2264  000C  00A4               	movwf	??_isr+2
  2265  000D  120A  118A  2CB1   	ljmp	_isr
  2266                           
  2267                           	psect	text15
  2268  002E                     __ptext15:	
  2269 ;; *************** function _TX *****************
  2270 ;; Defined at:
  2271 ;;		line 179 in file "Principal_Master.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      unsigned char 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2285 ;;      Params:         0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0
  2287 ;;      Temps:          0       2       0       0       0
  2288 ;;      Totals:         0       2       0       0       0
  2289 ;;Total ram usage:        2 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    2
  2292 ;; This function calls:
  2293 ;;		_EJEX_TO_CHARS
  2294 ;;		_EJEY_TO_CHARS
  2295 ;;		_EJEZ_TO_CHARS
  2296 ;; This function is called by:
  2297 ;;		_isr
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           
  2302                           ;psect for function _TX
  2303  002E                     _TX:
  2304  002E                     i1l1484:	
  2305                           ;incstack = 0
  2306                           ; Regs used in _TX: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2307                           
  2308                           
  2309                           ;Principal_Master.c: 181:     switch(BANDERA_T){
  2310  002E  288C               	goto	i1l1578
  2311  002F                     i1l1486:
  2312                           
  2313                           ;Principal_Master.c: 184:             EJEX_TO_CHARS();
  2314  002F  120A  118A  2242  120A  118A  	fcall	_EJEX_TO_CHARS
  2315  0034                     i1l1488:
  2316                           
  2317                           ;Principal_Master.c: 185:             BANDERA_T++;
  2318  0034  3001               	movlw	1
  2319  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0037  00A0               	movwf	??_TX
  2322  0038  0820               	movf	??_TX,w
  2323  0039  07CC               	addwf	_BANDERA_T,f
  2324  003A                     i1l1490:
  2325                           
  2326                           ;Principal_Master.c: 186:             return X_cents + 48;
  2327  003A  0841               	movf	_X_cents,w
  2328  003B  3E30               	addlw	48
  2329  003C  28BC               	goto	i1l157
  2330  003D                     i1l1496:
  2331                           
  2332                           ;Principal_Master.c: 189:             BANDERA_T++;
  2333  003D  3001               	movlw	1
  2334  003E  00A0               	movwf	??_TX
  2335  003F  0820               	movf	??_TX,w
  2336  0040  07CC               	addwf	_BANDERA_T,f
  2337                           
  2338                           ;Principal_Master.c: 190:             return X_decs + 48;
  2339  0041  0842               	movf	_X_decs,w
  2340  0042  3E30               	addlw	48
  2341  0043  28BC               	goto	i1l157
  2342  0044                     i1l1502:
  2343                           
  2344                           ;Principal_Master.c: 193:             BANDERA_T++;
  2345  0044  3001               	movlw	1
  2346  0045  00A0               	movwf	??_TX
  2347  0046  0820               	movf	??_TX,w
  2348  0047  07CC               	addwf	_BANDERA_T,f
  2349                           
  2350                           ;Principal_Master.c: 194:             return X_units + 48;
  2351  0048  0843               	movf	_X_units,w
  2352  0049  3E30               	addlw	48
  2353  004A  28BC               	goto	i1l157
  2354  004B                     i1l1508:
  2355                           
  2356                           ;Principal_Master.c: 197:             BANDERA_T++;
  2357  004B  3001               	movlw	1
  2358  004C  00A0               	movwf	??_TX
  2359  004D  0820               	movf	??_TX,w
  2360  004E  07CC               	addwf	_BANDERA_T,f
  2361  004F                     i1l1510:
  2362                           
  2363                           ;Principal_Master.c: 198:             return ',';
  2364  004F  302C               	movlw	44
  2365  0050  28BC               	goto	i1l157
  2366  0051                     i1l1516:
  2367                           
  2368                           ;Principal_Master.c: 201:             EJEY_TO_CHARS();
  2369  0051  120A  118A  21E7  120A  118A  	fcall	_EJEY_TO_CHARS
  2370  0056                     i1l1518:
  2371                           
  2372                           ;Principal_Master.c: 202:             BANDERA_T++;
  2373  0056  3001               	movlw	1
  2374  0057  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0058  1303               	bcf	3,6	;RP1=0, select bank0
  2376  0059  00A0               	movwf	??_TX
  2377  005A  0820               	movf	??_TX,w
  2378  005B  07CC               	addwf	_BANDERA_T,f
  2379  005C                     i1l1520:
  2380                           
  2381                           ;Principal_Master.c: 203:             return Y_cents + 48;
  2382  005C  083E               	movf	_Y_cents,w
  2383  005D  3E30               	addlw	48
  2384  005E  28BC               	goto	i1l157
  2385  005F                     i1l1526:
  2386                           
  2387                           ;Principal_Master.c: 206:             BANDERA_T++;
  2388  005F  3001               	movlw	1
  2389  0060  00A0               	movwf	??_TX
  2390  0061  0820               	movf	??_TX,w
  2391  0062  07CC               	addwf	_BANDERA_T,f
  2392                           
  2393                           ;Principal_Master.c: 207:             return Y_decs + 48;
  2394  0063  083F               	movf	_Y_decs,w
  2395  0064  3E30               	addlw	48
  2396  0065  28BC               	goto	i1l157
  2397  0066                     i1l1532:
  2398                           
  2399                           ;Principal_Master.c: 210:             BANDERA_T++;
  2400  0066  3001               	movlw	1
  2401  0067  00A0               	movwf	??_TX
  2402  0068  0820               	movf	??_TX,w
  2403  0069  07CC               	addwf	_BANDERA_T,f
  2404                           
  2405                           ;Principal_Master.c: 211:             return Y_units + 48;
  2406  006A  0840               	movf	_Y_units,w
  2407  006B  3E30               	addlw	48
  2408  006C  28BC               	goto	i1l157
  2409  006D                     i1l1546:
  2410                           
  2411                           ;Principal_Master.c: 218:             EJEZ_TO_CHARS();
  2412  006D  120A  118A  218C  120A  118A  	fcall	_EJEZ_TO_CHARS
  2413  0072                     i1l1548:
  2414                           
  2415                           ;Principal_Master.c: 219:             BANDERA_T++;
  2416  0072  3001               	movlw	1
  2417  0073  1283               	bcf	3,5	;RP0=0, select bank0
  2418  0074  1303               	bcf	3,6	;RP1=0, select bank0
  2419  0075  00A0               	movwf	??_TX
  2420  0076  0820               	movf	??_TX,w
  2421  0077  07CC               	addwf	_BANDERA_T,f
  2422  0078                     i1l1550:
  2423                           
  2424                           ;Principal_Master.c: 220:             return Z_cents + 48;
  2425  0078  083B               	movf	_Z_cents,w
  2426  0079  3E30               	addlw	48
  2427  007A  28BC               	goto	i1l157
  2428  007B                     i1l1556:
  2429                           
  2430                           ;Principal_Master.c: 223:             BANDERA_T++;
  2431  007B  3001               	movlw	1
  2432  007C  00A0               	movwf	??_TX
  2433  007D  0820               	movf	??_TX,w
  2434  007E  07CC               	addwf	_BANDERA_T,f
  2435                           
  2436                           ;Principal_Master.c: 224:             return Z_decs + 48;
  2437  007F  083C               	movf	_Z_decs,w
  2438  0080  3E30               	addlw	48
  2439  0081  28BC               	goto	i1l157
  2440  0082                     i1l1562:
  2441                           
  2442                           ;Principal_Master.c: 227:             BANDERA_T++;
  2443  0082  3001               	movlw	1
  2444  0083  00A0               	movwf	??_TX
  2445  0084  0820               	movf	??_TX,w
  2446  0085  07CC               	addwf	_BANDERA_T,f
  2447                           
  2448                           ;Principal_Master.c: 228:             return Z_units + 48;
  2449  0086  083D               	movf	_Z_units,w
  2450  0087  3E30               	addlw	48
  2451  0088  28BC               	goto	i1l157
  2452  0089                     i1l1568:
  2453                           
  2454                           ;Principal_Master.c: 231:             BANDERA_T = 0;
  2455  0089  01CC               	clrf	_BANDERA_T
  2456  008A                     i1l1570:
  2457                           
  2458                           ;Principal_Master.c: 232:             return '\r';
  2459  008A  300D               	movlw	13
  2460  008B  28BC               	goto	i1l157
  2461  008C                     i1l1578:
  2462  008C  1283               	bcf	3,5	;RP0=0, select bank0
  2463  008D  1303               	bcf	3,6	;RP1=0, select bank0
  2464  008E  084C               	movf	_BANDERA_T,w
  2465  008F  00A0               	movwf	??_TX
  2466  0090  01A1               	clrf	??_TX+1
  2467                           
  2468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2469                           ; Switch size 1, requested type "simple"
  2470                           ; Number of cases is 1, Range of values is 0 to 0
  2471                           ; switch strategies available:
  2472                           ; Name         Instructions Cycles
  2473                           ; simple_byte            4     3 (average)
  2474                           ; direct_byte           11     8 (fixed)
  2475                           ; jumptable            260     6 (fixed)
  2476                           ;	Chosen strategy is simple_byte
  2477  0091  0821               	movf	??_TX+1,w
  2478  0092  3A00               	xorlw	0	; case 0
  2479  0093  1903               	skipnz
  2480  0094  2896               	goto	i1l1690
  2481  0095  28BC               	goto	i1l157
  2482  0096                     i1l1690:
  2483                           
  2484                           ; Switch size 1, requested type "simple"
  2485                           ; Number of cases is 12, Range of values is 0 to 11
  2486                           ; switch strategies available:
  2487                           ; Name         Instructions Cycles
  2488                           ; simple_byte           37    19 (average)
  2489                           ; direct_byte           44     8 (fixed)
  2490                           ; jumptable            260     6 (fixed)
  2491                           ;	Chosen strategy is simple_byte
  2492  0096  0820               	movf	??_TX,w
  2493  0097  3A00               	xorlw	0	; case 0
  2494  0098  1903               	skipnz
  2495  0099  282F               	goto	i1l1486
  2496  009A  3A01               	xorlw	1	; case 1
  2497  009B  1903               	skipnz
  2498  009C  283D               	goto	i1l1496
  2499  009D  3A03               	xorlw	3	; case 2
  2500  009E  1903               	skipnz
  2501  009F  2844               	goto	i1l1502
  2502  00A0  3A01               	xorlw	1	; case 3
  2503  00A1  1903               	skipnz
  2504  00A2  284B               	goto	i1l1508
  2505  00A3  3A07               	xorlw	7	; case 4
  2506  00A4  1903               	skipnz
  2507  00A5  2851               	goto	i1l1516
  2508  00A6  3A01               	xorlw	1	; case 5
  2509  00A7  1903               	skipnz
  2510  00A8  285F               	goto	i1l1526
  2511  00A9  3A03               	xorlw	3	; case 6
  2512  00AA  1903               	skipnz
  2513  00AB  2866               	goto	i1l1532
  2514  00AC  3A01               	xorlw	1	; case 7
  2515  00AD  1903               	skipnz
  2516  00AE  284B               	goto	i1l1508
  2517  00AF  3A0F               	xorlw	15	; case 8
  2518  00B0  1903               	skipnz
  2519  00B1  286D               	goto	i1l1546
  2520  00B2  3A01               	xorlw	1	; case 9
  2521  00B3  1903               	skipnz
  2522  00B4  287B               	goto	i1l1556
  2523  00B5  3A03               	xorlw	3	; case 10
  2524  00B6  1903               	skipnz
  2525  00B7  2882               	goto	i1l1562
  2526  00B8  3A01               	xorlw	1	; case 11
  2527  00B9  1903               	skipnz
  2528  00BA  2889               	goto	i1l1568
  2529  00BB  28BC               	goto	i1l157
  2530  00BC                     i1l157:
  2531  00BC  0008               	return
  2532  00BD                     __end_of_TX:
  2533                           
  2534                           	psect	text16
  2535  018C                     __ptext16:	
  2536 ;; *************** function _EJEZ_TO_CHARS *****************
  2537 ;; Defined at:
  2538 ;;		line 272 in file "Principal_Master.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  valor           1   12[COMMON] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0, pclath, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2552 ;;      Params:         0       0       0       0       0
  2553 ;;      Locals:         1       0       0       0       0
  2554 ;;      Temps:          3       0       0       0       0
  2555 ;;      Totals:         4       0       0       0       0
  2556 ;;Total ram usage:        4 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    1
  2559 ;; This function calls:
  2560 ;;		___awdiv
  2561 ;;		___awmod
  2562 ;; This function is called by:
  2563 ;;		_TX
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           
  2568                           ;psect for function _EJEZ_TO_CHARS
  2569  018C                     _EJEZ_TO_CHARS:
  2570  018C                     i1l1450:	
  2571                           ;incstack = 0
  2572                           ; Regs used in _EJEZ_TO_CHARS: [wreg+status,2+status,0+pclath+cstack]
  2573                           
  2574                           
  2575                           ;Principal_Master.c: 274:     uint8_t valor = X;
  2576  018C  087D               	movf	_X,w
  2577  018D  00F9               	movwf	??_EJEZ_TO_CHARS
  2578  018E  0879               	movf	??_EJEZ_TO_CHARS,w
  2579  018F  00FC               	movwf	EJEZ_TO_CHARS@valor
  2580  0190                     i1l1452:
  2581                           
  2582                           ;Principal_Master.c: 275:     Z_units = valor %10 ;
  2583  0190  300A               	movlw	10
  2584  0191  00F0               	movwf	___awmod@divisor
  2585  0192  3000               	movlw	0
  2586  0193  00F1               	movwf	___awmod@divisor+1
  2587  0194  087C               	movf	EJEZ_TO_CHARS@valor,w
  2588  0195  00F9               	movwf	??_EJEZ_TO_CHARS
  2589  0196  01FA               	clrf	??_EJEZ_TO_CHARS+1
  2590  0197  0879               	movf	??_EJEZ_TO_CHARS,w
  2591  0198  00F2               	movwf	___awmod@dividend
  2592  0199  087A               	movf	??_EJEZ_TO_CHARS+1,w
  2593  019A  00F3               	movwf	___awmod@dividend+1
  2594  019B  120A  118A  229D  120A  118A  	fcall	___awmod
  2595  01A0  0870               	movf	?___awmod,w
  2596  01A1  00FB               	movwf	??_EJEZ_TO_CHARS+2
  2597  01A2  087B               	movf	??_EJEZ_TO_CHARS+2,w
  2598  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2599  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2600  01A5  00BD               	movwf	_Z_units
  2601  01A6                     i1l1454:
  2602                           
  2603                           ;Principal_Master.c: 276:     valor = valor/10;
  2604  01A6  300A               	movlw	10
  2605  01A7  00F0               	movwf	___awdiv@divisor
  2606  01A8  3000               	movlw	0
  2607  01A9  00F1               	movwf	___awdiv@divisor+1
  2608  01AA  087C               	movf	EJEZ_TO_CHARS@valor,w
  2609  01AB  00F9               	movwf	??_EJEZ_TO_CHARS
  2610  01AC  01FA               	clrf	??_EJEZ_TO_CHARS+1
  2611  01AD  0879               	movf	??_EJEZ_TO_CHARS,w
  2612  01AE  00F2               	movwf	___awdiv@dividend
  2613  01AF  087A               	movf	??_EJEZ_TO_CHARS+1,w
  2614  01B0  00F3               	movwf	___awdiv@dividend+1
  2615  01B1  120A  118A  2125  120A  118A  	fcall	___awdiv
  2616  01B6  0870               	movf	?___awdiv,w
  2617  01B7  00FB               	movwf	??_EJEZ_TO_CHARS+2
  2618  01B8  087B               	movf	??_EJEZ_TO_CHARS+2,w
  2619  01B9  00FC               	movwf	EJEZ_TO_CHARS@valor
  2620  01BA                     i1l1456:
  2621                           
  2622                           ;Principal_Master.c: 277:     Z_decs = valor %10 ;
  2623  01BA  300A               	movlw	10
  2624  01BB  00F0               	movwf	___awmod@divisor
  2625  01BC  3000               	movlw	0
  2626  01BD  00F1               	movwf	___awmod@divisor+1
  2627  01BE  087C               	movf	EJEZ_TO_CHARS@valor,w
  2628  01BF  00F9               	movwf	??_EJEZ_TO_CHARS
  2629  01C0  01FA               	clrf	??_EJEZ_TO_CHARS+1
  2630  01C1  0879               	movf	??_EJEZ_TO_CHARS,w
  2631  01C2  00F2               	movwf	___awmod@dividend
  2632  01C3  087A               	movf	??_EJEZ_TO_CHARS+1,w
  2633  01C4  00F3               	movwf	___awmod@dividend+1
  2634  01C5  120A  118A  229D  120A  118A  	fcall	___awmod
  2635  01CA  0870               	movf	?___awmod,w
  2636  01CB  00FB               	movwf	??_EJEZ_TO_CHARS+2
  2637  01CC  087B               	movf	??_EJEZ_TO_CHARS+2,w
  2638  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  2639  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  2640  01CF  00BC               	movwf	_Z_decs
  2641  01D0                     i1l1458:
  2642                           
  2643                           ;Principal_Master.c: 278:     Z_cents = valor /10 ;
  2644  01D0  300A               	movlw	10
  2645  01D1  00F0               	movwf	___awdiv@divisor
  2646  01D2  3000               	movlw	0
  2647  01D3  00F1               	movwf	___awdiv@divisor+1
  2648  01D4  087C               	movf	EJEZ_TO_CHARS@valor,w
  2649  01D5  00F9               	movwf	??_EJEZ_TO_CHARS
  2650  01D6  01FA               	clrf	??_EJEZ_TO_CHARS+1
  2651  01D7  0879               	movf	??_EJEZ_TO_CHARS,w
  2652  01D8  00F2               	movwf	___awdiv@dividend
  2653  01D9  087A               	movf	??_EJEZ_TO_CHARS+1,w
  2654  01DA  00F3               	movwf	___awdiv@dividend+1
  2655  01DB  120A  118A  2125  120A  118A  	fcall	___awdiv
  2656  01E0  0870               	movf	?___awdiv,w
  2657  01E1  00FB               	movwf	??_EJEZ_TO_CHARS+2
  2658  01E2  087B               	movf	??_EJEZ_TO_CHARS+2,w
  2659  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2660  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2661  01E5  00BB               	movwf	_Z_cents
  2662  01E6                     i1l181:
  2663  01E6  0008               	return
  2664  01E7                     __end_of_EJEZ_TO_CHARS:
  2665                           
  2666                           	psect	text17
  2667  01E7                     __ptext17:	
  2668 ;; *************** function _EJEY_TO_CHARS *****************
  2669 ;; Defined at:
  2670 ;;		line 262 in file "Principal_Master.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  valor           1   12[COMMON] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, pclath, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2684 ;;      Params:         0       0       0       0       0
  2685 ;;      Locals:         1       0       0       0       0
  2686 ;;      Temps:          3       0       0       0       0
  2687 ;;      Totals:         4       0       0       0       0
  2688 ;;Total ram usage:        4 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    1
  2691 ;; This function calls:
  2692 ;;		___awdiv
  2693 ;;		___awmod
  2694 ;; This function is called by:
  2695 ;;		_TX
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           
  2700                           ;psect for function _EJEY_TO_CHARS
  2701  01E7                     _EJEY_TO_CHARS:
  2702  01E7                     i1l1440:	
  2703                           ;incstack = 0
  2704                           ; Regs used in _EJEY_TO_CHARS: [wreg+status,2+status,0+pclath+cstack]
  2705                           
  2706                           
  2707                           ;Principal_Master.c: 264:     uint8_t valor = X;
  2708  01E7  087D               	movf	_X,w
  2709  01E8  00F9               	movwf	??_EJEY_TO_CHARS
  2710  01E9  0879               	movf	??_EJEY_TO_CHARS,w
  2711  01EA  00FC               	movwf	EJEY_TO_CHARS@valor
  2712  01EB                     i1l1442:
  2713                           
  2714                           ;Principal_Master.c: 265:     Y_units = valor %10 ;
  2715  01EB  300A               	movlw	10
  2716  01EC  00F0               	movwf	___awmod@divisor
  2717  01ED  3000               	movlw	0
  2718  01EE  00F1               	movwf	___awmod@divisor+1
  2719  01EF  087C               	movf	EJEY_TO_CHARS@valor,w
  2720  01F0  00F9               	movwf	??_EJEY_TO_CHARS
  2721  01F1  01FA               	clrf	??_EJEY_TO_CHARS+1
  2722  01F2  0879               	movf	??_EJEY_TO_CHARS,w
  2723  01F3  00F2               	movwf	___awmod@dividend
  2724  01F4  087A               	movf	??_EJEY_TO_CHARS+1,w
  2725  01F5  00F3               	movwf	___awmod@dividend+1
  2726  01F6  120A  118A  229D  120A  118A  	fcall	___awmod
  2727  01FB  0870               	movf	?___awmod,w
  2728  01FC  00FB               	movwf	??_EJEY_TO_CHARS+2
  2729  01FD  087B               	movf	??_EJEY_TO_CHARS+2,w
  2730  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2731  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0200  00C0               	movwf	_Y_units
  2733  0201                     i1l1444:
  2734                           
  2735                           ;Principal_Master.c: 266:     valor = valor/10;
  2736  0201  300A               	movlw	10
  2737  0202  00F0               	movwf	___awdiv@divisor
  2738  0203  3000               	movlw	0
  2739  0204  00F1               	movwf	___awdiv@divisor+1
  2740  0205  087C               	movf	EJEY_TO_CHARS@valor,w
  2741  0206  00F9               	movwf	??_EJEY_TO_CHARS
  2742  0207  01FA               	clrf	??_EJEY_TO_CHARS+1
  2743  0208  0879               	movf	??_EJEY_TO_CHARS,w
  2744  0209  00F2               	movwf	___awdiv@dividend
  2745  020A  087A               	movf	??_EJEY_TO_CHARS+1,w
  2746  020B  00F3               	movwf	___awdiv@dividend+1
  2747  020C  120A  118A  2125  120A  118A  	fcall	___awdiv
  2748  0211  0870               	movf	?___awdiv,w
  2749  0212  00FB               	movwf	??_EJEY_TO_CHARS+2
  2750  0213  087B               	movf	??_EJEY_TO_CHARS+2,w
  2751  0214  00FC               	movwf	EJEY_TO_CHARS@valor
  2752  0215                     i1l1446:
  2753                           
  2754                           ;Principal_Master.c: 267:     Y_decs = valor %10 ;
  2755  0215  300A               	movlw	10
  2756  0216  00F0               	movwf	___awmod@divisor
  2757  0217  3000               	movlw	0
  2758  0218  00F1               	movwf	___awmod@divisor+1
  2759  0219  087C               	movf	EJEY_TO_CHARS@valor,w
  2760  021A  00F9               	movwf	??_EJEY_TO_CHARS
  2761  021B  01FA               	clrf	??_EJEY_TO_CHARS+1
  2762  021C  0879               	movf	??_EJEY_TO_CHARS,w
  2763  021D  00F2               	movwf	___awmod@dividend
  2764  021E  087A               	movf	??_EJEY_TO_CHARS+1,w
  2765  021F  00F3               	movwf	___awmod@dividend+1
  2766  0220  120A  118A  229D  120A  118A  	fcall	___awmod
  2767  0225  0870               	movf	?___awmod,w
  2768  0226  00FB               	movwf	??_EJEY_TO_CHARS+2
  2769  0227  087B               	movf	??_EJEY_TO_CHARS+2,w
  2770  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2772  022A  00BF               	movwf	_Y_decs
  2773  022B                     i1l1448:
  2774                           
  2775                           ;Principal_Master.c: 268:     Y_cents = valor /10 ;
  2776  022B  300A               	movlw	10
  2777  022C  00F0               	movwf	___awdiv@divisor
  2778  022D  3000               	movlw	0
  2779  022E  00F1               	movwf	___awdiv@divisor+1
  2780  022F  087C               	movf	EJEY_TO_CHARS@valor,w
  2781  0230  00F9               	movwf	??_EJEY_TO_CHARS
  2782  0231  01FA               	clrf	??_EJEY_TO_CHARS+1
  2783  0232  0879               	movf	??_EJEY_TO_CHARS,w
  2784  0233  00F2               	movwf	___awdiv@dividend
  2785  0234  087A               	movf	??_EJEY_TO_CHARS+1,w
  2786  0235  00F3               	movwf	___awdiv@dividend+1
  2787  0236  120A  118A  2125  120A  118A  	fcall	___awdiv
  2788  023B  0870               	movf	?___awdiv,w
  2789  023C  00FB               	movwf	??_EJEY_TO_CHARS+2
  2790  023D  087B               	movf	??_EJEY_TO_CHARS+2,w
  2791  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2792  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2793  0240  00BE               	movwf	_Y_cents
  2794  0241                     i1l178:
  2795  0241  0008               	return
  2796  0242                     __end_of_EJEY_TO_CHARS:
  2797                           
  2798                           	psect	text18
  2799  0242                     __ptext18:	
  2800 ;; *************** function _EJEX_TO_CHARS *****************
  2801 ;; Defined at:
  2802 ;;		line 252 in file "Principal_Master.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  valor           1   12[COMMON] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, pclath, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2816 ;;      Params:         0       0       0       0       0
  2817 ;;      Locals:         1       0       0       0       0
  2818 ;;      Temps:          3       0       0       0       0
  2819 ;;      Totals:         4       0       0       0       0
  2820 ;;Total ram usage:        4 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    1
  2823 ;; This function calls:
  2824 ;;		___awdiv
  2825 ;;		___awmod
  2826 ;; This function is called by:
  2827 ;;		_TX
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _EJEX_TO_CHARS
  2833  0242                     _EJEX_TO_CHARS:
  2834  0242                     i1l1430:	
  2835                           ;incstack = 0
  2836                           ; Regs used in _EJEX_TO_CHARS: [wreg+status,2+status,0+pclath+cstack]
  2837                           
  2838                           
  2839                           ;Principal_Master.c: 254:     uint8_t valor = X;
  2840  0242  087D               	movf	_X,w
  2841  0243  00F9               	movwf	??_EJEX_TO_CHARS
  2842  0244  0879               	movf	??_EJEX_TO_CHARS,w
  2843  0245  00FC               	movwf	EJEX_TO_CHARS@valor
  2844  0246                     i1l1432:
  2845                           
  2846                           ;Principal_Master.c: 255:     X_units = valor %10 ;
  2847  0246  300A               	movlw	10
  2848  0247  00F0               	movwf	___awmod@divisor
  2849  0248  3000               	movlw	0
  2850  0249  00F1               	movwf	___awmod@divisor+1
  2851  024A  087C               	movf	EJEX_TO_CHARS@valor,w
  2852  024B  00F9               	movwf	??_EJEX_TO_CHARS
  2853  024C  01FA               	clrf	??_EJEX_TO_CHARS+1
  2854  024D  0879               	movf	??_EJEX_TO_CHARS,w
  2855  024E  00F2               	movwf	___awmod@dividend
  2856  024F  087A               	movf	??_EJEX_TO_CHARS+1,w
  2857  0250  00F3               	movwf	___awmod@dividend+1
  2858  0251  120A  118A  229D  120A  118A  	fcall	___awmod
  2859  0256  0870               	movf	?___awmod,w
  2860  0257  00FB               	movwf	??_EJEX_TO_CHARS+2
  2861  0258  087B               	movf	??_EJEX_TO_CHARS+2,w
  2862  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2863  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2864  025B  00C3               	movwf	_X_units
  2865  025C                     i1l1434:
  2866                           
  2867                           ;Principal_Master.c: 256:     valor = valor/10;
  2868  025C  300A               	movlw	10
  2869  025D  00F0               	movwf	___awdiv@divisor
  2870  025E  3000               	movlw	0
  2871  025F  00F1               	movwf	___awdiv@divisor+1
  2872  0260  087C               	movf	EJEX_TO_CHARS@valor,w
  2873  0261  00F9               	movwf	??_EJEX_TO_CHARS
  2874  0262  01FA               	clrf	??_EJEX_TO_CHARS+1
  2875  0263  0879               	movf	??_EJEX_TO_CHARS,w
  2876  0264  00F2               	movwf	___awdiv@dividend
  2877  0265  087A               	movf	??_EJEX_TO_CHARS+1,w
  2878  0266  00F3               	movwf	___awdiv@dividend+1
  2879  0267  120A  118A  2125  120A  118A  	fcall	___awdiv
  2880  026C  0870               	movf	?___awdiv,w
  2881  026D  00FB               	movwf	??_EJEX_TO_CHARS+2
  2882  026E  087B               	movf	??_EJEX_TO_CHARS+2,w
  2883  026F  00FC               	movwf	EJEX_TO_CHARS@valor
  2884  0270                     i1l1436:
  2885                           
  2886                           ;Principal_Master.c: 257:     X_decs = valor %10 ;
  2887  0270  300A               	movlw	10
  2888  0271  00F0               	movwf	___awmod@divisor
  2889  0272  3000               	movlw	0
  2890  0273  00F1               	movwf	___awmod@divisor+1
  2891  0274  087C               	movf	EJEX_TO_CHARS@valor,w
  2892  0275  00F9               	movwf	??_EJEX_TO_CHARS
  2893  0276  01FA               	clrf	??_EJEX_TO_CHARS+1
  2894  0277  0879               	movf	??_EJEX_TO_CHARS,w
  2895  0278  00F2               	movwf	___awmod@dividend
  2896  0279  087A               	movf	??_EJEX_TO_CHARS+1,w
  2897  027A  00F3               	movwf	___awmod@dividend+1
  2898  027B  120A  118A  229D  120A  118A  	fcall	___awmod
  2899  0280  0870               	movf	?___awmod,w
  2900  0281  00FB               	movwf	??_EJEX_TO_CHARS+2
  2901  0282  087B               	movf	??_EJEX_TO_CHARS+2,w
  2902  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0285  00C2               	movwf	_X_decs
  2905  0286                     i1l1438:
  2906                           
  2907                           ;Principal_Master.c: 258:     X_cents = valor /10 ;
  2908  0286  300A               	movlw	10
  2909  0287  00F0               	movwf	___awdiv@divisor
  2910  0288  3000               	movlw	0
  2911  0289  00F1               	movwf	___awdiv@divisor+1
  2912  028A  087C               	movf	EJEX_TO_CHARS@valor,w
  2913  028B  00F9               	movwf	??_EJEX_TO_CHARS
  2914  028C  01FA               	clrf	??_EJEX_TO_CHARS+1
  2915  028D  0879               	movf	??_EJEX_TO_CHARS,w
  2916  028E  00F2               	movwf	___awdiv@dividend
  2917  028F  087A               	movf	??_EJEX_TO_CHARS+1,w
  2918  0290  00F3               	movwf	___awdiv@dividend+1
  2919  0291  120A  118A  2125  120A  118A  	fcall	___awdiv
  2920  0296  0870               	movf	?___awdiv,w
  2921  0297  00FB               	movwf	??_EJEX_TO_CHARS+2
  2922  0298  087B               	movf	??_EJEX_TO_CHARS+2,w
  2923  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2924  029A  1303               	bcf	3,6	;RP1=0, select bank0
  2925  029B  00C1               	movwf	_X_cents
  2926  029C                     i1l175:
  2927  029C  0008               	return
  2928  029D                     __end_of_EJEX_TO_CHARS:
  2929                           
  2930                           	psect	text19
  2931  029D                     __ptext19:	
  2932 ;; *************** function ___awmod *****************
  2933 ;; Defined at:
  2934 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  divisor         2    0[COMMON] int 
  2937 ;;  dividend        2    2[COMMON] int 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  sign            1    6[COMMON] unsigned char 
  2940 ;;  counter         1    5[COMMON] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  2    0[COMMON] int 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950 ;;      Params:         4       0       0       0       0
  2951 ;;      Locals:         2       0       0       0       0
  2952 ;;      Temps:          1       0       0       0       0
  2953 ;;      Totals:         7       0       0       0       0
  2954 ;;Total ram usage:        7 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_EJEX_TO_CHARS
  2960 ;;		_EJEY_TO_CHARS
  2961 ;;		_EJEZ_TO_CHARS
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           
  2966                           ;psect for function ___awmod
  2967  029D                     ___awmod:
  2968  029D                     i1l1384:	
  2969                           ;incstack = 0
  2970                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2971                           
  2972  029D  01F6               	clrf	___awmod@sign
  2973  029E                     i1l1386:
  2974  029E  1FF3               	btfss	___awmod@dividend+1,7
  2975  029F  2AA1               	goto	u45_21
  2976  02A0  2AA2               	goto	u45_20
  2977  02A1                     u45_21:
  2978  02A1  2AA9               	goto	i1l1392
  2979  02A2                     u45_20:
  2980  02A2                     i1l1388:
  2981  02A2  09F2               	comf	___awmod@dividend,f
  2982  02A3  09F3               	comf	___awmod@dividend+1,f
  2983  02A4  0AF2               	incf	___awmod@dividend,f
  2984  02A5  1903               	skipnz
  2985  02A6  0AF3               	incf	___awmod@dividend+1,f
  2986  02A7                     i1l1390:
  2987  02A7  01F6               	clrf	___awmod@sign
  2988  02A8  0AF6               	incf	___awmod@sign,f
  2989  02A9                     i1l1392:
  2990  02A9  1FF1               	btfss	___awmod@divisor+1,7
  2991  02AA  2AAC               	goto	u46_21
  2992  02AB  2AAD               	goto	u46_20
  2993  02AC                     u46_21:
  2994  02AC  2AB2               	goto	i1l1396
  2995  02AD                     u46_20:
  2996  02AD                     i1l1394:
  2997  02AD  09F0               	comf	___awmod@divisor,f
  2998  02AE  09F1               	comf	___awmod@divisor+1,f
  2999  02AF  0AF0               	incf	___awmod@divisor,f
  3000  02B0  1903               	skipnz
  3001  02B1  0AF1               	incf	___awmod@divisor+1,f
  3002  02B2                     i1l1396:
  3003  02B2  0870               	movf	___awmod@divisor,w
  3004  02B3  0471               	iorwf	___awmod@divisor+1,w
  3005  02B4  1903               	btfsc	3,2
  3006  02B5  2AB7               	goto	u47_21
  3007  02B6  2AB8               	goto	u47_20
  3008  02B7                     u47_21:
  3009  02B7  2AE7               	goto	i1l1414
  3010  02B8                     u47_20:
  3011  02B8                     i1l1398:
  3012  02B8  01F5               	clrf	___awmod@counter
  3013  02B9  0AF5               	incf	___awmod@counter,f
  3014  02BA  2AC6               	goto	i1l1404
  3015  02BB                     i1l1400:
  3016  02BB  3001               	movlw	1
  3017  02BC                     u48_25:
  3018  02BC  1003               	clrc
  3019  02BD  0DF0               	rlf	___awmod@divisor,f
  3020  02BE  0DF1               	rlf	___awmod@divisor+1,f
  3021  02BF  3EFF               	addlw	-1
  3022  02C0  1D03               	skipz
  3023  02C1  2ABC               	goto	u48_25
  3024  02C2                     i1l1402:
  3025  02C2  3001               	movlw	1
  3026  02C3  00F4               	movwf	??___awmod
  3027  02C4  0874               	movf	??___awmod,w
  3028  02C5  07F5               	addwf	___awmod@counter,f
  3029  02C6                     i1l1404:
  3030  02C6  1FF1               	btfss	___awmod@divisor+1,7
  3031  02C7  2AC9               	goto	u49_21
  3032  02C8  2ACA               	goto	u49_20
  3033  02C9                     u49_21:
  3034  02C9  2ABB               	goto	i1l1400
  3035  02CA                     u49_20:
  3036  02CA                     i1l1406:
  3037  02CA  0871               	movf	___awmod@divisor+1,w
  3038  02CB  0273               	subwf	___awmod@dividend+1,w
  3039  02CC  1D03               	skipz
  3040  02CD  2AD0               	goto	u50_25
  3041  02CE  0870               	movf	___awmod@divisor,w
  3042  02CF  0272               	subwf	___awmod@dividend,w
  3043  02D0                     u50_25:
  3044  02D0  1C03               	skipc
  3045  02D1  2AD3               	goto	u50_21
  3046  02D2  2AD4               	goto	u50_20
  3047  02D3                     u50_21:
  3048  02D3  2ADA               	goto	i1l1410
  3049  02D4                     u50_20:
  3050  02D4                     i1l1408:
  3051  02D4  0870               	movf	___awmod@divisor,w
  3052  02D5  02F2               	subwf	___awmod@dividend,f
  3053  02D6  0871               	movf	___awmod@divisor+1,w
  3054  02D7  1C03               	skipc
  3055  02D8  03F3               	decf	___awmod@dividend+1,f
  3056  02D9  02F3               	subwf	___awmod@dividend+1,f
  3057  02DA                     i1l1410:
  3058  02DA  3001               	movlw	1
  3059  02DB                     u51_25:
  3060  02DB  1003               	clrc
  3061  02DC  0CF1               	rrf	___awmod@divisor+1,f
  3062  02DD  0CF0               	rrf	___awmod@divisor,f
  3063  02DE  3EFF               	addlw	-1
  3064  02DF  1D03               	skipz
  3065  02E0  2ADB               	goto	u51_25
  3066  02E1                     i1l1412:
  3067  02E1  3001               	movlw	1
  3068  02E2  02F5               	subwf	___awmod@counter,f
  3069  02E3  1D03               	btfss	3,2
  3070  02E4  2AE6               	goto	u52_21
  3071  02E5  2AE7               	goto	u52_20
  3072  02E6                     u52_21:
  3073  02E6  2ACA               	goto	i1l1406
  3074  02E7                     u52_20:
  3075  02E7                     i1l1414:
  3076  02E7  0876               	movf	___awmod@sign,w
  3077  02E8  1903               	btfsc	3,2
  3078  02E9  2AEB               	goto	u53_21
  3079  02EA  2AEC               	goto	u53_20
  3080  02EB                     u53_21:
  3081  02EB  2AF1               	goto	i1l1418
  3082  02EC                     u53_20:
  3083  02EC                     i1l1416:
  3084  02EC  09F2               	comf	___awmod@dividend,f
  3085  02ED  09F3               	comf	___awmod@dividend+1,f
  3086  02EE  0AF2               	incf	___awmod@dividend,f
  3087  02EF  1903               	skipnz
  3088  02F0  0AF3               	incf	___awmod@dividend+1,f
  3089  02F1                     i1l1418:
  3090  02F1  0873               	movf	___awmod@dividend+1,w
  3091  02F2  00F1               	movwf	?___awmod+1
  3092  02F3  0872               	movf	___awmod@dividend,w
  3093  02F4  00F0               	movwf	?___awmod
  3094  02F5                     i1l530:
  3095  02F5  0008               	return
  3096  02F6                     __end_of___awmod:
  3097                           
  3098                           	psect	text20
  3099  0125                     __ptext20:	
  3100 ;; *************** function ___awdiv *****************
  3101 ;; Defined at:
  3102 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  divisor         2    0[COMMON] int 
  3105 ;;  dividend        2    2[COMMON] int 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  quotient        2    7[COMMON] int 
  3108 ;;  sign            1    6[COMMON] unsigned char 
  3109 ;;  counter         1    5[COMMON] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2    0[COMMON] int 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3119 ;;      Params:         4       0       0       0       0
  3120 ;;      Locals:         4       0       0       0       0
  3121 ;;      Temps:          1       0       0       0       0
  3122 ;;      Totals:         9       0       0       0       0
  3123 ;;Total ram usage:        9 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_EJEX_TO_CHARS
  3129 ;;		_EJEY_TO_CHARS
  3130 ;;		_EJEZ_TO_CHARS
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           
  3135                           ;psect for function ___awdiv
  3136  0125                     ___awdiv:
  3137  0125                     i1l1340:	
  3138                           ;incstack = 0
  3139                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3140                           
  3141  0125  01F6               	clrf	___awdiv@sign
  3142  0126                     i1l1342:
  3143  0126  1FF1               	btfss	___awdiv@divisor+1,7
  3144  0127  2929               	goto	u35_21
  3145  0128  292A               	goto	u35_20
  3146  0129                     u35_21:
  3147  0129  2931               	goto	i1l1348
  3148  012A                     u35_20:
  3149  012A                     i1l1344:
  3150  012A  09F0               	comf	___awdiv@divisor,f
  3151  012B  09F1               	comf	___awdiv@divisor+1,f
  3152  012C  0AF0               	incf	___awdiv@divisor,f
  3153  012D  1903               	skipnz
  3154  012E  0AF1               	incf	___awdiv@divisor+1,f
  3155  012F                     i1l1346:
  3156  012F  01F6               	clrf	___awdiv@sign
  3157  0130  0AF6               	incf	___awdiv@sign,f
  3158  0131                     i1l1348:
  3159  0131  1FF3               	btfss	___awdiv@dividend+1,7
  3160  0132  2934               	goto	u36_21
  3161  0133  2935               	goto	u36_20
  3162  0134                     u36_21:
  3163  0134  293E               	goto	i1l1354
  3164  0135                     u36_20:
  3165  0135                     i1l1350:
  3166  0135  09F2               	comf	___awdiv@dividend,f
  3167  0136  09F3               	comf	___awdiv@dividend+1,f
  3168  0137  0AF2               	incf	___awdiv@dividend,f
  3169  0138  1903               	skipnz
  3170  0139  0AF3               	incf	___awdiv@dividend+1,f
  3171  013A                     i1l1352:
  3172  013A  3001               	movlw	1
  3173  013B  00F4               	movwf	??___awdiv
  3174  013C  0874               	movf	??___awdiv,w
  3175  013D  06F6               	xorwf	___awdiv@sign,f
  3176  013E                     i1l1354:
  3177  013E  01F7               	clrf	___awdiv@quotient
  3178  013F  01F8               	clrf	___awdiv@quotient+1
  3179  0140                     i1l1356:
  3180  0140  0870               	movf	___awdiv@divisor,w
  3181  0141  0471               	iorwf	___awdiv@divisor+1,w
  3182  0142  1903               	btfsc	3,2
  3183  0143  2945               	goto	u37_21
  3184  0144  2946               	goto	u37_20
  3185  0145                     u37_21:
  3186  0145  297D               	goto	i1l1376
  3187  0146                     u37_20:
  3188  0146                     i1l1358:
  3189  0146  01F5               	clrf	___awdiv@counter
  3190  0147  0AF5               	incf	___awdiv@counter,f
  3191  0148  2954               	goto	i1l1364
  3192  0149                     i1l1360:
  3193  0149  3001               	movlw	1
  3194  014A                     u38_25:
  3195  014A  1003               	clrc
  3196  014B  0DF0               	rlf	___awdiv@divisor,f
  3197  014C  0DF1               	rlf	___awdiv@divisor+1,f
  3198  014D  3EFF               	addlw	-1
  3199  014E  1D03               	skipz
  3200  014F  294A               	goto	u38_25
  3201  0150                     i1l1362:
  3202  0150  3001               	movlw	1
  3203  0151  00F4               	movwf	??___awdiv
  3204  0152  0874               	movf	??___awdiv,w
  3205  0153  07F5               	addwf	___awdiv@counter,f
  3206  0154                     i1l1364:
  3207  0154  1FF1               	btfss	___awdiv@divisor+1,7
  3208  0155  2957               	goto	u39_21
  3209  0156  2958               	goto	u39_20
  3210  0157                     u39_21:
  3211  0157  2949               	goto	i1l1360
  3212  0158                     u39_20:
  3213  0158                     i1l1366:
  3214  0158  3001               	movlw	1
  3215  0159                     u40_25:
  3216  0159  1003               	clrc
  3217  015A  0DF7               	rlf	___awdiv@quotient,f
  3218  015B  0DF8               	rlf	___awdiv@quotient+1,f
  3219  015C  3EFF               	addlw	-1
  3220  015D  1D03               	skipz
  3221  015E  2959               	goto	u40_25
  3222  015F  0871               	movf	___awdiv@divisor+1,w
  3223  0160  0273               	subwf	___awdiv@dividend+1,w
  3224  0161  1D03               	skipz
  3225  0162  2965               	goto	u41_25
  3226  0163  0870               	movf	___awdiv@divisor,w
  3227  0164  0272               	subwf	___awdiv@dividend,w
  3228  0165                     u41_25:
  3229  0165  1C03               	skipc
  3230  0166  2968               	goto	u41_21
  3231  0167  2969               	goto	u41_20
  3232  0168                     u41_21:
  3233  0168  2970               	goto	i1l1372
  3234  0169                     u41_20:
  3235  0169                     i1l1368:
  3236  0169  0870               	movf	___awdiv@divisor,w
  3237  016A  02F2               	subwf	___awdiv@dividend,f
  3238  016B  0871               	movf	___awdiv@divisor+1,w
  3239  016C  1C03               	skipc
  3240  016D  03F3               	decf	___awdiv@dividend+1,f
  3241  016E  02F3               	subwf	___awdiv@dividend+1,f
  3242  016F                     i1l1370:
  3243  016F  1477               	bsf	___awdiv@quotient,0
  3244  0170                     i1l1372:
  3245  0170  3001               	movlw	1
  3246  0171                     u42_25:
  3247  0171  1003               	clrc
  3248  0172  0CF1               	rrf	___awdiv@divisor+1,f
  3249  0173  0CF0               	rrf	___awdiv@divisor,f
  3250  0174  3EFF               	addlw	-1
  3251  0175  1D03               	skipz
  3252  0176  2971               	goto	u42_25
  3253  0177                     i1l1374:
  3254  0177  3001               	movlw	1
  3255  0178  02F5               	subwf	___awdiv@counter,f
  3256  0179  1D03               	btfss	3,2
  3257  017A  297C               	goto	u43_21
  3258  017B  297D               	goto	u43_20
  3259  017C                     u43_21:
  3260  017C  2958               	goto	i1l1366
  3261  017D                     u43_20:
  3262  017D                     i1l1376:
  3263  017D  0876               	movf	___awdiv@sign,w
  3264  017E  1903               	btfsc	3,2
  3265  017F  2981               	goto	u44_21
  3266  0180  2982               	goto	u44_20
  3267  0181                     u44_21:
  3268  0181  2987               	goto	i1l1380
  3269  0182                     u44_20:
  3270  0182                     i1l1378:
  3271  0182  09F7               	comf	___awdiv@quotient,f
  3272  0183  09F8               	comf	___awdiv@quotient+1,f
  3273  0184  0AF7               	incf	___awdiv@quotient,f
  3274  0185  1903               	skipnz
  3275  0186  0AF8               	incf	___awdiv@quotient+1,f
  3276  0187                     i1l1380:
  3277  0187  0878               	movf	___awdiv@quotient+1,w
  3278  0188  00F1               	movwf	?___awdiv+1
  3279  0189  0877               	movf	___awdiv@quotient,w
  3280  018A  00F0               	movwf	?___awdiv
  3281  018B                     i1l517:
  3282  018B  0008               	return
  3283  018C                     __end_of___awdiv:
  3284  007E                     btemp	set	126	;btemp
  3285  007E                     wtemp0	set	126
  3286                           
  3287                           	psect	config
  3288                           
  3289                           ;Config register CONFIG1 @ 0x2007
  3290                           ;	Oscillator Selection bits
  3291                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3292                           ;	Watchdog Timer Enable bit
  3293                           ;	WDTE = ON, WDT enabled
  3294                           ;	Power-up Timer Enable bit
  3295                           ;	PWRTE = OFF, PWRT disabled
  3296                           ;	RE3/MCLR pin function select bit
  3297                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3298                           ;	Code Protection bit
  3299                           ;	CP = OFF, Program memory code protection is disabled
  3300                           ;	Data Code Protection bit
  3301                           ;	CPD = OFF, Data memory code protection is disabled
  3302                           ;	Brown Out Reset Selection bits
  3303                           ;	BOREN = ON, BOR enabled
  3304                           ;	Internal External Switchover bit
  3305                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3306                           ;	Fail-Safe Clock Monitor Enabled bit
  3307                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3308                           ;	Low Voltage Programming Enable bit
  3309                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3310                           ;	In-Circuit Debugger Mode bit
  3311                           ;	DEBUG = 0x1, unprogrammed default
  3312  2007                     	org	8199
  3313  2007  3FFD               	dw	16381
  3314                           
  3315                           ;Config register CONFIG2 @ 0x2008
  3316                           ;	Brown-out Reset Selection bit
  3317                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3318                           ;	Flash Program Memory Self Write Enable bits
  3319                           ;	WRT = OFF, Write protection off
  3320  2008                     	org	8200
  3321  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     27      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _TX->_EJEX_TO_CHARS
    _TX->_EJEY_TO_CHARS
    _TX->_EJEZ_TO_CHARS
    _EJEZ_TO_CHARS->___awdiv
    _EJEY_TO_CHARS->___awdiv
    _EJEX_TO_CHARS->___awdiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _LEER_VALORES->_ACELEROMETRO_R
    _ACELEROMETRO_R->_I2C_Master_Read
    _I2C_Master_Init->___lldiv
    _ACELEROMETRO_CONFIG->_ACELEROMETRO_W
    _ACELEROMETRO_W->_I2C_Master_Write

Critical Paths under _isr in BANK0

    _isr->_TX

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1730
                _ACELEROMETRO_CONFIG
                       _CONFIG_USART
                    _I2C_Master_Init
                       _LEER_VALORES
                              _SETUP
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEER_VALORES                                         1     1      0     644
                                             18 BANK0      1     1      0
                     _ACELEROMETRO_R
 ---------------------------------------------------------------------------------
 (2) _ACELEROMETRO_R                                       7     5      2     644
                                             11 BANK0      7     5      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2     121
                                              5 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             19 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              5 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _CONFIG_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ACELEROMETRO_CONFIG                                  2     2      0     674
                                             11 BANK0      2     2      0
                     _ACELEROMETRO_W
 ---------------------------------------------------------------------------------
 (2) _ACELEROMETRO_W                                       4     3      1     674
                                              7 BANK0      4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     478
                                              5 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0    7530
                                              2 BANK0      3     3      0
                                 _TX
 ---------------------------------------------------------------------------------
 (6) _TX                                                   2     2      0    7530
                                              0 BANK0      2     2      0
                      _EJEX_TO_CHARS
                      _EJEY_TO_CHARS
                      _EJEZ_TO_CHARS
 ---------------------------------------------------------------------------------
 (7) _EJEZ_TO_CHARS                                        4     4      0    2510
                                              9 COMMON     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _EJEY_TO_CHARS                                        4     4      0    2510
                                              9 COMMON     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _EJEX_TO_CHARS                                        4     4      0    2510
                                              9 COMMON     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              9     5      4    1212
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ACELEROMETRO_CONFIG
     _ACELEROMETRO_W
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _CONFIG_USART
   _I2C_Master_Init
     ___lldiv
   _LEER_VALORES
     _ACELEROMETRO_R
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _SETUP

 _isr (ROOT)
   _TX
     _EJEX_TO_CHARS
       ___awdiv
       ___awmod
     _EJEY_TO_CHARS
       ___awdiv
       ___awmod
     _EJEZ_TO_CHARS
       ___awdiv
       ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 04 12:55:42 2021

               ?_LEER_VALORES 0070                             _X 007D                             _Y 0044  
                           _Z 0045                             pc 0002        __end_of_ACELEROMETRO_R 0398  
      __end_of_ACELEROMETRO_W 0407                            _XH 004A                            _YH 0048  
                          _XL 004B                            _ZH 0046                            _YL 0049  
                          _ZL 0047                            _TX 002E                  ___awdiv@sign 0076  
                          fsr 0004                           ?_TX 0070                           l222 04FE  
                         l231 051B                           l143 04B0                           l152 0406  
                         l400 0124                           l216 03D1                           l225 0524  
                         l234 0512                           l146 0465                           l219 04F2  
                         l172 034A                           l237 042E                           l149 0397  
                         l238 0431                           l239 0438                           l257 04DE  
                         _DX0 0053                           _DX1 0052                           _DY0 0051  
                         _DY1 0050                           _GIE 005F                           _DZ0 004F  
                         _DZ1 004E                           u320 04F8                           u321 04F7  
                         u330 04FE                           u331 04FD                           u340 042A  
                         u341 0429                           u600 011C                           _PEN 048A  
                         u601 011B                           u610 03AF                           u540 00CF  
                         u541 00CE                           u615 03AA                           u560 00E3  
                         u561 00E2                           u555 00D4                           u580 00FE  
                         _SEN 0488                           u637 044B                           u581 00FD  
                         u647 0461                           u575 00E5                           u585 00FA  
                         u595 010E                           _isr 04B1                           fsr0 0004  
                         indf 0000                  ___awmod@sign 0076                          ??_TX 0020  
                        l1310 04F8                          l1312 051C                          l1320 0407  
                        l1314 0521                          l1330 042A                          l1322 040C  
                        l1308 04F2                          l1316 0509                          l1332 0432  
                        l1324 0414                          l1318 050E                          l1422 03D5  
                        l1326 041D                          l1336 0513                          l1328 0422  
                        l1424 034E                          l1600 04AA                          l1338 0518  
                        l1610 04D3                          l1426 0391                          l1602 04AB  
                        l1620 04DD                          l1612 04D7                          l1460 00BD  
                        l1604 04AC                          l1614 04D8                          l1470 00EC  
                        l1462 00CF                          l1630 03CF                          l1622 0398  
                        l1606 04AD                          l1616 04D9                          l1608 04C9  
                        l1472 00FE                          l1464 00D2                          l1480 011C  
                        l1632 03D0                          l1624 039C                          l1640 02F6  
                        l1634 0439                          l1618 04DC                          l1474 010C  
                        l1466 00DF                          l1626 039F                          l1650 0346  
                        l1642 030E                          l1636 0445                          l1476 010D  
                        l1468 00E3                          l1628 03CE                          l1644 0312  
                        l1660 0466                          l1638 044F                          l1478 0116  
                        l1646 031E                          l1590 04A3                          l1662 0484  
                        l1648 032A                          l1592 04A4                          l1584 0491  
                        l1664 0488                          l1594 04A5                          l1586 0496  
                        l1596 04A6                          l1588 04A1                          l1598 04A7  
                        ?_isr 0070                          _READ 0056                          _PEIE 005E  
                        _RSEN 0489                          _main 0466                          btemp 007E  
                        start 0010                ??_LEER_VALORES 0032                         ??_isr 0022  
             ?_ACELEROMETRO_R 002B               ?_ACELEROMETRO_W 0027              ?_I2C_Master_Init 0033  
            ?_I2C_Master_Read 0025              ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070  
        __end_of_CONFIG_USART 04DF                         ?_main 0070               __end_of___awdiv 018C  
             __end_of___awmod 02F6                         _ANSEL 0188               __end_of___lldiv 0125  
             ___awdiv@divisor 0070                         i1l132 04C0                         i1l181 01E6  
                       i1l157 00BC                         i1l175 029C                         i1l530 02F5  
                       i1l178 0241                         i1l517 018B               ___awdiv@counter 0075  
                       u40_25 0159                         u41_20 0169                         u41_21 0168  
                       u41_25 0165                         u50_20 02D4                         u50_21 02D3  
                       _SETUP 0491                         _SPBRG 0099                         u42_25 0171  
                       u50_25 02D0                         u43_20 017D                         u35_20 012A  
                       u43_21 017C                         u35_21 0129                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       u51_25 02DB                         _PORTE 0009                         u44_20 0182  
                       u36_20 0135                         u52_20 02E7                         u44_21 0181  
                       u36_21 0134                         u52_21 02E6                         u37_20 0146  
                       u53_20 02EC                         u45_20 02A2                         u37_21 0145  
                       u53_21 02EB                         u45_21 02A1                         u46_20 02AD  
                       u62_20 04B6                         u46_21 02AC                         u62_21 04B5  
                       u38_25 014A                         u39_20 0158                         u47_20 02B8  
                       u39_21 0157                         u47_21 02B7                         u48_25 02BC  
                       u49_20 02CA                         u49_21 02C9                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _SSPIE 0463                         _TRISE 0089                         _SSPIF 0063  
                       _P_CTL 0055                         _WRITE 0057                         _TXREG 0019  
          ACELEROMETRO_W@data 0027                         pclath 000A                         status 0003  
                       wtemp0 007E               __initialization 0013                  __end_of_main 0491  
                      ??_main 003B                        ?_SETUP 0070             ?_I2C_Master_Start 0070  
           ?_I2C_Master_Write 0025            ??_I2C_Master_Start 0025            ??_I2C_Master_Write 0027  
            ___awdiv@dividend 0072                        _ANSELH 0189                        i1l1400 02BB  
                      i1l1410 02DA                        i1l1402 02C2                        i1l1340 0125  
                      i1l1412 02E1                        i1l1404 02C6                        i1l1350 0135  
                      i1l1342 0126                        i1l1406 02CA                        i1l1414 02E7  
                      i1l1430 0242                        i1l1510 004F                        i1l1502 0044  
                      i1l1360 0149                        i1l1352 013A                        i1l1344 012A  
                      i1l1416 02EC                        i1l1408 02D4                        i1l1432 0246  
                      i1l1440 01E7                        i1l1520 005C                        i1l1370 016F  
                      i1l1362 0150                        i1l1354 013E                        i1l1346 012F  
                      i1l1418 02F1                        i1l1434 025C                        i1l1442 01EB  
                      i1l1450 018C                        i1l1380 0187                        i1l1372 0170  
                      i1l1364 0154                        i1l1356 0140                        i1l1348 0131  
                      i1l1436 0270                        i1l1444 0201                        i1l1452 0190  
                      i1l1532 0066                        i1l1516 0051                        i1l1508 004B  
                      i1l1374 0177                        i1l1366 0158                        i1l1358 0146  
                      i1l1390 02A7                        i1l1438 0286                        i1l1446 0215  
                      i1l1454 01A6                        i1l1550 0078                        i1l1526 005F  
                      i1l1518 0056                        i1l1368 0169                        i1l1376 017D  
                      i1l1392 02A9                        i1l1384 029D                        i1l1448 022B  
                      i1l1456 01BA                        i1l1378 0182                        i1l1394 02AD  
                      i1l1386 029E                        i1l1458 01D0                        i1l1570 008A  
                      i1l1562 0082                        i1l1546 006D                        i1l1490 003A  
                      i1l1396 02B2                        i1l1388 02A2                        i1l1556 007B  
                      i1l1548 0072                        i1l1484 002E                        i1l1652 04B1  
                      i1l1398 02B8                        i1l1486 002F                        i1l1654 04B6  
                      i1l1568 0089                        i1l1496 003D                        i1l1488 0034  
                      i1l1656 04B7                        i1l1690 0096                        i1l1578 008C  
                      i1l1658 04BF                        _D_FRMT 0054                        _SPBRGH 009A  
                      _SSPADD 0093                        _TRISC3 043B                        _TRISC4 043C  
                      _SSPCON 0014                        _SSPBUF 0013                        _X_decs 0042  
                      _Y_decs 003F                        _Z_decs 003C                     ??___awdiv 0074  
                   ??___awmod 0074                     ??___lldiv 002D  __size_of_ACELEROMETRO_CONFIG 002D  
            ___awdiv@quotient 0077               ___awmod@divisor 0070               ___awmod@counter 0075  
                      saved_w 007E         __end_of_EJEX_TO_CHARS 029D          __end_of_LEER_VALORES 034B  
       __end_of_EJEY_TO_CHARS 0242       __end_of__initialization 002A         __end_of_EJEZ_TO_CHARS 01E7  
               __end_of_SETUP 04B1         __size_of_CONFIG_USART 0016                __pcstackCOMMON 0070  
                __pidataBANK0 04FF                    __end_of_TX 00BD                       ??_SETUP 0025  
                  __pbssBANK0 003B                  _CONFIG_USART 04C9              ??_ACELEROMETRO_R 002D  
            ??_ACELEROMETRO_W 0028                    __pmaintext 0466                    __pintentry 0004  
          EJEY_TO_CHARS@valor 007C                       _LECTURA 004D                       _SSPCON2 0091  
                     _SSPSTAT 0094                     _BANDERA_T 004C                       _X_cents 0041  
                     _Y_cents 003E                       _Z_cents 003B                       _X_units 0043  
                     _Y_units 0040                       _Z_units 003D                       ___awdiv 0125  
                     ___awmod 029D                       ___lldiv 00BD                       __ptext1 0491  
                     __ptext2 02F6                       __ptext3 034B                       __ptext4 0407  
                     __ptext5 0398                       __ptext6 00BD                       __ptext7 04C9  
                     __ptext8 0439                       __ptext9 03D2         __size_of_LEER_VALORES 0055  
                __size_of_isr 0018              ___awmod@dividend 0072      __size_of_I2C_Master_Init 003A  
    __size_of_I2C_Master_Read 0032      __size_of_I2C_Master_Wait 000D      __size_of_I2C_Master_Stop 0009  
                     clrloop0 0526           _ACELEROMETRO_CONFIG 0439          end_of_initialization 002A  
   __size_of_I2C_Master_Start 0009     __size_of_I2C_Master_Write 000A               ___lldiv@divisor 0025  
             ___lldiv@counter 0032                     _RCSTAbits 0018              I2C_Master_Init@c 0033  
            I2C_Master_Read@a 0025                  _LEER_VALORES 02F6          ?_ACELEROMETRO_CONFIG 0070  
                   _TRISCbits 0087                     _TXSTAbits 0098         ??_ACELEROMETRO_CONFIG 002B  
           ACELEROMETRO_R@num 0031                   _BAUDCTLbits 0187             ACELEROMETRO_W@num 002A  
         start_initialization 0013                   __end_of_isr 04C9             ??_I2C_Master_Init 0037  
           ??_I2C_Master_Read 0027             ??_I2C_Master_Wait 0025             ??_I2C_Master_Stop 0025  
                  init_fetch0 04DF        __size_of_EJEX_TO_CHARS 005B                   __pdataBANK0 004E  
      __size_of_EJEY_TO_CHARS 005B        __size_of_EJEZ_TO_CHARS 005B                   __pbssCOMMON 007D  
                   ___latbits 0002                 __pcstackBANK0 0020              _I2C_Master_Start 051C  
            _I2C_Master_Write 0509                      ?___awdiv 0070                      ?___awmod 0070  
                    ?___lldiv 0025                __size_of_SETUP 0020         ACELEROMETRO_R@LECTURA 002F  
               _EJEX_TO_CHARS 0242                   __size_of_TX 008F                 _EJEY_TO_CHARS 01E7  
           interrupt_function 0004                 _EJEZ_TO_CHARS 018C                     clear_ram0 0525  
                    _PIE1bits 008C                      _PIR1bits 000C       __size_of_ACELEROMETRO_R 004D  
     __size_of_ACELEROMETRO_W 0035                ?_EJEX_TO_CHARS 0070           I2C_Master_Read@temp 0029  
              ?_EJEY_TO_CHARS 0070                ?_EJEZ_TO_CHARS 0070            EJEX_TO_CHARS@valor 007C  
            __size_of___awdiv 0067              __size_of___awmod 0059              __size_of___lldiv 0068  
             _I2C_Master_Init 0398               _I2C_Master_Read 0407               _I2C_Master_Wait 04F2  
             _I2C_Master_Stop 0513                      __ptext10 0509                      __ptext11 0513  
                    __ptext20 0125                      __ptext12 051C                      __ptext13 04F2  
                    __ptext14 04B1                      __ptext15 002E                      __ptext16 018C  
                    __ptext17 01E7                      __ptext18 0242                      __ptext19 029D  
               ?_CONFIG_USART 0070                 __size_of_main 002B   __end_of_ACELEROMETRO_CONFIG 0466  
    __end_of_I2C_Master_Start 0525            EJEZ_TO_CHARS@valor 007C      __end_of_I2C_Master_Write 0513  
                  _INTCONbits 000B               ??_EJEX_TO_CHARS 0079                      init_ram0 04E3  
             ??_EJEY_TO_CHARS 0079               ??_EJEZ_TO_CHARS 0079                      intlevel1 0000  
              ??_CONFIG_USART 0025              ___lldiv@dividend 0029                    _OSCCONbits 008F  
     __end_of_I2C_Master_Init 03D2       __end_of_I2C_Master_Read 0439       __end_of_I2C_Master_Wait 04FF  
     __end_of_I2C_Master_Stop 051C                _ACELEROMETRO_R 034B                _ACELEROMETRO_W 03D2  
            ___lldiv@quotient 002E             I2C_Master_Write@d 0025                   _SSPCON2bits 0091  
