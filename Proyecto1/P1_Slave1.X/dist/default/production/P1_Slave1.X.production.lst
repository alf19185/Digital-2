

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 13 22:05:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.31
    18                           ; Generated 13/10/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  001E                     _ADRESH	set	30
   365  000B                     _INTCONbits	set	11
   366  000C                     _PIR1bits	set	12
   367  001F                     _ADCON0bits	set	31
   368  0013                     _SSPBUF	set	19
   369  0014                     _SSPCON	set	20
   370  0014                     _SSPCONbits	set	20
   371  0009                     _PORTE	set	9
   372  0007                     _PORTC	set	7
   373  0006                     _PORTB	set	6
   374  0005                     _PORTA	set	5
   375  0008                     _PORTD	set	8
   376  009E                     _ADRESL	set	158
   377  008C                     _PIE1bits	set	140
   378  0094                     _SSPSTATbits	set	148
   379  0094                     _SSPSTAT	set	148
   380  0089                     _TRISE	set	137
   381  0087                     _TRISC	set	135
   382  0088                     _TRISD	set	136
   383  0086                     _TRISB	set	134
   384  0085                     _TRISA	set	133
   385  0189                     _ANSELH	set	393
   386  0188                     _ANSELbits	set	392
   387  0188                     _ANSEL	set	392
   388                           
   389                           	psect	cinit
   390  07FA                     start_initialization:	
   391                           ; #config settings
   392                           
   393  07FA                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396  07FA  01F6               	clrf	__pbssCOMMON& (0+127)
   397  07FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   398  07FC                     end_of_initialization:	
   399                           ;End of C runtime variable initialization code
   400                           
   401  07FC                     __end_of__initialization:
   402  07FC  0183               	clrf	3
   403  07FD  120A  118A  2EE4   	ljmp	_main	;jump to C main() function
   404                           
   405                           	psect	bssCOMMON
   406  0076                     __pbssCOMMON:
   407  0076                     _POTENCIOMETRO:
   408  0076                     	ds	1
   409  0077                     _data:
   410  0077                     	ds	1
   411                           
   412                           	psect	cstackCOMMON
   413  0070                     __pcstackCOMMON:
   414  0070                     ?_SETUP:
   415  0070                     ??_SETUP:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_CONFIG_SPI_SLAVE:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ??_CONFIG_SPI_SLAVE:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_ADC_C:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_ADC_CONVCLK:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_ADC_CONVCLK:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_ADC_READ:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ??_ADC_READ:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_ADC_CONTINUE:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ??_ADC_CONTINUE:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_main:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ADC_C@CH:	
   449                           ; 1 bytes @ 0x0
   450                           
   451                           
   452                           ; 2 bytes @ 0x0
   453  0070                     	ds	2
   454  0072                     ??_ADC_C:
   455  0072                     ADC_CONVCLK@CONV:	
   456                           ; 1 bytes @ 0x2
   457                           
   458  0072                     ADC_READ@JUSTIFICACION:	
   459                           ; 1 bytes @ 0x2
   460                           
   461                           
   462                           ; 1 bytes @ 0x2
   463  0072                     	ds	1
   464  0073                     ADC_READ@VALOR_ADC:
   465                           
   466                           ; 1 bytes @ 0x3
   467  0073                     	ds	1
   468  0074                     ??_main:
   469                           
   470                           ; 1 bytes @ 0x4
   471  0074                     	ds	2
   472                           
   473                           	psect	maintext
   474  06E4                     __pmaintext:	
   475 ;;
   476 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   477 ;;
   478 ;; *************** function _main *****************
   479 ;; Defined at:
   480 ;;		line 39 in file "Principal_Slave1.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : B00/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          2       0       0       0       0
   497 ;;      Totals:         2       0       0       0       0
   498 ;;Total ram usage:        2 bytes
   499 ;; Hardware stack levels required when called:    1
   500 ;; This function calls:
   501 ;;		_ADC_C
   502 ;;		_ADC_CONTINUE
   503 ;;		_ADC_CONVCLK
   504 ;;		_ADC_READ
   505 ;;		_CONFIG_SPI_SLAVE
   506 ;;		_SETUP
   507 ;; This function is called by:
   508 ;;		Startup code after reset
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           
   513                           ;psect for function _main
   514  06E4                     _main:
   515  06E4                     l911:	
   516                           ;incstack = 0
   517                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   518                           
   519                           
   520                           ;Principal_Slave1.c: 41:  SETUP();
   521  06E4  120A  118A  26AC  120A  118A  	fcall	_SETUP
   522                           
   523                           ;Principal_Slave1.c: 42:  CONFIG_SPI_SLAVE();
   524  06E9  120A  118A  268C  120A  118A  	fcall	_CONFIG_SPI_SLAVE
   525  06EE                     l913:
   526                           
   527                           ;Principal_Slave1.c: 43:     _delay((unsigned long)((10)*(8000000/4000.0)));
   528  06EE  301A               	movlw	26
   529  06EF  00F5               	movwf	??_main+1
   530  06F0  30F8               	movlw	248
   531  06F1  00F4               	movwf	??_main
   532  06F2                     u27:
   533  06F2  0BF4               	decfsz	??_main,f
   534  06F3  2EF2               	goto	u27
   535  06F4  0BF5               	decfsz	??_main+1,f
   536  06F5  2EF2               	goto	u27
   537  06F6  0000               	nop
   538  06F7                     l915:
   539                           
   540                           ;Principal_Slave1.c: 44:     ADC_C(0);
   541  06F7  3000               	movlw	0
   542  06F8  00F0               	movwf	ADC_C@CH
   543  06F9  00F1               	movwf	ADC_C@CH+1
   544  06FA  120A  118A  275E  120A  118A  	fcall	_ADC_C
   545  06FF                     l917:
   546                           
   547                           ;Principal_Slave1.c: 45:     ADC_CONVCLK(1);
   548  06FF  3001               	movlw	1
   549  0700  120A  118A  271B  120A  118A  	fcall	_ADC_CONVCLK
   550  0705                     l919:
   551                           
   552                           ;Principal_Slave1.c: 48:  {;Principal_Slave1.c: 54:     POTENCIOMETRO = ADC_READ (0);
   553  0705  3000               	movlw	0
   554  0706  120A  118A  26C2  120A  118A  	fcall	_ADC_READ
   555  070B  00F4               	movwf	??_main
   556  070C  0874               	movf	??_main,w
   557  070D  00F6               	movwf	_POTENCIOMETRO
   558  070E                     l921:
   559                           
   560                           ;Principal_Slave1.c: 55:     PORTD = POTENCIOMETRO ;
   561  070E  0876               	movf	_POTENCIOMETRO,w
   562  070F  1283               	bcf	3,5	;RP0=0, select bank0
   563  0710  1303               	bcf	3,6	;RP1=0, select bank0
   564  0711  0088               	movwf	8	;volatile
   565  0712                     l923:
   566                           
   567                           ;Principal_Slave1.c: 56:     ADC_CONTINUE();
   568  0712  120A  118A  2699  120A  118A  	fcall	_ADC_CONTINUE
   569  0717  2F05               	goto	l919
   570  0718  120A  118A  2800   	ljmp	start
   571  071B                     __end_of_main:
   572                           
   573                           	psect	text1
   574  06AC                     __ptext1:	
   575 ;; *************** function _SETUP *****************
   576 ;; Defined at:
   577 ;;		line 64 in file "Principal_Slave1.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _SETUP
   606  06AC                     _SETUP:
   607  06AC                     l737:	
   608                           ;incstack = 0
   609                           ; Regs used in _SETUP: [wreg+status,2]
   610                           
   611                           
   612                           ;Principal_Slave1.c: 66:         PORTA = 0;
   613  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   614  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   615  06AE  0185               	clrf	5	;volatile
   616                           
   617                           ;Principal_Slave1.c: 67:         PORTB = 0;
   618  06AF  0186               	clrf	6	;volatile
   619                           
   620                           ;Principal_Slave1.c: 68:         PORTC = 0;
   621  06B0  0187               	clrf	7	;volatile
   622                           
   623                           ;Principal_Slave1.c: 69:         PORTD = 0;
   624  06B1  0188               	clrf	8	;volatile
   625                           
   626                           ;Principal_Slave1.c: 70:         PORTE = 0;
   627  06B2  0189               	clrf	9	;volatile
   628  06B3                     l739:
   629                           
   630                           ;Principal_Slave1.c: 72:         TRISA = 0b00100001;
   631  06B3  3021               	movlw	33
   632  06B4  1683               	bsf	3,5	;RP0=1, select bank1
   633  06B5  1303               	bcf	3,6	;RP1=0, select bank1
   634  06B6  0085               	movwf	5	;volatile
   635  06B7                     l741:
   636                           
   637                           ;Principal_Slave1.c: 73:         TRISB = 0;
   638  06B7  0186               	clrf	6	;volatile
   639  06B8                     l743:
   640                           
   641                           ;Principal_Slave1.c: 74:         TRISD = 0;
   642  06B8  0188               	clrf	8	;volatile
   643  06B9                     l745:
   644                           
   645                           ;Principal_Slave1.c: 75:         TRISC = 0b00101000;
   646  06B9  3028               	movlw	40
   647  06BA  0087               	movwf	7	;volatile
   648                           
   649                           ;Principal_Slave1.c: 76:         TRISE = 0;
   650  06BB  0189               	clrf	9	;volatile
   651                           
   652                           ;Principal_Slave1.c: 78:         ANSEL = 0;
   653  06BC  1683               	bsf	3,5	;RP0=1, select bank3
   654  06BD  1703               	bsf	3,6	;RP1=1, select bank3
   655  06BE  0188               	clrf	8	;volatile
   656  06BF                     l747:
   657                           
   658                           ;Principal_Slave1.c: 79:         ANSELbits.ANS0 = 1;
   659  06BF  1408               	bsf	8,0	;volatile
   660                           
   661                           ;Principal_Slave1.c: 80:         ANSELH = 0;
   662  06C0  0189               	clrf	9	;volatile
   663  06C1                     l55:
   664  06C1  0008               	return
   665  06C2                     __end_of_SETUP:
   666                           
   667                           	psect	text2
   668  068C                     __ptext2:	
   669 ;; *************** function _CONFIG_SPI_SLAVE *****************
   670 ;; Defined at:
   671 ;;		line 17 in file "SPI_Slave.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _CONFIG_SPI_SLAVE
   700  068C                     _CONFIG_SPI_SLAVE:
   701  068C                     l749:	
   702                           ;incstack = 0
   703                           ; Regs used in _CONFIG_SPI_SLAVE: [wreg]
   704                           
   705                           
   706                           ;SPI_Slave.c: 19:     SSPCONbits.SSPEN = 0;
   707  068C  1283               	bcf	3,5	;RP0=0, select bank0
   708  068D  1303               	bcf	3,6	;RP1=0, select bank0
   709  068E  1294               	bcf	20,5	;volatile
   710  068F                     l751:
   711                           
   712                           ;SPI_Slave.c: 20:  SSPSTAT = 0b01000000;
   713  068F  3040               	movlw	64
   714  0690  1683               	bsf	3,5	;RP0=1, select bank1
   715  0691  1303               	bcf	3,6	;RP1=0, select bank1
   716  0692  0094               	movwf	20	;volatile
   717                           
   718                           ;SPI_Slave.c: 21:  SSPCON = 0b00100100;
   719  0693  3024               	movlw	36
   720  0694  1283               	bcf	3,5	;RP0=0, select bank0
   721  0695  1303               	bcf	3,6	;RP1=0, select bank0
   722  0696  0094               	movwf	20	;volatile
   723  0697                     l753:
   724                           
   725                           ;SPI_Slave.c: 22:  SSPCONbits.SSPEN = 1;
   726  0697  1694               	bsf	20,5	;volatile
   727  0698                     l73:
   728  0698  0008               	return
   729  0699                     __end_of_CONFIG_SPI_SLAVE:
   730                           
   731                           	psect	text3
   732  06C2                     __ptext3:	
   733 ;; *************** function _ADC_READ *****************
   734 ;; Defined at:
   735 ;;		line 164 in file "ADC.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  JUSTIFICACIO    1    wreg     unsigned char 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  JUSTIFICACIO    1    2[COMMON] unsigned char 
   740 ;;  VALOR_ADC       1    3[COMMON] unsigned char 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      unsigned char 
   743 ;; Registers used:
   744 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       0       0       0       0
   751 ;;      Locals:         2       0       0       0       0
   752 ;;      Temps:          2       0       0       0       0
   753 ;;      Totals:         4       0       0       0       0
   754 ;;Total ram usage:        4 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _ADC_READ
   765  06C2                     _ADC_READ:
   766                           
   767                           ;incstack = 0
   768                           ; Regs used in _ADC_READ: [wreg-fsr0h+status,2+status,0]
   769                           ;ADC_READ@JUSTIFICACION stored from wreg
   770  06C2  00F2               	movwf	ADC_READ@JUSTIFICACION
   771  06C3                     l779:
   772                           
   773                           ;ADC.c: 168:     switch (JUSTIFICACION){
   774  06C3  2ED2               	goto	l787
   775  06C4                     l781:
   776                           
   777                           ;ADC.c: 170:             VALOR_ADC = ADRESH;
   778  06C4  1283               	bcf	3,5	;RP0=0, select bank0
   779  06C5  1303               	bcf	3,6	;RP1=0, select bank0
   780  06C6  081E               	movf	30,w	;volatile
   781  06C7  00F0               	movwf	??_ADC_READ
   782  06C8  0870               	movf	??_ADC_READ,w
   783  06C9  00F3               	movwf	ADC_READ@VALOR_ADC
   784                           
   785                           ;ADC.c: 171:             break;
   786  06CA  2EE2               	goto	l789
   787  06CB                     l783:
   788                           
   789                           ;ADC.c: 173:             VALOR_ADC = ADRESL;
   790  06CB  1683               	bsf	3,5	;RP0=1, select bank1
   791  06CC  1303               	bcf	3,6	;RP1=0, select bank1
   792  06CD  081E               	movf	30,w	;volatile
   793  06CE  00F0               	movwf	??_ADC_READ
   794  06CF  0870               	movf	??_ADC_READ,w
   795  06D0  00F3               	movwf	ADC_READ@VALOR_ADC
   796                           
   797                           ;ADC.c: 174:             break;
   798  06D1  2EE2               	goto	l789
   799  06D2                     l787:
   800  06D2  0872               	movf	ADC_READ@JUSTIFICACION,w
   801  06D3  00F0               	movwf	??_ADC_READ
   802  06D4  01F1               	clrf	??_ADC_READ+1
   803                           
   804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   805                           ; Switch size 1, requested type "simple"
   806                           ; Number of cases is 1, Range of values is 0 to 0
   807                           ; switch strategies available:
   808                           ; Name         Instructions Cycles
   809                           ; simple_byte            4     3 (average)
   810                           ; direct_byte           11     8 (fixed)
   811                           ; jumptable            260     6 (fixed)
   812                           ;	Chosen strategy is simple_byte
   813  06D5  0871               	movf	??_ADC_READ+1,w
   814  06D6  3A00               	xorlw	0	; case 0
   815  06D7  1903               	skipnz
   816  06D8  2EDA               	goto	l985
   817  06D9  2EC4               	goto	l781
   818  06DA                     l985:
   819                           
   820                           ; Switch size 1, requested type "simple"
   821                           ; Number of cases is 2, Range of values is 0 to 1
   822                           ; switch strategies available:
   823                           ; Name         Instructions Cycles
   824                           ; simple_byte            7     4 (average)
   825                           ; direct_byte           14     8 (fixed)
   826                           ; jumptable            260     6 (fixed)
   827                           ;	Chosen strategy is simple_byte
   828  06DA  0870               	movf	??_ADC_READ,w
   829  06DB  3A00               	xorlw	0	; case 0
   830  06DC  1903               	skipnz
   831  06DD  2EC4               	goto	l781
   832  06DE  3A01               	xorlw	1	; case 1
   833  06DF  1903               	skipnz
   834  06E0  2ECB               	goto	l783
   835  06E1  2EC4               	goto	l781
   836  06E2                     l789:
   837                           
   838                           ;ADC.c: 178:     return (VALOR_ADC );
   839  06E2  0873               	movf	ADC_READ@VALOR_ADC,w
   840  06E3                     l145:
   841  06E3  0008               	return
   842  06E4                     __end_of_ADC_READ:
   843                           
   844                           	psect	text4
   845  071B                     __ptext4:	
   846 ;; *************** function _ADC_CONVCLK *****************
   847 ;; Defined at:
   848 ;;		line 117 in file "ADC.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  CONV            1    wreg     unsigned char 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  CONV            1    2[COMMON] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         0       0       0       0       0
   863 ;;      Locals:         1       0       0       0       0
   864 ;;      Temps:          2       0       0       0       0
   865 ;;      Totals:         3       0       0       0       0
   866 ;;Total ram usage:        3 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _ADC_CONVCLK
   877  071B                     _ADC_CONVCLK:
   878                           
   879                           ;incstack = 0
   880                           ; Regs used in _ADC_CONVCLK: [wreg-fsr0h+status,2+status,0]
   881                           ;ADC_CONVCLK@CONV stored from wreg
   882  071B  00F2               	movwf	ADC_CONVCLK@CONV
   883  071C                     l765:
   884                           
   885                           ;ADC.c: 119:       switch(CONV){
   886  071C  2F36               	goto	l769
   887  071D                     l128:	
   888                           ;ADC.c: 121:         case 0:
   889                           
   890                           
   891                           ;ADC.c: 122:             ADCON0bits.ADCS0 = 0;
   892  071D  1283               	bcf	3,5	;RP0=0, select bank0
   893  071E  1303               	bcf	3,6	;RP1=0, select bank0
   894  071F  131F               	bcf	31,6	;volatile
   895                           
   896                           ;ADC.c: 123:             ADCON0bits.ADCS0 = 0;
   897  0720  131F               	bcf	31,6	;volatile
   898                           
   899                           ;ADC.c: 124:             break;
   900  0721  2F4C               	goto	l129
   901  0722                     l130:	
   902                           ;ADC.c: 126:         case 1:
   903                           
   904                           
   905                           ;ADC.c: 127:             ADCON0bits.ADCS0 = 0;
   906  0722  1283               	bcf	3,5	;RP0=0, select bank0
   907  0723  1303               	bcf	3,6	;RP1=0, select bank0
   908  0724  131F               	bcf	31,6	;volatile
   909                           
   910                           ;ADC.c: 128:             ADCON0bits.ADCS0 = 1;
   911  0725  171F               	bsf	31,6	;volatile
   912                           
   913                           ;ADC.c: 129:             break;
   914  0726  2F4C               	goto	l129
   915  0727                     l131:	
   916                           ;ADC.c: 131:         case 2:
   917                           
   918                           
   919                           ;ADC.c: 132:             ADCON0bits.ADCS0 = 1;
   920  0727  1283               	bcf	3,5	;RP0=0, select bank0
   921  0728  1303               	bcf	3,6	;RP1=0, select bank0
   922  0729  171F               	bsf	31,6	;volatile
   923                           
   924                           ;ADC.c: 133:             ADCON0bits.ADCS0 = 0;
   925  072A  131F               	bcf	31,6	;volatile
   926                           
   927                           ;ADC.c: 134:             break;
   928  072B  2F4C               	goto	l129
   929  072C                     l132:	
   930                           ;ADC.c: 136:         case 3:
   931                           
   932                           
   933                           ;ADC.c: 137:             ADCON0bits.ADCS0 = 1;
   934  072C  1283               	bcf	3,5	;RP0=0, select bank0
   935  072D  1303               	bcf	3,6	;RP1=0, select bank0
   936  072E  171F               	bsf	31,6	;volatile
   937                           
   938                           ;ADC.c: 138:             ADCON0bits.ADCS0 = 1;
   939  072F  171F               	bsf	31,6	;volatile
   940                           
   941                           ;ADC.c: 139:             break;
   942  0730  2F4C               	goto	l129
   943  0731                     l133:	
   944                           ;ADC.c: 141:         default:
   945                           
   946                           
   947                           ;ADC.c: 142:             ADCON0bits.ADCS0 = 0;
   948  0731  1283               	bcf	3,5	;RP0=0, select bank0
   949  0732  1303               	bcf	3,6	;RP1=0, select bank0
   950  0733  131F               	bcf	31,6	;volatile
   951                           
   952                           ;ADC.c: 143:             ADCON0bits.ADCS0 = 0;
   953  0734  131F               	bcf	31,6	;volatile
   954                           
   955                           ;ADC.c: 144:             break;
   956  0735  2F4C               	goto	l129
   957  0736                     l769:
   958  0736  0872               	movf	ADC_CONVCLK@CONV,w
   959  0737  00F0               	movwf	??_ADC_CONVCLK
   960  0738  01F1               	clrf	??_ADC_CONVCLK+1
   961                           
   962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   963                           ; Switch size 1, requested type "simple"
   964                           ; Number of cases is 1, Range of values is 0 to 0
   965                           ; switch strategies available:
   966                           ; Name         Instructions Cycles
   967                           ; simple_byte            4     3 (average)
   968                           ; direct_byte           11     8 (fixed)
   969                           ; jumptable            260     6 (fixed)
   970                           ;	Chosen strategy is simple_byte
   971  0739  0871               	movf	??_ADC_CONVCLK+1,w
   972  073A  3A00               	xorlw	0	; case 0
   973  073B  1903               	skipnz
   974  073C  2F3E               	goto	l987
   975  073D  2F31               	goto	l133
   976  073E                     l987:
   977                           
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 4, Range of values is 0 to 3
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte           13     7 (average)
   983                           ; direct_byte           20     8 (fixed)
   984                           ; jumptable            260     6 (fixed)
   985                           ;	Chosen strategy is simple_byte
   986  073E  0870               	movf	??_ADC_CONVCLK,w
   987  073F  3A00               	xorlw	0	; case 0
   988  0740  1903               	skipnz
   989  0741  2F1D               	goto	l128
   990  0742  3A01               	xorlw	1	; case 1
   991  0743  1903               	skipnz
   992  0744  2F22               	goto	l130
   993  0745  3A03               	xorlw	3	; case 2
   994  0746  1903               	skipnz
   995  0747  2F27               	goto	l131
   996  0748  3A01               	xorlw	1	; case 3
   997  0749  1903               	skipnz
   998  074A  2F2C               	goto	l132
   999  074B  2F31               	goto	l133
  1000  074C                     l129:
  1001                           
  1002                           ;ADC.c: 147:     ADCON0bits.ADON = 1;
  1003  074C  141F               	bsf	31,0	;volatile
  1004                           
  1005                           ;ADC.c: 148:     PIR1bits.ADIF = 0;
  1006  074D  130C               	bcf	12,6	;volatile
  1007                           
  1008                           ;ADC.c: 149:     PIE1bits.ADIE = 1;
  1009  074E  1683               	bsf	3,5	;RP0=1, select bank1
  1010  074F  1303               	bcf	3,6	;RP1=0, select bank1
  1011  0750  170C               	bsf	12,6	;volatile
  1012                           
  1013                           ;ADC.c: 150:     INTCONbits.PEIE = 1;
  1014  0751  170B               	bsf	11,6	;volatile
  1015  0752                     l771:
  1016                           
  1017                           ;ADC.c: 151:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1018  0752  304E               	movlw	78
  1019  0753  00F1               	movwf	??_ADC_CONVCLK+1
  1020  0754  30EB               	movlw	235
  1021  0755  00F0               	movwf	??_ADC_CONVCLK
  1022  0756                     u37:
  1023  0756  0BF0               	decfsz	??_ADC_CONVCLK,f
  1024  0757  2F56               	goto	u37
  1025  0758  0BF1               	decfsz	??_ADC_CONVCLK+1,f
  1026  0759  2F56               	goto	u37
  1027  075A                     l773:
  1028                           
  1029                           ;ADC.c: 152:     ADCON0bits.GO_nDONE = 1;
  1030  075A  1283               	bcf	3,5	;RP0=0, select bank0
  1031  075B  1303               	bcf	3,6	;RP1=0, select bank0
  1032  075C  149F               	bsf	31,1	;volatile
  1033  075D                     l134:
  1034  075D  0008               	return
  1035  075E                     __end_of_ADC_CONVCLK:
  1036                           
  1037                           	psect	text5
  1038  0699                     __ptext5:	
  1039 ;; *************** function _ADC_CONTINUE *****************
  1040 ;; Defined at:
  1041 ;;		line 156 in file "ADC.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0
  1057 ;;      Temps:          2       0       0       0       0
  1058 ;;      Totals:         2       0       0       0       0
  1059 ;;Total ram usage:        2 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _ADC_CONTINUE
  1070  0699                     _ADC_CONTINUE:
  1071  0699                     l797:	
  1072                           ;incstack = 0
  1073                           ; Regs used in _ADC_CONTINUE: [wreg]
  1074                           
  1075                           
  1076                           ;ADC.c: 157:     PIR1bits.ADIF = 0;
  1077  0699  1283               	bcf	3,5	;RP0=0, select bank0
  1078  069A  1303               	bcf	3,6	;RP1=0, select bank0
  1079  069B  130C               	bcf	12,6	;volatile
  1080                           
  1081                           ;ADC.c: 158:     PIE1bits.ADIE = 1;
  1082  069C  1683               	bsf	3,5	;RP0=1, select bank1
  1083  069D  1303               	bcf	3,6	;RP1=0, select bank1
  1084  069E  170C               	bsf	12,6	;volatile
  1085  069F                     l799:
  1086                           
  1087                           ;ADC.c: 159:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1088  069F  3034               	movlw	52
  1089  06A0  00F1               	movwf	??_ADC_CONTINUE+1
  1090  06A1  30F1               	movlw	241
  1091  06A2  00F0               	movwf	??_ADC_CONTINUE
  1092  06A3                     u47:
  1093  06A3  0BF0               	decfsz	??_ADC_CONTINUE,f
  1094  06A4  2EA3               	goto	u47
  1095  06A5  0BF1               	decfsz	??_ADC_CONTINUE+1,f
  1096  06A6  2EA3               	goto	u47
  1097  06A7  2EA8               	nop2
  1098  06A8                     l801:
  1099                           
  1100                           ;ADC.c: 160:     ADCON0bits.GO_nDONE = 1;
  1101  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1102  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1103  06AA  149F               	bsf	31,1	;volatile
  1104  06AB                     l137:
  1105  06AB  0008               	return
  1106  06AC                     __end_of_ADC_CONTINUE:
  1107                           
  1108                           	psect	text6
  1109  075E                     __ptext6:	
  1110 ;; *************** function _ADC_C *****************
  1111 ;; Defined at:
  1112 ;;		line 7 in file "ADC.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  CH              2    0[COMMON] unsigned int 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         2       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0
  1129 ;;      Totals:         2       0       0       0       0
  1130 ;;Total ram usage:        2 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           
  1140                           ;psect for function _ADC_C
  1141  075E                     _ADC_C:
  1142  075E                     l901:	
  1143                           ;incstack = 0
  1144                           ; Regs used in _ADC_C: [wreg-fsr0h+status,2+status,0]
  1145                           
  1146                           
  1147                           ;ADC.c: 9:   switch(CH){
  1148  075E  2FC8               	goto	l905
  1149  075F                     l108:	
  1150                           ;ADC.c: 11:          case 0:
  1151                           
  1152                           
  1153                           ;ADC.c: 12:             ADCON0bits.CHS3 = 0;
  1154  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0761  129F               	bcf	31,5	;volatile
  1157                           
  1158                           ;ADC.c: 13:             ADCON0bits.CHS2 = 0;
  1159  0762  121F               	bcf	31,4	;volatile
  1160                           
  1161                           ;ADC.c: 14:             ADCON0bits.CHS1 = 0;
  1162  0763  119F               	bcf	31,3	;volatile
  1163                           
  1164                           ;ADC.c: 15:             ADCON0bits.CHS0 = 0;
  1165  0764  111F               	bcf	31,2	;volatile
  1166                           
  1167                           ;ADC.c: 16:             break;
  1168  0765  2FF9               	goto	l124
  1169  0766                     l110:	
  1170                           ;ADC.c: 18:         case 1:
  1171                           
  1172                           
  1173                           ;ADC.c: 19:             ADCON0bits.CHS3 = 0;
  1174  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1175  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1176  0768  129F               	bcf	31,5	;volatile
  1177                           
  1178                           ;ADC.c: 20:             ADCON0bits.CHS2 = 0;
  1179  0769  121F               	bcf	31,4	;volatile
  1180                           
  1181                           ;ADC.c: 21:             ADCON0bits.CHS1 = 0;
  1182  076A  119F               	bcf	31,3	;volatile
  1183                           
  1184                           ;ADC.c: 22:             ADCON0bits.CHS0 = 1;
  1185  076B  151F               	bsf	31,2	;volatile
  1186                           
  1187                           ;ADC.c: 23:             break;
  1188  076C  2FF9               	goto	l124
  1189  076D                     l111:	
  1190                           ;ADC.c: 25:         case 2:
  1191                           
  1192                           
  1193                           ;ADC.c: 26:             ADCON0bits.CHS3 = 0;
  1194  076D  1283               	bcf	3,5	;RP0=0, select bank0
  1195  076E  1303               	bcf	3,6	;RP1=0, select bank0
  1196  076F  129F               	bcf	31,5	;volatile
  1197                           
  1198                           ;ADC.c: 27:             ADCON0bits.CHS2 = 0;
  1199  0770  121F               	bcf	31,4	;volatile
  1200                           
  1201                           ;ADC.c: 28:             ADCON0bits.CHS1 = 1;
  1202  0771  159F               	bsf	31,3	;volatile
  1203                           
  1204                           ;ADC.c: 29:             ADCON0bits.CHS0 = 0;
  1205  0772  111F               	bcf	31,2	;volatile
  1206                           
  1207                           ;ADC.c: 30:             break;
  1208  0773  2FF9               	goto	l124
  1209  0774                     l112:	
  1210                           ;ADC.c: 32:         case 3:
  1211                           
  1212                           
  1213                           ;ADC.c: 33:             ADCON0bits.CHS3 = 0;
  1214  0774  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0775  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0776  129F               	bcf	31,5	;volatile
  1217                           
  1218                           ;ADC.c: 34:             ADCON0bits.CHS2 = 0;
  1219  0777  121F               	bcf	31,4	;volatile
  1220                           
  1221                           ;ADC.c: 35:             ADCON0bits.CHS1 = 1;
  1222  0778  159F               	bsf	31,3	;volatile
  1223                           
  1224                           ;ADC.c: 36:             ADCON0bits.CHS0 = 1;
  1225  0779  151F               	bsf	31,2	;volatile
  1226                           
  1227                           ;ADC.c: 37:             break;
  1228  077A  2FF9               	goto	l124
  1229  077B                     l113:	
  1230                           ;ADC.c: 39:         case 4:
  1231                           
  1232                           
  1233                           ;ADC.c: 40:             ADCON0bits.CHS3 = 0;
  1234  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1235  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1236  077D  129F               	bcf	31,5	;volatile
  1237                           
  1238                           ;ADC.c: 41:             ADCON0bits.CHS2 = 1;
  1239  077E  161F               	bsf	31,4	;volatile
  1240                           
  1241                           ;ADC.c: 42:             ADCON0bits.CHS1 = 0;
  1242  077F  119F               	bcf	31,3	;volatile
  1243                           
  1244                           ;ADC.c: 43:             ADCON0bits.CHS0 = 0;
  1245  0780  111F               	bcf	31,2	;volatile
  1246                           
  1247                           ;ADC.c: 44:             break;
  1248  0781  2FF9               	goto	l124
  1249  0782                     l114:	
  1250                           ;ADC.c: 46:         case 5:
  1251                           
  1252                           
  1253                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  1254  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0783  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0784  129F               	bcf	31,5	;volatile
  1257                           
  1258                           ;ADC.c: 48:             ADCON0bits.CHS2 = 1;
  1259  0785  161F               	bsf	31,4	;volatile
  1260                           
  1261                           ;ADC.c: 49:             ADCON0bits.CHS1 = 0;
  1262  0786  119F               	bcf	31,3	;volatile
  1263                           
  1264                           ;ADC.c: 50:             ADCON0bits.CHS0 = 1;
  1265  0787  151F               	bsf	31,2	;volatile
  1266                           
  1267                           ;ADC.c: 51:             break;
  1268  0788  2FF9               	goto	l124
  1269  0789                     l115:	
  1270                           ;ADC.c: 53:         case 6:
  1271                           
  1272                           
  1273                           ;ADC.c: 54:             ADCON0bits.CHS3 = 0;
  1274  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1275  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1276  078B  129F               	bcf	31,5	;volatile
  1277                           
  1278                           ;ADC.c: 55:             ADCON0bits.CHS2 = 1;
  1279  078C  161F               	bsf	31,4	;volatile
  1280                           
  1281                           ;ADC.c: 56:             ADCON0bits.CHS1 = 1;
  1282  078D  159F               	bsf	31,3	;volatile
  1283                           
  1284                           ;ADC.c: 57:             ADCON0bits.CHS0 = 0;
  1285  078E  111F               	bcf	31,2	;volatile
  1286                           
  1287                           ;ADC.c: 58:             break;
  1288  078F  2FF9               	goto	l124
  1289  0790                     l116:	
  1290                           ;ADC.c: 60:         case 7:
  1291                           
  1292                           
  1293                           ;ADC.c: 61:             ADCON0bits.CHS3 = 0;
  1294  0790  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0791  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0792  129F               	bcf	31,5	;volatile
  1297                           
  1298                           ;ADC.c: 62:             ADCON0bits.CHS2 = 1;
  1299  0793  161F               	bsf	31,4	;volatile
  1300                           
  1301                           ;ADC.c: 63:             ADCON0bits.CHS1 = 1;
  1302  0794  159F               	bsf	31,3	;volatile
  1303                           
  1304                           ;ADC.c: 64:             ADCON0bits.CHS0 = 1;
  1305  0795  151F               	bsf	31,2	;volatile
  1306                           
  1307                           ;ADC.c: 65:             break;
  1308  0796  2FF9               	goto	l124
  1309  0797                     l117:	
  1310                           ;ADC.c: 67:         case 8:
  1311                           
  1312                           
  1313                           ;ADC.c: 68:             ADCON0bits.CHS3 = 1;
  1314  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0799  169F               	bsf	31,5	;volatile
  1317                           
  1318                           ;ADC.c: 69:             ADCON0bits.CHS2 = 0;
  1319  079A  121F               	bcf	31,4	;volatile
  1320                           
  1321                           ;ADC.c: 70:             ADCON0bits.CHS1 = 0;
  1322  079B  119F               	bcf	31,3	;volatile
  1323                           
  1324                           ;ADC.c: 71:             ADCON0bits.CHS0 = 0;
  1325  079C  111F               	bcf	31,2	;volatile
  1326                           
  1327                           ;ADC.c: 72:             break;
  1328  079D  2FF9               	goto	l124
  1329  079E                     l118:	
  1330                           ;ADC.c: 74:         case 9:
  1331                           
  1332                           
  1333                           ;ADC.c: 75:             ADCON0bits.CHS3 = 1;
  1334  079E  1283               	bcf	3,5	;RP0=0, select bank0
  1335  079F  1303               	bcf	3,6	;RP1=0, select bank0
  1336  07A0  169F               	bsf	31,5	;volatile
  1337                           
  1338                           ;ADC.c: 76:             ADCON0bits.CHS2 = 0;
  1339  07A1  121F               	bcf	31,4	;volatile
  1340                           
  1341                           ;ADC.c: 77:             ADCON0bits.CHS1 = 0;
  1342  07A2  119F               	bcf	31,3	;volatile
  1343                           
  1344                           ;ADC.c: 78:             ADCON0bits.CHS0 = 1;
  1345  07A3  151F               	bsf	31,2	;volatile
  1346                           
  1347                           ;ADC.c: 79:             break;
  1348  07A4  2FF9               	goto	l124
  1349  07A5                     l119:	
  1350                           ;ADC.c: 81:         case 10:
  1351                           
  1352                           
  1353                           ;ADC.c: 82:             ADCON0bits.CHS3 = 1;
  1354  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1355  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1356  07A7  169F               	bsf	31,5	;volatile
  1357                           
  1358                           ;ADC.c: 83:             ADCON0bits.CHS2 = 0;
  1359  07A8  121F               	bcf	31,4	;volatile
  1360                           
  1361                           ;ADC.c: 84:             ADCON0bits.CHS1 = 1;
  1362  07A9  159F               	bsf	31,3	;volatile
  1363                           
  1364                           ;ADC.c: 85:             ADCON0bits.CHS0 = 0;
  1365  07AA  111F               	bcf	31,2	;volatile
  1366                           
  1367                           ;ADC.c: 86:             break;
  1368  07AB  2FF9               	goto	l124
  1369  07AC                     l120:	
  1370                           ;ADC.c: 88:         case 11:
  1371                           
  1372                           
  1373                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  1374  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1375  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1376  07AE  169F               	bsf	31,5	;volatile
  1377                           
  1378                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  1379  07AF  121F               	bcf	31,4	;volatile
  1380                           
  1381                           ;ADC.c: 91:             ADCON0bits.CHS1 = 1;
  1382  07B0  159F               	bsf	31,3	;volatile
  1383                           
  1384                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  1385  07B1  151F               	bsf	31,2	;volatile
  1386                           
  1387                           ;ADC.c: 93:             break;
  1388  07B2  2FF9               	goto	l124
  1389  07B3                     l121:	
  1390                           ;ADC.c: 95:         case 12:
  1391                           
  1392                           
  1393                           ;ADC.c: 96:             ADCON0bits.CHS3 = 1;
  1394  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1395  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1396  07B5  169F               	bsf	31,5	;volatile
  1397                           
  1398                           ;ADC.c: 97:             ADCON0bits.CHS2 = 1;
  1399  07B6  161F               	bsf	31,4	;volatile
  1400                           
  1401                           ;ADC.c: 98:             ADCON0bits.CHS1 = 0;
  1402  07B7  119F               	bcf	31,3	;volatile
  1403                           
  1404                           ;ADC.c: 99:             ADCON0bits.CHS0 = 0;
  1405  07B8  111F               	bcf	31,2	;volatile
  1406                           
  1407                           ;ADC.c: 100:             break;
  1408  07B9  2FF9               	goto	l124
  1409  07BA                     l122:	
  1410                           ;ADC.c: 101:         case 13:
  1411                           
  1412                           
  1413                           ;ADC.c: 102:             ADCON0bits.CHS3 = 1;
  1414  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1415  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1416  07BC  169F               	bsf	31,5	;volatile
  1417                           
  1418                           ;ADC.c: 103:             ADCON0bits.CHS2 = 1;
  1419  07BD  161F               	bsf	31,4	;volatile
  1420                           
  1421                           ;ADC.c: 104:             ADCON0bits.CHS1 = 0;
  1422  07BE  119F               	bcf	31,3	;volatile
  1423                           
  1424                           ;ADC.c: 105:             ADCON0bits.CHS0 = 1;
  1425  07BF  151F               	bsf	31,2	;volatile
  1426                           
  1427                           ;ADC.c: 106:             break;
  1428  07C0  2FF9               	goto	l124
  1429  07C1                     l123:	
  1430                           ;ADC.c: 108:         default:
  1431                           
  1432                           
  1433                           ;ADC.c: 109:             ADCON0bits.CHS3 = 0;
  1434  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1435  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1436  07C3  129F               	bcf	31,5	;volatile
  1437                           
  1438                           ;ADC.c: 110:             ADCON0bits.CHS2 = 0;
  1439  07C4  121F               	bcf	31,4	;volatile
  1440                           
  1441                           ;ADC.c: 111:             ADCON0bits.CHS1 = 0;
  1442  07C5  119F               	bcf	31,3	;volatile
  1443                           
  1444                           ;ADC.c: 112:             ADCON0bits.CHS0 = 0;
  1445  07C6  111F               	bcf	31,2	;volatile
  1446                           
  1447                           ;ADC.c: 113:             break;
  1448  07C7  2FF9               	goto	l124
  1449  07C8                     l905:
  1450                           
  1451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1452                           ; Switch size 1, requested type "simple"
  1453                           ; Number of cases is 1, Range of values is 0 to 0
  1454                           ; switch strategies available:
  1455                           ; Name         Instructions Cycles
  1456                           ; simple_byte            4     3 (average)
  1457                           ; direct_byte           11     8 (fixed)
  1458                           ; jumptable            260     6 (fixed)
  1459                           ;	Chosen strategy is simple_byte
  1460  07C8  0871               	movf	ADC_C@CH+1,w
  1461  07C9  3A00               	xorlw	0	; case 0
  1462  07CA  1903               	skipnz
  1463  07CB  2FCD               	goto	l989
  1464  07CC  2FC1               	goto	l123
  1465  07CD                     l989:
  1466                           
  1467                           ; Switch size 1, requested type "simple"
  1468                           ; Number of cases is 14, Range of values is 0 to 13
  1469                           ; switch strategies available:
  1470                           ; Name         Instructions Cycles
  1471                           ; simple_byte           43    22 (average)
  1472                           ; direct_byte           50     8 (fixed)
  1473                           ; jumptable            260     6 (fixed)
  1474                           ;	Chosen strategy is simple_byte
  1475  07CD  0870               	movf	ADC_C@CH,w
  1476  07CE  3A00               	xorlw	0	; case 0
  1477  07CF  1903               	skipnz
  1478  07D0  2F5F               	goto	l108
  1479  07D1  3A01               	xorlw	1	; case 1
  1480  07D2  1903               	skipnz
  1481  07D3  2F66               	goto	l110
  1482  07D4  3A03               	xorlw	3	; case 2
  1483  07D5  1903               	skipnz
  1484  07D6  2F6D               	goto	l111
  1485  07D7  3A01               	xorlw	1	; case 3
  1486  07D8  1903               	skipnz
  1487  07D9  2F74               	goto	l112
  1488  07DA  3A07               	xorlw	7	; case 4
  1489  07DB  1903               	skipnz
  1490  07DC  2F7B               	goto	l113
  1491  07DD  3A01               	xorlw	1	; case 5
  1492  07DE  1903               	skipnz
  1493  07DF  2F82               	goto	l114
  1494  07E0  3A03               	xorlw	3	; case 6
  1495  07E1  1903               	skipnz
  1496  07E2  2F89               	goto	l115
  1497  07E3  3A01               	xorlw	1	; case 7
  1498  07E4  1903               	skipnz
  1499  07E5  2F90               	goto	l116
  1500  07E6  3A0F               	xorlw	15	; case 8
  1501  07E7  1903               	skipnz
  1502  07E8  2F97               	goto	l117
  1503  07E9  3A01               	xorlw	1	; case 9
  1504  07EA  1903               	skipnz
  1505  07EB  2F9E               	goto	l118
  1506  07EC  3A03               	xorlw	3	; case 10
  1507  07ED  1903               	skipnz
  1508  07EE  2FA5               	goto	l119
  1509  07EF  3A01               	xorlw	1	; case 11
  1510  07F0  1903               	skipnz
  1511  07F1  2FAC               	goto	l120
  1512  07F2  3A07               	xorlw	7	; case 12
  1513  07F3  1903               	skipnz
  1514  07F4  2FB3               	goto	l121
  1515  07F5  3A01               	xorlw	1	; case 13
  1516  07F6  1903               	skipnz
  1517  07F7  2FBA               	goto	l122
  1518  07F8  2FC1               	goto	l123
  1519  07F9                     l124:
  1520  07F9  0008               	return
  1521  07FA                     __end_of_ADC_C:
  1522  007E                     btemp	set	126	;btemp
  1523  007E                     wtemp0	set	126
  1524                           
  1525                           	psect	config
  1526                           
  1527                           ;Config register CONFIG1 @ 0x2007
  1528                           ;	Oscillator Selection bits
  1529                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  1530                           ;	Watchdog Timer Enable bit
  1531                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1532                           ;	Power-up Timer Enable bit
  1533                           ;	PWRTE = OFF, PWRT disabled
  1534                           ;	RE3/MCLR pin function select bit
  1535                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1536                           ;	Code Protection bit
  1537                           ;	CP = OFF, Program memory code protection is disabled
  1538                           ;	Data Code Protection bit
  1539                           ;	CPD = OFF, Data memory code protection is disabled
  1540                           ;	Brown Out Reset Selection bits
  1541                           ;	BOREN = OFF, BOR disabled
  1542                           ;	Internal External Switchover bit
  1543                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1544                           ;	Fail-Safe Clock Monitor Enabled bit
  1545                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1546                           ;	Low Voltage Programming Enable bit
  1547                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1548                           ;	In-Circuit Debugger Mode bit
  1549                           ;	DEBUG = 0x1, unprogrammed default
  1550  2007                     	org	8199
  1551  2007  20D7               	dw	8407
  1552                           
  1553                           ;Config register CONFIG2 @ 0x2008
  1554                           ;	Brown-out Reset Selection bit
  1555                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1556                           ;	Flash Program Memory Self Write Enable bits
  1557                           ;	WRT = OFF, Write protection off
  1558  2008                     	org	8200
  1559  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_READ

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     143
                                              4 COMMON     2     2      0
                              _ADC_C
                       _ADC_CONTINUE
                        _ADC_CONVCLK
                           _ADC_READ
                   _CONFIG_SPI_SLAVE
                              _SETUP
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_SPI_SLAVE                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONVCLK                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONTINUE                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_C                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_C
   _ADC_CONTINUE
   _ADC_CONVCLK
   _ADC_READ
   _CONFIG_SPI_SLAVE
   _SETUP

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 13 22:05:10 2021

     __size_of_ADC_CONVCLK 0043                _SSPSTATbits 0094                         l55 06C1  
                       l73 0698                         u27 06F2                         u37 0756  
                       u47 06A3      __size_of_ADC_CONTINUE 0013                        l110 0766  
                      l111 076D                        l120 07AC                        l112 0774  
                      l121 07B3                        l113 077B                        l122 07BA  
                      l114 0782                        l130 0722                        l123 07C1  
                      l115 0789                        l131 0727                        l116 0790  
                      l124 07F9                        l108 075F                        l132 072C  
                      l117 0797                        l133 0731                        l118 079E  
                      l134 075D                        l119 07A5                        l128 071D  
                      l137 06AB                        l129 074C                        l145 06E3  
                      l801 06A8                        l901 075E                        l741 06B7  
                      l751 068F                        l743 06B8                        l911 06E4  
                      l905 07C8                        l753 0697                        l745 06B9  
                      l737 06AC                        l921 070E                        l913 06EE  
                      l771 0752                        l747 06BF                        l739 06B3  
                      l923 0712                        l915 06F7                        l773 075A  
                      l765 071C                        l781 06C4                        l749 068C  
                      l917 06FF                        l783 06CB                        l919 0705  
                      l769 0736                        l787 06D2                        l779 06C3  
                      l797 0699                        l789 06E2                        l799 069F  
                      l985 06DA                        l987 073E                        l989 07CD  
                     _data 0077           __end_of_ADC_READ 06E4                       _main 06E4  
                     btemp 007E                       start 0000            ADC_CONVCLK@CONV 0072  
             _ADC_CONTINUE 0699           _CONFIG_SPI_SLAVE 068C                      ?_main 0070  
                    _ADC_C 075E                      _ANSEL 0188                      _SETUP 06AC  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      status 0003                      wtemp0 007E  
          __initialization 07FA               __end_of_main 071B                     ??_main 0074  
                   ?_ADC_C 0070                     ?_SETUP 0070                     _ADRESH 001E  
                   _ADRESL 009E                     _ANSELH 0189                     _SSPCON 0014  
                   _SSPBUF 0013                  ?_ADC_READ 0070    __end_of__initialization 07FC  
            __end_of_ADC_C 07FA              __end_of_SETUP 06C2             __pcstackCOMMON 0070  
                  ??_ADC_C 0072                    ADC_C@CH 0070                 ??_ADC_READ 0070  
                  ??_SETUP 0070   __end_of_CONFIG_SPI_SLAVE 0699              ??_ADC_CONVCLK 0070  
               __pmaintext 06E4                    _SSPSTAT 0094        __end_of_ADC_CONVCLK 075E  
                _ANSELbits 0188                    __ptext1 06AC                    __ptext2 068C  
                  __ptext3 06C2                    __ptext4 071B                    __ptext5 0699  
                  __ptext6 075E       end_of_initialization 07FC          __size_of_ADC_READ 0022  
              _ADC_CONVCLK 071B        start_initialization 07FA          ?_CONFIG_SPI_SLAVE 0070  
       ??_CONFIG_SPI_SLAVE 0070              _POTENCIOMETRO 0076              ?_ADC_CONTINUE 0070  
              __pbssCOMMON 0076                  ___latbits 0002             ??_ADC_CONTINUE 0070  
           __size_of_ADC_C 009C                   _ADC_READ 06C2             __size_of_SETUP 0016  
                 _PIE1bits 008C                   _PIR1bits 000C                 _ADCON0bits 001F  
    ADC_READ@JUSTIFICACION 0072               ?_ADC_CONVCLK 0070       __end_of_ADC_CONTINUE 06AC  
            __size_of_main 0037          ADC_READ@VALOR_ADC 0073  __size_of_CONFIG_SPI_SLAVE 000D  
               _INTCONbits 000B                 _SSPCONbits 0014  
