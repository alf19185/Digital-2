

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 17:24:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.31
    17                           ; Generated 13/10/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  001E                     _ADRESH	set	30
   364  000B                     _INTCONbits	set	11
   365  000C                     _PIR1bits	set	12
   366  001F                     _ADCON0bits	set	31
   367  0014                     _SSPCON	set	20
   368  0014                     _SSPCONbits	set	20
   369  0009                     _PORTE	set	9
   370  0007                     _PORTC	set	7
   371  0005                     _PORTA	set	5
   372  0008                     _PORTD	set	8
   373  0006                     _PORTB	set	6
   374  0013                     _SSPBUF	set	19
   375  009E                     _ADRESL	set	158
   376  008C                     _PIE1bits	set	140
   377  0094                     _SSPSTAT	set	148
   378  0089                     _TRISE	set	137
   379  0087                     _TRISC	set	135
   380  0088                     _TRISD	set	136
   381  0086                     _TRISB	set	134
   382  0085                     _TRISA	set	133
   383  0094                     _SSPSTATbits	set	148
   384  0189                     _ANSELH	set	393
   385  0188                     _ANSELbits	set	392
   386  0188                     _ANSEL	set	392
   387                           
   388                           	psect	cinit
   389  07F8                     start_initialization:	
   390                           ; #config settings
   391                           
   392  07F8                     __initialization:
   393                           
   394                           ; Clear objects allocated to COMMON
   395  07F8  01F5               	clrf	__pbssCOMMON& (0+127)
   396  07F9  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   397  07FA  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   398  07FB  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   399  07FC                     end_of_initialization:	
   400                           ;End of C runtime variable initialization code
   401                           
   402  07FC                     __end_of__initialization:
   403  07FC  0183               	clrf	3
   404  07FD  120A  118A  2F13   	ljmp	_main	;jump to C main() function
   405                           
   406                           	psect	bssCOMMON
   407  0075                     __pbssCOMMON:
   408  0075                     _dummy:
   409  0075                     	ds	1
   410  0076                     _rxByteMaster:
   411  0076                     	ds	1
   412  0077                     _POTENCIOMETRO:
   413  0077                     	ds	1
   414  0078                     _data:
   415  0078                     	ds	1
   416                           
   417                           	psect	cstackCOMMON
   418  0070                     __pcstackCOMMON:
   419  0070                     ?_SETUP:
   420  0070                     ??_SETUP:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_ADC_C:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_ADC_CONVCLK:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_ADC_CONVCLK:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_ADC_READ:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_ADC_READ:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_ADC_CONTINUE:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??_ADC_CONTINUE:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_main:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ADC_C@CH:	
   448                           ; 1 bytes @ 0x0
   449                           
   450                           
   451                           ; 2 bytes @ 0x0
   452  0070                     	ds	2
   453  0072                     ??_ADC_C:
   454  0072                     ADC_CONVCLK@CONV:	
   455                           ; 1 bytes @ 0x2
   456                           
   457  0072                     ADC_READ@JUSTIFICACION:	
   458                           ; 1 bytes @ 0x2
   459                           
   460                           
   461                           ; 1 bytes @ 0x2
   462  0072                     	ds	1
   463  0073                     ADC_READ@VALOR_ADC:
   464                           
   465                           ; 1 bytes @ 0x3
   466  0073                     	ds	1
   467  0074                     ??_main:
   468                           
   469                           ; 1 bytes @ 0x4
   470  0074                     	ds	1
   471                           
   472                           	psect	maintext
   473  0713                     __pmaintext:	
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 41 in file "Principal_Slave1.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : B00/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          1       0       0       0       0
   496 ;;      Totals:         1       0       0       0       0
   497 ;;Total ram usage:        1 bytes
   498 ;; Hardware stack levels required when called:    1
   499 ;; This function calls:
   500 ;;		_ADC_C
   501 ;;		_ADC_CONTINUE
   502 ;;		_ADC_CONVCLK
   503 ;;		_ADC_READ
   504 ;;		_SETUP
   505 ;; This function is called by:
   506 ;;		Startup code after reset
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           
   511                           ;psect for function _main
   512  0713                     _main:
   513  0713                     l940:	
   514                           ;incstack = 0
   515                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   516                           
   517                           
   518                           ;Principal_Slave1.c: 43:  SETUP();
   519  0713  120A  118A  268D  120A  118A  	fcall	_SETUP
   520  0718                     l942:
   521                           
   522                           ;Principal_Slave1.c: 44:     ADC_C(0);
   523  0718  3000               	movlw	0
   524  0719  00F0               	movwf	ADC_C@CH
   525  071A  00F1               	movwf	ADC_C@CH+1
   526  071B  120A  118A  275C  120A  118A  	fcall	_ADC_C
   527  0720                     l944:
   528                           
   529                           ;Principal_Slave1.c: 45:     ADC_CONVCLK(1);
   530  0720  3001               	movlw	1
   531  0721  120A  118A  26D0  120A  118A  	fcall	_ADC_CONVCLK
   532  0726                     l946:
   533                           
   534                           ;Principal_Slave1.c: 46:     dummy=SSPBUF;
   535  0726  1283               	bcf	3,5	;RP0=0, select bank0
   536  0727  1303               	bcf	3,6	;RP1=0, select bank0
   537  0728  0813               	movf	19,w	;volatile
   538  0729  00F4               	movwf	??_main
   539  072A  0874               	movf	??_main,w
   540  072B  00F5               	movwf	_dummy
   541  072C                     l948:
   542                           
   543                           ;Principal_Slave1.c: 50:  {;Principal_Slave1.c: 51:     POTENCIOMETRO = ADC_READ (0);
   544  072C  3000               	movlw	0
   545  072D  120A  118A  26AE  120A  118A  	fcall	_ADC_READ
   546  0732  00F4               	movwf	??_main
   547  0733  0874               	movf	??_main,w
   548  0734  00F7               	movwf	_POTENCIOMETRO
   549  0735                     l950:
   550                           
   551                           ;Principal_Slave1.c: 52:     ADC_CONTINUE();
   552  0735  120A  118A  267A  120A  118A  	fcall	_ADC_CONTINUE
   553  073A                     l952:
   554                           
   555                           ;Principal_Slave1.c: 53:     PORTB= POTENCIOMETRO;
   556  073A  0877               	movf	_POTENCIOMETRO,w
   557  073B  1283               	bcf	3,5	;RP0=0, select bank0
   558  073C  1303               	bcf	3,6	;RP1=0, select bank0
   559  073D  0086               	movwf	6	;volatile
   560  073E                     l954:
   561                           
   562                           ;Principal_Slave1.c: 56:     if (SSPSTATbits.BF == 0) {
   563  073E  1683               	bsf	3,5	;RP0=1, select bank1
   564  073F  1303               	bcf	3,6	;RP1=0, select bank1
   565  0740  1814               	btfsc	20,0	;volatile
   566  0741  2F43               	goto	u51
   567  0742  2F44               	goto	u50
   568  0743                     u51:
   569  0743  2F48               	goto	l958
   570  0744                     u50:
   571  0744                     l956:
   572                           
   573                           ;Principal_Slave1.c: 57:         SSPBUF = POTENCIOMETRO;
   574  0744  0877               	movf	_POTENCIOMETRO,w
   575  0745  1283               	bcf	3,5	;RP0=0, select bank0
   576  0746  1303               	bcf	3,6	;RP1=0, select bank0
   577  0747  0093               	movwf	19	;volatile
   578  0748                     l958:
   579                           
   580                           ;Principal_Slave1.c: 61:     if (SSPSTATbits.BF ) {
   581  0748  1683               	bsf	3,5	;RP0=1, select bank1
   582  0749  1303               	bcf	3,6	;RP1=0, select bank1
   583  074A  1C14               	btfss	20,0	;volatile
   584  074B  2F4D               	goto	u61
   585  074C  2F4E               	goto	u60
   586  074D                     u61:
   587  074D  2F2C               	goto	l948
   588  074E                     u60:
   589  074E                     l960:
   590                           
   591                           ;Principal_Slave1.c: 63:           rxByteMaster = SSPBUF;
   592  074E  1283               	bcf	3,5	;RP0=0, select bank0
   593  074F  1303               	bcf	3,6	;RP1=0, select bank0
   594  0750  0813               	movf	19,w	;volatile
   595  0751  00F4               	movwf	??_main
   596  0752  0874               	movf	??_main,w
   597  0753  00F6               	movwf	_rxByteMaster
   598                           
   599                           ;Principal_Slave1.c: 64:           PORTD = rxByteMaster;
   600  0754  0876               	movf	_rxByteMaster,w
   601  0755  0088               	movwf	8	;volatile
   602                           
   603                           ;Principal_Slave1.c: 66:           SSPBUF = POTENCIOMETRO;
   604  0756  0877               	movf	_POTENCIOMETRO,w
   605  0757  0093               	movwf	19	;volatile
   606  0758  2F2C               	goto	l948
   607  0759  120A  118A  2800   	ljmp	start
   608  075C                     __end_of_main:
   609                           
   610                           	psect	text1
   611  068D                     __ptext1:	
   612 ;; *************** function _SETUP *****************
   613 ;; Defined at:
   614 ;;		line 77 in file "Principal_Slave1.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0
   631 ;;      Totals:         0       0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _SETUP
   643  068D                     _SETUP:
   644  068D                     l752:	
   645                           ;incstack = 0
   646                           ; Regs used in _SETUP: [wreg+status,2]
   647                           
   648                           
   649                           ;Principal_Slave1.c: 79:         PORTA = 0;
   650  068D  1283               	bcf	3,5	;RP0=0, select bank0
   651  068E  1303               	bcf	3,6	;RP1=0, select bank0
   652  068F  0185               	clrf	5	;volatile
   653                           
   654                           ;Principal_Slave1.c: 80:         PORTB = 0;
   655  0690  0186               	clrf	6	;volatile
   656                           
   657                           ;Principal_Slave1.c: 81:         PORTC = 0;
   658  0691  0187               	clrf	7	;volatile
   659                           
   660                           ;Principal_Slave1.c: 82:         PORTD = 0;
   661  0692  0188               	clrf	8	;volatile
   662                           
   663                           ;Principal_Slave1.c: 83:         PORTE = 0;
   664  0693  0189               	clrf	9	;volatile
   665  0694                     l754:
   666                           
   667                           ;Principal_Slave1.c: 85:         TRISA = 0b00100001;
   668  0694  3021               	movlw	33
   669  0695  1683               	bsf	3,5	;RP0=1, select bank1
   670  0696  1303               	bcf	3,6	;RP1=0, select bank1
   671  0697  0085               	movwf	5	;volatile
   672  0698                     l756:
   673                           
   674                           ;Principal_Slave1.c: 86:         TRISB = 0;
   675  0698  0186               	clrf	6	;volatile
   676  0699                     l758:
   677                           
   678                           ;Principal_Slave1.c: 87:         TRISD = 0;
   679  0699  0188               	clrf	8	;volatile
   680  069A                     l760:
   681                           
   682                           ;Principal_Slave1.c: 88:         TRISC = 0b00011000;
   683  069A  3018               	movlw	24
   684  069B  0087               	movwf	7	;volatile
   685                           
   686                           ;Principal_Slave1.c: 89:         TRISE = 0;
   687  069C  0189               	clrf	9	;volatile
   688                           
   689                           ;Principal_Slave1.c: 91:         ANSEL = 0;
   690  069D  1683               	bsf	3,5	;RP0=1, select bank3
   691  069E  1703               	bsf	3,6	;RP1=1, select bank3
   692  069F  0188               	clrf	8	;volatile
   693  06A0                     l762:
   694                           
   695                           ;Principal_Slave1.c: 92:         ANSELbits.ANS0 = 1;
   696  06A0  1408               	bsf	8,0	;volatile
   697                           
   698                           ;Principal_Slave1.c: 93:         ANSELH = 0;
   699  06A1  0189               	clrf	9	;volatile
   700  06A2                     l764:
   701                           
   702                           ;Principal_Slave1.c: 95:         SSPCONbits.SSPEN = 0;
   703  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   704  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   705  06A4  1294               	bcf	20,5	;volatile
   706                           
   707                           ;Principal_Slave1.c: 96:         SSPSTAT = 0X00;
   708  06A5  1683               	bsf	3,5	;RP0=1, select bank1
   709  06A6  1303               	bcf	3,6	;RP1=0, select bank1
   710  06A7  0194               	clrf	20	;volatile
   711  06A8                     l766:
   712                           
   713                           ;Principal_Slave1.c: 97:         SSPCON= 0X14;
   714  06A8  3014               	movlw	20
   715  06A9  1283               	bcf	3,5	;RP0=0, select bank0
   716  06AA  1303               	bcf	3,6	;RP1=0, select bank0
   717  06AB  0094               	movwf	20	;volatile
   718  06AC                     l768:
   719                           
   720                           ;Principal_Slave1.c: 98:         SSPCONbits.SSPEN = 1;
   721  06AC  1694               	bsf	20,5	;volatile
   722  06AD                     l67:
   723  06AD  0008               	return
   724  06AE                     __end_of_SETUP:
   725                           
   726                           	psect	text2
   727  06AE                     __ptext2:	
   728 ;; *************** function _ADC_READ *****************
   729 ;; Defined at:
   730 ;;		line 164 in file "ADC.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  JUSTIFICACIO    1    wreg     unsigned char 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  JUSTIFICACIO    1    2[COMMON] unsigned char 
   735 ;;  VALOR_ADC       1    3[COMMON] unsigned char 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      unsigned char 
   738 ;; Registers used:
   739 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         2       0       0       0       0
   747 ;;      Temps:          2       0       0       0       0
   748 ;;      Totals:         4       0       0       0       0
   749 ;;Total ram usage:        4 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           
   759                           ;psect for function _ADC_READ
   760  06AE                     _ADC_READ:
   761                           
   762                           ;incstack = 0
   763                           ; Regs used in _ADC_READ: [wreg-fsr0h+status,2+status,0]
   764                           ;ADC_READ@JUSTIFICACION stored from wreg
   765  06AE  00F2               	movwf	ADC_READ@JUSTIFICACION
   766  06AF                     l794:
   767                           
   768                           ;ADC.c: 168:     switch (JUSTIFICACION){
   769  06AF  2EBE               	goto	l802
   770  06B0                     l796:
   771                           
   772                           ;ADC.c: 170:             VALOR_ADC = ADRESH;
   773  06B0  1283               	bcf	3,5	;RP0=0, select bank0
   774  06B1  1303               	bcf	3,6	;RP1=0, select bank0
   775  06B2  081E               	movf	30,w	;volatile
   776  06B3  00F0               	movwf	??_ADC_READ
   777  06B4  0870               	movf	??_ADC_READ,w
   778  06B5  00F3               	movwf	ADC_READ@VALOR_ADC
   779                           
   780                           ;ADC.c: 171:             break;
   781  06B6  2ECE               	goto	l804
   782  06B7                     l798:
   783                           
   784                           ;ADC.c: 173:             VALOR_ADC = ADRESL;
   785  06B7  1683               	bsf	3,5	;RP0=1, select bank1
   786  06B8  1303               	bcf	3,6	;RP1=0, select bank1
   787  06B9  081E               	movf	30,w	;volatile
   788  06BA  00F0               	movwf	??_ADC_READ
   789  06BB  0870               	movf	??_ADC_READ,w
   790  06BC  00F3               	movwf	ADC_READ@VALOR_ADC
   791                           
   792                           ;ADC.c: 174:             break;
   793  06BD  2ECE               	goto	l804
   794  06BE                     l802:
   795  06BE  0872               	movf	ADC_READ@JUSTIFICACION,w
   796  06BF  00F0               	movwf	??_ADC_READ
   797  06C0  01F1               	clrf	??_ADC_READ+1
   798                           
   799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   800                           ; Switch size 1, requested type "simple"
   801                           ; Number of cases is 1, Range of values is 0 to 0
   802                           ; switch strategies available:
   803                           ; Name         Instructions Cycles
   804                           ; simple_byte            4     3 (average)
   805                           ; direct_byte           11     8 (fixed)
   806                           ; jumptable            260     6 (fixed)
   807                           ;	Chosen strategy is simple_byte
   808  06C1  0871               	movf	??_ADC_READ+1,w
   809  06C2  3A00               	xorlw	0	; case 0
   810  06C3  1903               	skipnz
   811  06C4  2EC6               	goto	l1022
   812  06C5  2EB0               	goto	l796
   813  06C6                     l1022:
   814                           
   815                           ; Switch size 1, requested type "simple"
   816                           ; Number of cases is 2, Range of values is 0 to 1
   817                           ; switch strategies available:
   818                           ; Name         Instructions Cycles
   819                           ; simple_byte            7     4 (average)
   820                           ; direct_byte           14     8 (fixed)
   821                           ; jumptable            260     6 (fixed)
   822                           ;	Chosen strategy is simple_byte
   823  06C6  0870               	movf	??_ADC_READ,w
   824  06C7  3A00               	xorlw	0	; case 0
   825  06C8  1903               	skipnz
   826  06C9  2EB0               	goto	l796
   827  06CA  3A01               	xorlw	1	; case 1
   828  06CB  1903               	skipnz
   829  06CC  2EB7               	goto	l798
   830  06CD  2EB0               	goto	l796
   831  06CE                     l804:
   832                           
   833                           ;ADC.c: 178:     return (VALOR_ADC );
   834  06CE  0873               	movf	ADC_READ@VALOR_ADC,w
   835  06CF                     l160:
   836  06CF  0008               	return
   837  06D0                     __end_of_ADC_READ:
   838                           
   839                           	psect	text3
   840  06D0                     __ptext3:	
   841 ;; *************** function _ADC_CONVCLK *****************
   842 ;; Defined at:
   843 ;;		line 117 in file "ADC.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  CONV            1    wreg     unsigned char 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  CONV            1    2[COMMON] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         0       0       0       0       0
   858 ;;      Locals:         1       0       0       0       0
   859 ;;      Temps:          2       0       0       0       0
   860 ;;      Totals:         3       0       0       0       0
   861 ;;Total ram usage:        3 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _ADC_CONVCLK
   872  06D0                     _ADC_CONVCLK:
   873                           
   874                           ;incstack = 0
   875                           ; Regs used in _ADC_CONVCLK: [wreg-fsr0h+status,2+status,0]
   876                           ;ADC_CONVCLK@CONV stored from wreg
   877  06D0  00F2               	movwf	ADC_CONVCLK@CONV
   878  06D1                     l780:
   879                           
   880                           ;ADC.c: 119:       switch(CONV){
   881  06D1  2EEB               	goto	l784
   882  06D2                     l143:	
   883                           ;ADC.c: 121:         case 0:
   884                           
   885                           
   886                           ;ADC.c: 122:             ADCON0bits.ADCS0 = 0;
   887  06D2  1283               	bcf	3,5	;RP0=0, select bank0
   888  06D3  1303               	bcf	3,6	;RP1=0, select bank0
   889  06D4  131F               	bcf	31,6	;volatile
   890                           
   891                           ;ADC.c: 123:             ADCON0bits.ADCS0 = 0;
   892  06D5  131F               	bcf	31,6	;volatile
   893                           
   894                           ;ADC.c: 124:             break;
   895  06D6  2F01               	goto	l144
   896  06D7                     l145:	
   897                           ;ADC.c: 126:         case 1:
   898                           
   899                           
   900                           ;ADC.c: 127:             ADCON0bits.ADCS0 = 0;
   901  06D7  1283               	bcf	3,5	;RP0=0, select bank0
   902  06D8  1303               	bcf	3,6	;RP1=0, select bank0
   903  06D9  131F               	bcf	31,6	;volatile
   904                           
   905                           ;ADC.c: 128:             ADCON0bits.ADCS0 = 1;
   906  06DA  171F               	bsf	31,6	;volatile
   907                           
   908                           ;ADC.c: 129:             break;
   909  06DB  2F01               	goto	l144
   910  06DC                     l146:	
   911                           ;ADC.c: 131:         case 2:
   912                           
   913                           
   914                           ;ADC.c: 132:             ADCON0bits.ADCS0 = 1;
   915  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   916  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   917  06DE  171F               	bsf	31,6	;volatile
   918                           
   919                           ;ADC.c: 133:             ADCON0bits.ADCS0 = 0;
   920  06DF  131F               	bcf	31,6	;volatile
   921                           
   922                           ;ADC.c: 134:             break;
   923  06E0  2F01               	goto	l144
   924  06E1                     l147:	
   925                           ;ADC.c: 136:         case 3:
   926                           
   927                           
   928                           ;ADC.c: 137:             ADCON0bits.ADCS0 = 1;
   929  06E1  1283               	bcf	3,5	;RP0=0, select bank0
   930  06E2  1303               	bcf	3,6	;RP1=0, select bank0
   931  06E3  171F               	bsf	31,6	;volatile
   932                           
   933                           ;ADC.c: 138:             ADCON0bits.ADCS0 = 1;
   934  06E4  171F               	bsf	31,6	;volatile
   935                           
   936                           ;ADC.c: 139:             break;
   937  06E5  2F01               	goto	l144
   938  06E6                     l148:	
   939                           ;ADC.c: 141:         default:
   940                           
   941                           
   942                           ;ADC.c: 142:             ADCON0bits.ADCS0 = 0;
   943  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   944  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   945  06E8  131F               	bcf	31,6	;volatile
   946                           
   947                           ;ADC.c: 143:             ADCON0bits.ADCS0 = 0;
   948  06E9  131F               	bcf	31,6	;volatile
   949                           
   950                           ;ADC.c: 144:             break;
   951  06EA  2F01               	goto	l144
   952  06EB                     l784:
   953  06EB  0872               	movf	ADC_CONVCLK@CONV,w
   954  06EC  00F0               	movwf	??_ADC_CONVCLK
   955  06ED  01F1               	clrf	??_ADC_CONVCLK+1
   956                           
   957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   958                           ; Switch size 1, requested type "simple"
   959                           ; Number of cases is 1, Range of values is 0 to 0
   960                           ; switch strategies available:
   961                           ; Name         Instructions Cycles
   962                           ; simple_byte            4     3 (average)
   963                           ; direct_byte           11     8 (fixed)
   964                           ; jumptable            260     6 (fixed)
   965                           ;	Chosen strategy is simple_byte
   966  06EE  0871               	movf	??_ADC_CONVCLK+1,w
   967  06EF  3A00               	xorlw	0	; case 0
   968  06F0  1903               	skipnz
   969  06F1  2EF3               	goto	l1024
   970  06F2  2EE6               	goto	l148
   971  06F3                     l1024:
   972                           
   973                           ; Switch size 1, requested type "simple"
   974                           ; Number of cases is 4, Range of values is 0 to 3
   975                           ; switch strategies available:
   976                           ; Name         Instructions Cycles
   977                           ; simple_byte           13     7 (average)
   978                           ; direct_byte           20     8 (fixed)
   979                           ; jumptable            260     6 (fixed)
   980                           ;	Chosen strategy is simple_byte
   981  06F3  0870               	movf	??_ADC_CONVCLK,w
   982  06F4  3A00               	xorlw	0	; case 0
   983  06F5  1903               	skipnz
   984  06F6  2ED2               	goto	l143
   985  06F7  3A01               	xorlw	1	; case 1
   986  06F8  1903               	skipnz
   987  06F9  2ED7               	goto	l145
   988  06FA  3A03               	xorlw	3	; case 2
   989  06FB  1903               	skipnz
   990  06FC  2EDC               	goto	l146
   991  06FD  3A01               	xorlw	1	; case 3
   992  06FE  1903               	skipnz
   993  06FF  2EE1               	goto	l147
   994  0700  2EE6               	goto	l148
   995  0701                     l144:
   996                           
   997                           ;ADC.c: 147:     ADCON0bits.ADON = 1;
   998  0701  141F               	bsf	31,0	;volatile
   999                           
  1000                           ;ADC.c: 148:     PIR1bits.ADIF = 0;
  1001  0702  130C               	bcf	12,6	;volatile
  1002                           
  1003                           ;ADC.c: 149:     PIE1bits.ADIE = 1;
  1004  0703  1683               	bsf	3,5	;RP0=1, select bank1
  1005  0704  1303               	bcf	3,6	;RP1=0, select bank1
  1006  0705  170C               	bsf	12,6	;volatile
  1007                           
  1008                           ;ADC.c: 150:     INTCONbits.PEIE = 1;
  1009  0706  170B               	bsf	11,6	;volatile
  1010  0707                     l786:
  1011                           
  1012                           ;ADC.c: 151:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1013  0707  304E               	movlw	78
  1014  0708  00F1               	movwf	??_ADC_CONVCLK+1
  1015  0709  30EB               	movlw	235
  1016  070A  00F0               	movwf	??_ADC_CONVCLK
  1017  070B                     u77:
  1018  070B  0BF0               	decfsz	??_ADC_CONVCLK,f
  1019  070C  2F0B               	goto	u77
  1020  070D  0BF1               	decfsz	??_ADC_CONVCLK+1,f
  1021  070E  2F0B               	goto	u77
  1022  070F                     l788:
  1023                           
  1024                           ;ADC.c: 152:     ADCON0bits.GO_nDONE = 1;
  1025  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0711  149F               	bsf	31,1	;volatile
  1028  0712                     l149:
  1029  0712  0008               	return
  1030  0713                     __end_of_ADC_CONVCLK:
  1031                           
  1032                           	psect	text4
  1033  067A                     __ptext4:	
  1034 ;; *************** function _ADC_CONTINUE *****************
  1035 ;; Defined at:
  1036 ;;		line 156 in file "ADC.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0
  1052 ;;      Temps:          2       0       0       0       0
  1053 ;;      Totals:         2       0       0       0       0
  1054 ;;Total ram usage:        2 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function _ADC_CONTINUE
  1065  067A                     _ADC_CONTINUE:
  1066  067A                     l812:	
  1067                           ;incstack = 0
  1068                           ; Regs used in _ADC_CONTINUE: [wreg]
  1069                           
  1070                           
  1071                           ;ADC.c: 157:     PIR1bits.ADIF = 0;
  1072  067A  1283               	bcf	3,5	;RP0=0, select bank0
  1073  067B  1303               	bcf	3,6	;RP1=0, select bank0
  1074  067C  130C               	bcf	12,6	;volatile
  1075                           
  1076                           ;ADC.c: 158:     PIE1bits.ADIE = 1;
  1077  067D  1683               	bsf	3,5	;RP0=1, select bank1
  1078  067E  1303               	bcf	3,6	;RP1=0, select bank1
  1079  067F  170C               	bsf	12,6	;volatile
  1080  0680                     l814:
  1081                           
  1082                           ;ADC.c: 159:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1083  0680  3034               	movlw	52
  1084  0681  00F1               	movwf	??_ADC_CONTINUE+1
  1085  0682  30F1               	movlw	241
  1086  0683  00F0               	movwf	??_ADC_CONTINUE
  1087  0684                     u87:
  1088  0684  0BF0               	decfsz	??_ADC_CONTINUE,f
  1089  0685  2E84               	goto	u87
  1090  0686  0BF1               	decfsz	??_ADC_CONTINUE+1,f
  1091  0687  2E84               	goto	u87
  1092  0688  2E89               	nop2
  1093  0689                     l816:
  1094                           
  1095                           ;ADC.c: 160:     ADCON0bits.GO_nDONE = 1;
  1096  0689  1283               	bcf	3,5	;RP0=0, select bank0
  1097  068A  1303               	bcf	3,6	;RP1=0, select bank0
  1098  068B  149F               	bsf	31,1	;volatile
  1099  068C                     l152:
  1100  068C  0008               	return
  1101  068D                     __end_of_ADC_CONTINUE:
  1102                           
  1103                           	psect	text5
  1104  075C                     __ptext5:	
  1105 ;; *************** function _ADC_C *****************
  1106 ;; Defined at:
  1107 ;;		line 7 in file "ADC.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  CH              2    0[COMMON] unsigned int 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1121 ;;      Params:         2       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0
  1124 ;;      Totals:         2       0       0       0       0
  1125 ;;Total ram usage:        2 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_main
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           
  1135                           ;psect for function _ADC_C
  1136  075C                     _ADC_C:
  1137  075C                     l930:	
  1138                           ;incstack = 0
  1139                           ; Regs used in _ADC_C: [wreg-fsr0h+status,2+status,0]
  1140                           
  1141                           
  1142                           ;ADC.c: 9:   switch(CH){
  1143  075C  2FC6               	goto	l934
  1144  075D                     l123:	
  1145                           ;ADC.c: 11:          case 0:
  1146                           
  1147                           
  1148                           ;ADC.c: 12:             ADCON0bits.CHS3 = 0;
  1149  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1150  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1151  075F  129F               	bcf	31,5	;volatile
  1152                           
  1153                           ;ADC.c: 13:             ADCON0bits.CHS2 = 0;
  1154  0760  121F               	bcf	31,4	;volatile
  1155                           
  1156                           ;ADC.c: 14:             ADCON0bits.CHS1 = 0;
  1157  0761  119F               	bcf	31,3	;volatile
  1158                           
  1159                           ;ADC.c: 15:             ADCON0bits.CHS0 = 0;
  1160  0762  111F               	bcf	31,2	;volatile
  1161                           
  1162                           ;ADC.c: 16:             break;
  1163  0763  2FF7               	goto	l139
  1164  0764                     l125:	
  1165                           ;ADC.c: 18:         case 1:
  1166                           
  1167                           
  1168                           ;ADC.c: 19:             ADCON0bits.CHS3 = 0;
  1169  0764  1283               	bcf	3,5	;RP0=0, select bank0
  1170  0765  1303               	bcf	3,6	;RP1=0, select bank0
  1171  0766  129F               	bcf	31,5	;volatile
  1172                           
  1173                           ;ADC.c: 20:             ADCON0bits.CHS2 = 0;
  1174  0767  121F               	bcf	31,4	;volatile
  1175                           
  1176                           ;ADC.c: 21:             ADCON0bits.CHS1 = 0;
  1177  0768  119F               	bcf	31,3	;volatile
  1178                           
  1179                           ;ADC.c: 22:             ADCON0bits.CHS0 = 1;
  1180  0769  151F               	bsf	31,2	;volatile
  1181                           
  1182                           ;ADC.c: 23:             break;
  1183  076A  2FF7               	goto	l139
  1184  076B                     l126:	
  1185                           ;ADC.c: 25:         case 2:
  1186                           
  1187                           
  1188                           ;ADC.c: 26:             ADCON0bits.CHS3 = 0;
  1189  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1190  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1191  076D  129F               	bcf	31,5	;volatile
  1192                           
  1193                           ;ADC.c: 27:             ADCON0bits.CHS2 = 0;
  1194  076E  121F               	bcf	31,4	;volatile
  1195                           
  1196                           ;ADC.c: 28:             ADCON0bits.CHS1 = 1;
  1197  076F  159F               	bsf	31,3	;volatile
  1198                           
  1199                           ;ADC.c: 29:             ADCON0bits.CHS0 = 0;
  1200  0770  111F               	bcf	31,2	;volatile
  1201                           
  1202                           ;ADC.c: 30:             break;
  1203  0771  2FF7               	goto	l139
  1204  0772                     l127:	
  1205                           ;ADC.c: 32:         case 3:
  1206                           
  1207                           
  1208                           ;ADC.c: 33:             ADCON0bits.CHS3 = 0;
  1209  0772  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0773  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0774  129F               	bcf	31,5	;volatile
  1212                           
  1213                           ;ADC.c: 34:             ADCON0bits.CHS2 = 0;
  1214  0775  121F               	bcf	31,4	;volatile
  1215                           
  1216                           ;ADC.c: 35:             ADCON0bits.CHS1 = 1;
  1217  0776  159F               	bsf	31,3	;volatile
  1218                           
  1219                           ;ADC.c: 36:             ADCON0bits.CHS0 = 1;
  1220  0777  151F               	bsf	31,2	;volatile
  1221                           
  1222                           ;ADC.c: 37:             break;
  1223  0778  2FF7               	goto	l139
  1224  0779                     l128:	
  1225                           ;ADC.c: 39:         case 4:
  1226                           
  1227                           
  1228                           ;ADC.c: 40:             ADCON0bits.CHS3 = 0;
  1229  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1230  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1231  077B  129F               	bcf	31,5	;volatile
  1232                           
  1233                           ;ADC.c: 41:             ADCON0bits.CHS2 = 1;
  1234  077C  161F               	bsf	31,4	;volatile
  1235                           
  1236                           ;ADC.c: 42:             ADCON0bits.CHS1 = 0;
  1237  077D  119F               	bcf	31,3	;volatile
  1238                           
  1239                           ;ADC.c: 43:             ADCON0bits.CHS0 = 0;
  1240  077E  111F               	bcf	31,2	;volatile
  1241                           
  1242                           ;ADC.c: 44:             break;
  1243  077F  2FF7               	goto	l139
  1244  0780                     l129:	
  1245                           ;ADC.c: 46:         case 5:
  1246                           
  1247                           
  1248                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  1249  0780  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0781  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0782  129F               	bcf	31,5	;volatile
  1252                           
  1253                           ;ADC.c: 48:             ADCON0bits.CHS2 = 1;
  1254  0783  161F               	bsf	31,4	;volatile
  1255                           
  1256                           ;ADC.c: 49:             ADCON0bits.CHS1 = 0;
  1257  0784  119F               	bcf	31,3	;volatile
  1258                           
  1259                           ;ADC.c: 50:             ADCON0bits.CHS0 = 1;
  1260  0785  151F               	bsf	31,2	;volatile
  1261                           
  1262                           ;ADC.c: 51:             break;
  1263  0786  2FF7               	goto	l139
  1264  0787                     l130:	
  1265                           ;ADC.c: 53:         case 6:
  1266                           
  1267                           
  1268                           ;ADC.c: 54:             ADCON0bits.CHS3 = 0;
  1269  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1270  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1271  0789  129F               	bcf	31,5	;volatile
  1272                           
  1273                           ;ADC.c: 55:             ADCON0bits.CHS2 = 1;
  1274  078A  161F               	bsf	31,4	;volatile
  1275                           
  1276                           ;ADC.c: 56:             ADCON0bits.CHS1 = 1;
  1277  078B  159F               	bsf	31,3	;volatile
  1278                           
  1279                           ;ADC.c: 57:             ADCON0bits.CHS0 = 0;
  1280  078C  111F               	bcf	31,2	;volatile
  1281                           
  1282                           ;ADC.c: 58:             break;
  1283  078D  2FF7               	goto	l139
  1284  078E                     l131:	
  1285                           ;ADC.c: 60:         case 7:
  1286                           
  1287                           
  1288                           ;ADC.c: 61:             ADCON0bits.CHS3 = 0;
  1289  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1290  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0790  129F               	bcf	31,5	;volatile
  1292                           
  1293                           ;ADC.c: 62:             ADCON0bits.CHS2 = 1;
  1294  0791  161F               	bsf	31,4	;volatile
  1295                           
  1296                           ;ADC.c: 63:             ADCON0bits.CHS1 = 1;
  1297  0792  159F               	bsf	31,3	;volatile
  1298                           
  1299                           ;ADC.c: 64:             ADCON0bits.CHS0 = 1;
  1300  0793  151F               	bsf	31,2	;volatile
  1301                           
  1302                           ;ADC.c: 65:             break;
  1303  0794  2FF7               	goto	l139
  1304  0795                     l132:	
  1305                           ;ADC.c: 67:         case 8:
  1306                           
  1307                           
  1308                           ;ADC.c: 68:             ADCON0bits.CHS3 = 1;
  1309  0795  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0796  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0797  169F               	bsf	31,5	;volatile
  1312                           
  1313                           ;ADC.c: 69:             ADCON0bits.CHS2 = 0;
  1314  0798  121F               	bcf	31,4	;volatile
  1315                           
  1316                           ;ADC.c: 70:             ADCON0bits.CHS1 = 0;
  1317  0799  119F               	bcf	31,3	;volatile
  1318                           
  1319                           ;ADC.c: 71:             ADCON0bits.CHS0 = 0;
  1320  079A  111F               	bcf	31,2	;volatile
  1321                           
  1322                           ;ADC.c: 72:             break;
  1323  079B  2FF7               	goto	l139
  1324  079C                     l133:	
  1325                           ;ADC.c: 74:         case 9:
  1326                           
  1327                           
  1328                           ;ADC.c: 75:             ADCON0bits.CHS3 = 1;
  1329  079C  1283               	bcf	3,5	;RP0=0, select bank0
  1330  079D  1303               	bcf	3,6	;RP1=0, select bank0
  1331  079E  169F               	bsf	31,5	;volatile
  1332                           
  1333                           ;ADC.c: 76:             ADCON0bits.CHS2 = 0;
  1334  079F  121F               	bcf	31,4	;volatile
  1335                           
  1336                           ;ADC.c: 77:             ADCON0bits.CHS1 = 0;
  1337  07A0  119F               	bcf	31,3	;volatile
  1338                           
  1339                           ;ADC.c: 78:             ADCON0bits.CHS0 = 1;
  1340  07A1  151F               	bsf	31,2	;volatile
  1341                           
  1342                           ;ADC.c: 79:             break;
  1343  07A2  2FF7               	goto	l139
  1344  07A3                     l134:	
  1345                           ;ADC.c: 81:         case 10:
  1346                           
  1347                           
  1348                           ;ADC.c: 82:             ADCON0bits.CHS3 = 1;
  1349  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  1350  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  1351  07A5  169F               	bsf	31,5	;volatile
  1352                           
  1353                           ;ADC.c: 83:             ADCON0bits.CHS2 = 0;
  1354  07A6  121F               	bcf	31,4	;volatile
  1355                           
  1356                           ;ADC.c: 84:             ADCON0bits.CHS1 = 1;
  1357  07A7  159F               	bsf	31,3	;volatile
  1358                           
  1359                           ;ADC.c: 85:             ADCON0bits.CHS0 = 0;
  1360  07A8  111F               	bcf	31,2	;volatile
  1361                           
  1362                           ;ADC.c: 86:             break;
  1363  07A9  2FF7               	goto	l139
  1364  07AA                     l135:	
  1365                           ;ADC.c: 88:         case 11:
  1366                           
  1367                           
  1368                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  1369  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1370  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1371  07AC  169F               	bsf	31,5	;volatile
  1372                           
  1373                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  1374  07AD  121F               	bcf	31,4	;volatile
  1375                           
  1376                           ;ADC.c: 91:             ADCON0bits.CHS1 = 1;
  1377  07AE  159F               	bsf	31,3	;volatile
  1378                           
  1379                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  1380  07AF  151F               	bsf	31,2	;volatile
  1381                           
  1382                           ;ADC.c: 93:             break;
  1383  07B0  2FF7               	goto	l139
  1384  07B1                     l136:	
  1385                           ;ADC.c: 95:         case 12:
  1386                           
  1387                           
  1388                           ;ADC.c: 96:             ADCON0bits.CHS3 = 1;
  1389  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1390  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1391  07B3  169F               	bsf	31,5	;volatile
  1392                           
  1393                           ;ADC.c: 97:             ADCON0bits.CHS2 = 1;
  1394  07B4  161F               	bsf	31,4	;volatile
  1395                           
  1396                           ;ADC.c: 98:             ADCON0bits.CHS1 = 0;
  1397  07B5  119F               	bcf	31,3	;volatile
  1398                           
  1399                           ;ADC.c: 99:             ADCON0bits.CHS0 = 0;
  1400  07B6  111F               	bcf	31,2	;volatile
  1401                           
  1402                           ;ADC.c: 100:             break;
  1403  07B7  2FF7               	goto	l139
  1404  07B8                     l137:	
  1405                           ;ADC.c: 101:         case 13:
  1406                           
  1407                           
  1408                           ;ADC.c: 102:             ADCON0bits.CHS3 = 1;
  1409  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1410  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1411  07BA  169F               	bsf	31,5	;volatile
  1412                           
  1413                           ;ADC.c: 103:             ADCON0bits.CHS2 = 1;
  1414  07BB  161F               	bsf	31,4	;volatile
  1415                           
  1416                           ;ADC.c: 104:             ADCON0bits.CHS1 = 0;
  1417  07BC  119F               	bcf	31,3	;volatile
  1418                           
  1419                           ;ADC.c: 105:             ADCON0bits.CHS0 = 1;
  1420  07BD  151F               	bsf	31,2	;volatile
  1421                           
  1422                           ;ADC.c: 106:             break;
  1423  07BE  2FF7               	goto	l139
  1424  07BF                     l138:	
  1425                           ;ADC.c: 108:         default:
  1426                           
  1427                           
  1428                           ;ADC.c: 109:             ADCON0bits.CHS3 = 0;
  1429  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1430  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  1431  07C1  129F               	bcf	31,5	;volatile
  1432                           
  1433                           ;ADC.c: 110:             ADCON0bits.CHS2 = 0;
  1434  07C2  121F               	bcf	31,4	;volatile
  1435                           
  1436                           ;ADC.c: 111:             ADCON0bits.CHS1 = 0;
  1437  07C3  119F               	bcf	31,3	;volatile
  1438                           
  1439                           ;ADC.c: 112:             ADCON0bits.CHS0 = 0;
  1440  07C4  111F               	bcf	31,2	;volatile
  1441                           
  1442                           ;ADC.c: 113:             break;
  1443  07C5  2FF7               	goto	l139
  1444  07C6                     l934:
  1445                           
  1446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1447                           ; Switch size 1, requested type "simple"
  1448                           ; Number of cases is 1, Range of values is 0 to 0
  1449                           ; switch strategies available:
  1450                           ; Name         Instructions Cycles
  1451                           ; simple_byte            4     3 (average)
  1452                           ; direct_byte           11     8 (fixed)
  1453                           ; jumptable            260     6 (fixed)
  1454                           ;	Chosen strategy is simple_byte
  1455  07C6  0871               	movf	ADC_C@CH+1,w
  1456  07C7  3A00               	xorlw	0	; case 0
  1457  07C8  1903               	skipnz
  1458  07C9  2FCB               	goto	l1026
  1459  07CA  2FBF               	goto	l138
  1460  07CB                     l1026:
  1461                           
  1462                           ; Switch size 1, requested type "simple"
  1463                           ; Number of cases is 14, Range of values is 0 to 13
  1464                           ; switch strategies available:
  1465                           ; Name         Instructions Cycles
  1466                           ; simple_byte           43    22 (average)
  1467                           ; direct_byte           50     8 (fixed)
  1468                           ; jumptable            260     6 (fixed)
  1469                           ;	Chosen strategy is simple_byte
  1470  07CB  0870               	movf	ADC_C@CH,w
  1471  07CC  3A00               	xorlw	0	; case 0
  1472  07CD  1903               	skipnz
  1473  07CE  2F5D               	goto	l123
  1474  07CF  3A01               	xorlw	1	; case 1
  1475  07D0  1903               	skipnz
  1476  07D1  2F64               	goto	l125
  1477  07D2  3A03               	xorlw	3	; case 2
  1478  07D3  1903               	skipnz
  1479  07D4  2F6B               	goto	l126
  1480  07D5  3A01               	xorlw	1	; case 3
  1481  07D6  1903               	skipnz
  1482  07D7  2F72               	goto	l127
  1483  07D8  3A07               	xorlw	7	; case 4
  1484  07D9  1903               	skipnz
  1485  07DA  2F79               	goto	l128
  1486  07DB  3A01               	xorlw	1	; case 5
  1487  07DC  1903               	skipnz
  1488  07DD  2F80               	goto	l129
  1489  07DE  3A03               	xorlw	3	; case 6
  1490  07DF  1903               	skipnz
  1491  07E0  2F87               	goto	l130
  1492  07E1  3A01               	xorlw	1	; case 7
  1493  07E2  1903               	skipnz
  1494  07E3  2F8E               	goto	l131
  1495  07E4  3A0F               	xorlw	15	; case 8
  1496  07E5  1903               	skipnz
  1497  07E6  2F95               	goto	l132
  1498  07E7  3A01               	xorlw	1	; case 9
  1499  07E8  1903               	skipnz
  1500  07E9  2F9C               	goto	l133
  1501  07EA  3A03               	xorlw	3	; case 10
  1502  07EB  1903               	skipnz
  1503  07EC  2FA3               	goto	l134
  1504  07ED  3A01               	xorlw	1	; case 11
  1505  07EE  1903               	skipnz
  1506  07EF  2FAA               	goto	l135
  1507  07F0  3A07               	xorlw	7	; case 12
  1508  07F1  1903               	skipnz
  1509  07F2  2FB1               	goto	l136
  1510  07F3  3A01               	xorlw	1	; case 13
  1511  07F4  1903               	skipnz
  1512  07F5  2FB8               	goto	l137
  1513  07F6  2FBF               	goto	l138
  1514  07F7                     l139:
  1515  07F7  0008               	return
  1516  07F8                     __end_of_ADC_C:
  1517  007E                     btemp	set	126	;btemp
  1518  007E                     wtemp0	set	126
  1519                           
  1520                           	psect	config
  1521                           
  1522                           ;Config register CONFIG1 @ 0x2007
  1523                           ;	Oscillator Selection bits
  1524                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  1525                           ;	Watchdog Timer Enable bit
  1526                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1527                           ;	Power-up Timer Enable bit
  1528                           ;	PWRTE = OFF, PWRT disabled
  1529                           ;	RE3/MCLR pin function select bit
  1530                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1531                           ;	Code Protection bit
  1532                           ;	CP = OFF, Program memory code protection is disabled
  1533                           ;	Data Code Protection bit
  1534                           ;	CPD = OFF, Data memory code protection is disabled
  1535                           ;	Brown Out Reset Selection bits
  1536                           ;	BOREN = OFF, BOR disabled
  1537                           ;	Internal External Switchover bit
  1538                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1539                           ;	Fail-Safe Clock Monitor Enabled bit
  1540                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1541                           ;	Low Voltage Programming Enable bit
  1542                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1543                           ;	In-Circuit Debugger Mode bit
  1544                           ;	DEBUG = 0x1, unprogrammed default
  1545  2007                     	org	8199
  1546  2007  20D7               	dw	8407
  1547                           
  1548                           ;Config register CONFIG2 @ 0x2008
  1549                           ;	Brown-out Reset Selection bit
  1550                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1551                           ;	Flash Program Memory Self Write Enable bits
  1552                           ;	WRT = OFF, Write protection off
  1553  2008                     	org	8200
  1554  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_READ

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     143
                                              4 COMMON     1     1      0
                              _ADC_C
                       _ADC_CONTINUE
                        _ADC_CONVCLK
                           _ADC_READ
                              _SETUP
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONVCLK                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONTINUE                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_C                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_C
   _ADC_CONTINUE
   _ADC_CONVCLK
   _ADC_READ
   _SETUP

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 17:24:43 2021

   __size_of_ADC_CONVCLK 0043              _SSPSTATbits 0094                       l67 06AD  
                     u50 0744                       u51 0743                       u60 074E  
                     u61 074D                       u77 070B                       u87 0684  
  __size_of_ADC_CONTINUE 0013                      l130 0787                      l131 078E  
                    l123 075D                      l132 0795                      l133 079C  
                    l125 0764                      l134 07A3                      l126 076B  
                    l135 07AA                      l127 0772                      l143 06D2  
                    l136 07B1                      l128 0779                      l152 068C  
                    l144 0701                      l160 06CF                      l137 07B8  
                    l129 0780                      l145 06D7                      l138 07BF  
                    l146 06DC                      l139 07F7                      l147 06E1  
                    l148 06E6                      l149 0712                      l802 06BE  
                    l812 067A                      l804 06CE                      l814 0680  
                    l816 0689                      l760 069A                      l752 068D  
                    l930 075C                      l762 06A0                      l754 0694  
                    l780 06D1                      l764 06A2                      l756 0698  
                    l940 0713                      l934 07C6                      l766 06A8  
                    l758 0699                      l950 0735                      l942 0718  
                    l784 06EB                      l768 06AC                      l960 074E  
                    l952 073A                      l944 0720                      l786 0707  
                    l794 06AF                      l954 073E                      l946 0726  
                    l788 070F                      l796 06B0                      l956 0744  
                    l948 072C                      l798 06B7                      l958 0748  
                   l1022 06C6                     l1024 06F3                     l1026 07CB  
                   _data 0078         __end_of_ADC_READ 06D0                     _main 0713  
                   btemp 007E                     start 0000          ADC_CONVCLK@CONV 0072  
           _ADC_CONTINUE 067A                    ?_main 0070                    _ADC_C 075C  
                  _ANSEL 0188                    _SETUP 068D                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _dummy 0075                    status 0003                    wtemp0 007E  
        __initialization 07F8             __end_of_main 075C                   ??_main 0074  
                 ?_ADC_C 0070                   ?_SETUP 0070                   _ADRESH 001E  
                 _ADRESL 009E                   _ANSELH 0189                   _SSPBUF 0013  
                 _SSPCON 0014                ?_ADC_READ 0070  __end_of__initialization 07FC  
          __end_of_ADC_C 07F8            __end_of_SETUP 06AE           __pcstackCOMMON 0070  
                ??_ADC_C 0072                  ADC_C@CH 0070               ??_ADC_READ 0070  
                ??_SETUP 0070            ??_ADC_CONVCLK 0070               __pmaintext 0713  
                _SSPSTAT 0094      __end_of_ADC_CONVCLK 0713                _ANSELbits 0188  
                __ptext1 068D                  __ptext2 06AE                  __ptext3 06D0  
                __ptext4 067A                  __ptext5 075C     end_of_initialization 07FC  
      __size_of_ADC_READ 0022              _ADC_CONVCLK 06D0      start_initialization 07F8  
          _POTENCIOMETRO 0077            ?_ADC_CONTINUE 0070              __pbssCOMMON 0075  
              ___latbits 0002           ??_ADC_CONTINUE 0070           __size_of_ADC_C 009C  
               _ADC_READ 06AE           __size_of_SETUP 0021                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F    ADC_READ@JUSTIFICACION 0072  
           ?_ADC_CONVCLK 0070     __end_of_ADC_CONTINUE 068D             _rxByteMaster 0076  
          __size_of_main 0049        ADC_READ@VALOR_ADC 0073               _INTCONbits 000B  
             _SSPCONbits 0014  
