

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 14 22:17:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.31
    17                           ; Generated 13/10/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  001E                     _ADRESH	set	30
   364  000B                     _INTCONbits	set	11
   365  000C                     _PIR1bits	set	12
   366  001F                     _ADCON0bits	set	31
   367  0013                     _SSPBUF	set	19
   368  0014                     _SSPCON	set	20
   369  0014                     _SSPCONbits	set	20
   370  0009                     _PORTE	set	9
   371  0007                     _PORTC	set	7
   372  0006                     _PORTB	set	6
   373  0005                     _PORTA	set	5
   374  0008                     _PORTD	set	8
   375  009E                     _ADRESL	set	158
   376  008C                     _PIE1bits	set	140
   377  0094                     _SSPSTATbits	set	148
   378  0094                     _SSPSTAT	set	148
   379  0089                     _TRISE	set	137
   380  0087                     _TRISC	set	135
   381  0088                     _TRISD	set	136
   382  0086                     _TRISB	set	134
   383  0085                     _TRISA	set	133
   384  0189                     _ANSELH	set	393
   385  0188                     _ANSELbits	set	392
   386  0188                     _ANSEL	set	392
   387                           
   388                           	psect	cinit
   389  07FA                     start_initialization:	
   390                           ; #config settings
   391                           
   392  07FA                     __initialization:
   393                           
   394                           ; Clear objects allocated to COMMON
   395  07FA  01F5               	clrf	__pbssCOMMON& (0+127)
   396  07FB  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   397  07FC                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  07FC                     __end_of__initialization:
   401  07FC  0183               	clrf	3
   402  07FD  120A  118A  2EF2   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMMON
   405  0075                     __pbssCOMMON:
   406  0075                     _POTENCIOMETRO:
   407  0075                     	ds	1
   408  0076                     _data:
   409  0076                     	ds	1
   410                           
   411                           	psect	cstackCOMMON
   412  0070                     __pcstackCOMMON:
   413  0070                     ?_SETUP:
   414  0070                     ??_SETUP:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_ADC_C:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_ADC_CONVCLK:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ??_ADC_CONVCLK:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_ADC_READ:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_ADC_READ:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_ADC_CONTINUE:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_ADC_CONTINUE:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_main:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ADC_C@CH:	
   442                           ; 1 bytes @ 0x0
   443                           
   444                           
   445                           ; 2 bytes @ 0x0
   446  0070                     	ds	2
   447  0072                     ??_ADC_C:
   448  0072                     ADC_CONVCLK@CONV:	
   449                           ; 1 bytes @ 0x2
   450                           
   451  0072                     ADC_READ@JUSTIFICACION:	
   452                           ; 1 bytes @ 0x2
   453                           
   454                           
   455                           ; 1 bytes @ 0x2
   456  0072                     	ds	1
   457  0073                     ADC_READ@VALOR_ADC:
   458                           
   459                           ; 1 bytes @ 0x3
   460  0073                     	ds	1
   461  0074                     ??_main:
   462                           
   463                           ; 1 bytes @ 0x4
   464  0074                     	ds	1
   465                           
   466                           	psect	maintext
   467  06F2                     __pmaintext:	
   468 ;;
   469 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   470 ;;
   471 ;; *************** function _main *****************
   472 ;; Defined at:
   473 ;;		line 39 in file "Principal_Slave1.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : B00/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0
   489 ;;      Temps:          1       0       0       0       0
   490 ;;      Totals:         1       0       0       0       0
   491 ;;Total ram usage:        1 bytes
   492 ;; Hardware stack levels required when called:    1
   493 ;; This function calls:
   494 ;;		_ADC_C
   495 ;;		_ADC_CONTINUE
   496 ;;		_ADC_CONVCLK
   497 ;;		_ADC_READ
   498 ;;		_SETUP
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           
   505                           ;psect for function _main
   506  06F2                     _main:
   507  06F2                     l905:	
   508                           ;incstack = 0
   509                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   510                           
   511                           
   512                           ;Principal_Slave1.c: 41:  SETUP();
   513  06F2  120A  118A  26BA  120A  118A  	fcall	_SETUP
   514  06F7                     l907:
   515                           
   516                           ;Principal_Slave1.c: 42:     ADC_C(0);
   517  06F7  3000               	movlw	0
   518  06F8  00F0               	movwf	ADC_C@CH
   519  06F9  00F1               	movwf	ADC_C@CH+1
   520  06FA  120A  118A  275E  120A  118A  	fcall	_ADC_C
   521  06FF                     l909:
   522                           
   523                           ;Principal_Slave1.c: 43:     ADC_CONVCLK(1);
   524  06FF  3001               	movlw	1
   525  0700  120A  118A  271B  120A  118A  	fcall	_ADC_CONVCLK
   526  0705                     l911:
   527                           
   528                           ;Principal_Slave1.c: 46:  {;Principal_Slave1.c: 47:     POTENCIOMETRO = ADC_READ (0);
   529  0705  3000               	movlw	0
   530  0706  120A  118A  26D0  120A  118A  	fcall	_ADC_READ
   531  070B  00F4               	movwf	??_main
   532  070C  0874               	movf	??_main,w
   533  070D  00F5               	movwf	_POTENCIOMETRO
   534  070E                     l913:
   535                           
   536                           ;Principal_Slave1.c: 48:     PORTD = POTENCIOMETRO ;
   537  070E  0875               	movf	_POTENCIOMETRO,w
   538  070F  1283               	bcf	3,5	;RP0=0, select bank0
   539  0710  1303               	bcf	3,6	;RP1=0, select bank0
   540  0711  0088               	movwf	8	;volatile
   541  0712                     l915:
   542                           
   543                           ;Principal_Slave1.c: 49:     ADC_CONTINUE();
   544  0712  120A  118A  26A7  120A  118A  	fcall	_ADC_CONTINUE
   545  0717  2F05               	goto	l911
   546  0718  120A  118A  2800   	ljmp	start
   547  071B                     __end_of_main:
   548                           
   549                           	psect	text1
   550  06BA                     __ptext1:	
   551 ;; *************** function _SETUP *****************
   552 ;; Defined at:
   553 ;;		line 57 in file "Principal_Slave1.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         0       0       0       0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           
   581                           ;psect for function _SETUP
   582  06BA                     _SETUP:
   583  06BA                     l733:	
   584                           ;incstack = 0
   585                           ; Regs used in _SETUP: [wreg+status,2]
   586                           
   587                           
   588                           ;Principal_Slave1.c: 59:         PORTA = 0;
   589  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   590  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   591  06BC  0185               	clrf	5	;volatile
   592                           
   593                           ;Principal_Slave1.c: 60:         PORTB = 0;
   594  06BD  0186               	clrf	6	;volatile
   595                           
   596                           ;Principal_Slave1.c: 61:         PORTC = 0;
   597  06BE  0187               	clrf	7	;volatile
   598                           
   599                           ;Principal_Slave1.c: 62:         PORTD = 0;
   600  06BF  0188               	clrf	8	;volatile
   601                           
   602                           ;Principal_Slave1.c: 63:         PORTE = 0;
   603  06C0  0189               	clrf	9	;volatile
   604  06C1                     l735:
   605                           
   606                           ;Principal_Slave1.c: 65:         TRISA = 0b00100001;
   607  06C1  3021               	movlw	33
   608  06C2  1683               	bsf	3,5	;RP0=1, select bank1
   609  06C3  1303               	bcf	3,6	;RP1=0, select bank1
   610  06C4  0085               	movwf	5	;volatile
   611  06C5                     l737:
   612                           
   613                           ;Principal_Slave1.c: 66:         TRISB = 0;
   614  06C5  0186               	clrf	6	;volatile
   615  06C6                     l739:
   616                           
   617                           ;Principal_Slave1.c: 67:         TRISD = 0;
   618  06C6  0188               	clrf	8	;volatile
   619  06C7                     l741:
   620                           
   621                           ;Principal_Slave1.c: 68:         TRISC = 0b00011000;
   622  06C7  3018               	movlw	24
   623  06C8  0087               	movwf	7	;volatile
   624                           
   625                           ;Principal_Slave1.c: 69:         TRISE = 0;
   626  06C9  0189               	clrf	9	;volatile
   627                           
   628                           ;Principal_Slave1.c: 71:         ANSEL = 0;
   629  06CA  1683               	bsf	3,5	;RP0=1, select bank3
   630  06CB  1703               	bsf	3,6	;RP1=1, select bank3
   631  06CC  0188               	clrf	8	;volatile
   632  06CD                     l743:
   633                           
   634                           ;Principal_Slave1.c: 72:         ANSELbits.ANS0 = 1;
   635  06CD  1408               	bsf	8,0	;volatile
   636                           
   637                           ;Principal_Slave1.c: 73:         ANSELH = 0;
   638  06CE  0189               	clrf	9	;volatile
   639  06CF                     l51:
   640  06CF  0008               	return
   641  06D0                     __end_of_SETUP:
   642                           
   643                           	psect	text2
   644  06D0                     __ptext2:	
   645 ;; *************** function _ADC_READ *****************
   646 ;; Defined at:
   647 ;;		line 164 in file "ADC.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;  JUSTIFICACIO    1    wreg     unsigned char 
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  JUSTIFICACIO    1    2[COMMON] unsigned char 
   652 ;;  VALOR_ADC       1    3[COMMON] unsigned char 
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      unsigned char 
   655 ;; Registers used:
   656 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         2       0       0       0       0
   664 ;;      Temps:          2       0       0       0       0
   665 ;;      Totals:         4       0       0       0       0
   666 ;;Total ram usage:        4 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _ADC_READ
   677  06D0                     _ADC_READ:
   678                           
   679                           ;incstack = 0
   680                           ; Regs used in _ADC_READ: [wreg-fsr0h+status,2+status,0]
   681                           ;ADC_READ@JUSTIFICACION stored from wreg
   682  06D0  00F2               	movwf	ADC_READ@JUSTIFICACION
   683  06D1                     l769:
   684                           
   685                           ;ADC.c: 168:     switch (JUSTIFICACION){
   686  06D1  2EE0               	goto	l777
   687  06D2                     l771:
   688                           
   689                           ;ADC.c: 170:             VALOR_ADC = ADRESH;
   690  06D2  1283               	bcf	3,5	;RP0=0, select bank0
   691  06D3  1303               	bcf	3,6	;RP1=0, select bank0
   692  06D4  081E               	movf	30,w	;volatile
   693  06D5  00F0               	movwf	??_ADC_READ
   694  06D6  0870               	movf	??_ADC_READ,w
   695  06D7  00F3               	movwf	ADC_READ@VALOR_ADC
   696                           
   697                           ;ADC.c: 171:             break;
   698  06D8  2EF0               	goto	l779
   699  06D9                     l773:
   700                           
   701                           ;ADC.c: 173:             VALOR_ADC = ADRESL;
   702  06D9  1683               	bsf	3,5	;RP0=1, select bank1
   703  06DA  1303               	bcf	3,6	;RP1=0, select bank1
   704  06DB  081E               	movf	30,w	;volatile
   705  06DC  00F0               	movwf	??_ADC_READ
   706  06DD  0870               	movf	??_ADC_READ,w
   707  06DE  00F3               	movwf	ADC_READ@VALOR_ADC
   708                           
   709                           ;ADC.c: 174:             break;
   710  06DF  2EF0               	goto	l779
   711  06E0                     l777:
   712  06E0  0872               	movf	ADC_READ@JUSTIFICACION,w
   713  06E1  00F0               	movwf	??_ADC_READ
   714  06E2  01F1               	clrf	??_ADC_READ+1
   715                           
   716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   717                           ; Switch size 1, requested type "simple"
   718                           ; Number of cases is 1, Range of values is 0 to 0
   719                           ; switch strategies available:
   720                           ; Name         Instructions Cycles
   721                           ; simple_byte            4     3 (average)
   722                           ; direct_byte           11     8 (fixed)
   723                           ; jumptable            260     6 (fixed)
   724                           ;	Chosen strategy is simple_byte
   725  06E3  0871               	movf	??_ADC_READ+1,w
   726  06E4  3A00               	xorlw	0	; case 0
   727  06E5  1903               	skipnz
   728  06E6  2EE8               	goto	l977
   729  06E7  2ED2               	goto	l771
   730  06E8                     l977:
   731                           
   732                           ; Switch size 1, requested type "simple"
   733                           ; Number of cases is 2, Range of values is 0 to 1
   734                           ; switch strategies available:
   735                           ; Name         Instructions Cycles
   736                           ; simple_byte            7     4 (average)
   737                           ; direct_byte           14     8 (fixed)
   738                           ; jumptable            260     6 (fixed)
   739                           ;	Chosen strategy is simple_byte
   740  06E8  0870               	movf	??_ADC_READ,w
   741  06E9  3A00               	xorlw	0	; case 0
   742  06EA  1903               	skipnz
   743  06EB  2ED2               	goto	l771
   744  06EC  3A01               	xorlw	1	; case 1
   745  06ED  1903               	skipnz
   746  06EE  2ED9               	goto	l773
   747  06EF  2ED2               	goto	l771
   748  06F0                     l779:
   749                           
   750                           ;ADC.c: 178:     return (VALOR_ADC );
   751  06F0  0873               	movf	ADC_READ@VALOR_ADC,w
   752  06F1                     l141:
   753  06F1  0008               	return
   754  06F2                     __end_of_ADC_READ:
   755                           
   756                           	psect	text3
   757  071B                     __ptext3:	
   758 ;; *************** function _ADC_CONVCLK *****************
   759 ;; Defined at:
   760 ;;		line 117 in file "ADC.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  CONV            1    wreg     unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  CONV            1    2[COMMON] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   774 ;;      Params:         0       0       0       0       0
   775 ;;      Locals:         1       0       0       0       0
   776 ;;      Temps:          2       0       0       0       0
   777 ;;      Totals:         3       0       0       0       0
   778 ;;Total ram usage:        3 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_main
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           
   788                           ;psect for function _ADC_CONVCLK
   789  071B                     _ADC_CONVCLK:
   790                           
   791                           ;incstack = 0
   792                           ; Regs used in _ADC_CONVCLK: [wreg-fsr0h+status,2+status,0]
   793                           ;ADC_CONVCLK@CONV stored from wreg
   794  071B  00F2               	movwf	ADC_CONVCLK@CONV
   795  071C                     l755:
   796                           
   797                           ;ADC.c: 119:       switch(CONV){
   798  071C  2F36               	goto	l759
   799  071D                     l124:	
   800                           ;ADC.c: 121:         case 0:
   801                           
   802                           
   803                           ;ADC.c: 122:             ADCON0bits.ADCS0 = 0;
   804  071D  1283               	bcf	3,5	;RP0=0, select bank0
   805  071E  1303               	bcf	3,6	;RP1=0, select bank0
   806  071F  131F               	bcf	31,6	;volatile
   807                           
   808                           ;ADC.c: 123:             ADCON0bits.ADCS0 = 0;
   809  0720  131F               	bcf	31,6	;volatile
   810                           
   811                           ;ADC.c: 124:             break;
   812  0721  2F4C               	goto	l125
   813  0722                     l126:	
   814                           ;ADC.c: 126:         case 1:
   815                           
   816                           
   817                           ;ADC.c: 127:             ADCON0bits.ADCS0 = 0;
   818  0722  1283               	bcf	3,5	;RP0=0, select bank0
   819  0723  1303               	bcf	3,6	;RP1=0, select bank0
   820  0724  131F               	bcf	31,6	;volatile
   821                           
   822                           ;ADC.c: 128:             ADCON0bits.ADCS0 = 1;
   823  0725  171F               	bsf	31,6	;volatile
   824                           
   825                           ;ADC.c: 129:             break;
   826  0726  2F4C               	goto	l125
   827  0727                     l127:	
   828                           ;ADC.c: 131:         case 2:
   829                           
   830                           
   831                           ;ADC.c: 132:             ADCON0bits.ADCS0 = 1;
   832  0727  1283               	bcf	3,5	;RP0=0, select bank0
   833  0728  1303               	bcf	3,6	;RP1=0, select bank0
   834  0729  171F               	bsf	31,6	;volatile
   835                           
   836                           ;ADC.c: 133:             ADCON0bits.ADCS0 = 0;
   837  072A  131F               	bcf	31,6	;volatile
   838                           
   839                           ;ADC.c: 134:             break;
   840  072B  2F4C               	goto	l125
   841  072C                     l128:	
   842                           ;ADC.c: 136:         case 3:
   843                           
   844                           
   845                           ;ADC.c: 137:             ADCON0bits.ADCS0 = 1;
   846  072C  1283               	bcf	3,5	;RP0=0, select bank0
   847  072D  1303               	bcf	3,6	;RP1=0, select bank0
   848  072E  171F               	bsf	31,6	;volatile
   849                           
   850                           ;ADC.c: 138:             ADCON0bits.ADCS0 = 1;
   851  072F  171F               	bsf	31,6	;volatile
   852                           
   853                           ;ADC.c: 139:             break;
   854  0730  2F4C               	goto	l125
   855  0731                     l129:	
   856                           ;ADC.c: 141:         default:
   857                           
   858                           
   859                           ;ADC.c: 142:             ADCON0bits.ADCS0 = 0;
   860  0731  1283               	bcf	3,5	;RP0=0, select bank0
   861  0732  1303               	bcf	3,6	;RP1=0, select bank0
   862  0733  131F               	bcf	31,6	;volatile
   863                           
   864                           ;ADC.c: 143:             ADCON0bits.ADCS0 = 0;
   865  0734  131F               	bcf	31,6	;volatile
   866                           
   867                           ;ADC.c: 144:             break;
   868  0735  2F4C               	goto	l125
   869  0736                     l759:
   870  0736  0872               	movf	ADC_CONVCLK@CONV,w
   871  0737  00F0               	movwf	??_ADC_CONVCLK
   872  0738  01F1               	clrf	??_ADC_CONVCLK+1
   873                           
   874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   875                           ; Switch size 1, requested type "simple"
   876                           ; Number of cases is 1, Range of values is 0 to 0
   877                           ; switch strategies available:
   878                           ; Name         Instructions Cycles
   879                           ; simple_byte            4     3 (average)
   880                           ; direct_byte           11     8 (fixed)
   881                           ; jumptable            260     6 (fixed)
   882                           ;	Chosen strategy is simple_byte
   883  0739  0871               	movf	??_ADC_CONVCLK+1,w
   884  073A  3A00               	xorlw	0	; case 0
   885  073B  1903               	skipnz
   886  073C  2F3E               	goto	l979
   887  073D  2F31               	goto	l129
   888  073E                     l979:
   889                           
   890                           ; Switch size 1, requested type "simple"
   891                           ; Number of cases is 4, Range of values is 0 to 3
   892                           ; switch strategies available:
   893                           ; Name         Instructions Cycles
   894                           ; simple_byte           13     7 (average)
   895                           ; direct_byte           20     8 (fixed)
   896                           ; jumptable            260     6 (fixed)
   897                           ;	Chosen strategy is simple_byte
   898  073E  0870               	movf	??_ADC_CONVCLK,w
   899  073F  3A00               	xorlw	0	; case 0
   900  0740  1903               	skipnz
   901  0741  2F1D               	goto	l124
   902  0742  3A01               	xorlw	1	; case 1
   903  0743  1903               	skipnz
   904  0744  2F22               	goto	l126
   905  0745  3A03               	xorlw	3	; case 2
   906  0746  1903               	skipnz
   907  0747  2F27               	goto	l127
   908  0748  3A01               	xorlw	1	; case 3
   909  0749  1903               	skipnz
   910  074A  2F2C               	goto	l128
   911  074B  2F31               	goto	l129
   912  074C                     l125:
   913                           
   914                           ;ADC.c: 147:     ADCON0bits.ADON = 1;
   915  074C  141F               	bsf	31,0	;volatile
   916                           
   917                           ;ADC.c: 148:     PIR1bits.ADIF = 0;
   918  074D  130C               	bcf	12,6	;volatile
   919                           
   920                           ;ADC.c: 149:     PIE1bits.ADIE = 1;
   921  074E  1683               	bsf	3,5	;RP0=1, select bank1
   922  074F  1303               	bcf	3,6	;RP1=0, select bank1
   923  0750  170C               	bsf	12,6	;volatile
   924                           
   925                           ;ADC.c: 150:     INTCONbits.PEIE = 1;
   926  0751  170B               	bsf	11,6	;volatile
   927  0752                     l761:
   928                           
   929                           ;ADC.c: 151:     _delay((unsigned long)((30)*(8000000/4000.0)));
   930  0752  304E               	movlw	78
   931  0753  00F1               	movwf	??_ADC_CONVCLK+1
   932  0754  30EB               	movlw	235
   933  0755  00F0               	movwf	??_ADC_CONVCLK
   934  0756                     u27:
   935  0756  0BF0               	decfsz	??_ADC_CONVCLK,f
   936  0757  2F56               	goto	u27
   937  0758  0BF1               	decfsz	??_ADC_CONVCLK+1,f
   938  0759  2F56               	goto	u27
   939  075A                     l763:
   940                           
   941                           ;ADC.c: 152:     ADCON0bits.GO_nDONE = 1;
   942  075A  1283               	bcf	3,5	;RP0=0, select bank0
   943  075B  1303               	bcf	3,6	;RP1=0, select bank0
   944  075C  149F               	bsf	31,1	;volatile
   945  075D                     l130:
   946  075D  0008               	return
   947  075E                     __end_of_ADC_CONVCLK:
   948                           
   949                           	psect	text4
   950  06A7                     __ptext4:	
   951 ;; *************** function _ADC_CONTINUE *****************
   952 ;; Defined at:
   953 ;;		line 156 in file "ADC.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0
   969 ;;      Temps:          2       0       0       0       0
   970 ;;      Totals:         2       0       0       0       0
   971 ;;Total ram usage:        2 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           
   981                           ;psect for function _ADC_CONTINUE
   982  06A7                     _ADC_CONTINUE:
   983  06A7                     l787:	
   984                           ;incstack = 0
   985                           ; Regs used in _ADC_CONTINUE: [wreg]
   986                           
   987                           
   988                           ;ADC.c: 157:     PIR1bits.ADIF = 0;
   989  06A7  1283               	bcf	3,5	;RP0=0, select bank0
   990  06A8  1303               	bcf	3,6	;RP1=0, select bank0
   991  06A9  130C               	bcf	12,6	;volatile
   992                           
   993                           ;ADC.c: 158:     PIE1bits.ADIE = 1;
   994  06AA  1683               	bsf	3,5	;RP0=1, select bank1
   995  06AB  1303               	bcf	3,6	;RP1=0, select bank1
   996  06AC  170C               	bsf	12,6	;volatile
   997  06AD                     l789:
   998                           
   999                           ;ADC.c: 159:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1000  06AD  3034               	movlw	52
  1001  06AE  00F1               	movwf	??_ADC_CONTINUE+1
  1002  06AF  30F1               	movlw	241
  1003  06B0  00F0               	movwf	??_ADC_CONTINUE
  1004  06B1                     u37:
  1005  06B1  0BF0               	decfsz	??_ADC_CONTINUE,f
  1006  06B2  2EB1               	goto	u37
  1007  06B3  0BF1               	decfsz	??_ADC_CONTINUE+1,f
  1008  06B4  2EB1               	goto	u37
  1009  06B5  2EB6               	nop2
  1010  06B6                     l791:
  1011                           
  1012                           ;ADC.c: 160:     ADCON0bits.GO_nDONE = 1;
  1013  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1014  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1015  06B8  149F               	bsf	31,1	;volatile
  1016  06B9                     l133:
  1017  06B9  0008               	return
  1018  06BA                     __end_of_ADC_CONTINUE:
  1019                           
  1020                           	psect	text5
  1021  075E                     __ptext5:	
  1022 ;; *************** function _ADC_C *****************
  1023 ;; Defined at:
  1024 ;;		line 7 in file "ADC.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  CH              2    0[COMMON] unsigned int 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         2       0       0       0       0
  1039 ;;      Locals:         0       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0
  1041 ;;      Totals:         2       0       0       0       0
  1042 ;;Total ram usage:        2 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           
  1052                           ;psect for function _ADC_C
  1053  075E                     _ADC_C:
  1054  075E                     l895:	
  1055                           ;incstack = 0
  1056                           ; Regs used in _ADC_C: [wreg-fsr0h+status,2+status,0]
  1057                           
  1058                           
  1059                           ;ADC.c: 9:   switch(CH){
  1060  075E  2FC8               	goto	l899
  1061  075F                     l104:	
  1062                           ;ADC.c: 11:          case 0:
  1063                           
  1064                           
  1065                           ;ADC.c: 12:             ADCON0bits.CHS3 = 0;
  1066  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0761  129F               	bcf	31,5	;volatile
  1069                           
  1070                           ;ADC.c: 13:             ADCON0bits.CHS2 = 0;
  1071  0762  121F               	bcf	31,4	;volatile
  1072                           
  1073                           ;ADC.c: 14:             ADCON0bits.CHS1 = 0;
  1074  0763  119F               	bcf	31,3	;volatile
  1075                           
  1076                           ;ADC.c: 15:             ADCON0bits.CHS0 = 0;
  1077  0764  111F               	bcf	31,2	;volatile
  1078                           
  1079                           ;ADC.c: 16:             break;
  1080  0765  2FF9               	goto	l120
  1081  0766                     l106:	
  1082                           ;ADC.c: 18:         case 1:
  1083                           
  1084                           
  1085                           ;ADC.c: 19:             ADCON0bits.CHS3 = 0;
  1086  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0768  129F               	bcf	31,5	;volatile
  1089                           
  1090                           ;ADC.c: 20:             ADCON0bits.CHS2 = 0;
  1091  0769  121F               	bcf	31,4	;volatile
  1092                           
  1093                           ;ADC.c: 21:             ADCON0bits.CHS1 = 0;
  1094  076A  119F               	bcf	31,3	;volatile
  1095                           
  1096                           ;ADC.c: 22:             ADCON0bits.CHS0 = 1;
  1097  076B  151F               	bsf	31,2	;volatile
  1098                           
  1099                           ;ADC.c: 23:             break;
  1100  076C  2FF9               	goto	l120
  1101  076D                     l107:	
  1102                           ;ADC.c: 25:         case 2:
  1103                           
  1104                           
  1105                           ;ADC.c: 26:             ADCON0bits.CHS3 = 0;
  1106  076D  1283               	bcf	3,5	;RP0=0, select bank0
  1107  076E  1303               	bcf	3,6	;RP1=0, select bank0
  1108  076F  129F               	bcf	31,5	;volatile
  1109                           
  1110                           ;ADC.c: 27:             ADCON0bits.CHS2 = 0;
  1111  0770  121F               	bcf	31,4	;volatile
  1112                           
  1113                           ;ADC.c: 28:             ADCON0bits.CHS1 = 1;
  1114  0771  159F               	bsf	31,3	;volatile
  1115                           
  1116                           ;ADC.c: 29:             ADCON0bits.CHS0 = 0;
  1117  0772  111F               	bcf	31,2	;volatile
  1118                           
  1119                           ;ADC.c: 30:             break;
  1120  0773  2FF9               	goto	l120
  1121  0774                     l108:	
  1122                           ;ADC.c: 32:         case 3:
  1123                           
  1124                           
  1125                           ;ADC.c: 33:             ADCON0bits.CHS3 = 0;
  1126  0774  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0775  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0776  129F               	bcf	31,5	;volatile
  1129                           
  1130                           ;ADC.c: 34:             ADCON0bits.CHS2 = 0;
  1131  0777  121F               	bcf	31,4	;volatile
  1132                           
  1133                           ;ADC.c: 35:             ADCON0bits.CHS1 = 1;
  1134  0778  159F               	bsf	31,3	;volatile
  1135                           
  1136                           ;ADC.c: 36:             ADCON0bits.CHS0 = 1;
  1137  0779  151F               	bsf	31,2	;volatile
  1138                           
  1139                           ;ADC.c: 37:             break;
  1140  077A  2FF9               	goto	l120
  1141  077B                     l109:	
  1142                           ;ADC.c: 39:         case 4:
  1143                           
  1144                           
  1145                           ;ADC.c: 40:             ADCON0bits.CHS3 = 0;
  1146  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1147  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1148  077D  129F               	bcf	31,5	;volatile
  1149                           
  1150                           ;ADC.c: 41:             ADCON0bits.CHS2 = 1;
  1151  077E  161F               	bsf	31,4	;volatile
  1152                           
  1153                           ;ADC.c: 42:             ADCON0bits.CHS1 = 0;
  1154  077F  119F               	bcf	31,3	;volatile
  1155                           
  1156                           ;ADC.c: 43:             ADCON0bits.CHS0 = 0;
  1157  0780  111F               	bcf	31,2	;volatile
  1158                           
  1159                           ;ADC.c: 44:             break;
  1160  0781  2FF9               	goto	l120
  1161  0782                     l110:	
  1162                           ;ADC.c: 46:         case 5:
  1163                           
  1164                           
  1165                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  1166  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0783  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0784  129F               	bcf	31,5	;volatile
  1169                           
  1170                           ;ADC.c: 48:             ADCON0bits.CHS2 = 1;
  1171  0785  161F               	bsf	31,4	;volatile
  1172                           
  1173                           ;ADC.c: 49:             ADCON0bits.CHS1 = 0;
  1174  0786  119F               	bcf	31,3	;volatile
  1175                           
  1176                           ;ADC.c: 50:             ADCON0bits.CHS0 = 1;
  1177  0787  151F               	bsf	31,2	;volatile
  1178                           
  1179                           ;ADC.c: 51:             break;
  1180  0788  2FF9               	goto	l120
  1181  0789                     l111:	
  1182                           ;ADC.c: 53:         case 6:
  1183                           
  1184                           
  1185                           ;ADC.c: 54:             ADCON0bits.CHS3 = 0;
  1186  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1187  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1188  078B  129F               	bcf	31,5	;volatile
  1189                           
  1190                           ;ADC.c: 55:             ADCON0bits.CHS2 = 1;
  1191  078C  161F               	bsf	31,4	;volatile
  1192                           
  1193                           ;ADC.c: 56:             ADCON0bits.CHS1 = 1;
  1194  078D  159F               	bsf	31,3	;volatile
  1195                           
  1196                           ;ADC.c: 57:             ADCON0bits.CHS0 = 0;
  1197  078E  111F               	bcf	31,2	;volatile
  1198                           
  1199                           ;ADC.c: 58:             break;
  1200  078F  2FF9               	goto	l120
  1201  0790                     l112:	
  1202                           ;ADC.c: 60:         case 7:
  1203                           
  1204                           
  1205                           ;ADC.c: 61:             ADCON0bits.CHS3 = 0;
  1206  0790  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0791  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0792  129F               	bcf	31,5	;volatile
  1209                           
  1210                           ;ADC.c: 62:             ADCON0bits.CHS2 = 1;
  1211  0793  161F               	bsf	31,4	;volatile
  1212                           
  1213                           ;ADC.c: 63:             ADCON0bits.CHS1 = 1;
  1214  0794  159F               	bsf	31,3	;volatile
  1215                           
  1216                           ;ADC.c: 64:             ADCON0bits.CHS0 = 1;
  1217  0795  151F               	bsf	31,2	;volatile
  1218                           
  1219                           ;ADC.c: 65:             break;
  1220  0796  2FF9               	goto	l120
  1221  0797                     l113:	
  1222                           ;ADC.c: 67:         case 8:
  1223                           
  1224                           
  1225                           ;ADC.c: 68:             ADCON0bits.CHS3 = 1;
  1226  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0799  169F               	bsf	31,5	;volatile
  1229                           
  1230                           ;ADC.c: 69:             ADCON0bits.CHS2 = 0;
  1231  079A  121F               	bcf	31,4	;volatile
  1232                           
  1233                           ;ADC.c: 70:             ADCON0bits.CHS1 = 0;
  1234  079B  119F               	bcf	31,3	;volatile
  1235                           
  1236                           ;ADC.c: 71:             ADCON0bits.CHS0 = 0;
  1237  079C  111F               	bcf	31,2	;volatile
  1238                           
  1239                           ;ADC.c: 72:             break;
  1240  079D  2FF9               	goto	l120
  1241  079E                     l114:	
  1242                           ;ADC.c: 74:         case 9:
  1243                           
  1244                           
  1245                           ;ADC.c: 75:             ADCON0bits.CHS3 = 1;
  1246  079E  1283               	bcf	3,5	;RP0=0, select bank0
  1247  079F  1303               	bcf	3,6	;RP1=0, select bank0
  1248  07A0  169F               	bsf	31,5	;volatile
  1249                           
  1250                           ;ADC.c: 76:             ADCON0bits.CHS2 = 0;
  1251  07A1  121F               	bcf	31,4	;volatile
  1252                           
  1253                           ;ADC.c: 77:             ADCON0bits.CHS1 = 0;
  1254  07A2  119F               	bcf	31,3	;volatile
  1255                           
  1256                           ;ADC.c: 78:             ADCON0bits.CHS0 = 1;
  1257  07A3  151F               	bsf	31,2	;volatile
  1258                           
  1259                           ;ADC.c: 79:             break;
  1260  07A4  2FF9               	goto	l120
  1261  07A5                     l115:	
  1262                           ;ADC.c: 81:         case 10:
  1263                           
  1264                           
  1265                           ;ADC.c: 82:             ADCON0bits.CHS3 = 1;
  1266  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1267  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1268  07A7  169F               	bsf	31,5	;volatile
  1269                           
  1270                           ;ADC.c: 83:             ADCON0bits.CHS2 = 0;
  1271  07A8  121F               	bcf	31,4	;volatile
  1272                           
  1273                           ;ADC.c: 84:             ADCON0bits.CHS1 = 1;
  1274  07A9  159F               	bsf	31,3	;volatile
  1275                           
  1276                           ;ADC.c: 85:             ADCON0bits.CHS0 = 0;
  1277  07AA  111F               	bcf	31,2	;volatile
  1278                           
  1279                           ;ADC.c: 86:             break;
  1280  07AB  2FF9               	goto	l120
  1281  07AC                     l116:	
  1282                           ;ADC.c: 88:         case 11:
  1283                           
  1284                           
  1285                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  1286  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1287  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1288  07AE  169F               	bsf	31,5	;volatile
  1289                           
  1290                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  1291  07AF  121F               	bcf	31,4	;volatile
  1292                           
  1293                           ;ADC.c: 91:             ADCON0bits.CHS1 = 1;
  1294  07B0  159F               	bsf	31,3	;volatile
  1295                           
  1296                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  1297  07B1  151F               	bsf	31,2	;volatile
  1298                           
  1299                           ;ADC.c: 93:             break;
  1300  07B2  2FF9               	goto	l120
  1301  07B3                     l117:	
  1302                           ;ADC.c: 95:         case 12:
  1303                           
  1304                           
  1305                           ;ADC.c: 96:             ADCON0bits.CHS3 = 1;
  1306  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1307  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1308  07B5  169F               	bsf	31,5	;volatile
  1309                           
  1310                           ;ADC.c: 97:             ADCON0bits.CHS2 = 1;
  1311  07B6  161F               	bsf	31,4	;volatile
  1312                           
  1313                           ;ADC.c: 98:             ADCON0bits.CHS1 = 0;
  1314  07B7  119F               	bcf	31,3	;volatile
  1315                           
  1316                           ;ADC.c: 99:             ADCON0bits.CHS0 = 0;
  1317  07B8  111F               	bcf	31,2	;volatile
  1318                           
  1319                           ;ADC.c: 100:             break;
  1320  07B9  2FF9               	goto	l120
  1321  07BA                     l118:	
  1322                           ;ADC.c: 101:         case 13:
  1323                           
  1324                           
  1325                           ;ADC.c: 102:             ADCON0bits.CHS3 = 1;
  1326  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1327  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1328  07BC  169F               	bsf	31,5	;volatile
  1329                           
  1330                           ;ADC.c: 103:             ADCON0bits.CHS2 = 1;
  1331  07BD  161F               	bsf	31,4	;volatile
  1332                           
  1333                           ;ADC.c: 104:             ADCON0bits.CHS1 = 0;
  1334  07BE  119F               	bcf	31,3	;volatile
  1335                           
  1336                           ;ADC.c: 105:             ADCON0bits.CHS0 = 1;
  1337  07BF  151F               	bsf	31,2	;volatile
  1338                           
  1339                           ;ADC.c: 106:             break;
  1340  07C0  2FF9               	goto	l120
  1341  07C1                     l119:	
  1342                           ;ADC.c: 108:         default:
  1343                           
  1344                           
  1345                           ;ADC.c: 109:             ADCON0bits.CHS3 = 0;
  1346  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1347  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1348  07C3  129F               	bcf	31,5	;volatile
  1349                           
  1350                           ;ADC.c: 110:             ADCON0bits.CHS2 = 0;
  1351  07C4  121F               	bcf	31,4	;volatile
  1352                           
  1353                           ;ADC.c: 111:             ADCON0bits.CHS1 = 0;
  1354  07C5  119F               	bcf	31,3	;volatile
  1355                           
  1356                           ;ADC.c: 112:             ADCON0bits.CHS0 = 0;
  1357  07C6  111F               	bcf	31,2	;volatile
  1358                           
  1359                           ;ADC.c: 113:             break;
  1360  07C7  2FF9               	goto	l120
  1361  07C8                     l899:
  1362                           
  1363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1364                           ; Switch size 1, requested type "simple"
  1365                           ; Number of cases is 1, Range of values is 0 to 0
  1366                           ; switch strategies available:
  1367                           ; Name         Instructions Cycles
  1368                           ; simple_byte            4     3 (average)
  1369                           ; direct_byte           11     8 (fixed)
  1370                           ; jumptable            260     6 (fixed)
  1371                           ;	Chosen strategy is simple_byte
  1372  07C8  0871               	movf	ADC_C@CH+1,w
  1373  07C9  3A00               	xorlw	0	; case 0
  1374  07CA  1903               	skipnz
  1375  07CB  2FCD               	goto	l981
  1376  07CC  2FC1               	goto	l119
  1377  07CD                     l981:
  1378                           
  1379                           ; Switch size 1, requested type "simple"
  1380                           ; Number of cases is 14, Range of values is 0 to 13
  1381                           ; switch strategies available:
  1382                           ; Name         Instructions Cycles
  1383                           ; simple_byte           43    22 (average)
  1384                           ; direct_byte           50     8 (fixed)
  1385                           ; jumptable            260     6 (fixed)
  1386                           ;	Chosen strategy is simple_byte
  1387  07CD  0870               	movf	ADC_C@CH,w
  1388  07CE  3A00               	xorlw	0	; case 0
  1389  07CF  1903               	skipnz
  1390  07D0  2F5F               	goto	l104
  1391  07D1  3A01               	xorlw	1	; case 1
  1392  07D2  1903               	skipnz
  1393  07D3  2F66               	goto	l106
  1394  07D4  3A03               	xorlw	3	; case 2
  1395  07D5  1903               	skipnz
  1396  07D6  2F6D               	goto	l107
  1397  07D7  3A01               	xorlw	1	; case 3
  1398  07D8  1903               	skipnz
  1399  07D9  2F74               	goto	l108
  1400  07DA  3A07               	xorlw	7	; case 4
  1401  07DB  1903               	skipnz
  1402  07DC  2F7B               	goto	l109
  1403  07DD  3A01               	xorlw	1	; case 5
  1404  07DE  1903               	skipnz
  1405  07DF  2F82               	goto	l110
  1406  07E0  3A03               	xorlw	3	; case 6
  1407  07E1  1903               	skipnz
  1408  07E2  2F89               	goto	l111
  1409  07E3  3A01               	xorlw	1	; case 7
  1410  07E4  1903               	skipnz
  1411  07E5  2F90               	goto	l112
  1412  07E6  3A0F               	xorlw	15	; case 8
  1413  07E7  1903               	skipnz
  1414  07E8  2F97               	goto	l113
  1415  07E9  3A01               	xorlw	1	; case 9
  1416  07EA  1903               	skipnz
  1417  07EB  2F9E               	goto	l114
  1418  07EC  3A03               	xorlw	3	; case 10
  1419  07ED  1903               	skipnz
  1420  07EE  2FA5               	goto	l115
  1421  07EF  3A01               	xorlw	1	; case 11
  1422  07F0  1903               	skipnz
  1423  07F1  2FAC               	goto	l116
  1424  07F2  3A07               	xorlw	7	; case 12
  1425  07F3  1903               	skipnz
  1426  07F4  2FB3               	goto	l117
  1427  07F5  3A01               	xorlw	1	; case 13
  1428  07F6  1903               	skipnz
  1429  07F7  2FBA               	goto	l118
  1430  07F8  2FC1               	goto	l119
  1431  07F9                     l120:
  1432  07F9  0008               	return
  1433  07FA                     __end_of_ADC_C:
  1434  007E                     btemp	set	126	;btemp
  1435  007E                     wtemp0	set	126
  1436                           
  1437                           	psect	config
  1438                           
  1439                           ;Config register CONFIG1 @ 0x2007
  1440                           ;	Oscillator Selection bits
  1441                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  1442                           ;	Watchdog Timer Enable bit
  1443                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1444                           ;	Power-up Timer Enable bit
  1445                           ;	PWRTE = OFF, PWRT disabled
  1446                           ;	RE3/MCLR pin function select bit
  1447                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1448                           ;	Code Protection bit
  1449                           ;	CP = OFF, Program memory code protection is disabled
  1450                           ;	Data Code Protection bit
  1451                           ;	CPD = OFF, Data memory code protection is disabled
  1452                           ;	Brown Out Reset Selection bits
  1453                           ;	BOREN = OFF, BOR disabled
  1454                           ;	Internal External Switchover bit
  1455                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1456                           ;	Fail-Safe Clock Monitor Enabled bit
  1457                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1458                           ;	Low Voltage Programming Enable bit
  1459                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1460                           ;	In-Circuit Debugger Mode bit
  1461                           ;	DEBUG = 0x1, unprogrammed default
  1462  2007                     	org	8199
  1463  2007  20D7               	dw	8407
  1464                           
  1465                           ;Config register CONFIG2 @ 0x2008
  1466                           ;	Brown-out Reset Selection bit
  1467                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1468                           ;	Flash Program Memory Self Write Enable bits
  1469                           ;	WRT = OFF, Write protection off
  1470  2008                     	org	8200
  1471  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_READ

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     143
                                              4 COMMON     1     1      0
                              _ADC_C
                       _ADC_CONTINUE
                        _ADC_CONVCLK
                           _ADC_READ
                              _SETUP
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONVCLK                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONTINUE                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_C                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_C
   _ADC_CONTINUE
   _ADC_CONVCLK
   _ADC_READ
   _SETUP

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 14 22:17:07 2021

   __size_of_ADC_CONVCLK 0043              _SSPSTATbits 0094                       l51 06CF  
                     u27 0756                       u37 06B1    __size_of_ADC_CONTINUE 0013  
                    l110 0782                      l111 0789                      l112 0790  
                    l120 07F9                      l104 075F                      l113 0797  
                    l114 079E                      l106 0766                      l130 075D  
                    l115 07A5                      l107 076D                      l116 07AC  
                    l108 0774                      l124 071D                      l117 07B3  
                    l109 077B                      l133 06B9                      l125 074C  
                    l141 06F1                      l118 07BA                      l126 0722  
                    l119 07C1                      l127 0727                      l128 072C  
                    l129 0731                      l741 06C7                      l733 06BA  
                    l743 06CD                      l735 06C1                      l911 0705  
                    l761 0752                      l737 06C5                      l913 070E  
                    l905 06F2                      l763 075A                      l755 071C  
                    l771 06D2                      l739 06C6                      l915 0712  
                    l907 06F7                      l773 06D9                      l909 06FF  
                    l791 06B6                      l759 0736                      l777 06E0  
                    l769 06D1                      l787 06A7                      l779 06F0  
                    l981 07CD                      l789 06AD                      l895 075E  
                    l977 06E8                      l899 07C8                      l979 073E  
                   _data 0076         __end_of_ADC_READ 06F2                     _main 06F2  
                   btemp 007E                     start 0000          ADC_CONVCLK@CONV 0072  
           _ADC_CONTINUE 06A7                    ?_main 0070                    _ADC_C 075E  
                  _ANSEL 0188                    _SETUP 06BA                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 071B                   ??_main 0074                   ?_ADC_C 0070  
                 ?_SETUP 0070                   _ADRESH 001E                   _ADRESL 009E  
                 _ANSELH 0189                   _SSPCON 0014                   _SSPBUF 0013  
              ?_ADC_READ 0070  __end_of__initialization 07FC            __end_of_ADC_C 07FA  
          __end_of_SETUP 06D0           __pcstackCOMMON 0070                  ??_ADC_C 0072  
                ADC_C@CH 0070               ??_ADC_READ 0070                  ??_SETUP 0070  
          ??_ADC_CONVCLK 0070               __pmaintext 06F2                  _SSPSTAT 0094  
    __end_of_ADC_CONVCLK 075E                _ANSELbits 0188                  __ptext1 06BA  
                __ptext2 06D0                  __ptext3 071B                  __ptext4 06A7  
                __ptext5 075E     end_of_initialization 07FC        __size_of_ADC_READ 0022  
            _ADC_CONVCLK 071B      start_initialization 07FA            _POTENCIOMETRO 0075  
          ?_ADC_CONTINUE 0070              __pbssCOMMON 0075                ___latbits 0002  
         ??_ADC_CONTINUE 0070           __size_of_ADC_C 009C                 _ADC_READ 06D0  
         __size_of_SETUP 0016                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F    ADC_READ@JUSTIFICACION 0072             ?_ADC_CONVCLK 0070  
   __end_of_ADC_CONTINUE 06BA            __size_of_main 0029        ADC_READ@VALOR_ADC 0073  
             _INTCONbits 000B               _SSPCONbits 0014  
