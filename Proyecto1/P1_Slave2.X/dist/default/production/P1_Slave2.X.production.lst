

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 14 16:15:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.31
    17                           ; Generated 13/10/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0006                     _PORTBbits	set	6
   208  0008                     _PORTD	set	8
   209  0007                     _PORTC	set	7
   210  0006                     _PORTB	set	6
   211  0005                     _PORTA	set	5
   212  0009                     _PORTE	set	9
   213  000B                     _INTCONbits	set	11
   214  0081                     _OPTION_REGbits	set	129
   215  0089                     _TRISE	set	137
   216  0086                     _TRISB	set	134
   217  0085                     _TRISA	set	133
   218  0087                     _TRISC	set	135
   219  0088                     _TRISD	set	136
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222                           
   223                           	psect	cinit
   224  000F                     start_initialization:	
   225                           ; #config settings
   226                           
   227  000F                     __initialization:
   228                           
   229                           ; Clear objects allocated to COMMON
   230  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   231  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   232  0011  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   233  0012                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  0012                     __end_of__initialization:
   237  0012  0183               	clrf	3
   238  0013  120A  118A  28B8   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMMON
   241  0074                     __pbssCOMMON:
   242  0074                     _FLAG_DOWN:
   243  0074                     	ds	1
   244  0075                     _FLAG_UP:
   245  0075                     	ds	1
   246  0076                     _FLAG_PUSH:
   247  0076                     	ds	1
   248                           
   249                           	psect	cstackCOMMON
   250  0070                     __pcstackCOMMON:
   251  0070                     ?_SETUP:
   252  0070                     ?_UP:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_DOWN:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_ISR:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??_ISR:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_main:	
   265                           ; 1 bytes @ 0x0
   266                           
   267                           
   268                           ; 1 bytes @ 0x0
   269  0070                     	ds	2
   270  0072                     ??_SETUP:
   271  0072                     ??_UP:	
   272                           ; 1 bytes @ 0x2
   273                           
   274  0072                     ??_DOWN:	
   275                           ; 1 bytes @ 0x2
   276                           
   277                           
   278                           ; 1 bytes @ 0x2
   279  0072                     	ds	2
   280  0074                     ??_main:
   281                           
   282                           	psect	maintext
   283  00B8                     __pmaintext:	
   284                           ; 1 bytes @ 0x4
   285 ;;
   286 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   287 ;;
   288 ;; *************** function _main *****************
   289 ;; Defined at:
   290 ;;		line 56 in file "Principal_Slave2.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, status,2, status,0, pclath, cstack
   299 ;; Tracked objects:
   300 ;;		On entry : B00/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   304 ;;      Params:         0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0
   307 ;;      Totals:         0       0       0       0       0
   308 ;;Total ram usage:        0 bytes
   309 ;; Hardware stack levels required when called:    2
   310 ;; This function calls:
   311 ;;		_DOWN
   312 ;;		_SETUP
   313 ;;		_UP
   314 ;; This function is called by:
   315 ;;		Startup code after reset
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           
   320                           ;psect for function _main
   321  00B8                     _main:
   322  00B8                     l758:	
   323                           ;incstack = 0
   324                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   325                           
   326                           
   327                           ;Principal_Slave2.c: 58:     SETUP();
   328  00B8  120A  118A  2086  120A  118A  	fcall	_SETUP
   329  00BD                     l56:	
   330                           ;Principal_Slave2.c: 60:     while(1){
   331                           
   332                           
   333                           ;Principal_Slave2.c: 62:         UP();
   334  00BD  120A  118A  2016  120A  118A  	fcall	_UP
   335                           
   336                           ;Principal_Slave2.c: 63:         DOWN();
   337  00C2  120A  118A  204E  120A  118A  	fcall	_DOWN
   338  00C7  28BD               	goto	l56
   339  00C8  120A  118A  280C   	ljmp	start
   340  00CB                     __end_of_main:
   341                           
   342                           	psect	text1
   343  0016                     __ptext1:	
   344 ;; *************** function _UP *****************
   345 ;; Defined at:
   346 ;;		line 96 in file "Principal_Slave2.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2, status,0
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          2       0       0       0       0
   363 ;;      Totals:         2       0       0       0       0
   364 ;;Total ram usage:        2 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; Hardware stack levels required when called:    1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function _UP
   376  0016                     _UP:
   377  0016                     l702:	
   378                           ;incstack = 0
   379                           ; Regs used in _UP: [wreg+status,2+status,0]
   380                           
   381                           
   382                           ;Principal_Slave2.c: 98:     if (FLAG_PUSH == 1){
   383  0016  0376               	decf	_FLAG_PUSH,w
   384  0017  1D03               	btfss	3,2
   385  0018  281A               	goto	u11
   386  0019  281B               	goto	u10
   387  001A                     u11:
   388  001A  2838               	goto	l718
   389  001B                     u10:
   390  001B                     l704:
   391                           
   392                           ;Principal_Slave2.c: 99:         if (FLAG_UP == 0){
   393  001B  0875               	movf	_FLAG_UP,w
   394  001C  1D03               	btfss	3,2
   395  001D  281F               	goto	u21
   396  001E  2820               	goto	u20
   397  001F                     u21:
   398  001F  2838               	goto	l718
   399  0020                     u20:
   400  0020                     l706:
   401                           
   402                           ;Principal_Slave2.c: 100:             if (PORTBbits.RB0 == 0){
   403  0020  1283               	bcf	3,5	;RP0=0, select bank0
   404  0021  1303               	bcf	3,6	;RP1=0, select bank0
   405  0022  1806               	btfsc	6,0	;volatile
   406  0023  2825               	goto	u31
   407  0024  2826               	goto	u30
   408  0025                     u31:
   409  0025  2838               	goto	l718
   410  0026                     u30:
   411  0026                     l708:
   412                           
   413                           ;Principal_Slave2.c: 101:                 _delay((unsigned long)((10)*(8000000/4000.0)))
      +                          ;
   414  0026  301A               	movlw	26
   415  0027  00F3               	movwf	??_UP+1
   416  0028  30F8               	movlw	248
   417  0029  00F2               	movwf	??_UP
   418  002A                     u147:
   419  002A  0BF2               	decfsz	??_UP,f
   420  002B  282A               	goto	u147
   421  002C  0BF3               	decfsz	??_UP+1,f
   422  002D  282A               	goto	u147
   423  002E  0000               	nop
   424  002F                     l710:
   425                           
   426                           ;Principal_Slave2.c: 103:                 PORTD = PORTD + 1;
   427  002F  1283               	bcf	3,5	;RP0=0, select bank0
   428  0030  1303               	bcf	3,6	;RP1=0, select bank0
   429  0031  0808               	movf	8,w	;volatile
   430  0032  3E01               	addlw	1
   431  0033  0088               	movwf	8	;volatile
   432  0034                     l712:
   433                           
   434                           ;Principal_Slave2.c: 104:                 FLAG_PUSH = 0;
   435  0034  01F6               	clrf	_FLAG_PUSH
   436  0035                     l714:
   437                           
   438                           ;Principal_Slave2.c: 105:                 FLAG_UP = 1;
   439  0035  01F5               	clrf	_FLAG_UP
   440  0036  0AF5               	incf	_FLAG_UP,f
   441  0037                     l716:
   442                           
   443                           ;Principal_Slave2.c: 106:                 INTCONbits.RBIE = 1;
   444  0037  158B               	bsf	11,3	;volatile
   445  0038                     l718:
   446                           
   447                           ;Principal_Slave2.c: 111:     if (FLAG_UP == 1){
   448  0038  0375               	decf	_FLAG_UP,w
   449  0039  1D03               	btfss	3,2
   450  003A  283C               	goto	u41
   451  003B  283D               	goto	u40
   452  003C                     u41:
   453  003C  284D               	goto	l70
   454  003D                     u40:
   455  003D                     l720:
   456                           
   457                           ;Principal_Slave2.c: 112:         if (PORTBbits.RB0 == 1){
   458  003D  1283               	bcf	3,5	;RP0=0, select bank0
   459  003E  1303               	bcf	3,6	;RP1=0, select bank0
   460  003F  1C06               	btfss	6,0	;volatile
   461  0040  2842               	goto	u51
   462  0041  2843               	goto	u50
   463  0042                     u51:
   464  0042  284D               	goto	l70
   465  0043                     u50:
   466  0043                     l722:
   467                           
   468                           ;Principal_Slave2.c: 113:         _delay((unsigned long)((10)*(8000000/4000.0)));
   469  0043  301A               	movlw	26
   470  0044  00F3               	movwf	??_UP+1
   471  0045  30F8               	movlw	248
   472  0046  00F2               	movwf	??_UP
   473  0047                     u157:
   474  0047  0BF2               	decfsz	??_UP,f
   475  0048  2847               	goto	u157
   476  0049  0BF3               	decfsz	??_UP+1,f
   477  004A  2847               	goto	u157
   478  004B  0000               	nop
   479  004C                     l724:
   480                           
   481                           ;Principal_Slave2.c: 114:         FLAG_UP = 0;
   482  004C  01F5               	clrf	_FLAG_UP
   483  004D                     l70:
   484  004D  0008               	return
   485  004E                     __end_of_UP:
   486                           
   487                           	psect	text2
   488  0086                     __ptext2:	
   489 ;; *************** function _SETUP *****************
   490 ;; Defined at:
   491 ;;		line 71 in file "Principal_Slave2.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0
   508 ;;      Totals:         0       0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; Hardware stack levels required when called:    1
   512 ;; This function calls:
   513 ;;		Nothing
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _SETUP
   521  0086                     _SETUP:
   522  0086                     l670:	
   523                           ;incstack = 0
   524                           ; Regs used in _SETUP: [wreg+status,2]
   525                           
   526                           
   527                           ;Principal_Slave2.c: 73:     TRISD = 0;
   528  0086  1683               	bsf	3,5	;RP0=1, select bank1
   529  0087  1303               	bcf	3,6	;RP1=0, select bank1
   530  0088  0188               	clrf	8	;volatile
   531                           
   532                           ;Principal_Slave2.c: 74:     TRISC = 0;
   533  0089  0187               	clrf	7	;volatile
   534                           
   535                           ;Principal_Slave2.c: 75:     TRISA = 0;
   536  008A  0185               	clrf	5	;volatile
   537  008B                     l672:
   538                           
   539                           ;Principal_Slave2.c: 76:     TRISB = 0b00000101;
   540  008B  3005               	movlw	5
   541  008C  0086               	movwf	6	;volatile
   542  008D                     l674:
   543                           
   544                           ;Principal_Slave2.c: 77:     TRISE = 0;
   545  008D  0189               	clrf	9	;volatile
   546  008E                     l676:
   547                           
   548                           ;Principal_Slave2.c: 78:     PORTE = 0;
   549  008E  1283               	bcf	3,5	;RP0=0, select bank0
   550  008F  1303               	bcf	3,6	;RP1=0, select bank0
   551  0090  0189               	clrf	9	;volatile
   552  0091                     l678:
   553                           
   554                           ;Principal_Slave2.c: 79:     PORTA = 0;
   555  0091  0185               	clrf	5	;volatile
   556  0092                     l680:
   557                           
   558                           ;Principal_Slave2.c: 80:     PORTB = 0;
   559  0092  0186               	clrf	6	;volatile
   560  0093                     l682:
   561                           
   562                           ;Principal_Slave2.c: 81:     PORTC = 0;
   563  0093  0187               	clrf	7	;volatile
   564  0094                     l684:
   565                           
   566                           ;Principal_Slave2.c: 82:     PORTD = 0;
   567  0094  0188               	clrf	8	;volatile
   568  0095                     l686:
   569                           
   570                           ;Principal_Slave2.c: 83:     ANSEL = 0;
   571  0095  1683               	bsf	3,5	;RP0=1, select bank3
   572  0096  1703               	bsf	3,6	;RP1=1, select bank3
   573  0097  0188               	clrf	8	;volatile
   574  0098                     l688:
   575                           
   576                           ;Principal_Slave2.c: 84:     ANSELH = 0;
   577  0098  0189               	clrf	9	;volatile
   578  0099                     l690:
   579                           
   580                           ;Principal_Slave2.c: 86:     OPTION_REGbits.nRBPU = 1;
   581  0099  1683               	bsf	3,5	;RP0=1, select bank1
   582  009A  1303               	bcf	3,6	;RP1=0, select bank1
   583  009B  1781               	bsf	1,7	;volatile
   584  009C                     l692:
   585                           
   586                           ;Principal_Slave2.c: 87:     INTCONbits.GIE = 1;
   587  009C  178B               	bsf	11,7	;volatile
   588  009D                     l694:
   589                           
   590                           ;Principal_Slave2.c: 88:     INTCONbits.PEIE = 1;
   591  009D  170B               	bsf	11,6	;volatile
   592  009E                     l696:
   593                           
   594                           ;Principal_Slave2.c: 89:     INTCONbits.RBIE = 1;
   595  009E  158B               	bsf	11,3	;volatile
   596  009F                     l698:
   597                           
   598                           ;Principal_Slave2.c: 90:     INTCONbits.RBIF = 1;
   599  009F  140B               	bsf	11,0	;volatile
   600  00A0                     l62:
   601  00A0  0008               	return
   602  00A1                     __end_of_SETUP:
   603                           
   604                           	psect	text3
   605  004E                     __ptext3:	
   606 ;; *************** function _DOWN *****************
   607 ;; Defined at:
   608 ;;		line 121 in file "Principal_Slave2.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          2       0       0       0       0
   625 ;;      Totals:         2       0       0       0       0
   626 ;;Total ram usage:        2 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _DOWN
   638  004E                     _DOWN:
   639  004E                     l726:	
   640                           ;incstack = 0
   641                           ; Regs used in _DOWN: [wreg+status,2+status,0]
   642                           
   643                           
   644                           ;Principal_Slave2.c: 123:     if (FLAG_PUSH == 1){
   645  004E  0376               	decf	_FLAG_PUSH,w
   646  004F  1D03               	btfss	3,2
   647  0050  2852               	goto	u61
   648  0051  2853               	goto	u60
   649  0052                     u61:
   650  0052  2870               	goto	l742
   651  0053                     u60:
   652  0053                     l728:
   653                           
   654                           ;Principal_Slave2.c: 124:         if (FLAG_DOWN == 0){
   655  0053  0874               	movf	_FLAG_DOWN,w
   656  0054  1D03               	btfss	3,2
   657  0055  2857               	goto	u71
   658  0056  2858               	goto	u70
   659  0057                     u71:
   660  0057  2870               	goto	l742
   661  0058                     u70:
   662  0058                     l730:
   663                           
   664                           ;Principal_Slave2.c: 125:             if (PORTBbits.RB2 == 0){
   665  0058  1283               	bcf	3,5	;RP0=0, select bank0
   666  0059  1303               	bcf	3,6	;RP1=0, select bank0
   667  005A  1906               	btfsc	6,2	;volatile
   668  005B  285D               	goto	u81
   669  005C  285E               	goto	u80
   670  005D                     u81:
   671  005D  2870               	goto	l742
   672  005E                     u80:
   673  005E                     l732:
   674                           
   675                           ;Principal_Slave2.c: 126:                 _delay((unsigned long)((10)*(8000000/4000.0)))
      +                          ;
   676  005E  301A               	movlw	26
   677  005F  00F3               	movwf	??_DOWN+1
   678  0060  30F8               	movlw	248
   679  0061  00F2               	movwf	??_DOWN
   680  0062                     u167:
   681  0062  0BF2               	decfsz	??_DOWN,f
   682  0063  2862               	goto	u167
   683  0064  0BF3               	decfsz	??_DOWN+1,f
   684  0065  2862               	goto	u167
   685  0066  0000               	nop
   686  0067                     l734:
   687                           
   688                           ;Principal_Slave2.c: 127:                 PORTD = PORTD - 1;
   689  0067  1283               	bcf	3,5	;RP0=0, select bank0
   690  0068  1303               	bcf	3,6	;RP1=0, select bank0
   691  0069  0808               	movf	8,w	;volatile
   692  006A  3EFF               	addlw	255
   693  006B  0088               	movwf	8	;volatile
   694  006C                     l736:
   695                           
   696                           ;Principal_Slave2.c: 128:                 FLAG_PUSH = 0;
   697  006C  01F6               	clrf	_FLAG_PUSH
   698  006D                     l738:
   699                           
   700                           ;Principal_Slave2.c: 129:                 FLAG_DOWN = 1;
   701  006D  01F4               	clrf	_FLAG_DOWN
   702  006E  0AF4               	incf	_FLAG_DOWN,f
   703  006F                     l740:
   704                           
   705                           ;Principal_Slave2.c: 130:                 INTCONbits.RBIE = 1;
   706  006F  158B               	bsf	11,3	;volatile
   707  0070                     l742:
   708                           
   709                           ;Principal_Slave2.c: 135:     if (FLAG_DOWN == 1){
   710  0070  0374               	decf	_FLAG_DOWN,w
   711  0071  1D03               	btfss	3,2
   712  0072  2874               	goto	u91
   713  0073  2875               	goto	u90
   714  0074                     u91:
   715  0074  2885               	goto	l78
   716  0075                     u90:
   717  0075                     l744:
   718                           
   719                           ;Principal_Slave2.c: 136:         if (PORTBbits.RB2 == 1){
   720  0075  1283               	bcf	3,5	;RP0=0, select bank0
   721  0076  1303               	bcf	3,6	;RP1=0, select bank0
   722  0077  1D06               	btfss	6,2	;volatile
   723  0078  287A               	goto	u101
   724  0079  287B               	goto	u100
   725  007A                     u101:
   726  007A  2885               	goto	l78
   727  007B                     u100:
   728  007B                     l746:
   729                           
   730                           ;Principal_Slave2.c: 137:         _delay((unsigned long)((10)*(8000000/4000.0)));
   731  007B  301A               	movlw	26
   732  007C  00F3               	movwf	??_DOWN+1
   733  007D  30F8               	movlw	248
   734  007E  00F2               	movwf	??_DOWN
   735  007F                     u177:
   736  007F  0BF2               	decfsz	??_DOWN,f
   737  0080  287F               	goto	u177
   738  0081  0BF3               	decfsz	??_DOWN+1,f
   739  0082  287F               	goto	u177
   740  0083  0000               	nop
   741  0084                     l748:
   742                           
   743                           ;Principal_Slave2.c: 138:         FLAG_DOWN = 0;
   744  0084  01F4               	clrf	_FLAG_DOWN
   745  0085                     l78:
   746  0085  0008               	return
   747  0086                     __end_of_DOWN:
   748                           
   749                           	psect	text4
   750  00A1                     __ptext4:	
   751 ;; *************** function _ISR *****************
   752 ;; Defined at:
   753 ;;		line 44 in file "Principal_Slave2.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0
   769 ;;      Temps:          2       0       0       0       0
   770 ;;      Totals:         2       0       0       0       0
   771 ;;Total ram usage:        2 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		Interrupt level 1
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _ISR
   782  00A1                     _ISR:
   783  00A1                     i1l750:
   784                           
   785                           ;Principal_Slave2.c: 46:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
   786  00A1  1C0B               	btfss	11,0	;volatile
   787  00A2  28A4               	goto	u11_21
   788  00A3  28A5               	goto	u11_20
   789  00A4                     u11_21:
   790  00A4  28B1               	goto	i1l51
   791  00A5                     u11_20:
   792  00A5                     i1l752:
   793  00A5  1D8B               	btfss	11,3	;volatile
   794  00A6  28A8               	goto	u12_21
   795  00A7  28A9               	goto	u12_20
   796  00A8                     u12_21:
   797  00A8  28B1               	goto	i1l51
   798  00A9                     u12_20:
   799  00A9                     i1l754:
   800                           
   801                           ;Principal_Slave2.c: 49:         if (FLAG_PUSH == 0){
   802  00A9  0876               	movf	_FLAG_PUSH,w
   803  00AA  1D03               	btfss	3,2
   804  00AB  28AD               	goto	u13_21
   805  00AC  28AE               	goto	u13_20
   806  00AD                     u13_21:
   807  00AD  28B1               	goto	i1l51
   808  00AE                     u13_20:
   809  00AE                     i1l756:
   810                           
   811                           ;Principal_Slave2.c: 50:             FLAG_PUSH = 1;
   812  00AE  01F6               	clrf	_FLAG_PUSH
   813  00AF  0AF6               	incf	_FLAG_PUSH,f
   814                           
   815                           ;Principal_Slave2.c: 51:             INTCONbits.RBIE = 0;
   816  00B0  118B               	bcf	11,3	;volatile
   817  00B1                     i1l51:
   818  00B1  0871               	movf	??_ISR+1,w
   819  00B2  008A               	movwf	10
   820  00B3  0E70               	swapf	??_ISR,w
   821  00B4  0083               	movwf	3
   822  00B5  0EFE               	swapf	btemp,f
   823  00B6  0E7E               	swapf	btemp,w
   824  00B7  0009               	retfie
   825  00B8                     __end_of_ISR:
   826  007E                     btemp	set	126	;btemp
   827  007E                     wtemp0	set	126
   828                           
   829                           	psect	intentry
   830  0004                     __pintentry:	
   831                           ;incstack = 0
   832                           ; Regs used in _ISR: [wreg+status,2+status,0]
   833                           
   834  0004                     interrupt_function:
   835  007E                     saved_w	set	btemp
   836  0004  00FE               	movwf	btemp
   837  0005  0E03               	swapf	3,w
   838  0006  00F0               	movwf	??_ISR
   839  0007  080A               	movf	10,w
   840  0008  00F1               	movwf	??_ISR+1
   841  0009  120A  118A  28A1   	ljmp	_ISR
   842                           
   843                           	psect	config
   844                           
   845                           ;Config register CONFIG1 @ 0x2007
   846                           ;	Oscillator Selection bits
   847                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
   848                           ;	Watchdog Timer Enable bit
   849                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   850                           ;	Power-up Timer Enable bit
   851                           ;	PWRTE = OFF, PWRT disabled
   852                           ;	RE3/MCLR pin function select bit
   853                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   854                           ;	Code Protection bit
   855                           ;	CP = OFF, Program memory code protection is disabled
   856                           ;	Data Code Protection bit
   857                           ;	CPD = OFF, Data memory code protection is disabled
   858                           ;	Brown Out Reset Selection bits
   859                           ;	BOREN = OFF, BOR disabled
   860                           ;	Internal External Switchover bit
   861                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   862                           ;	Fail-Safe Clock Monitor Enabled bit
   863                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   864                           ;	Low Voltage Programming Enable bit
   865                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   866                           ;	In-Circuit Debugger Mode bit
   867                           ;	DEBUG = 0x1, unprogrammed default
   868  2007                     	org	8199
   869  2007  20D7               	dw	8407
   870                           
   871                           ;Config register CONFIG2 @ 0x2008
   872                           ;	Brown-out Reset Selection bit
   873                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   874                           ;	Flash Program Memory Self Write Enable bits
   875                           ;	WRT = OFF, Write protection off
   876  2008                     	org	8200
   877  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DOWN
    _main->_UP

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _DOWN
                              _SETUP
                                 _UP
 ---------------------------------------------------------------------------------
 (1) _UP                                                   2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DOWN                                                 2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DOWN
   _SETUP
   _UP

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 14 16:15:52 2021

                     l62 00A0                       l70 004D                       l56 00BD  
                     l78 0085                       u10 001B                       u11 001A  
                     u20 0020                       u21 001F                       u30 0026  
                     u31 0025                       u40 003D                       u41 003C  
                     u50 0043                       u51 0042                       u60 0053  
                     u61 0052                       u70 0058                       u71 0057  
                     u80 005E                       u81 005D                       u90 0075  
                     _UP 0016                       u91 0074                      ?_UP 0070  
                    l710 002F                      l702 0016                      l720 003D  
                    l712 0034                      l704 001B                      l730 0058  
                    l722 0043                      l714 0035                      l706 0020  
                    l740 006F                      l732 005E                      l724 004C  
                    l716 0037                      l708 0026                      l734 0067  
                    l742 0070                      l726 004E                      l670 0086  
                    l718 0038                      l744 0075                      l736 006C  
                    l728 0053                      l680 0092                      l672 008B  
                    l746 007B                      l738 006D                      l690 0099  
                    l682 0093                      l674 008D                      l748 0084  
                    l692 009C                      l684 0094                      l676 008E  
                    l694 009D                      l686 0095                      l678 0091  
                    l758 00B8                      l696 009E                      l688 0098  
                    l698 009F                      u100 007B                      u101 007A  
                    u147 002A                      u157 0047                      u167 0062  
                    u177 007F                      _ISR 00A1                     ??_UP 0072  
                   ?_ISR 0070                     _DOWN 004E                     i1l51 00B1  
                   _main 00B8                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_DOWN 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l750 00A1                    i1l752 00A5  
                  i1l754 00A9                    i1l756 00AE                    u11_20 00A5  
                  u11_21 00A4                    u12_20 00A9                    u12_21 00A8  
                  u13_20 00AE                    u13_21 00AD                    _SETUP 0086  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    pclath 000A                    status 0003  
                  wtemp0 007E             __end_of_DOWN 0086          __initialization 000F  
           __end_of_main 00CB                   ??_DOWN 0072                   ??_main 0074  
                 ?_SETUP 0070                   _ANSELH 0189                   saved_w 007E  
__end_of__initialization 0012            __end_of_SETUP 00A1           __pcstackCOMMON 0070  
             __end_of_UP 004E                  ??_SETUP 0072           _OPTION_REGbits 0081  
             __pmaintext 00B8               __pintentry 0004                  _FLAG_UP 0075  
              _FLAG_DOWN 0074                _FLAG_PUSH 0076                  __ptext1 0016  
                __ptext2 0086                  __ptext3 004E                  __ptext4 00A1  
           __size_of_ISR 0017     end_of_initialization 0012                _PORTBbits 0006  
    start_initialization 000F              __end_of_ISR 00B8              __pbssCOMMON 0074  
              ___latbits 0002           __size_of_SETUP 001B              __size_of_UP 0038  
      interrupt_function 0004            __size_of_DOWN 0038            __size_of_main 0013  
             _INTCONbits 000B                 intlevel1 0000  
