

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 20:43:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.31
    18                           ; Generated 13/10/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  001E                     _ADRESH	set	30
   287  000B                     _INTCONbits	set	11
   288  000C                     _PIR1bits	set	12
   289  001F                     _ADCON0bits	set	31
   290  0014                     _SSPCON	set	20
   291  0014                     _SSPCONbits	set	20
   292  0009                     _PORTE	set	9
   293  0007                     _PORTC	set	7
   294  0006                     _PORTB	set	6
   295  0005                     _PORTA	set	5
   296  0013                     _SSPBUF	set	19
   297  0006                     _PORTBbits	set	6
   298  0008                     _PORTD	set	8
   299  009E                     _ADRESL	set	158
   300  008C                     _PIE1bits	set	140
   301  0094                     _SSPSTAT	set	148
   302  0089                     _TRISE	set	137
   303  0087                     _TRISC	set	135
   304  0088                     _TRISD	set	136
   305  0086                     _TRISB	set	134
   306  0085                     _TRISA	set	133
   307  0094                     _SSPSTATbits	set	148
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSELbits	set	392
   310  0188                     _ANSEL	set	392
   311                           
   312                           	psect	cinit
   313  07EE                     start_initialization:	
   314                           ; #config settings
   315                           
   316  07EE                     __initialization:
   317                           
   318                           ; Clear objects allocated to COMMON
   319  07EE  01F0               	clrf	__pbssCOMMON& (0+127)
   320  07EF  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   321  07F0  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   322  07F1  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   323  07F2  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   324  07F3  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   325  07F4  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   326  07F5  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   327                           
   328                           ; Clear objects allocated to BANK0
   329  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   330  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   331  07F8  01A0               	clrf	__pbssBANK0& (0+127)
   332  07F9  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   333  07FA  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   334  07FB  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   335  07FC                     end_of_initialization:	
   336                           ;End of C runtime variable initialization code
   337                           
   338  07FC                     __end_of__initialization:
   339  07FC  0183               	clrf	3
   340  07FD  120A  118A  2ED2   	ljmp	_main	;jump to C main() function
   341                           
   342                           	psect	bssCOMMON
   343  0070                     __pbssCOMMON:
   344  0070                     _TEMP:
   345  0070                     	ds	2
   346  0072                     _rxByteMaster:
   347  0072                     	ds	1
   348  0073                     _ENVIAR:
   349  0073                     	ds	1
   350  0074                     _TEMPORAL:
   351  0074                     	ds	1
   352  0075                     _TEMPERATURA:
   353  0075                     	ds	1
   354  0076                     _TEMPERATURA_1:
   355  0076                     	ds	1
   356  0077                     _TEMPERATURA_0:
   357  0077                     	ds	1
   358                           
   359                           	psect	bssBANK0
   360  0020                     __pbssBANK0:
   361  0020                     _TEMP_R:
   362  0020                     	ds	4
   363                           
   364                           	psect	cstackCOMMON
   365  0078                     __pcstackCOMMON:
   366  0078                     ?_SETUP:
   367  0078                     ??_SETUP:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0078                     ?_ADC_C:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0078                     ?_ADC_CONVCLK:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0078                     ??_ADC_CONVCLK:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0078                     ?_ADC_READ:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0078                     ??_ADC_READ:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0078                     ?_ADC_CONTINUE:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0078                     ??_ADC_CONTINUE:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0078                     ?_main:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0078                     ADC_C@CH:	
   395                           ; 1 bytes @ 0x0
   396                           
   397                           
   398                           ; 2 bytes @ 0x0
   399  0078                     	ds	2
   400  007A                     ??_ADC_C:
   401  007A                     ADC_CONVCLK@CONV:	
   402                           ; 1 bytes @ 0x2
   403                           
   404  007A                     ADC_READ@JUSTIFICACION:	
   405                           ; 1 bytes @ 0x2
   406                           
   407                           
   408                           ; 1 bytes @ 0x2
   409  007A                     	ds	1
   410  007B                     ADC_READ@VALOR_ADC:
   411                           
   412                           ; 1 bytes @ 0x3
   413  007B                     	ds	1
   414  007C                     ??_main:
   415                           
   416                           ; 1 bytes @ 0x4
   417  007C                     	ds	2
   418                           
   419                           	psect	maintext
   420  06D2                     __pmaintext:	
   421 ;;
   422 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   423 ;;
   424 ;; *************** function _main *****************
   425 ;; Defined at:
   426 ;;		line 50 in file "Principal_Slave3.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : B00/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   440 ;;      Params:         0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0
   442 ;;      Temps:          2       0       0       0       0
   443 ;;      Totals:         2       0       0       0       0
   444 ;;Total ram usage:        2 bytes
   445 ;; Hardware stack levels required when called:    1
   446 ;; This function calls:
   447 ;;		_ADC_C
   448 ;;		_ADC_CONTINUE
   449 ;;		_ADC_CONVCLK
   450 ;;		_ADC_READ
   451 ;;		_SETUP
   452 ;; This function is called by:
   453 ;;		Startup code after reset
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _main
   459  06D2                     _main:
   460  06D2                     l920:	
   461                           ;incstack = 0
   462                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   463                           
   464                           
   465                           ;Principal_Slave3.c: 52:  SETUP();
   466  06D2  120A  118A  264C  120A  118A  	fcall	_SETUP
   467  06D7                     l922:
   468                           
   469                           ;Principal_Slave3.c: 53:  _delay((unsigned long)((10)*(8000000/4000.0)));
   470  06D7  301A               	movlw	26
   471  06D8  00FD               	movwf	??_main+1
   472  06D9  30F8               	movlw	248
   473  06DA  00FC               	movwf	??_main
   474  06DB                     u137:
   475  06DB  0BFC               	decfsz	??_main,f
   476  06DC  2EDB               	goto	u137
   477  06DD  0BFD               	decfsz	??_main+1,f
   478  06DE  2EDB               	goto	u137
   479  06DF  0000               	nop
   480  06E0                     l924:
   481                           
   482                           ;Principal_Slave3.c: 54:     ADC_C(0);
   483  06E0  3000               	movlw	0
   484  06E1  00F8               	movwf	ADC_C@CH
   485  06E2  00F9               	movwf	ADC_C@CH+1
   486  06E3  120A  118A  2752  120A  118A  	fcall	_ADC_C
   487  06E8                     l926:
   488                           
   489                           ;Principal_Slave3.c: 55:     ADC_CONVCLK(1);
   490  06E8  3001               	movlw	1
   491  06E9  120A  118A  268F  120A  118A  	fcall	_ADC_CONVCLK
   492  06EE                     l928:
   493                           
   494                           ;Principal_Slave3.c: 58:  {;Principal_Slave3.c: 60:     TEMPERATURA_0 = ADC_READ (0);
   495  06EE  3000               	movlw	0
   496  06EF  120A  118A  266D  120A  118A  	fcall	_ADC_READ
   497  06F4  00FC               	movwf	??_main
   498  06F5  087C               	movf	??_main,w
   499  06F6  00F7               	movwf	_TEMPERATURA_0
   500  06F7                     l930:
   501                           
   502                           ;Principal_Slave3.c: 61:     TEMPERATURA_1 = ADC_READ (1);
   503  06F7  3001               	movlw	1
   504  06F8  120A  118A  266D  120A  118A  	fcall	_ADC_READ
   505  06FD  00FC               	movwf	??_main
   506  06FE  087C               	movf	??_main,w
   507  06FF  00F6               	movwf	_TEMPERATURA_1
   508  0700                     l932:
   509                           
   510                           ;Principal_Slave3.c: 68:     TEMPERATURA = TEMPERATURA_0;
   511  0700  0877               	movf	_TEMPERATURA_0,w
   512  0701  00FC               	movwf	??_main
   513  0702  087C               	movf	??_main,w
   514  0703  00F5               	movwf	_TEMPERATURA
   515  0704                     l934:
   516                           
   517                           ;Principal_Slave3.c: 69:     PORTD = TEMPERATURA;
   518  0704  0875               	movf	_TEMPERATURA,w
   519  0705  1283               	bcf	3,5	;RP0=0, select bank0
   520  0706  1303               	bcf	3,6	;RP1=0, select bank0
   521  0707  0088               	movwf	8	;volatile
   522  0708                     l936:
   523                           
   524                           ;Principal_Slave3.c: 71:     ADC_CONTINUE();
   525  0708  120A  118A  2639  120A  118A  	fcall	_ADC_CONTINUE
   526                           
   527                           ;Principal_Slave3.c: 73:     if(TEMPERATURA < 13) {
   528  070D  300D               	movlw	13
   529  070E  0275               	subwf	_TEMPERATURA,w
   530  070F  1803               	skipnc
   531  0710  2F12               	goto	u71
   532  0711  2F13               	goto	u70
   533  0712                     u71:
   534  0712  2F19               	goto	l940
   535  0713                     u70:
   536  0713                     l938:
   537                           
   538                           ;Principal_Slave3.c: 75:         PORTBbits.RB0 = 0;
   539  0713  1283               	bcf	3,5	;RP0=0, select bank0
   540  0714  1303               	bcf	3,6	;RP1=0, select bank0
   541  0715  1006               	bcf	6,0	;volatile
   542                           
   543                           ;Principal_Slave3.c: 76:         PORTBbits.RB1 = 0;
   544  0716  1086               	bcf	6,1	;volatile
   545                           
   546                           ;Principal_Slave3.c: 77:         PORTBbits.RB2 = 1;
   547  0717  1506               	bsf	6,2	;volatile
   548                           
   549                           ;Principal_Slave3.c: 78:         }
   550  0718  2F36               	goto	l73
   551  0719                     l940:
   552  0719  300D               	movlw	13
   553  071A  0275               	subwf	_TEMPERATURA,w
   554  071B  1C03               	skipc
   555  071C  2F1E               	goto	u81
   556  071D  2F1F               	goto	u80
   557  071E                     u81:
   558  071E  2F2B               	goto	l946
   559  071F                     u80:
   560  071F                     l942:
   561  071F  3013               	movlw	19
   562  0720  0275               	subwf	_TEMPERATURA,w
   563  0721  1803               	skipnc
   564  0722  2F24               	goto	u91
   565  0723  2F25               	goto	u90
   566  0724                     u91:
   567  0724  2F2B               	goto	l946
   568  0725                     u90:
   569  0725                     l944:
   570                           
   571                           ;Principal_Slave3.c: 81:         PORTBbits.RB0 = 0;
   572  0725  1283               	bcf	3,5	;RP0=0, select bank0
   573  0726  1303               	bcf	3,6	;RP1=0, select bank0
   574  0727  1006               	bcf	6,0	;volatile
   575                           
   576                           ;Principal_Slave3.c: 82:         PORTBbits.RB1 = 1;
   577  0728  1486               	bsf	6,1	;volatile
   578                           
   579                           ;Principal_Slave3.c: 83:         PORTBbits.RB2 = 0;
   580  0729  1106               	bcf	6,2	;volatile
   581                           
   582                           ;Principal_Slave3.c: 84:         }
   583  072A  2F36               	goto	l73
   584  072B                     l946:
   585  072B  3013               	movlw	19
   586  072C  0275               	subwf	_TEMPERATURA,w
   587  072D  1C03               	skipc
   588  072E  2F30               	goto	u101
   589  072F  2F31               	goto	u100
   590  0730                     u101:
   591  0730  2F36               	goto	l73
   592  0731                     u100:
   593  0731                     l948:
   594                           
   595                           ;Principal_Slave3.c: 88:         PORTBbits.RB0 = 1;
   596  0731  1283               	bcf	3,5	;RP0=0, select bank0
   597  0732  1303               	bcf	3,6	;RP1=0, select bank0
   598  0733  1406               	bsf	6,0	;volatile
   599                           
   600                           ;Principal_Slave3.c: 89:         PORTBbits.RB1 = 0;
   601  0734  1086               	bcf	6,1	;volatile
   602                           
   603                           ;Principal_Slave3.c: 90:         PORTBbits.RB2 = 0;
   604  0735  1106               	bcf	6,2	;volatile
   605  0736                     l73:
   606                           
   607                           ;Principal_Slave3.c: 93:       if (SSPSTATbits.BF == 0) {
   608  0736  1683               	bsf	3,5	;RP0=1, select bank1
   609  0737  1303               	bcf	3,6	;RP1=0, select bank1
   610  0738  1814               	btfsc	20,0	;volatile
   611  0739  2F3B               	goto	u111
   612  073A  2F3C               	goto	u110
   613  073B                     u111:
   614  073B  2F40               	goto	l952
   615  073C                     u110:
   616  073C                     l950:
   617                           
   618                           ;Principal_Slave3.c: 94:         SSPBUF = TEMPERATURA;
   619  073C  0875               	movf	_TEMPERATURA,w
   620  073D  1283               	bcf	3,5	;RP0=0, select bank0
   621  073E  1303               	bcf	3,6	;RP1=0, select bank0
   622  073F  0093               	movwf	19	;volatile
   623  0740                     l952:
   624                           
   625                           ;Principal_Slave3.c: 98:     if (SSPSTATbits.BF ) {
   626  0740  1683               	bsf	3,5	;RP0=1, select bank1
   627  0741  1303               	bcf	3,6	;RP1=0, select bank1
   628  0742  1C14               	btfss	20,0	;volatile
   629  0743  2F45               	goto	u121
   630  0744  2F46               	goto	u120
   631  0745                     u121:
   632  0745  2EEE               	goto	l928
   633  0746                     u120:
   634  0746                     l954:
   635                           
   636                           ;Principal_Slave3.c: 100:           rxByteMaster = SSPBUF;
   637  0746  1283               	bcf	3,5	;RP0=0, select bank0
   638  0747  1303               	bcf	3,6	;RP1=0, select bank0
   639  0748  0813               	movf	19,w	;volatile
   640  0749  00FC               	movwf	??_main
   641  074A  087C               	movf	??_main,w
   642  074B  00F2               	movwf	_rxByteMaster
   643                           
   644                           ;Principal_Slave3.c: 103:           SSPBUF = TEMPERATURA;
   645  074C  0875               	movf	_TEMPERATURA,w
   646  074D  0093               	movwf	19	;volatile
   647  074E  2EEE               	goto	l928
   648  074F  120A  118A  2800   	ljmp	start
   649  0752                     __end_of_main:
   650                           
   651                           	psect	text1
   652  064C                     __ptext1:	
   653 ;; *************** function _SETUP *****************
   654 ;; Defined at:
   655 ;;		line 115 in file "Principal_Slave3.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0
   671 ;;      Temps:          0       0       0       0       0
   672 ;;      Totals:         0       0       0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function _SETUP
   684  064C                     _SETUP:
   685  064C                     l736:	
   686                           ;incstack = 0
   687                           ; Regs used in _SETUP: [wreg+status,2]
   688                           
   689                           
   690                           ;Principal_Slave3.c: 117:         PORTA = 0;
   691  064C  1283               	bcf	3,5	;RP0=0, select bank0
   692  064D  1303               	bcf	3,6	;RP1=0, select bank0
   693  064E  0185               	clrf	5	;volatile
   694                           
   695                           ;Principal_Slave3.c: 118:         PORTB = 0;
   696  064F  0186               	clrf	6	;volatile
   697                           
   698                           ;Principal_Slave3.c: 119:         PORTC = 0;
   699  0650  0187               	clrf	7	;volatile
   700                           
   701                           ;Principal_Slave3.c: 120:         PORTD = 0;
   702  0651  0188               	clrf	8	;volatile
   703                           
   704                           ;Principal_Slave3.c: 121:         PORTE = 0;
   705  0652  0189               	clrf	9	;volatile
   706  0653                     l738:
   707                           
   708                           ;Principal_Slave3.c: 123:         TRISA = 0b00100001;
   709  0653  3021               	movlw	33
   710  0654  1683               	bsf	3,5	;RP0=1, select bank1
   711  0655  1303               	bcf	3,6	;RP1=0, select bank1
   712  0656  0085               	movwf	5	;volatile
   713  0657                     l740:
   714                           
   715                           ;Principal_Slave3.c: 124:         TRISB = 0;
   716  0657  0186               	clrf	6	;volatile
   717  0658                     l742:
   718                           
   719                           ;Principal_Slave3.c: 125:         TRISD = 0;
   720  0658  0188               	clrf	8	;volatile
   721  0659                     l744:
   722                           
   723                           ;Principal_Slave3.c: 126:         TRISC = 0b00011000;
   724  0659  3018               	movlw	24
   725  065A  0087               	movwf	7	;volatile
   726                           
   727                           ;Principal_Slave3.c: 127:         TRISE = 0;
   728  065B  0189               	clrf	9	;volatile
   729                           
   730                           ;Principal_Slave3.c: 130:         ANSEL = 0;
   731  065C  1683               	bsf	3,5	;RP0=1, select bank3
   732  065D  1703               	bsf	3,6	;RP1=1, select bank3
   733  065E  0188               	clrf	8	;volatile
   734  065F                     l746:
   735                           
   736                           ;Principal_Slave3.c: 131:         ANSELbits.ANS0 = 1;
   737  065F  1408               	bsf	8,0	;volatile
   738                           
   739                           ;Principal_Slave3.c: 132:         ANSELH = 0;
   740  0660  0189               	clrf	9	;volatile
   741  0661                     l748:
   742                           
   743                           ;Principal_Slave3.c: 134:         SSPCONbits.SSPEN = 0;
   744  0661  1283               	bcf	3,5	;RP0=0, select bank0
   745  0662  1303               	bcf	3,6	;RP1=0, select bank0
   746  0663  1294               	bcf	20,5	;volatile
   747                           
   748                           ;Principal_Slave3.c: 135:         SSPSTAT = 0X00;
   749  0664  1683               	bsf	3,5	;RP0=1, select bank1
   750  0665  1303               	bcf	3,6	;RP1=0, select bank1
   751  0666  0194               	clrf	20	;volatile
   752  0667                     l750:
   753                           
   754                           ;Principal_Slave3.c: 136:         SSPCON= 0X14;
   755  0667  3014               	movlw	20
   756  0668  1283               	bcf	3,5	;RP0=0, select bank0
   757  0669  1303               	bcf	3,6	;RP1=0, select bank0
   758  066A  0094               	movwf	20	;volatile
   759  066B                     l752:
   760                           
   761                           ;Principal_Slave3.c: 137:         SSPCONbits.SSPEN = 1;
   762  066B  1694               	bsf	20,5	;volatile
   763  066C                     l84:
   764  066C  0008               	return
   765  066D                     __end_of_SETUP:
   766                           
   767                           	psect	text2
   768  066D                     __ptext2:	
   769 ;; *************** function _ADC_READ *****************
   770 ;; Defined at:
   771 ;;		line 164 in file "ADC.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  JUSTIFICACIO    1    wreg     unsigned char 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  JUSTIFICACIO    1    2[COMMON] unsigned char 
   776 ;;  VALOR_ADC       1    3[COMMON] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      unsigned char 
   779 ;; Registers used:
   780 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         2       0       0       0       0
   788 ;;      Temps:          2       0       0       0       0
   789 ;;      Totals:         4       0       0       0       0
   790 ;;Total ram usage:        4 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _ADC_READ
   801  066D                     _ADC_READ:
   802                           
   803                           ;incstack = 0
   804                           ; Regs used in _ADC_READ: [wreg-fsr0h+status,2+status,0]
   805                           ;ADC_READ@JUSTIFICACION stored from wreg
   806  066D  00FA               	movwf	ADC_READ@JUSTIFICACION
   807  066E                     l778:
   808                           
   809                           ;ADC.c: 168:     switch (JUSTIFICACION){
   810  066E  2E7D               	goto	l786
   811  066F                     l780:
   812                           
   813                           ;ADC.c: 170:             VALOR_ADC = ADRESH;
   814  066F  1283               	bcf	3,5	;RP0=0, select bank0
   815  0670  1303               	bcf	3,6	;RP1=0, select bank0
   816  0671  081E               	movf	30,w	;volatile
   817  0672  00F8               	movwf	??_ADC_READ
   818  0673  0878               	movf	??_ADC_READ,w
   819  0674  00FB               	movwf	ADC_READ@VALOR_ADC
   820                           
   821                           ;ADC.c: 171:             break;
   822  0675  2E8D               	goto	l788
   823  0676                     l782:
   824                           
   825                           ;ADC.c: 173:             VALOR_ADC = ADRESL;
   826  0676  1683               	bsf	3,5	;RP0=1, select bank1
   827  0677  1303               	bcf	3,6	;RP1=0, select bank1
   828  0678  081E               	movf	30,w	;volatile
   829  0679  00F8               	movwf	??_ADC_READ
   830  067A  0878               	movf	??_ADC_READ,w
   831  067B  00FB               	movwf	ADC_READ@VALOR_ADC
   832                           
   833                           ;ADC.c: 174:             break;
   834  067C  2E8D               	goto	l788
   835  067D                     l786:
   836  067D  087A               	movf	ADC_READ@JUSTIFICACION,w
   837  067E  00F8               	movwf	??_ADC_READ
   838  067F  01F9               	clrf	??_ADC_READ+1
   839                           
   840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   841                           ; Switch size 1, requested type "simple"
   842                           ; Number of cases is 1, Range of values is 0 to 0
   843                           ; switch strategies available:
   844                           ; Name         Instructions Cycles
   845                           ; simple_byte            4     3 (average)
   846                           ; direct_byte           11     8 (fixed)
   847                           ; jumptable            260     6 (fixed)
   848                           ;	Chosen strategy is simple_byte
   849  0680  0879               	movf	??_ADC_READ+1,w
   850  0681  3A00               	xorlw	0	; case 0
   851  0682  1903               	skipnz
   852  0683  2E85               	goto	l1016
   853  0684  2E6F               	goto	l780
   854  0685                     l1016:
   855                           
   856                           ; Switch size 1, requested type "simple"
   857                           ; Number of cases is 2, Range of values is 0 to 1
   858                           ; switch strategies available:
   859                           ; Name         Instructions Cycles
   860                           ; simple_byte            7     4 (average)
   861                           ; direct_byte           14     8 (fixed)
   862                           ; jumptable            260     6 (fixed)
   863                           ;	Chosen strategy is simple_byte
   864  0685  0878               	movf	??_ADC_READ,w
   865  0686  3A00               	xorlw	0	; case 0
   866  0687  1903               	skipnz
   867  0688  2E6F               	goto	l780
   868  0689  3A01               	xorlw	1	; case 1
   869  068A  1903               	skipnz
   870  068B  2E76               	goto	l782
   871  068C  2E6F               	goto	l780
   872  068D                     l788:
   873                           
   874                           ;ADC.c: 178:     return (VALOR_ADC );
   875  068D  087B               	movf	ADC_READ@VALOR_ADC,w
   876  068E                     l144:
   877  068E  0008               	return
   878  068F                     __end_of_ADC_READ:
   879                           
   880                           	psect	text3
   881  068F                     __ptext3:	
   882 ;; *************** function _ADC_CONVCLK *****************
   883 ;; Defined at:
   884 ;;		line 117 in file "ADC.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  CONV            1    wreg     unsigned char 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  CONV            1    2[COMMON] unsigned char 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         0       0       0       0       0
   899 ;;      Locals:         1       0       0       0       0
   900 ;;      Temps:          2       0       0       0       0
   901 ;;      Totals:         3       0       0       0       0
   902 ;;Total ram usage:        3 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _ADC_CONVCLK
   913  068F                     _ADC_CONVCLK:
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in _ADC_CONVCLK: [wreg-fsr0h+status,2+status,0]
   917                           ;ADC_CONVCLK@CONV stored from wreg
   918  068F  00FA               	movwf	ADC_CONVCLK@CONV
   919  0690                     l764:
   920                           
   921                           ;ADC.c: 119:       switch(CONV){
   922  0690  2EAA               	goto	l768
   923  0691                     l127:	
   924                           ;ADC.c: 121:         case 0:
   925                           
   926                           
   927                           ;ADC.c: 122:             ADCON0bits.ADCS0 = 0;
   928  0691  1283               	bcf	3,5	;RP0=0, select bank0
   929  0692  1303               	bcf	3,6	;RP1=0, select bank0
   930  0693  131F               	bcf	31,6	;volatile
   931                           
   932                           ;ADC.c: 123:             ADCON0bits.ADCS0 = 0;
   933  0694  131F               	bcf	31,6	;volatile
   934                           
   935                           ;ADC.c: 124:             break;
   936  0695  2EC0               	goto	l128
   937  0696                     l129:	
   938                           ;ADC.c: 126:         case 1:
   939                           
   940                           
   941                           ;ADC.c: 127:             ADCON0bits.ADCS0 = 0;
   942  0696  1283               	bcf	3,5	;RP0=0, select bank0
   943  0697  1303               	bcf	3,6	;RP1=0, select bank0
   944  0698  131F               	bcf	31,6	;volatile
   945                           
   946                           ;ADC.c: 128:             ADCON0bits.ADCS0 = 1;
   947  0699  171F               	bsf	31,6	;volatile
   948                           
   949                           ;ADC.c: 129:             break;
   950  069A  2EC0               	goto	l128
   951  069B                     l130:	
   952                           ;ADC.c: 131:         case 2:
   953                           
   954                           
   955                           ;ADC.c: 132:             ADCON0bits.ADCS0 = 1;
   956  069B  1283               	bcf	3,5	;RP0=0, select bank0
   957  069C  1303               	bcf	3,6	;RP1=0, select bank0
   958  069D  171F               	bsf	31,6	;volatile
   959                           
   960                           ;ADC.c: 133:             ADCON0bits.ADCS0 = 0;
   961  069E  131F               	bcf	31,6	;volatile
   962                           
   963                           ;ADC.c: 134:             break;
   964  069F  2EC0               	goto	l128
   965  06A0                     l131:	
   966                           ;ADC.c: 136:         case 3:
   967                           
   968                           
   969                           ;ADC.c: 137:             ADCON0bits.ADCS0 = 1;
   970  06A0  1283               	bcf	3,5	;RP0=0, select bank0
   971  06A1  1303               	bcf	3,6	;RP1=0, select bank0
   972  06A2  171F               	bsf	31,6	;volatile
   973                           
   974                           ;ADC.c: 138:             ADCON0bits.ADCS0 = 1;
   975  06A3  171F               	bsf	31,6	;volatile
   976                           
   977                           ;ADC.c: 139:             break;
   978  06A4  2EC0               	goto	l128
   979  06A5                     l132:	
   980                           ;ADC.c: 141:         default:
   981                           
   982                           
   983                           ;ADC.c: 142:             ADCON0bits.ADCS0 = 0;
   984  06A5  1283               	bcf	3,5	;RP0=0, select bank0
   985  06A6  1303               	bcf	3,6	;RP1=0, select bank0
   986  06A7  131F               	bcf	31,6	;volatile
   987                           
   988                           ;ADC.c: 143:             ADCON0bits.ADCS0 = 0;
   989  06A8  131F               	bcf	31,6	;volatile
   990                           
   991                           ;ADC.c: 144:             break;
   992  06A9  2EC0               	goto	l128
   993  06AA                     l768:
   994  06AA  087A               	movf	ADC_CONVCLK@CONV,w
   995  06AB  00F8               	movwf	??_ADC_CONVCLK
   996  06AC  01F9               	clrf	??_ADC_CONVCLK+1
   997                           
   998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   999                           ; Switch size 1, requested type "simple"
  1000                           ; Number of cases is 1, Range of values is 0 to 0
  1001                           ; switch strategies available:
  1002                           ; Name         Instructions Cycles
  1003                           ; simple_byte            4     3 (average)
  1004                           ; direct_byte           11     8 (fixed)
  1005                           ; jumptable            260     6 (fixed)
  1006                           ;	Chosen strategy is simple_byte
  1007  06AD  0879               	movf	??_ADC_CONVCLK+1,w
  1008  06AE  3A00               	xorlw	0	; case 0
  1009  06AF  1903               	skipnz
  1010  06B0  2EB2               	goto	l1018
  1011  06B1  2EA5               	goto	l132
  1012  06B2                     l1018:
  1013                           
  1014                           ; Switch size 1, requested type "simple"
  1015                           ; Number of cases is 4, Range of values is 0 to 3
  1016                           ; switch strategies available:
  1017                           ; Name         Instructions Cycles
  1018                           ; simple_byte           13     7 (average)
  1019                           ; direct_byte           20     8 (fixed)
  1020                           ; jumptable            260     6 (fixed)
  1021                           ;	Chosen strategy is simple_byte
  1022  06B2  0878               	movf	??_ADC_CONVCLK,w
  1023  06B3  3A00               	xorlw	0	; case 0
  1024  06B4  1903               	skipnz
  1025  06B5  2E91               	goto	l127
  1026  06B6  3A01               	xorlw	1	; case 1
  1027  06B7  1903               	skipnz
  1028  06B8  2E96               	goto	l129
  1029  06B9  3A03               	xorlw	3	; case 2
  1030  06BA  1903               	skipnz
  1031  06BB  2E9B               	goto	l130
  1032  06BC  3A01               	xorlw	1	; case 3
  1033  06BD  1903               	skipnz
  1034  06BE  2EA0               	goto	l131
  1035  06BF  2EA5               	goto	l132
  1036  06C0                     l128:
  1037                           
  1038                           ;ADC.c: 147:     ADCON0bits.ADON = 1;
  1039  06C0  141F               	bsf	31,0	;volatile
  1040                           
  1041                           ;ADC.c: 148:     PIR1bits.ADIF = 0;
  1042  06C1  130C               	bcf	12,6	;volatile
  1043                           
  1044                           ;ADC.c: 149:     PIE1bits.ADIE = 1;
  1045  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  1046  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  1047  06C4  170C               	bsf	12,6	;volatile
  1048                           
  1049                           ;ADC.c: 150:     INTCONbits.PEIE = 1;
  1050  06C5  170B               	bsf	11,6	;volatile
  1051  06C6                     l770:
  1052                           
  1053                           ;ADC.c: 151:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1054  06C6  304E               	movlw	78
  1055  06C7  00F9               	movwf	??_ADC_CONVCLK+1
  1056  06C8  30EB               	movlw	235
  1057  06C9  00F8               	movwf	??_ADC_CONVCLK
  1058  06CA                     u147:
  1059  06CA  0BF8               	decfsz	??_ADC_CONVCLK,f
  1060  06CB  2ECA               	goto	u147
  1061  06CC  0BF9               	decfsz	??_ADC_CONVCLK+1,f
  1062  06CD  2ECA               	goto	u147
  1063  06CE                     l772:
  1064                           
  1065                           ;ADC.c: 152:     ADCON0bits.GO_nDONE = 1;
  1066  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  1067  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  1068  06D0  149F               	bsf	31,1	;volatile
  1069  06D1                     l133:
  1070  06D1  0008               	return
  1071  06D2                     __end_of_ADC_CONVCLK:
  1072                           
  1073                           	psect	text4
  1074  0639                     __ptext4:	
  1075 ;; *************** function _ADC_CONTINUE *****************
  1076 ;; Defined at:
  1077 ;;		line 156 in file "ADC.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0
  1093 ;;      Temps:          2       0       0       0       0
  1094 ;;      Totals:         2       0       0       0       0
  1095 ;;Total ram usage:        2 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _ADC_CONTINUE
  1106  0639                     _ADC_CONTINUE:
  1107  0639                     l796:	
  1108                           ;incstack = 0
  1109                           ; Regs used in _ADC_CONTINUE: [wreg]
  1110                           
  1111                           
  1112                           ;ADC.c: 157:     PIR1bits.ADIF = 0;
  1113  0639  1283               	bcf	3,5	;RP0=0, select bank0
  1114  063A  1303               	bcf	3,6	;RP1=0, select bank0
  1115  063B  130C               	bcf	12,6	;volatile
  1116                           
  1117                           ;ADC.c: 158:     PIE1bits.ADIE = 1;
  1118  063C  1683               	bsf	3,5	;RP0=1, select bank1
  1119  063D  1303               	bcf	3,6	;RP1=0, select bank1
  1120  063E  170C               	bsf	12,6	;volatile
  1121  063F                     l798:
  1122                           
  1123                           ;ADC.c: 159:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1124  063F  3034               	movlw	52
  1125  0640  00F9               	movwf	??_ADC_CONTINUE+1
  1126  0641  30F1               	movlw	241
  1127  0642  00F8               	movwf	??_ADC_CONTINUE
  1128  0643                     u157:
  1129  0643  0BF8               	decfsz	??_ADC_CONTINUE,f
  1130  0644  2E43               	goto	u157
  1131  0645  0BF9               	decfsz	??_ADC_CONTINUE+1,f
  1132  0646  2E43               	goto	u157
  1133  0647  2E48               	nop2
  1134  0648                     l800:
  1135                           
  1136                           ;ADC.c: 160:     ADCON0bits.GO_nDONE = 1;
  1137  0648  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0649  1303               	bcf	3,6	;RP1=0, select bank0
  1139  064A  149F               	bsf	31,1	;volatile
  1140  064B                     l136:
  1141  064B  0008               	return
  1142  064C                     __end_of_ADC_CONTINUE:
  1143                           
  1144                           	psect	text5
  1145  0752                     __ptext5:	
  1146 ;; *************** function _ADC_C *****************
  1147 ;; Defined at:
  1148 ;;		line 7 in file "ADC.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  CH              2    0[COMMON] unsigned int 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         2       0       0       0       0
  1163 ;;      Locals:         0       0       0       0       0
  1164 ;;      Temps:          0       0       0       0       0
  1165 ;;      Totals:         2       0       0       0       0
  1166 ;;Total ram usage:        2 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _ADC_C
  1177  0752                     _ADC_C:
  1178  0752                     l910:	
  1179                           ;incstack = 0
  1180                           ; Regs used in _ADC_C: [wreg-fsr0h+status,2+status,0]
  1181                           
  1182                           
  1183                           ;ADC.c: 9:   switch(CH){
  1184  0752  2FBC               	goto	l914
  1185  0753                     l107:	
  1186                           ;ADC.c: 11:          case 0:
  1187                           
  1188                           
  1189                           ;ADC.c: 12:             ADCON0bits.CHS3 = 0;
  1190  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0755  129F               	bcf	31,5	;volatile
  1193                           
  1194                           ;ADC.c: 13:             ADCON0bits.CHS2 = 0;
  1195  0756  121F               	bcf	31,4	;volatile
  1196                           
  1197                           ;ADC.c: 14:             ADCON0bits.CHS1 = 0;
  1198  0757  119F               	bcf	31,3	;volatile
  1199                           
  1200                           ;ADC.c: 15:             ADCON0bits.CHS0 = 0;
  1201  0758  111F               	bcf	31,2	;volatile
  1202                           
  1203                           ;ADC.c: 16:             break;
  1204  0759  2FED               	goto	l123
  1205  075A                     l109:	
  1206                           ;ADC.c: 18:         case 1:
  1207                           
  1208                           
  1209                           ;ADC.c: 19:             ADCON0bits.CHS3 = 0;
  1210  075A  1283               	bcf	3,5	;RP0=0, select bank0
  1211  075B  1303               	bcf	3,6	;RP1=0, select bank0
  1212  075C  129F               	bcf	31,5	;volatile
  1213                           
  1214                           ;ADC.c: 20:             ADCON0bits.CHS2 = 0;
  1215  075D  121F               	bcf	31,4	;volatile
  1216                           
  1217                           ;ADC.c: 21:             ADCON0bits.CHS1 = 0;
  1218  075E  119F               	bcf	31,3	;volatile
  1219                           
  1220                           ;ADC.c: 22:             ADCON0bits.CHS0 = 1;
  1221  075F  151F               	bsf	31,2	;volatile
  1222                           
  1223                           ;ADC.c: 23:             break;
  1224  0760  2FED               	goto	l123
  1225  0761                     l110:	
  1226                           ;ADC.c: 25:         case 2:
  1227                           
  1228                           
  1229                           ;ADC.c: 26:             ADCON0bits.CHS3 = 0;
  1230  0761  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0762  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0763  129F               	bcf	31,5	;volatile
  1233                           
  1234                           ;ADC.c: 27:             ADCON0bits.CHS2 = 0;
  1235  0764  121F               	bcf	31,4	;volatile
  1236                           
  1237                           ;ADC.c: 28:             ADCON0bits.CHS1 = 1;
  1238  0765  159F               	bsf	31,3	;volatile
  1239                           
  1240                           ;ADC.c: 29:             ADCON0bits.CHS0 = 0;
  1241  0766  111F               	bcf	31,2	;volatile
  1242                           
  1243                           ;ADC.c: 30:             break;
  1244  0767  2FED               	goto	l123
  1245  0768                     l111:	
  1246                           ;ADC.c: 32:         case 3:
  1247                           
  1248                           
  1249                           ;ADC.c: 33:             ADCON0bits.CHS3 = 0;
  1250  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1252  076A  129F               	bcf	31,5	;volatile
  1253                           
  1254                           ;ADC.c: 34:             ADCON0bits.CHS2 = 0;
  1255  076B  121F               	bcf	31,4	;volatile
  1256                           
  1257                           ;ADC.c: 35:             ADCON0bits.CHS1 = 1;
  1258  076C  159F               	bsf	31,3	;volatile
  1259                           
  1260                           ;ADC.c: 36:             ADCON0bits.CHS0 = 1;
  1261  076D  151F               	bsf	31,2	;volatile
  1262                           
  1263                           ;ADC.c: 37:             break;
  1264  076E  2FED               	goto	l123
  1265  076F                     l112:	
  1266                           ;ADC.c: 39:         case 4:
  1267                           
  1268                           
  1269                           ;ADC.c: 40:             ADCON0bits.CHS3 = 0;
  1270  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0771  129F               	bcf	31,5	;volatile
  1273                           
  1274                           ;ADC.c: 41:             ADCON0bits.CHS2 = 1;
  1275  0772  161F               	bsf	31,4	;volatile
  1276                           
  1277                           ;ADC.c: 42:             ADCON0bits.CHS1 = 0;
  1278  0773  119F               	bcf	31,3	;volatile
  1279                           
  1280                           ;ADC.c: 43:             ADCON0bits.CHS0 = 0;
  1281  0774  111F               	bcf	31,2	;volatile
  1282                           
  1283                           ;ADC.c: 44:             break;
  1284  0775  2FED               	goto	l123
  1285  0776                     l113:	
  1286                           ;ADC.c: 46:         case 5:
  1287                           
  1288                           
  1289                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  1290  0776  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0777  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0778  129F               	bcf	31,5	;volatile
  1293                           
  1294                           ;ADC.c: 48:             ADCON0bits.CHS2 = 1;
  1295  0779  161F               	bsf	31,4	;volatile
  1296                           
  1297                           ;ADC.c: 49:             ADCON0bits.CHS1 = 0;
  1298  077A  119F               	bcf	31,3	;volatile
  1299                           
  1300                           ;ADC.c: 50:             ADCON0bits.CHS0 = 1;
  1301  077B  151F               	bsf	31,2	;volatile
  1302                           
  1303                           ;ADC.c: 51:             break;
  1304  077C  2FED               	goto	l123
  1305  077D                     l114:	
  1306                           ;ADC.c: 53:         case 6:
  1307                           
  1308                           
  1309                           ;ADC.c: 54:             ADCON0bits.CHS3 = 0;
  1310  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1311  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1312  077F  129F               	bcf	31,5	;volatile
  1313                           
  1314                           ;ADC.c: 55:             ADCON0bits.CHS2 = 1;
  1315  0780  161F               	bsf	31,4	;volatile
  1316                           
  1317                           ;ADC.c: 56:             ADCON0bits.CHS1 = 1;
  1318  0781  159F               	bsf	31,3	;volatile
  1319                           
  1320                           ;ADC.c: 57:             ADCON0bits.CHS0 = 0;
  1321  0782  111F               	bcf	31,2	;volatile
  1322                           
  1323                           ;ADC.c: 58:             break;
  1324  0783  2FED               	goto	l123
  1325  0784                     l115:	
  1326                           ;ADC.c: 60:         case 7:
  1327                           
  1328                           
  1329                           ;ADC.c: 61:             ADCON0bits.CHS3 = 0;
  1330  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0786  129F               	bcf	31,5	;volatile
  1333                           
  1334                           ;ADC.c: 62:             ADCON0bits.CHS2 = 1;
  1335  0787  161F               	bsf	31,4	;volatile
  1336                           
  1337                           ;ADC.c: 63:             ADCON0bits.CHS1 = 1;
  1338  0788  159F               	bsf	31,3	;volatile
  1339                           
  1340                           ;ADC.c: 64:             ADCON0bits.CHS0 = 1;
  1341  0789  151F               	bsf	31,2	;volatile
  1342                           
  1343                           ;ADC.c: 65:             break;
  1344  078A  2FED               	goto	l123
  1345  078B                     l116:	
  1346                           ;ADC.c: 67:         case 8:
  1347                           
  1348                           
  1349                           ;ADC.c: 68:             ADCON0bits.CHS3 = 1;
  1350  078B  1283               	bcf	3,5	;RP0=0, select bank0
  1351  078C  1303               	bcf	3,6	;RP1=0, select bank0
  1352  078D  169F               	bsf	31,5	;volatile
  1353                           
  1354                           ;ADC.c: 69:             ADCON0bits.CHS2 = 0;
  1355  078E  121F               	bcf	31,4	;volatile
  1356                           
  1357                           ;ADC.c: 70:             ADCON0bits.CHS1 = 0;
  1358  078F  119F               	bcf	31,3	;volatile
  1359                           
  1360                           ;ADC.c: 71:             ADCON0bits.CHS0 = 0;
  1361  0790  111F               	bcf	31,2	;volatile
  1362                           
  1363                           ;ADC.c: 72:             break;
  1364  0791  2FED               	goto	l123
  1365  0792                     l117:	
  1366                           ;ADC.c: 74:         case 9:
  1367                           
  1368                           
  1369                           ;ADC.c: 75:             ADCON0bits.CHS3 = 1;
  1370  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0794  169F               	bsf	31,5	;volatile
  1373                           
  1374                           ;ADC.c: 76:             ADCON0bits.CHS2 = 0;
  1375  0795  121F               	bcf	31,4	;volatile
  1376                           
  1377                           ;ADC.c: 77:             ADCON0bits.CHS1 = 0;
  1378  0796  119F               	bcf	31,3	;volatile
  1379                           
  1380                           ;ADC.c: 78:             ADCON0bits.CHS0 = 1;
  1381  0797  151F               	bsf	31,2	;volatile
  1382                           
  1383                           ;ADC.c: 79:             break;
  1384  0798  2FED               	goto	l123
  1385  0799                     l118:	
  1386                           ;ADC.c: 81:         case 10:
  1387                           
  1388                           
  1389                           ;ADC.c: 82:             ADCON0bits.CHS3 = 1;
  1390  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1391  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1392  079B  169F               	bsf	31,5	;volatile
  1393                           
  1394                           ;ADC.c: 83:             ADCON0bits.CHS2 = 0;
  1395  079C  121F               	bcf	31,4	;volatile
  1396                           
  1397                           ;ADC.c: 84:             ADCON0bits.CHS1 = 1;
  1398  079D  159F               	bsf	31,3	;volatile
  1399                           
  1400                           ;ADC.c: 85:             ADCON0bits.CHS0 = 0;
  1401  079E  111F               	bcf	31,2	;volatile
  1402                           
  1403                           ;ADC.c: 86:             break;
  1404  079F  2FED               	goto	l123
  1405  07A0                     l119:	
  1406                           ;ADC.c: 88:         case 11:
  1407                           
  1408                           
  1409                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  1410  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1411  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1412  07A2  169F               	bsf	31,5	;volatile
  1413                           
  1414                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  1415  07A3  121F               	bcf	31,4	;volatile
  1416                           
  1417                           ;ADC.c: 91:             ADCON0bits.CHS1 = 1;
  1418  07A4  159F               	bsf	31,3	;volatile
  1419                           
  1420                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  1421  07A5  151F               	bsf	31,2	;volatile
  1422                           
  1423                           ;ADC.c: 93:             break;
  1424  07A6  2FED               	goto	l123
  1425  07A7                     l120:	
  1426                           ;ADC.c: 95:         case 12:
  1427                           
  1428                           
  1429                           ;ADC.c: 96:             ADCON0bits.CHS3 = 1;
  1430  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1431  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1432  07A9  169F               	bsf	31,5	;volatile
  1433                           
  1434                           ;ADC.c: 97:             ADCON0bits.CHS2 = 1;
  1435  07AA  161F               	bsf	31,4	;volatile
  1436                           
  1437                           ;ADC.c: 98:             ADCON0bits.CHS1 = 0;
  1438  07AB  119F               	bcf	31,3	;volatile
  1439                           
  1440                           ;ADC.c: 99:             ADCON0bits.CHS0 = 0;
  1441  07AC  111F               	bcf	31,2	;volatile
  1442                           
  1443                           ;ADC.c: 100:             break;
  1444  07AD  2FED               	goto	l123
  1445  07AE                     l121:	
  1446                           ;ADC.c: 101:         case 13:
  1447                           
  1448                           
  1449                           ;ADC.c: 102:             ADCON0bits.CHS3 = 1;
  1450  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1451  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1452  07B0  169F               	bsf	31,5	;volatile
  1453                           
  1454                           ;ADC.c: 103:             ADCON0bits.CHS2 = 1;
  1455  07B1  161F               	bsf	31,4	;volatile
  1456                           
  1457                           ;ADC.c: 104:             ADCON0bits.CHS1 = 0;
  1458  07B2  119F               	bcf	31,3	;volatile
  1459                           
  1460                           ;ADC.c: 105:             ADCON0bits.CHS0 = 1;
  1461  07B3  151F               	bsf	31,2	;volatile
  1462                           
  1463                           ;ADC.c: 106:             break;
  1464  07B4  2FED               	goto	l123
  1465  07B5                     l122:	
  1466                           ;ADC.c: 108:         default:
  1467                           
  1468                           
  1469                           ;ADC.c: 109:             ADCON0bits.CHS3 = 0;
  1470  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1471  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1472  07B7  129F               	bcf	31,5	;volatile
  1473                           
  1474                           ;ADC.c: 110:             ADCON0bits.CHS2 = 0;
  1475  07B8  121F               	bcf	31,4	;volatile
  1476                           
  1477                           ;ADC.c: 111:             ADCON0bits.CHS1 = 0;
  1478  07B9  119F               	bcf	31,3	;volatile
  1479                           
  1480                           ;ADC.c: 112:             ADCON0bits.CHS0 = 0;
  1481  07BA  111F               	bcf	31,2	;volatile
  1482                           
  1483                           ;ADC.c: 113:             break;
  1484  07BB  2FED               	goto	l123
  1485  07BC                     l914:
  1486                           
  1487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1488                           ; Switch size 1, requested type "simple"
  1489                           ; Number of cases is 1, Range of values is 0 to 0
  1490                           ; switch strategies available:
  1491                           ; Name         Instructions Cycles
  1492                           ; simple_byte            4     3 (average)
  1493                           ; direct_byte           11     8 (fixed)
  1494                           ; jumptable            260     6 (fixed)
  1495                           ;	Chosen strategy is simple_byte
  1496  07BC  0879               	movf	ADC_C@CH+1,w
  1497  07BD  3A00               	xorlw	0	; case 0
  1498  07BE  1903               	skipnz
  1499  07BF  2FC1               	goto	l1020
  1500  07C0  2FB5               	goto	l122
  1501  07C1                     l1020:
  1502                           
  1503                           ; Switch size 1, requested type "simple"
  1504                           ; Number of cases is 14, Range of values is 0 to 13
  1505                           ; switch strategies available:
  1506                           ; Name         Instructions Cycles
  1507                           ; simple_byte           43    22 (average)
  1508                           ; direct_byte           50     8 (fixed)
  1509                           ; jumptable            260     6 (fixed)
  1510                           ;	Chosen strategy is simple_byte
  1511  07C1  0878               	movf	ADC_C@CH,w
  1512  07C2  3A00               	xorlw	0	; case 0
  1513  07C3  1903               	skipnz
  1514  07C4  2F53               	goto	l107
  1515  07C5  3A01               	xorlw	1	; case 1
  1516  07C6  1903               	skipnz
  1517  07C7  2F5A               	goto	l109
  1518  07C8  3A03               	xorlw	3	; case 2
  1519  07C9  1903               	skipnz
  1520  07CA  2F61               	goto	l110
  1521  07CB  3A01               	xorlw	1	; case 3
  1522  07CC  1903               	skipnz
  1523  07CD  2F68               	goto	l111
  1524  07CE  3A07               	xorlw	7	; case 4
  1525  07CF  1903               	skipnz
  1526  07D0  2F6F               	goto	l112
  1527  07D1  3A01               	xorlw	1	; case 5
  1528  07D2  1903               	skipnz
  1529  07D3  2F76               	goto	l113
  1530  07D4  3A03               	xorlw	3	; case 6
  1531  07D5  1903               	skipnz
  1532  07D6  2F7D               	goto	l114
  1533  07D7  3A01               	xorlw	1	; case 7
  1534  07D8  1903               	skipnz
  1535  07D9  2F84               	goto	l115
  1536  07DA  3A0F               	xorlw	15	; case 8
  1537  07DB  1903               	skipnz
  1538  07DC  2F8B               	goto	l116
  1539  07DD  3A01               	xorlw	1	; case 9
  1540  07DE  1903               	skipnz
  1541  07DF  2F92               	goto	l117
  1542  07E0  3A03               	xorlw	3	; case 10
  1543  07E1  1903               	skipnz
  1544  07E2  2F99               	goto	l118
  1545  07E3  3A01               	xorlw	1	; case 11
  1546  07E4  1903               	skipnz
  1547  07E5  2FA0               	goto	l119
  1548  07E6  3A07               	xorlw	7	; case 12
  1549  07E7  1903               	skipnz
  1550  07E8  2FA7               	goto	l120
  1551  07E9  3A01               	xorlw	1	; case 13
  1552  07EA  1903               	skipnz
  1553  07EB  2FAE               	goto	l121
  1554  07EC  2FB5               	goto	l122
  1555  07ED                     l123:
  1556  07ED  0008               	return
  1557  07EE                     __end_of_ADC_C:
  1558  007E                     btemp	set	126	;btemp
  1559  007E                     wtemp0	set	126
  1560                           
  1561                           	psect	config
  1562                           
  1563                           ;Config register CONFIG1 @ 0x2007
  1564                           ;	Oscillator Selection bits
  1565                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  1566                           ;	Watchdog Timer Enable bit
  1567                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1568                           ;	Power-up Timer Enable bit
  1569                           ;	PWRTE = OFF, PWRT disabled
  1570                           ;	RE3/MCLR pin function select bit
  1571                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1572                           ;	Code Protection bit
  1573                           ;	CP = OFF, Program memory code protection is disabled
  1574                           ;	Data Code Protection bit
  1575                           ;	CPD = OFF, Data memory code protection is disabled
  1576                           ;	Brown Out Reset Selection bits
  1577                           ;	BOREN = OFF, BOR disabled
  1578                           ;	Internal External Switchover bit
  1579                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1580                           ;	Fail-Safe Clock Monitor Enabled bit
  1581                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1582                           ;	Low Voltage Programming Enable bit
  1583                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1584                           ;	In-Circuit Debugger Mode bit
  1585                           ;	DEBUG = 0x1, unprogrammed default
  1586  2007                     	org	8199
  1587  2007  20D7               	dw	8407
  1588                           
  1589                           ;Config register CONFIG2 @ 0x2008
  1590                           ;	Brown-out Reset Selection bit
  1591                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1592                           ;	Flash Program Memory Self Write Enable bits
  1593                           ;	WRT = OFF, Write protection off
  1594  2008                     	org	8200
  1595  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      0       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_READ

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     143
                                              4 COMMON     2     2      0
                              _ADC_C
                       _ADC_CONTINUE
                        _ADC_CONVCLK
                           _ADC_READ
                              _SETUP
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONVCLK                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONTINUE                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_C                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_C
   _ADC_CONTINUE
   _ADC_CONVCLK
   _ADC_READ
   _SETUP

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 20:43:18 2021

   __size_of_ADC_CONVCLK 0043              _SSPSTATbits 0094                       l73 0736  
                     l84 066C                       u70 0713                       u71 0712  
                     u80 071F                       u81 071E                       u90 0725  
                     u91 0724    __size_of_ADC_CONTINUE 0013                      l110 0761  
                    l111 0768                      l120 07A7                      l112 076F  
                    l121 07AE                      l113 0776                      l122 07B5  
                    l114 077D                      l130 069B                      l115 0784  
                    l123 07ED                      l107 0753                      l131 06A0  
                    l116 078B                      l132 06A5                      l117 0792  
                    l109 075A                      l133 06D1                      l118 0799  
                    l119 07A0                      l127 0691                      l136 064B  
                    l128 06C0                      l144 068E                      l129 0696  
                    l800 0648                      l740 0657                      l910 0752  
                    l750 0667                      l742 0658                      l752 066B  
                    l744 0659                      l736 064C                      l920 06D2  
                    l914 07BC                      l770 06C6                      l746 065F  
                    l738 0653                      l930 06F7                      l922 06D7  
                    l772 06CE                      l764 0690                      l780 066F  
                    l748 0661                      l940 0719                      l932 0700  
                    l924 06E0                      l782 0676                      l950 073C  
                    l942 071F                      l934 0704                      l926 06E8  
                    l768 06AA                      l952 0740                      l944 0725  
                    l936 0708                      l928 06EE                      l786 067D  
                    l778 066E                      l954 0746                      l946 072B  
                    l938 0713                      l796 0639                      l788 068D  
                    l948 0731                      l798 063F                      u100 0731  
                    u101 0730                      u110 073C                      u111 073B  
                    u120 0746                      u121 0745                      u137 06DB  
                    u147 06CA                      u157 0643                     l1020 07C1  
                   l1016 0685                     l1018 06B2                     _TEMP 0070  
       __end_of_ADC_READ 068F                     _main 06D2                     btemp 007E  
                   start 0000          ADC_CONVCLK@CONV 007A             _ADC_CONTINUE 0639  
                  ?_main 0078                    _ADC_C 0752                    _ANSEL 0188  
                  _SETUP 064C                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 0752  
                 ??_main 007C                   ?_ADC_C 0078                   ?_SETUP 0078  
                 _ADRESH 001E                   _ADRESL 009E                   _ANSELH 0189  
                 _ENVIAR 0073                   _TEMP_R 0020                   _SSPBUF 0013  
                 _SSPCON 0014                ?_ADC_READ 0078  __end_of__initialization 07FC  
          __end_of_ADC_C 07EE            __end_of_SETUP 066D           __pcstackCOMMON 0078  
                ??_ADC_C 007A                  ADC_C@CH 0078               ??_ADC_READ 0078  
                ??_SETUP 0078               __pbssBANK0 0020            ??_ADC_CONVCLK 0078  
             __pmaintext 06D2                  _SSPSTAT 0094      __end_of_ADC_CONVCLK 06D2  
              _ANSELbits 0188                  __ptext1 064C                  __ptext2 066D  
                __ptext3 068F                  __ptext4 0639                  __ptext5 0752  
   end_of_initialization 07FC                _PORTBbits 0006            _TEMPERATURA_0 0077  
          _TEMPERATURA_1 0076        __size_of_ADC_READ 0022              _ADC_CONVCLK 068F  
    start_initialization 07EE            ?_ADC_CONTINUE 0078              __pbssCOMMON 0070  
              ___latbits 0002           ??_ADC_CONTINUE 0078           __size_of_ADC_C 009C  
               _ADC_READ 066D           __size_of_SETUP 0021                 _PIE1bits 008C  
               _PIR1bits 000C                 _TEMPORAL 0074               _ADCON0bits 001F  
  ADC_READ@JUSTIFICACION 007A             ?_ADC_CONVCLK 0078     __end_of_ADC_CONTINUE 064C  
           _rxByteMaster 0072            __size_of_main 0080        ADC_READ@VALOR_ADC 007B  
            _TEMPERATURA 0075               _INTCONbits 000B               _SSPCONbits 0014  
