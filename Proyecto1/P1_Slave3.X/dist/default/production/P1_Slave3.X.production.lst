

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 14 17:33:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.31
    21                           ; Generated 13/10/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  001E                     _ADRESH	set	30
   290  000B                     _INTCONbits	set	11
   291  000C                     _PIR1bits	set	12
   292  001F                     _ADCON0bits	set	31
   293  0009                     _PORTE	set	9
   294  0008                     _PORTD	set	8
   295  0007                     _PORTC	set	7
   296  0006                     _PORTB	set	6
   297  0005                     _PORTA	set	5
   298  0006                     _PORTBbits	set	6
   299  009E                     _ADRESL	set	158
   300  008C                     _PIE1bits	set	140
   301  0089                     _TRISE	set	137
   302  0087                     _TRISC	set	135
   303  0088                     _TRISD	set	136
   304  0086                     _TRISB	set	134
   305  0085                     _TRISA	set	133
   306  0189                     _ANSELH	set	393
   307  0188                     _ANSELbits	set	392
   308  0188                     _ANSEL	set	392
   309                           
   310                           	psect	cinit
   311  07F7                     start_initialization:	
   312                           ; #config settings
   313                           
   314  07F7                     __initialization:
   315                           
   316                           ; Clear objects allocated to BANK0
   317  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   318  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   319  07F9  01A6               	clrf	__pbssBANK0& (0+127)
   320  07FA  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   321  07FB  01A8               	clrf	(__pbssBANK0+2)& (0+127)
   322  07FC                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325  07FC                     __end_of__initialization:
   326  07FC  0183               	clrf	3
   327  07FD  120A  118A  2E95   	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssBANK0
   330  0026                     __pbssBANK0:
   331  0026                     _ENVIAR:
   332  0026                     	ds	1
   333  0027                     _TEMPORAL:
   334  0027                     	ds	1
   335  0028                     _TEMPERATURA:
   336  0028                     	ds	1
   337                           
   338                           	psect	cstackCOMMON
   339  0070                     __pcstackCOMMON:
   340  0070                     ?_SETUP:
   341  0070                     ??_SETUP:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_ADC_C:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_ADC_CONVCLK:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ??_ADC_CONVCLK:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_ADC_READ:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ??_ADC_READ:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_MAP:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_ADC_CONTINUE:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ??_ADC_CONTINUE:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_main:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?___wmul:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ADC_C@CH:	
   375                           ; 2 bytes @ 0x0
   376                           
   377  0070                     ___wmul@multiplier:	
   378                           ; 2 bytes @ 0x0
   379                           
   380                           
   381                           ; 2 bytes @ 0x0
   382  0070                     	ds	2
   383  0072                     ??_ADC_C:
   384  0072                     ADC_CONVCLK@CONV:	
   385                           ; 1 bytes @ 0x2
   386                           
   387  0072                     ADC_READ@JUSTIFICACION:	
   388                           ; 1 bytes @ 0x2
   389                           
   390  0072                     ___wmul@multiplicand:	
   391                           ; 1 bytes @ 0x2
   392                           
   393                           
   394                           ; 2 bytes @ 0x2
   395  0072                     	ds	1
   396  0073                     ADC_READ@VALOR_ADC:
   397                           
   398                           ; 1 bytes @ 0x3
   399  0073                     	ds	1
   400  0074                     ??___wmul:
   401  0074                     ___wmul@product:	
   402                           ; 1 bytes @ 0x4
   403                           
   404                           
   405                           ; 2 bytes @ 0x4
   406  0074                     	ds	2
   407  0076                     ?___awdiv:
   408  0076                     ___awdiv@divisor:	
   409                           ; 2 bytes @ 0x6
   410                           
   411                           
   412                           ; 2 bytes @ 0x6
   413  0076                     	ds	2
   414  0078                     ___awdiv@dividend:
   415                           
   416                           ; 2 bytes @ 0x8
   417  0078                     	ds	2
   418  007A                     ??___awdiv:
   419                           
   420                           ; 1 bytes @ 0xA
   421  007A                     	ds	1
   422  007B                     ??_MAP:
   423                           
   424                           ; 1 bytes @ 0xB
   425  007B                     	ds	3
   426                           
   427                           	psect	cstackBANK0
   428  0020                     __pcstackBANK0:
   429  0020                     ___awdiv@counter:
   430                           
   431                           ; 1 bytes @ 0x0
   432  0020                     	ds	1
   433  0021                     ___awdiv@sign:
   434                           
   435                           ; 1 bytes @ 0x1
   436  0021                     	ds	1
   437  0022                     ___awdiv@quotient:
   438                           
   439                           ; 2 bytes @ 0x2
   440  0022                     	ds	2
   441  0024                     ??_main:
   442                           
   443                           ; 1 bytes @ 0x4
   444  0024                     	ds	2
   445                           
   446                           	psect	maintext
   447  0695                     __pmaintext:	
   448 ;;
   449 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   450 ;;
   451 ;; *************** function _main *****************
   452 ;; Defined at:
   453 ;;		line 44 in file "Principal_Slave3.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : B00/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   467 ;;      Params:         0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0
   469 ;;      Temps:          0       2       0       0       0
   470 ;;      Totals:         0       2       0       0       0
   471 ;;Total ram usage:        2 bytes
   472 ;; Hardware stack levels required when called:    2
   473 ;; This function calls:
   474 ;;		_ADC_C
   475 ;;		_ADC_CONTINUE
   476 ;;		_ADC_CONVCLK
   477 ;;		_ADC_READ
   478 ;;		_MAP
   479 ;;		_SETUP
   480 ;; This function is called by:
   481 ;;		Startup code after reset
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           
   486                           ;psect for function _main
   487  0695                     _main:
   488  0695                     l1064:	
   489                           ;incstack = 0
   490                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   491                           
   492                           
   493                           ;Principal_Slave3.c: 46:  SETUP();
   494  0695  120A  118A  25CD  120A  118A  	fcall	_SETUP
   495  069A                     l1066:
   496                           
   497                           ;Principal_Slave3.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
   498  069A  301A               	movlw	26
   499  069B  1283               	bcf	3,5	;RP0=0, select bank0
   500  069C  1303               	bcf	3,6	;RP1=0, select bank0
   501  069D  00A5               	movwf	??_main+1
   502  069E  30F7               	movlw	247
   503  069F  00A4               	movwf	??_main
   504  06A0                     u377:
   505  06A0  0BA4               	decfsz	??_main,f
   506  06A1  2EA0               	goto	u377
   507  06A2  0BA5               	decfsz	??_main+1,f
   508  06A3  2EA0               	goto	u377
   509  06A4  2EA5               	nop2
   510  06A5                     l1068:
   511                           
   512                           ;Principal_Slave3.c: 49:     ADC_C(0);
   513  06A5  3000               	movlw	0
   514  06A6  00F0               	movwf	ADC_C@CH
   515  06A7  00F1               	movwf	ADC_C@CH+1
   516  06A8  120A  118A  275B  120A  118A  	fcall	_ADC_C
   517  06AD                     l1070:
   518                           
   519                           ;Principal_Slave3.c: 50:     ADC_CONVCLK(1);
   520  06AD  3001               	movlw	1
   521  06AE  120A  118A  2652  120A  118A  	fcall	_ADC_CONVCLK
   522  06B3                     l1072:
   523                           
   524                           ;Principal_Slave3.c: 53:  {;Principal_Slave3.c: 59:     TEMPERATURA = ADC_READ (0);
   525  06B3  3000               	movlw	0
   526  06B4  120A  118A  25E3  120A  118A  	fcall	_ADC_READ
   527  06B9  1283               	bcf	3,5	;RP0=0, select bank0
   528  06BA  1303               	bcf	3,6	;RP1=0, select bank0
   529  06BB  00A4               	movwf	??_main
   530  06BC  0824               	movf	??_main,w
   531  06BD  00A8               	movwf	_TEMPERATURA
   532  06BE                     l1074:
   533                           
   534                           ;Principal_Slave3.c: 60:     MAP();
   535  06BE  120A  118A  262A  120A  118A  	fcall	_MAP
   536  06C3                     l1076:
   537                           
   538                           ;Principal_Slave3.c: 61:     ADC_CONTINUE();
   539  06C3  120A  118A  25BA  120A  118A  	fcall	_ADC_CONTINUE
   540  06C8                     l1078:
   541                           
   542                           ;Principal_Slave3.c: 63:     if(TEMPERATURA < 13) {
   543  06C8  300D               	movlw	13
   544  06C9  1283               	bcf	3,5	;RP0=0, select bank0
   545  06CA  1303               	bcf	3,6	;RP1=0, select bank0
   546  06CB  0228               	subwf	_TEMPERATURA,w
   547  06CC  1803               	skipnc
   548  06CD  2ECF               	goto	u331
   549  06CE  2ED0               	goto	u330
   550  06CF                     u331:
   551  06CF  2ED4               	goto	l1082
   552  06D0                     u330:
   553  06D0                     l1080:
   554                           
   555                           ;Principal_Slave3.c: 65:         PORTBbits.RB0 = 0;
   556  06D0  1006               	bcf	6,0	;volatile
   557                           
   558                           ;Principal_Slave3.c: 66:         PORTBbits.RB1 = 0;
   559  06D1  1086               	bcf	6,1	;volatile
   560                           
   561                           ;Principal_Slave3.c: 67:         PORTBbits.RB2 = 1;
   562  06D2  1506               	bsf	6,2	;volatile
   563                           
   564                           ;Principal_Slave3.c: 68:         }
   565  06D3  2EB3               	goto	l1072
   566  06D4                     l1082:
   567  06D4  300D               	movlw	13
   568  06D5  0228               	subwf	_TEMPERATURA,w
   569  06D6  1C03               	skipc
   570  06D7  2ED9               	goto	u341
   571  06D8  2EDA               	goto	u340
   572  06D9                     u341:
   573  06D9  2EE4               	goto	l1088
   574  06DA                     u340:
   575  06DA                     l1084:
   576  06DA  3013               	movlw	19
   577  06DB  0228               	subwf	_TEMPERATURA,w
   578  06DC  1803               	skipnc
   579  06DD  2EDF               	goto	u351
   580  06DE  2EE0               	goto	u350
   581  06DF                     u351:
   582  06DF  2EE4               	goto	l1088
   583  06E0                     u350:
   584  06E0                     l1086:
   585                           
   586                           ;Principal_Slave3.c: 71:         PORTBbits.RB0 = 0;
   587  06E0  1006               	bcf	6,0	;volatile
   588                           
   589                           ;Principal_Slave3.c: 72:         PORTBbits.RB1 = 1;
   590  06E1  1486               	bsf	6,1	;volatile
   591                           
   592                           ;Principal_Slave3.c: 73:         PORTBbits.RB2 = 0;
   593  06E2  1106               	bcf	6,2	;volatile
   594                           
   595                           ;Principal_Slave3.c: 74:         }
   596  06E3  2EB3               	goto	l1072
   597  06E4                     l1088:
   598  06E4  3013               	movlw	19
   599  06E5  0228               	subwf	_TEMPERATURA,w
   600  06E6  1C03               	skipc
   601  06E7  2EE9               	goto	u361
   602  06E8  2EEA               	goto	u360
   603  06E9                     u361:
   604  06E9  2EEE               	goto	l55
   605  06EA                     u360:
   606  06EA                     l1090:
   607                           
   608                           ;Principal_Slave3.c: 78:         PORTBbits.RB0 = 1;
   609  06EA  1406               	bsf	6,0	;volatile
   610                           
   611                           ;Principal_Slave3.c: 79:         PORTBbits.RB1 = 0;
   612  06EB  1086               	bcf	6,1	;volatile
   613                           
   614                           ;Principal_Slave3.c: 80:         PORTBbits.RB2 = 0;
   615  06EC  1106               	bcf	6,2	;volatile
   616  06ED  2EB3               	goto	l1072
   617  06EE                     l55:
   618  06EE  2EB3               	goto	l1072
   619  06EF  120A  118A  2800   	ljmp	start
   620  06F2                     __end_of_main:
   621                           
   622                           	psect	text1
   623  05CD                     __ptext1:	
   624 ;; *************** function _SETUP *****************
   625 ;; Defined at:
   626 ;;		line 89 in file "Principal_Slave3.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0
   643 ;;      Totals:         0       0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           
   654                           ;psect for function _SETUP
   655  05CD                     _SETUP:
   656  05CD                     l992:	
   657                           ;incstack = 0
   658                           ; Regs used in _SETUP: [wreg+status,2]
   659                           
   660                           
   661                           ;Principal_Slave3.c: 91:         PORTA = 0;
   662  05CD  1283               	bcf	3,5	;RP0=0, select bank0
   663  05CE  1303               	bcf	3,6	;RP1=0, select bank0
   664  05CF  0185               	clrf	5	;volatile
   665                           
   666                           ;Principal_Slave3.c: 92:         PORTB = 0;
   667  05D0  0186               	clrf	6	;volatile
   668                           
   669                           ;Principal_Slave3.c: 93:         PORTC = 0;
   670  05D1  0187               	clrf	7	;volatile
   671                           
   672                           ;Principal_Slave3.c: 94:         PORTD = 0;
   673  05D2  0188               	clrf	8	;volatile
   674                           
   675                           ;Principal_Slave3.c: 95:         PORTE = 0;
   676  05D3  0189               	clrf	9	;volatile
   677  05D4                     l994:
   678                           
   679                           ;Principal_Slave3.c: 97:         TRISA = 0b00100001;
   680  05D4  3021               	movlw	33
   681  05D5  1683               	bsf	3,5	;RP0=1, select bank1
   682  05D6  1303               	bcf	3,6	;RP1=0, select bank1
   683  05D7  0085               	movwf	5	;volatile
   684  05D8                     l996:
   685                           
   686                           ;Principal_Slave3.c: 98:         TRISB = 0;
   687  05D8  0186               	clrf	6	;volatile
   688  05D9                     l998:
   689                           
   690                           ;Principal_Slave3.c: 99:         TRISD = 0;
   691  05D9  0188               	clrf	8	;volatile
   692  05DA                     l1000:
   693                           
   694                           ;Principal_Slave3.c: 100:         TRISC = 0b00101000;
   695  05DA  3028               	movlw	40
   696  05DB  0087               	movwf	7	;volatile
   697                           
   698                           ;Principal_Slave3.c: 101:         TRISE = 0;
   699  05DC  0189               	clrf	9	;volatile
   700                           
   701                           ;Principal_Slave3.c: 103:         ANSEL = 0;
   702  05DD  1683               	bsf	3,5	;RP0=1, select bank3
   703  05DE  1703               	bsf	3,6	;RP1=1, select bank3
   704  05DF  0188               	clrf	8	;volatile
   705  05E0                     l1002:
   706                           
   707                           ;Principal_Slave3.c: 104:         ANSELbits.ANS0 = 1;
   708  05E0  1408               	bsf	8,0	;volatile
   709                           
   710                           ;Principal_Slave3.c: 105:         ANSELH = 0;
   711  05E1  0189               	clrf	9	;volatile
   712  05E2                     l64:
   713  05E2  0008               	return
   714  05E3                     __end_of_SETUP:
   715                           
   716                           	psect	text2
   717  062A                     __ptext2:	
   718 ;; *************** function _MAP *****************
   719 ;; Defined at:
   720 ;;		line 109 in file "Principal_Slave3.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          3       0       0       0       0
   737 ;;      Totals:         3       0       0       0       0
   738 ;;Total ram usage:        3 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    1
   741 ;; This function calls:
   742 ;;		___awdiv
   743 ;;		___wmul
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _MAP
   751  062A                     _MAP:
   752  062A                     l1046:	
   753                           ;incstack = 0
   754                           ; Regs used in _MAP: [wreg+status,2+status,0+pclath+cstack]
   755                           
   756  062A                     l1052:	
   757                           ;Principal_Slave3.c: 111:     if(TEMPERATURA < 0){
   758                           
   759                           
   760                           ;Principal_Slave3.c: 116:         ENVIAR = ((TEMPERATURA *500)/1024);
   761  062A  3000               	movlw	0
   762  062B  00F6               	movwf	___awdiv@divisor
   763  062C  3004               	movlw	4
   764  062D  00F7               	movwf	___awdiv@divisor+1
   765  062E  1283               	bcf	3,5	;RP0=0, select bank0
   766  062F  1303               	bcf	3,6	;RP1=0, select bank0
   767  0630  0828               	movf	_TEMPERATURA,w
   768  0631  00FB               	movwf	??_MAP
   769  0632  01FC               	clrf	??_MAP+1
   770  0633  087B               	movf	??_MAP,w
   771  0634  00F0               	movwf	___wmul@multiplier
   772  0635  087C               	movf	??_MAP+1,w
   773  0636  00F1               	movwf	___wmul@multiplier+1
   774  0637  30F4               	movlw	244
   775  0638  00F2               	movwf	___wmul@multiplicand
   776  0639  3001               	movlw	1
   777  063A  00F3               	movwf	___wmul@multiplicand+1
   778  063B  120A  118A  2605  120A  118A  	fcall	___wmul
   779  0640  0871               	movf	?___wmul+1,w
   780  0641  00F9               	movwf	___awdiv@dividend+1
   781  0642  0870               	movf	?___wmul,w
   782  0643  00F8               	movwf	___awdiv@dividend
   783  0644  120A  118A  26F2  120A  118A  	fcall	___awdiv
   784  0649  0876               	movf	?___awdiv,w
   785  064A  00FD               	movwf	??_MAP+2
   786  064B  087D               	movf	??_MAP+2,w
   787  064C  1283               	bcf	3,5	;RP0=0, select bank0
   788  064D  1303               	bcf	3,6	;RP1=0, select bank0
   789  064E  00A6               	movwf	_ENVIAR
   790  064F                     l1054:
   791                           
   792                           ;Principal_Slave3.c: 117:         PORTD = ENVIAR;
   793  064F  0826               	movf	_ENVIAR,w
   794  0650  0088               	movwf	8	;volatile
   795  0651                     l69:
   796  0651  0008               	return
   797  0652                     __end_of_MAP:
   798                           
   799                           	psect	text3
   800  0605                     __ptext3:	
   801 ;; *************** function ___wmul *****************
   802 ;; Defined at:
   803 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  multiplier      2    0[COMMON] unsigned int 
   806 ;;  multiplicand    2    2[COMMON] unsigned int 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  product         2    4[COMMON] unsigned int 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  2    0[COMMON] unsigned int 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         4       0       0       0       0
   819 ;;      Locals:         2       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0
   821 ;;      Totals:         6       0       0       0       0
   822 ;;Total ram usage:        6 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		_MAP
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function ___wmul
   833  0605                     ___wmul:
   834  0605                     l934:	
   835                           ;incstack = 0
   836                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   837                           
   838  0605  01F4               	clrf	___wmul@product
   839  0606  01F5               	clrf	___wmul@product+1
   840  0607                     l936:
   841  0607  1C70               	btfss	___wmul@multiplier,0
   842  0608  2E0A               	goto	u191
   843  0609  2E0B               	goto	u190
   844  060A                     u191:
   845  060A  2E11               	goto	l210
   846  060B                     u190:
   847  060B                     l938:
   848  060B  0872               	movf	___wmul@multiplicand,w
   849  060C  07F4               	addwf	___wmul@product,f
   850  060D  1803               	skipnc
   851  060E  0AF5               	incf	___wmul@product+1,f
   852  060F  0873               	movf	___wmul@multiplicand+1,w
   853  0610  07F5               	addwf	___wmul@product+1,f
   854  0611                     l210:
   855  0611  3001               	movlw	1
   856  0612                     u205:
   857  0612  1003               	clrc
   858  0613  0DF2               	rlf	___wmul@multiplicand,f
   859  0614  0DF3               	rlf	___wmul@multiplicand+1,f
   860  0615  3EFF               	addlw	-1
   861  0616  1D03               	skipz
   862  0617  2E12               	goto	u205
   863  0618                     l940:
   864  0618  3001               	movlw	1
   865  0619                     u215:
   866  0619  1003               	clrc
   867  061A  0CF1               	rrf	___wmul@multiplier+1,f
   868  061B  0CF0               	rrf	___wmul@multiplier,f
   869  061C  3EFF               	addlw	-1
   870  061D  1D03               	skipz
   871  061E  2E19               	goto	u215
   872  061F                     l942:
   873  061F  0870               	movf	___wmul@multiplier,w
   874  0620  0471               	iorwf	___wmul@multiplier+1,w
   875  0621  1D03               	btfss	3,2
   876  0622  2E24               	goto	u221
   877  0623  2E25               	goto	u220
   878  0624                     u221:
   879  0624  2E07               	goto	l936
   880  0625                     u220:
   881  0625                     l944:
   882  0625  0875               	movf	___wmul@product+1,w
   883  0626  00F1               	movwf	?___wmul+1
   884  0627  0874               	movf	___wmul@product,w
   885  0628  00F0               	movwf	?___wmul
   886  0629                     l212:
   887  0629  0008               	return
   888  062A                     __end_of___wmul:
   889                           
   890                           	psect	text4
   891  06F2                     __ptext4:	
   892 ;; *************** function ___awdiv *****************
   893 ;; Defined at:
   894 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;  divisor         2    6[COMMON] int 
   897 ;;  dividend        2    8[COMMON] int 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  quotient        2    2[BANK0 ] int 
   900 ;;  sign            1    1[BANK0 ] unsigned char 
   901 ;;  counter         1    0[BANK0 ] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  2    6[COMMON] int 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         4       0       0       0       0
   912 ;;      Locals:         0       4       0       0       0
   913 ;;      Temps:          1       0       0       0       0
   914 ;;      Totals:         5       4       0       0       0
   915 ;;Total ram usage:        9 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_MAP
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function ___awdiv
   926  06F2                     ___awdiv:
   927  06F2                     l948:	
   928                           ;incstack = 0
   929                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   930                           
   931  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   932  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   933  06F4  01A1               	clrf	___awdiv@sign
   934  06F5                     l950:
   935  06F5  1FF7               	btfss	___awdiv@divisor+1,7
   936  06F6  2EF8               	goto	u231
   937  06F7  2EF9               	goto	u230
   938  06F8                     u231:
   939  06F8  2F00               	goto	l956
   940  06F9                     u230:
   941  06F9                     l952:
   942  06F9  09F6               	comf	___awdiv@divisor,f
   943  06FA  09F7               	comf	___awdiv@divisor+1,f
   944  06FB  0AF6               	incf	___awdiv@divisor,f
   945  06FC  1903               	skipnz
   946  06FD  0AF7               	incf	___awdiv@divisor+1,f
   947  06FE                     l954:
   948  06FE  01A1               	clrf	___awdiv@sign
   949  06FF  0AA1               	incf	___awdiv@sign,f
   950  0700                     l956:
   951  0700  1FF9               	btfss	___awdiv@dividend+1,7
   952  0701  2F03               	goto	u241
   953  0702  2F04               	goto	u240
   954  0703                     u241:
   955  0703  2F0D               	goto	l962
   956  0704                     u240:
   957  0704                     l958:
   958  0704  09F8               	comf	___awdiv@dividend,f
   959  0705  09F9               	comf	___awdiv@dividend+1,f
   960  0706  0AF8               	incf	___awdiv@dividend,f
   961  0707  1903               	skipnz
   962  0708  0AF9               	incf	___awdiv@dividend+1,f
   963  0709                     l960:
   964  0709  3001               	movlw	1
   965  070A  00FA               	movwf	??___awdiv
   966  070B  087A               	movf	??___awdiv,w
   967  070C  06A1               	xorwf	___awdiv@sign,f
   968  070D                     l962:
   969  070D  01A2               	clrf	___awdiv@quotient
   970  070E  01A3               	clrf	___awdiv@quotient+1
   971  070F                     l964:
   972  070F  0876               	movf	___awdiv@divisor,w
   973  0710  0477               	iorwf	___awdiv@divisor+1,w
   974  0711  1903               	btfsc	3,2
   975  0712  2F14               	goto	u251
   976  0713  2F15               	goto	u250
   977  0714                     u251:
   978  0714  2F4C               	goto	l984
   979  0715                     u250:
   980  0715                     l966:
   981  0715  01A0               	clrf	___awdiv@counter
   982  0716  0AA0               	incf	___awdiv@counter,f
   983  0717  2F23               	goto	l972
   984  0718                     l968:
   985  0718  3001               	movlw	1
   986  0719                     u265:
   987  0719  1003               	clrc
   988  071A  0DF6               	rlf	___awdiv@divisor,f
   989  071B  0DF7               	rlf	___awdiv@divisor+1,f
   990  071C  3EFF               	addlw	-1
   991  071D  1D03               	skipz
   992  071E  2F19               	goto	u265
   993  071F                     l970:
   994  071F  3001               	movlw	1
   995  0720  00FA               	movwf	??___awdiv
   996  0721  087A               	movf	??___awdiv,w
   997  0722  07A0               	addwf	___awdiv@counter,f
   998  0723                     l972:
   999  0723  1FF7               	btfss	___awdiv@divisor+1,7
  1000  0724  2F26               	goto	u271
  1001  0725  2F27               	goto	u270
  1002  0726                     u271:
  1003  0726  2F18               	goto	l968
  1004  0727                     u270:
  1005  0727                     l974:
  1006  0727  3001               	movlw	1
  1007  0728                     u285:
  1008  0728  1003               	clrc
  1009  0729  0DA2               	rlf	___awdiv@quotient,f
  1010  072A  0DA3               	rlf	___awdiv@quotient+1,f
  1011  072B  3EFF               	addlw	-1
  1012  072C  1D03               	skipz
  1013  072D  2F28               	goto	u285
  1014  072E  0877               	movf	___awdiv@divisor+1,w
  1015  072F  0279               	subwf	___awdiv@dividend+1,w
  1016  0730  1D03               	skipz
  1017  0731  2F34               	goto	u295
  1018  0732  0876               	movf	___awdiv@divisor,w
  1019  0733  0278               	subwf	___awdiv@dividend,w
  1020  0734                     u295:
  1021  0734  1C03               	skipc
  1022  0735  2F37               	goto	u291
  1023  0736  2F38               	goto	u290
  1024  0737                     u291:
  1025  0737  2F3F               	goto	l980
  1026  0738                     u290:
  1027  0738                     l976:
  1028  0738  0876               	movf	___awdiv@divisor,w
  1029  0739  02F8               	subwf	___awdiv@dividend,f
  1030  073A  0877               	movf	___awdiv@divisor+1,w
  1031  073B  1C03               	skipc
  1032  073C  03F9               	decf	___awdiv@dividend+1,f
  1033  073D  02F9               	subwf	___awdiv@dividend+1,f
  1034  073E                     l978:
  1035  073E  1422               	bsf	___awdiv@quotient,0
  1036  073F                     l980:
  1037  073F  3001               	movlw	1
  1038  0740                     u305:
  1039  0740  1003               	clrc
  1040  0741  0CF7               	rrf	___awdiv@divisor+1,f
  1041  0742  0CF6               	rrf	___awdiv@divisor,f
  1042  0743  3EFF               	addlw	-1
  1043  0744  1D03               	skipz
  1044  0745  2F40               	goto	u305
  1045  0746                     l982:
  1046  0746  3001               	movlw	1
  1047  0747  02A0               	subwf	___awdiv@counter,f
  1048  0748  1D03               	btfss	3,2
  1049  0749  2F4B               	goto	u311
  1050  074A  2F4C               	goto	u310
  1051  074B                     u311:
  1052  074B  2F27               	goto	l974
  1053  074C                     u310:
  1054  074C                     l984:
  1055  074C  0821               	movf	___awdiv@sign,w
  1056  074D  1903               	btfsc	3,2
  1057  074E  2F50               	goto	u321
  1058  074F  2F51               	goto	u320
  1059  0750                     u321:
  1060  0750  2F56               	goto	l988
  1061  0751                     u320:
  1062  0751                     l986:
  1063  0751  09A2               	comf	___awdiv@quotient,f
  1064  0752  09A3               	comf	___awdiv@quotient+1,f
  1065  0753  0AA2               	incf	___awdiv@quotient,f
  1066  0754  1903               	skipnz
  1067  0755  0AA3               	incf	___awdiv@quotient+1,f
  1068  0756                     l988:
  1069  0756  0823               	movf	___awdiv@quotient+1,w
  1070  0757  00F7               	movwf	?___awdiv+1
  1071  0758  0822               	movf	___awdiv@quotient,w
  1072  0759  00F6               	movwf	?___awdiv
  1073  075A                     l363:
  1074  075A  0008               	return
  1075  075B                     __end_of___awdiv:
  1076                           
  1077                           	psect	text5
  1078  05E3                     __ptext5:	
  1079 ;; *************** function _ADC_READ *****************
  1080 ;; Defined at:
  1081 ;;		line 164 in file "ADC.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  JUSTIFICACIO    1    wreg     unsigned char 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  JUSTIFICACIO    1    2[COMMON] unsigned char 
  1086 ;;  VALOR_ADC       1    3[COMMON] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      unsigned char 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         2       0       0       0       0
  1098 ;;      Temps:          2       0       0       0       0
  1099 ;;      Totals:         4       0       0       0       0
  1100 ;;Total ram usage:        4 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           
  1110                           ;psect for function _ADC_READ
  1111  05E3                     _ADC_READ:
  1112                           
  1113                           ;incstack = 0
  1114                           ; Regs used in _ADC_READ: [wreg-fsr0h+status,2+status,0]
  1115                           ;ADC_READ@JUSTIFICACION stored from wreg
  1116  05E3  00F2               	movwf	ADC_READ@JUSTIFICACION
  1117  05E4                     l1028:
  1118                           
  1119                           ;ADC.c: 168:     switch (JUSTIFICACION){
  1120  05E4  2DF3               	goto	l1036
  1121  05E5                     l1030:
  1122                           
  1123                           ;ADC.c: 170:             VALOR_ADC = ADRESH;
  1124  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1125  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1126  05E7  081E               	movf	30,w	;volatile
  1127  05E8  00F0               	movwf	??_ADC_READ
  1128  05E9  0870               	movf	??_ADC_READ,w
  1129  05EA  00F3               	movwf	ADC_READ@VALOR_ADC
  1130                           
  1131                           ;ADC.c: 171:             break;
  1132  05EB  2E03               	goto	l1038
  1133  05EC                     l1032:
  1134                           
  1135                           ;ADC.c: 173:             VALOR_ADC = ADRESL;
  1136  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  1137  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  1138  05EE  081E               	movf	30,w	;volatile
  1139  05EF  00F0               	movwf	??_ADC_READ
  1140  05F0  0870               	movf	??_ADC_READ,w
  1141  05F1  00F3               	movwf	ADC_READ@VALOR_ADC
  1142                           
  1143                           ;ADC.c: 174:             break;
  1144  05F2  2E03               	goto	l1038
  1145  05F3                     l1036:
  1146  05F3  0872               	movf	ADC_READ@JUSTIFICACION,w
  1147  05F4  00F0               	movwf	??_ADC_READ
  1148  05F5  01F1               	clrf	??_ADC_READ+1
  1149                           
  1150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1151                           ; Switch size 1, requested type "simple"
  1152                           ; Number of cases is 1, Range of values is 0 to 0
  1153                           ; switch strategies available:
  1154                           ; Name         Instructions Cycles
  1155                           ; simple_byte            4     3 (average)
  1156                           ; direct_byte           11     8 (fixed)
  1157                           ; jumptable            260     6 (fixed)
  1158                           ;	Chosen strategy is simple_byte
  1159  05F6  0871               	movf	??_ADC_READ+1,w
  1160  05F7  3A00               	xorlw	0	; case 0
  1161  05F8  1903               	skipnz
  1162  05F9  2DFB               	goto	l1152
  1163  05FA  2DE5               	goto	l1030
  1164  05FB                     l1152:
  1165                           
  1166                           ; Switch size 1, requested type "simple"
  1167                           ; Number of cases is 2, Range of values is 0 to 1
  1168                           ; switch strategies available:
  1169                           ; Name         Instructions Cycles
  1170                           ; simple_byte            7     4 (average)
  1171                           ; direct_byte           14     8 (fixed)
  1172                           ; jumptable            260     6 (fixed)
  1173                           ;	Chosen strategy is simple_byte
  1174  05FB  0870               	movf	??_ADC_READ,w
  1175  05FC  3A00               	xorlw	0	; case 0
  1176  05FD  1903               	skipnz
  1177  05FE  2DE5               	goto	l1030
  1178  05FF  3A01               	xorlw	1	; case 1
  1179  0600  1903               	skipnz
  1180  0601  2DEC               	goto	l1032
  1181  0602  2DE5               	goto	l1030
  1182  0603                     l1038:
  1183                           
  1184                           ;ADC.c: 178:     return (VALOR_ADC );
  1185  0603  0873               	movf	ADC_READ@VALOR_ADC,w
  1186  0604                     l124:
  1187  0604  0008               	return
  1188  0605                     __end_of_ADC_READ:
  1189                           
  1190                           	psect	text6
  1191  0652                     __ptext6:	
  1192 ;; *************** function _ADC_CONVCLK *****************
  1193 ;; Defined at:
  1194 ;;		line 117 in file "ADC.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  CONV            1    wreg     unsigned char 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;  CONV            1    2[COMMON] unsigned char 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1208 ;;      Params:         0       0       0       0       0
  1209 ;;      Locals:         1       0       0       0       0
  1210 ;;      Temps:          2       0       0       0       0
  1211 ;;      Totals:         3       0       0       0       0
  1212 ;;Total ram usage:        3 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; This function calls:
  1215 ;;		Nothing
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           
  1222                           ;psect for function _ADC_CONVCLK
  1223  0652                     _ADC_CONVCLK:
  1224                           
  1225                           ;incstack = 0
  1226                           ; Regs used in _ADC_CONVCLK: [wreg-fsr0h+status,2+status,0]
  1227                           ;ADC_CONVCLK@CONV stored from wreg
  1228  0652  00F2               	movwf	ADC_CONVCLK@CONV
  1229  0653                     l1014:
  1230                           
  1231                           ;ADC.c: 119:       switch(CONV){
  1232  0653  2E6D               	goto	l1018
  1233  0654                     l107:	
  1234                           ;ADC.c: 121:         case 0:
  1235                           
  1236                           
  1237                           ;ADC.c: 122:             ADCON0bits.ADCS0 = 0;
  1238  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0656  131F               	bcf	31,6	;volatile
  1241                           
  1242                           ;ADC.c: 123:             ADCON0bits.ADCS0 = 0;
  1243  0657  131F               	bcf	31,6	;volatile
  1244                           
  1245                           ;ADC.c: 124:             break;
  1246  0658  2E83               	goto	l108
  1247  0659                     l109:	
  1248                           ;ADC.c: 126:         case 1:
  1249                           
  1250                           
  1251                           ;ADC.c: 127:             ADCON0bits.ADCS0 = 0;
  1252  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1253  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1254  065B  131F               	bcf	31,6	;volatile
  1255                           
  1256                           ;ADC.c: 128:             ADCON0bits.ADCS0 = 1;
  1257  065C  171F               	bsf	31,6	;volatile
  1258                           
  1259                           ;ADC.c: 129:             break;
  1260  065D  2E83               	goto	l108
  1261  065E                     l110:	
  1262                           ;ADC.c: 131:         case 2:
  1263                           
  1264                           
  1265                           ;ADC.c: 132:             ADCON0bits.ADCS0 = 1;
  1266  065E  1283               	bcf	3,5	;RP0=0, select bank0
  1267  065F  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0660  171F               	bsf	31,6	;volatile
  1269                           
  1270                           ;ADC.c: 133:             ADCON0bits.ADCS0 = 0;
  1271  0661  131F               	bcf	31,6	;volatile
  1272                           
  1273                           ;ADC.c: 134:             break;
  1274  0662  2E83               	goto	l108
  1275  0663                     l111:	
  1276                           ;ADC.c: 136:         case 3:
  1277                           
  1278                           
  1279                           ;ADC.c: 137:             ADCON0bits.ADCS0 = 1;
  1280  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0665  171F               	bsf	31,6	;volatile
  1283                           
  1284                           ;ADC.c: 138:             ADCON0bits.ADCS0 = 1;
  1285  0666  171F               	bsf	31,6	;volatile
  1286                           
  1287                           ;ADC.c: 139:             break;
  1288  0667  2E83               	goto	l108
  1289  0668                     l112:	
  1290                           ;ADC.c: 141:         default:
  1291                           
  1292                           
  1293                           ;ADC.c: 142:             ADCON0bits.ADCS0 = 0;
  1294  0668  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0669  1303               	bcf	3,6	;RP1=0, select bank0
  1296  066A  131F               	bcf	31,6	;volatile
  1297                           
  1298                           ;ADC.c: 143:             ADCON0bits.ADCS0 = 0;
  1299  066B  131F               	bcf	31,6	;volatile
  1300                           
  1301                           ;ADC.c: 144:             break;
  1302  066C  2E83               	goto	l108
  1303  066D                     l1018:
  1304  066D  0872               	movf	ADC_CONVCLK@CONV,w
  1305  066E  00F0               	movwf	??_ADC_CONVCLK
  1306  066F  01F1               	clrf	??_ADC_CONVCLK+1
  1307                           
  1308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1309                           ; Switch size 1, requested type "simple"
  1310                           ; Number of cases is 1, Range of values is 0 to 0
  1311                           ; switch strategies available:
  1312                           ; Name         Instructions Cycles
  1313                           ; simple_byte            4     3 (average)
  1314                           ; direct_byte           11     8 (fixed)
  1315                           ; jumptable            260     6 (fixed)
  1316                           ;	Chosen strategy is simple_byte
  1317  0670  0871               	movf	??_ADC_CONVCLK+1,w
  1318  0671  3A00               	xorlw	0	; case 0
  1319  0672  1903               	skipnz
  1320  0673  2E75               	goto	l1154
  1321  0674  2E68               	goto	l112
  1322  0675                     l1154:
  1323                           
  1324                           ; Switch size 1, requested type "simple"
  1325                           ; Number of cases is 4, Range of values is 0 to 3
  1326                           ; switch strategies available:
  1327                           ; Name         Instructions Cycles
  1328                           ; simple_byte           13     7 (average)
  1329                           ; direct_byte           20     8 (fixed)
  1330                           ; jumptable            260     6 (fixed)
  1331                           ;	Chosen strategy is simple_byte
  1332  0675  0870               	movf	??_ADC_CONVCLK,w
  1333  0676  3A00               	xorlw	0	; case 0
  1334  0677  1903               	skipnz
  1335  0678  2E54               	goto	l107
  1336  0679  3A01               	xorlw	1	; case 1
  1337  067A  1903               	skipnz
  1338  067B  2E59               	goto	l109
  1339  067C  3A03               	xorlw	3	; case 2
  1340  067D  1903               	skipnz
  1341  067E  2E5E               	goto	l110
  1342  067F  3A01               	xorlw	1	; case 3
  1343  0680  1903               	skipnz
  1344  0681  2E63               	goto	l111
  1345  0682  2E68               	goto	l112
  1346  0683                     l108:
  1347                           
  1348                           ;ADC.c: 147:     ADCON0bits.ADON = 1;
  1349  0683  141F               	bsf	31,0	;volatile
  1350                           
  1351                           ;ADC.c: 148:     PIR1bits.ADIF = 0;
  1352  0684  130C               	bcf	12,6	;volatile
  1353                           
  1354                           ;ADC.c: 149:     PIE1bits.ADIE = 1;
  1355  0685  1683               	bsf	3,5	;RP0=1, select bank1
  1356  0686  1303               	bcf	3,6	;RP1=0, select bank1
  1357  0687  170C               	bsf	12,6	;volatile
  1358                           
  1359                           ;ADC.c: 150:     INTCONbits.PEIE = 1;
  1360  0688  170B               	bsf	11,6	;volatile
  1361  0689                     l1020:
  1362                           
  1363                           ;ADC.c: 151:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1364  0689  304E               	movlw	78
  1365  068A  00F1               	movwf	??_ADC_CONVCLK+1
  1366  068B  30EB               	movlw	235
  1367  068C  00F0               	movwf	??_ADC_CONVCLK
  1368  068D                     u387:
  1369  068D  0BF0               	decfsz	??_ADC_CONVCLK,f
  1370  068E  2E8D               	goto	u387
  1371  068F  0BF1               	decfsz	??_ADC_CONVCLK+1,f
  1372  0690  2E8D               	goto	u387
  1373  0691                     l1022:
  1374                           
  1375                           ;ADC.c: 152:     ADCON0bits.GO_nDONE = 1;
  1376  0691  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0692  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0693  149F               	bsf	31,1	;volatile
  1379  0694                     l113:
  1380  0694  0008               	return
  1381  0695                     __end_of_ADC_CONVCLK:
  1382                           
  1383                           	psect	text7
  1384  05BA                     __ptext7:	
  1385 ;; *************** function _ADC_CONTINUE *****************
  1386 ;; Defined at:
  1387 ;;		line 156 in file "ADC.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1401 ;;      Params:         0       0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0
  1403 ;;      Temps:          2       0       0       0       0
  1404 ;;      Totals:         2       0       0       0       0
  1405 ;;Total ram usage:        2 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _ADC_CONTINUE
  1416  05BA                     _ADC_CONTINUE:
  1417  05BA                     l1056:	
  1418                           ;incstack = 0
  1419                           ; Regs used in _ADC_CONTINUE: [wreg]
  1420                           
  1421                           
  1422                           ;ADC.c: 157:     PIR1bits.ADIF = 0;
  1423  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1424  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1425  05BC  130C               	bcf	12,6	;volatile
  1426                           
  1427                           ;ADC.c: 158:     PIE1bits.ADIE = 1;
  1428  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  1429  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  1430  05BF  170C               	bsf	12,6	;volatile
  1431  05C0                     l1058:
  1432                           
  1433                           ;ADC.c: 159:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1434  05C0  3034               	movlw	52
  1435  05C1  00F1               	movwf	??_ADC_CONTINUE+1
  1436  05C2  30F1               	movlw	241
  1437  05C3  00F0               	movwf	??_ADC_CONTINUE
  1438  05C4                     u397:
  1439  05C4  0BF0               	decfsz	??_ADC_CONTINUE,f
  1440  05C5  2DC4               	goto	u397
  1441  05C6  0BF1               	decfsz	??_ADC_CONTINUE+1,f
  1442  05C7  2DC4               	goto	u397
  1443  05C8  2DC9               	nop2
  1444  05C9                     l1060:
  1445                           
  1446                           ;ADC.c: 160:     ADCON0bits.GO_nDONE = 1;
  1447  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1448  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1449  05CB  149F               	bsf	31,1	;volatile
  1450  05CC                     l116:
  1451  05CC  0008               	return
  1452  05CD                     __end_of_ADC_CONTINUE:
  1453                           
  1454                           	psect	text8
  1455  075B                     __ptext8:	
  1456 ;; *************** function _ADC_C *****************
  1457 ;; Defined at:
  1458 ;;		line 7 in file "ADC.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  CH              2    0[COMMON] unsigned int 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         2       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0
  1475 ;;      Totals:         2       0       0       0       0
  1476 ;;Total ram usage:        2 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; This function calls:
  1479 ;;		Nothing
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           
  1486                           ;psect for function _ADC_C
  1487  075B                     _ADC_C:
  1488  075B                     l1004:	
  1489                           ;incstack = 0
  1490                           ; Regs used in _ADC_C: [wreg-fsr0h+status,2+status,0]
  1491                           
  1492                           
  1493                           ;ADC.c: 9:   switch(CH){
  1494  075B  2FC5               	goto	l1008
  1495  075C                     l87:	
  1496                           ;ADC.c: 11:          case 0:
  1497                           
  1498                           
  1499                           ;ADC.c: 12:             ADCON0bits.CHS3 = 0;
  1500  075C  1283               	bcf	3,5	;RP0=0, select bank0
  1501  075D  1303               	bcf	3,6	;RP1=0, select bank0
  1502  075E  129F               	bcf	31,5	;volatile
  1503                           
  1504                           ;ADC.c: 13:             ADCON0bits.CHS2 = 0;
  1505  075F  121F               	bcf	31,4	;volatile
  1506                           
  1507                           ;ADC.c: 14:             ADCON0bits.CHS1 = 0;
  1508  0760  119F               	bcf	31,3	;volatile
  1509                           
  1510                           ;ADC.c: 15:             ADCON0bits.CHS0 = 0;
  1511  0761  111F               	bcf	31,2	;volatile
  1512                           
  1513                           ;ADC.c: 16:             break;
  1514  0762  2FF6               	goto	l103
  1515  0763                     l89:	
  1516                           ;ADC.c: 18:         case 1:
  1517                           
  1518                           
  1519                           ;ADC.c: 19:             ADCON0bits.CHS3 = 0;
  1520  0763  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0764  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0765  129F               	bcf	31,5	;volatile
  1523                           
  1524                           ;ADC.c: 20:             ADCON0bits.CHS2 = 0;
  1525  0766  121F               	bcf	31,4	;volatile
  1526                           
  1527                           ;ADC.c: 21:             ADCON0bits.CHS1 = 0;
  1528  0767  119F               	bcf	31,3	;volatile
  1529                           
  1530                           ;ADC.c: 22:             ADCON0bits.CHS0 = 1;
  1531  0768  151F               	bsf	31,2	;volatile
  1532                           
  1533                           ;ADC.c: 23:             break;
  1534  0769  2FF6               	goto	l103
  1535  076A                     l90:	
  1536                           ;ADC.c: 25:         case 2:
  1537                           
  1538                           
  1539                           ;ADC.c: 26:             ADCON0bits.CHS3 = 0;
  1540  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1541  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1542  076C  129F               	bcf	31,5	;volatile
  1543                           
  1544                           ;ADC.c: 27:             ADCON0bits.CHS2 = 0;
  1545  076D  121F               	bcf	31,4	;volatile
  1546                           
  1547                           ;ADC.c: 28:             ADCON0bits.CHS1 = 1;
  1548  076E  159F               	bsf	31,3	;volatile
  1549                           
  1550                           ;ADC.c: 29:             ADCON0bits.CHS0 = 0;
  1551  076F  111F               	bcf	31,2	;volatile
  1552                           
  1553                           ;ADC.c: 30:             break;
  1554  0770  2FF6               	goto	l103
  1555  0771                     l91:	
  1556                           ;ADC.c: 32:         case 3:
  1557                           
  1558                           
  1559                           ;ADC.c: 33:             ADCON0bits.CHS3 = 0;
  1560  0771  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0772  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0773  129F               	bcf	31,5	;volatile
  1563                           
  1564                           ;ADC.c: 34:             ADCON0bits.CHS2 = 0;
  1565  0774  121F               	bcf	31,4	;volatile
  1566                           
  1567                           ;ADC.c: 35:             ADCON0bits.CHS1 = 1;
  1568  0775  159F               	bsf	31,3	;volatile
  1569                           
  1570                           ;ADC.c: 36:             ADCON0bits.CHS0 = 1;
  1571  0776  151F               	bsf	31,2	;volatile
  1572                           
  1573                           ;ADC.c: 37:             break;
  1574  0777  2FF6               	goto	l103
  1575  0778                     l92:	
  1576                           ;ADC.c: 39:         case 4:
  1577                           
  1578                           
  1579                           ;ADC.c: 40:             ADCON0bits.CHS3 = 0;
  1580  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1582  077A  129F               	bcf	31,5	;volatile
  1583                           
  1584                           ;ADC.c: 41:             ADCON0bits.CHS2 = 1;
  1585  077B  161F               	bsf	31,4	;volatile
  1586                           
  1587                           ;ADC.c: 42:             ADCON0bits.CHS1 = 0;
  1588  077C  119F               	bcf	31,3	;volatile
  1589                           
  1590                           ;ADC.c: 43:             ADCON0bits.CHS0 = 0;
  1591  077D  111F               	bcf	31,2	;volatile
  1592                           
  1593                           ;ADC.c: 44:             break;
  1594  077E  2FF6               	goto	l103
  1595  077F                     l93:	
  1596                           ;ADC.c: 46:         case 5:
  1597                           
  1598                           
  1599                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  1600  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0781  129F               	bcf	31,5	;volatile
  1603                           
  1604                           ;ADC.c: 48:             ADCON0bits.CHS2 = 1;
  1605  0782  161F               	bsf	31,4	;volatile
  1606                           
  1607                           ;ADC.c: 49:             ADCON0bits.CHS1 = 0;
  1608  0783  119F               	bcf	31,3	;volatile
  1609                           
  1610                           ;ADC.c: 50:             ADCON0bits.CHS0 = 1;
  1611  0784  151F               	bsf	31,2	;volatile
  1612                           
  1613                           ;ADC.c: 51:             break;
  1614  0785  2FF6               	goto	l103
  1615  0786                     l94:	
  1616                           ;ADC.c: 53:         case 6:
  1617                           
  1618                           
  1619                           ;ADC.c: 54:             ADCON0bits.CHS3 = 0;
  1620  0786  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0787  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0788  129F               	bcf	31,5	;volatile
  1623                           
  1624                           ;ADC.c: 55:             ADCON0bits.CHS2 = 1;
  1625  0789  161F               	bsf	31,4	;volatile
  1626                           
  1627                           ;ADC.c: 56:             ADCON0bits.CHS1 = 1;
  1628  078A  159F               	bsf	31,3	;volatile
  1629                           
  1630                           ;ADC.c: 57:             ADCON0bits.CHS0 = 0;
  1631  078B  111F               	bcf	31,2	;volatile
  1632                           
  1633                           ;ADC.c: 58:             break;
  1634  078C  2FF6               	goto	l103
  1635  078D                     l95:	
  1636                           ;ADC.c: 60:         case 7:
  1637                           
  1638                           
  1639                           ;ADC.c: 61:             ADCON0bits.CHS3 = 0;
  1640  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1641  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1642  078F  129F               	bcf	31,5	;volatile
  1643                           
  1644                           ;ADC.c: 62:             ADCON0bits.CHS2 = 1;
  1645  0790  161F               	bsf	31,4	;volatile
  1646                           
  1647                           ;ADC.c: 63:             ADCON0bits.CHS1 = 1;
  1648  0791  159F               	bsf	31,3	;volatile
  1649                           
  1650                           ;ADC.c: 64:             ADCON0bits.CHS0 = 1;
  1651  0792  151F               	bsf	31,2	;volatile
  1652                           
  1653                           ;ADC.c: 65:             break;
  1654  0793  2FF6               	goto	l103
  1655  0794                     l96:	
  1656                           ;ADC.c: 67:         case 8:
  1657                           
  1658                           
  1659                           ;ADC.c: 68:             ADCON0bits.CHS3 = 1;
  1660  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1661  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1662  0796  169F               	bsf	31,5	;volatile
  1663                           
  1664                           ;ADC.c: 69:             ADCON0bits.CHS2 = 0;
  1665  0797  121F               	bcf	31,4	;volatile
  1666                           
  1667                           ;ADC.c: 70:             ADCON0bits.CHS1 = 0;
  1668  0798  119F               	bcf	31,3	;volatile
  1669                           
  1670                           ;ADC.c: 71:             ADCON0bits.CHS0 = 0;
  1671  0799  111F               	bcf	31,2	;volatile
  1672                           
  1673                           ;ADC.c: 72:             break;
  1674  079A  2FF6               	goto	l103
  1675  079B                     l97:	
  1676                           ;ADC.c: 74:         case 9:
  1677                           
  1678                           
  1679                           ;ADC.c: 75:             ADCON0bits.CHS3 = 1;
  1680  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1681  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1682  079D  169F               	bsf	31,5	;volatile
  1683                           
  1684                           ;ADC.c: 76:             ADCON0bits.CHS2 = 0;
  1685  079E  121F               	bcf	31,4	;volatile
  1686                           
  1687                           ;ADC.c: 77:             ADCON0bits.CHS1 = 0;
  1688  079F  119F               	bcf	31,3	;volatile
  1689                           
  1690                           ;ADC.c: 78:             ADCON0bits.CHS0 = 1;
  1691  07A0  151F               	bsf	31,2	;volatile
  1692                           
  1693                           ;ADC.c: 79:             break;
  1694  07A1  2FF6               	goto	l103
  1695  07A2                     l98:	
  1696                           ;ADC.c: 81:         case 10:
  1697                           
  1698                           
  1699                           ;ADC.c: 82:             ADCON0bits.CHS3 = 1;
  1700  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1701  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1702  07A4  169F               	bsf	31,5	;volatile
  1703                           
  1704                           ;ADC.c: 83:             ADCON0bits.CHS2 = 0;
  1705  07A5  121F               	bcf	31,4	;volatile
  1706                           
  1707                           ;ADC.c: 84:             ADCON0bits.CHS1 = 1;
  1708  07A6  159F               	bsf	31,3	;volatile
  1709                           
  1710                           ;ADC.c: 85:             ADCON0bits.CHS0 = 0;
  1711  07A7  111F               	bcf	31,2	;volatile
  1712                           
  1713                           ;ADC.c: 86:             break;
  1714  07A8  2FF6               	goto	l103
  1715  07A9                     l99:	
  1716                           ;ADC.c: 88:         case 11:
  1717                           
  1718                           
  1719                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  1720  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1721  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1722  07AB  169F               	bsf	31,5	;volatile
  1723                           
  1724                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  1725  07AC  121F               	bcf	31,4	;volatile
  1726                           
  1727                           ;ADC.c: 91:             ADCON0bits.CHS1 = 1;
  1728  07AD  159F               	bsf	31,3	;volatile
  1729                           
  1730                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  1731  07AE  151F               	bsf	31,2	;volatile
  1732                           
  1733                           ;ADC.c: 93:             break;
  1734  07AF  2FF6               	goto	l103
  1735  07B0                     l100:	
  1736                           ;ADC.c: 95:         case 12:
  1737                           
  1738                           
  1739                           ;ADC.c: 96:             ADCON0bits.CHS3 = 1;
  1740  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1741  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1742  07B2  169F               	bsf	31,5	;volatile
  1743                           
  1744                           ;ADC.c: 97:             ADCON0bits.CHS2 = 1;
  1745  07B3  161F               	bsf	31,4	;volatile
  1746                           
  1747                           ;ADC.c: 98:             ADCON0bits.CHS1 = 0;
  1748  07B4  119F               	bcf	31,3	;volatile
  1749                           
  1750                           ;ADC.c: 99:             ADCON0bits.CHS0 = 0;
  1751  07B5  111F               	bcf	31,2	;volatile
  1752                           
  1753                           ;ADC.c: 100:             break;
  1754  07B6  2FF6               	goto	l103
  1755  07B7                     l101:	
  1756                           ;ADC.c: 101:         case 13:
  1757                           
  1758                           
  1759                           ;ADC.c: 102:             ADCON0bits.CHS3 = 1;
  1760  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1761  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1762  07B9  169F               	bsf	31,5	;volatile
  1763                           
  1764                           ;ADC.c: 103:             ADCON0bits.CHS2 = 1;
  1765  07BA  161F               	bsf	31,4	;volatile
  1766                           
  1767                           ;ADC.c: 104:             ADCON0bits.CHS1 = 0;
  1768  07BB  119F               	bcf	31,3	;volatile
  1769                           
  1770                           ;ADC.c: 105:             ADCON0bits.CHS0 = 1;
  1771  07BC  151F               	bsf	31,2	;volatile
  1772                           
  1773                           ;ADC.c: 106:             break;
  1774  07BD  2FF6               	goto	l103
  1775  07BE                     l102:	
  1776                           ;ADC.c: 108:         default:
  1777                           
  1778                           
  1779                           ;ADC.c: 109:             ADCON0bits.CHS3 = 0;
  1780  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1781  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1782  07C0  129F               	bcf	31,5	;volatile
  1783                           
  1784                           ;ADC.c: 110:             ADCON0bits.CHS2 = 0;
  1785  07C1  121F               	bcf	31,4	;volatile
  1786                           
  1787                           ;ADC.c: 111:             ADCON0bits.CHS1 = 0;
  1788  07C2  119F               	bcf	31,3	;volatile
  1789                           
  1790                           ;ADC.c: 112:             ADCON0bits.CHS0 = 0;
  1791  07C3  111F               	bcf	31,2	;volatile
  1792                           
  1793                           ;ADC.c: 113:             break;
  1794  07C4  2FF6               	goto	l103
  1795  07C5                     l1008:
  1796                           
  1797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1798                           ; Switch size 1, requested type "simple"
  1799                           ; Number of cases is 1, Range of values is 0 to 0
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte            4     3 (average)
  1803                           ; direct_byte           11     8 (fixed)
  1804                           ; jumptable            260     6 (fixed)
  1805                           ;	Chosen strategy is simple_byte
  1806  07C5  0871               	movf	ADC_C@CH+1,w
  1807  07C6  3A00               	xorlw	0	; case 0
  1808  07C7  1903               	skipnz
  1809  07C8  2FCA               	goto	l1156
  1810  07C9  2FBE               	goto	l102
  1811  07CA                     l1156:
  1812                           
  1813                           ; Switch size 1, requested type "simple"
  1814                           ; Number of cases is 14, Range of values is 0 to 13
  1815                           ; switch strategies available:
  1816                           ; Name         Instructions Cycles
  1817                           ; simple_byte           43    22 (average)
  1818                           ; direct_byte           50     8 (fixed)
  1819                           ; jumptable            260     6 (fixed)
  1820                           ;	Chosen strategy is simple_byte
  1821  07CA  0870               	movf	ADC_C@CH,w
  1822  07CB  3A00               	xorlw	0	; case 0
  1823  07CC  1903               	skipnz
  1824  07CD  2F5C               	goto	l87
  1825  07CE  3A01               	xorlw	1	; case 1
  1826  07CF  1903               	skipnz
  1827  07D0  2F63               	goto	l89
  1828  07D1  3A03               	xorlw	3	; case 2
  1829  07D2  1903               	skipnz
  1830  07D3  2F6A               	goto	l90
  1831  07D4  3A01               	xorlw	1	; case 3
  1832  07D5  1903               	skipnz
  1833  07D6  2F71               	goto	l91
  1834  07D7  3A07               	xorlw	7	; case 4
  1835  07D8  1903               	skipnz
  1836  07D9  2F78               	goto	l92
  1837  07DA  3A01               	xorlw	1	; case 5
  1838  07DB  1903               	skipnz
  1839  07DC  2F7F               	goto	l93
  1840  07DD  3A03               	xorlw	3	; case 6
  1841  07DE  1903               	skipnz
  1842  07DF  2F86               	goto	l94
  1843  07E0  3A01               	xorlw	1	; case 7
  1844  07E1  1903               	skipnz
  1845  07E2  2F8D               	goto	l95
  1846  07E3  3A0F               	xorlw	15	; case 8
  1847  07E4  1903               	skipnz
  1848  07E5  2F94               	goto	l96
  1849  07E6  3A01               	xorlw	1	; case 9
  1850  07E7  1903               	skipnz
  1851  07E8  2F9B               	goto	l97
  1852  07E9  3A03               	xorlw	3	; case 10
  1853  07EA  1903               	skipnz
  1854  07EB  2FA2               	goto	l98
  1855  07EC  3A01               	xorlw	1	; case 11
  1856  07ED  1903               	skipnz
  1857  07EE  2FA9               	goto	l99
  1858  07EF  3A07               	xorlw	7	; case 12
  1859  07F0  1903               	skipnz
  1860  07F1  2FB0               	goto	l100
  1861  07F2  3A01               	xorlw	1	; case 13
  1862  07F3  1903               	skipnz
  1863  07F4  2FB7               	goto	l101
  1864  07F5  2FBE               	goto	l102
  1865  07F6                     l103:
  1866  07F6  0008               	return
  1867  07F7                     __end_of_ADC_C:
  1868  007E                     btemp	set	126	;btemp
  1869  007E                     wtemp0	set	126
  1870                           
  1871                           	psect	config
  1872                           
  1873                           ;Config register CONFIG1 @ 0x2007
  1874                           ;	Oscillator Selection bits
  1875                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  1876                           ;	Watchdog Timer Enable bit
  1877                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1878                           ;	Power-up Timer Enable bit
  1879                           ;	PWRTE = OFF, PWRT disabled
  1880                           ;	RE3/MCLR pin function select bit
  1881                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1882                           ;	Code Protection bit
  1883                           ;	CP = OFF, Program memory code protection is disabled
  1884                           ;	Data Code Protection bit
  1885                           ;	CPD = OFF, Data memory code protection is disabled
  1886                           ;	Brown Out Reset Selection bits
  1887                           ;	BOREN = OFF, BOR disabled
  1888                           ;	Internal External Switchover bit
  1889                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1890                           ;	Fail-Safe Clock Monitor Enabled bit
  1891                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1892                           ;	Low Voltage Programming Enable bit
  1893                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1894                           ;	In-Circuit Debugger Mode bit
  1895                           ;	DEBUG = 0x1, unprogrammed default
  1896  2007                     	org	8199
  1897  2007  20D7               	dw	8407
  1898                           
  1899                           ;Config register CONFIG2 @ 0x2008
  1900                           ;	Brown-out Reset Selection bit
  1901                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1902                           ;	Flash Program Memory Self Write Enable bits
  1903                           ;	WRT = OFF, Write protection off
  1904  2008                     	org	8200
  1905  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MAP
    _MAP->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _MAP->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     864
                                              4 BANK0      2     2      0
                              _ADC_C
                       _ADC_CONTINUE
                        _ADC_CONVCLK
                           _ADC_READ
                                _MAP
                              _SETUP
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MAP                                                  3     3      0     696
                                             11 COMMON     3     3      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             4     4      0      48
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONVCLK                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONTINUE                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_C                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_C
   _ADC_CONTINUE
   _ADC_CONVCLK
   _ADC_READ
   _MAP
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _SETUP

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 14 17:33:04 2021

   __size_of_ADC_CONVCLK 0043                       l55 06EE                       l64 05E2  
                     l90 076A                       l91 0771                       l92 0778  
                     l93 077F                       l69 0651                       l94 0786  
                     l95 078D                       l87 075C                       l96 0794  
                     l97 079B                       l89 0763                       l98 07A2  
                     l99 07A9             ___awdiv@sign 0021    __size_of_ADC_CONTINUE 0013  
    ___wmul@multiplicand 0072                      l100 07B0                      l101 07B7  
                    l102 07BE                      l110 065E                      l103 07F6  
                    l111 0663                      l112 0668                      l113 0694  
                    l210 0611                      l107 0654                      l116 05CC  
                    l108 0683                      l124 0604                      l212 0629  
                    l109 0659                      l363 075A                      l940 0618  
                    l950 06F5                      l942 061F                      l934 0605  
                    l960 0709                      l952 06F9                      l944 0625  
                    l936 0607                      l970 071F                      l962 070D  
                    l954 06FE                      l938 060B                      l980 073F  
                    l972 0723                      l964 070F                      l956 0700  
                    l948 06F2                      l982 0746                      l974 0727  
                    l966 0715                      l958 0704                      l976 0738  
                    l968 0718                      l984 074C                      l992 05CD  
                    l986 0751                      l978 073E                      l994 05D4  
                    l988 0756                      l996 05D8                      l998 05D9  
                    _MAP 062A                      u220 0625                      u221 0624  
                    u205 0612                      u310 074C                      u230 06F9  
                    u311 074B                      u231 06F8                      u215 0619  
                    u320 0751                      u240 0704                      u321 0750  
                    u305 0740                      u241 0703                      u250 0715  
                    u330 06D0                      u251 0714                      u331 06CF  
                    u340 06DA                      u341 06D9                      u270 0727  
                    u190 060B                      u350 06E0                      u271 0726  
                    u191 060A                      u351 06DF                      u360 06EA  
                    u265 0719                      u361 06E9                      u290 0738  
                    u291 0737                      u285 0728                      u295 0734  
                    u377 06A0                      u387 068D                      u397 05C4  
                   ?_MAP 0070                     l1000 05DA                     l1002 05E0  
                   l1004 075B                     l1020 0689                     l1022 0691  
                   l1014 0653                     l1030 05E5                     l1008 07C5  
                   l1032 05EC                     l1018 066D                     l1060 05C9  
                   l1036 05F3                     l1028 05E4                     l1052 062A  
                   l1038 0603                     l1054 064F                     l1046 062A  
                   l1070 06AD                     l1056 05BA                     l1152 05FB  
                   l1080 06D0                     l1072 06B3                     l1064 0695  
                   l1058 05C0                     l1154 0675                     l1090 06EA  
                   l1082 06D4                     l1074 06BE                     l1066 069A  
                   l1156 07CA                     l1084 06DA                     l1076 06C3  
                   l1068 06A5                     l1086 06E0                     l1078 06C8  
                   l1088 06E4         __end_of_ADC_READ 0605                     _main 0695  
                   btemp 007E                     start 0000          ADC_CONVCLK@CONV 0072  
           _ADC_CONTINUE 05BA                    ??_MAP 007B                    ?_main 0070  
                  _ADC_C 075B          __end_of___awdiv 075B                    _ANSEL 0188  
        ___awdiv@divisor 0076          ___awdiv@counter 0020                    _SETUP 05CD  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    status 0003                    wtemp0 007E  
        __initialization 07F7             __end_of_main 06F2                   ??_main 0024  
                 ?_ADC_C 0070                   ?_SETUP 0070                   _ADRESH 001E  
                 _ADRESL 009E         ___awdiv@dividend 0078                   _ANSELH 0189  
                 _ENVIAR 0026                   ___wmul 0605                ??___awdiv 007A  
       ___awdiv@quotient 0022                ?_ADC_READ 0070  __end_of__initialization 07FC  
          __end_of_ADC_C 07F7            __end_of_SETUP 05E3           __pcstackCOMMON 0070  
                ??_ADC_C 0072                  ADC_C@CH 0070               ??_ADC_READ 0070  
                ??_SETUP 0070               __pbssBANK0 0026            ??_ADC_CONVCLK 0070  
             __pmaintext 0695                  ?___wmul 0070                  ___awdiv 06F2  
        __size_of___wmul 0025      __end_of_ADC_CONVCLK 0695                _ANSELbits 0188  
                __ptext1 05CD                  __ptext2 062A                  __ptext3 0605  
                __ptext4 06F2                  __ptext5 05E3                  __ptext6 0652  
                __ptext7 05BA                  __ptext8 075B             __size_of_MAP 0028  
   end_of_initialization 07FC                _PORTBbits 0006        __size_of_ADC_READ 0022  
            _ADC_CONVCLK 0652           __end_of___wmul 062A      start_initialization 07F7  
            __end_of_MAP 0652            ?_ADC_CONTINUE 0070                 ??___wmul 0074  
              ___latbits 0002            __pcstackBANK0 0020           ??_ADC_CONTINUE 0070  
               ?___awdiv 0076           __size_of_ADC_C 009C                 _ADC_READ 05E3  
         __size_of_SETUP 0016           ___wmul@product 0074                 _PIE1bits 008C  
               _PIR1bits 000C                 _TEMPORAL 0027               _ADCON0bits 001F  
      ___wmul@multiplier 0070    ADC_READ@JUSTIFICACION 0072             ?_ADC_CONVCLK 0070  
       __size_of___awdiv 0069     __end_of_ADC_CONTINUE 05CD            __size_of_main 005D  
      ADC_READ@VALOR_ADC 0073              _TEMPERATURA 0028               _INTCONbits 000B  
