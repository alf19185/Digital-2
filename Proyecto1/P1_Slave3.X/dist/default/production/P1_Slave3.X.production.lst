

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 13 22:44:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.31
    17                           ; Generated 13/10/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  001E                     _ADRESH	set	30
   286  000B                     _INTCONbits	set	11
   287  000C                     _PIR1bits	set	12
   288  001F                     _ADCON0bits	set	31
   289  0009                     _PORTE	set	9
   290  0007                     _PORTC	set	7
   291  0006                     _PORTB	set	6
   292  0005                     _PORTA	set	5
   293  0006                     _PORTBbits	set	6
   294  0008                     _PORTD	set	8
   295  009E                     _ADRESL	set	158
   296  008C                     _PIE1bits	set	140
   297  0089                     _TRISE	set	137
   298  0087                     _TRISC	set	135
   299  0088                     _TRISD	set	136
   300  0086                     _TRISB	set	134
   301  0085                     _TRISA	set	133
   302  0189                     _ANSELH	set	393
   303  0188                     _ANSELbits	set	392
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  07FB                     start_initialization:	
   308                           ; #config settings
   309                           
   310  07FB                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  07FB  01F6               	clrf	__pbssCOMMON& (0+127)
   314  07FC                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  07FC                     __end_of__initialization:
   318  07FC  0183               	clrf	3
   319  07FD  120A  118A  2F03   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  0076                     __pbssCOMMON:
   323  0076                     _TEMPERATURA:
   324  0076                     	ds	1
   325                           
   326                           	psect	cstackCOMMON
   327  0070                     __pcstackCOMMON:
   328  0070                     ?_SETUP:
   329  0070                     ??_SETUP:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_ADC_C:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_ADC_CONVCLK:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_ADC_CONVCLK:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_ADC_READ:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_ADC_READ:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_ADC_CONTINUE:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ??_ADC_CONTINUE:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_main:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ADC_C@CH:	
   357                           ; 1 bytes @ 0x0
   358                           
   359                           
   360                           ; 2 bytes @ 0x0
   361  0070                     	ds	2
   362  0072                     ??_ADC_C:
   363  0072                     ADC_CONVCLK@CONV:	
   364                           ; 1 bytes @ 0x2
   365                           
   366  0072                     ADC_READ@JUSTIFICACION:	
   367                           ; 1 bytes @ 0x2
   368                           
   369                           
   370                           ; 1 bytes @ 0x2
   371  0072                     	ds	1
   372  0073                     ADC_READ@VALOR_ADC:
   373                           
   374                           ; 1 bytes @ 0x3
   375  0073                     	ds	1
   376  0074                     ??_main:
   377                           
   378                           ; 1 bytes @ 0x4
   379  0074                     	ds	2
   380                           
   381                           	psect	maintext
   382  0703                     __pmaintext:	
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   385 ;;
   386 ;; *************** function _main *****************
   387 ;; Defined at:
   388 ;;		line 40 in file "Principal_Slave3.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : B00/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          2       0       0       0       0
   405 ;;      Totals:         2       0       0       0       0
   406 ;;Total ram usage:        2 bytes
   407 ;; Hardware stack levels required when called:    1
   408 ;; This function calls:
   409 ;;		_ADC_C
   410 ;;		_ADC_CONTINUE
   411 ;;		_ADC_CONVCLK
   412 ;;		_ADC_READ
   413 ;;		_SETUP
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _main
   421  0703                     _main:
   422  0703                     l865:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   425                           
   426                           
   427                           ;Principal_Slave3.c: 42:  SETUP();
   428  0703  120A  118A  2688  120A  118A  	fcall	_SETUP
   429  0708                     l867:
   430                           
   431                           ;Principal_Slave3.c: 44:     _delay((unsigned long)((10)*(8000000/4000.0)));
   432  0708  301A               	movlw	26
   433  0709  00F5               	movwf	??_main+1
   434  070A  30F8               	movlw	248
   435  070B  00F4               	movwf	??_main
   436  070C                     u97:
   437  070C  0BF4               	decfsz	??_main,f
   438  070D  2F0C               	goto	u97
   439  070E  0BF5               	decfsz	??_main+1,f
   440  070F  2F0C               	goto	u97
   441  0710  0000               	nop
   442  0711                     l869:
   443                           
   444                           ;Principal_Slave3.c: 45:     ADC_C(0);
   445  0711  3000               	movlw	0
   446  0712  00F0               	movwf	ADC_C@CH
   447  0713  00F1               	movwf	ADC_C@CH+1
   448  0714  120A  118A  275F  120A  118A  	fcall	_ADC_C
   449  0719                     l871:
   450                           
   451                           ;Principal_Slave3.c: 46:     ADC_CONVCLK(1);
   452  0719  3001               	movlw	1
   453  071A  120A  118A  26C0  120A  118A  	fcall	_ADC_CONVCLK
   454  071F                     l873:
   455                           
   456                           ;Principal_Slave3.c: 49:  {;Principal_Slave3.c: 55:     TEMPERATURA = ADC_READ (0);
   457  071F  3000               	movlw	0
   458  0720  120A  118A  269E  120A  118A  	fcall	_ADC_READ
   459  0725  00F4               	movwf	??_main
   460  0726  0874               	movf	??_main,w
   461  0727  00F6               	movwf	_TEMPERATURA
   462  0728                     l875:
   463                           
   464                           ;Principal_Slave3.c: 56:     PORTD = TEMPERATURA ;
   465  0728  0876               	movf	_TEMPERATURA,w
   466  0729  1283               	bcf	3,5	;RP0=0, select bank0
   467  072A  1303               	bcf	3,6	;RP1=0, select bank0
   468  072B  0088               	movwf	8	;volatile
   469  072C                     l877:
   470                           
   471                           ;Principal_Slave3.c: 57:     ADC_CONTINUE();
   472  072C  120A  118A  2675  120A  118A  	fcall	_ADC_CONTINUE
   473  0731                     l879:
   474                           
   475                           ;Principal_Slave3.c: 59:     if(TEMPERATURA < 13) {
   476  0731  300D               	movlw	13
   477  0732  0276               	subwf	_TEMPERATURA,w
   478  0733  1803               	skipnc
   479  0734  2F36               	goto	u51
   480  0735  2F37               	goto	u50
   481  0736                     u51:
   482  0736  2F3D               	goto	l883
   483  0737                     u50:
   484  0737                     l881:
   485                           
   486                           ;Principal_Slave3.c: 61:         PORTBbits.RB0 = 0;
   487  0737  1283               	bcf	3,5	;RP0=0, select bank0
   488  0738  1303               	bcf	3,6	;RP1=0, select bank0
   489  0739  1006               	bcf	6,0	;volatile
   490                           
   491                           ;Principal_Slave3.c: 62:         PORTBbits.RB1 = 0;
   492  073A  1086               	bcf	6,1	;volatile
   493                           
   494                           ;Principal_Slave3.c: 63:         PORTBbits.RB2 = 1;
   495  073B  1506               	bsf	6,2	;volatile
   496                           
   497                           ;Principal_Slave3.c: 64:         }
   498  073C  2F1F               	goto	l873
   499  073D                     l883:
   500  073D  300D               	movlw	13
   501  073E  0276               	subwf	_TEMPERATURA,w
   502  073F  1C03               	skipc
   503  0740  2F42               	goto	u61
   504  0741  2F43               	goto	u60
   505  0742                     u61:
   506  0742  2F4F               	goto	l889
   507  0743                     u60:
   508  0743                     l885:
   509  0743  3013               	movlw	19
   510  0744  0276               	subwf	_TEMPERATURA,w
   511  0745  1803               	skipnc
   512  0746  2F48               	goto	u71
   513  0747  2F49               	goto	u70
   514  0748                     u71:
   515  0748  2F4F               	goto	l889
   516  0749                     u70:
   517  0749                     l887:
   518                           
   519                           ;Principal_Slave3.c: 67:         PORTBbits.RB0 = 0;
   520  0749  1283               	bcf	3,5	;RP0=0, select bank0
   521  074A  1303               	bcf	3,6	;RP1=0, select bank0
   522  074B  1006               	bcf	6,0	;volatile
   523                           
   524                           ;Principal_Slave3.c: 68:         PORTBbits.RB1 = 1;
   525  074C  1486               	bsf	6,1	;volatile
   526                           
   527                           ;Principal_Slave3.c: 69:         PORTBbits.RB2 = 0;
   528  074D  1106               	bcf	6,2	;volatile
   529                           
   530                           ;Principal_Slave3.c: 70:         }
   531  074E  2F1F               	goto	l873
   532  074F                     l889:
   533  074F  3013               	movlw	19
   534  0750  0276               	subwf	_TEMPERATURA,w
   535  0751  1C03               	skipc
   536  0752  2F54               	goto	u81
   537  0753  2F55               	goto	u80
   538  0754                     u81:
   539  0754  2F5B               	goto	l49
   540  0755                     u80:
   541  0755                     l891:
   542                           
   543                           ;Principal_Slave3.c: 74:         PORTBbits.RB0 = 1;
   544  0755  1283               	bcf	3,5	;RP0=0, select bank0
   545  0756  1303               	bcf	3,6	;RP1=0, select bank0
   546  0757  1406               	bsf	6,0	;volatile
   547                           
   548                           ;Principal_Slave3.c: 75:         PORTBbits.RB1 = 0;
   549  0758  1086               	bcf	6,1	;volatile
   550                           
   551                           ;Principal_Slave3.c: 76:         PORTBbits.RB2 = 0;
   552  0759  1106               	bcf	6,2	;volatile
   553  075A  2F1F               	goto	l873
   554  075B                     l49:
   555  075B  2F1F               	goto	l873
   556  075C  120A  118A  2800   	ljmp	start
   557  075F                     __end_of_main:
   558                           
   559                           	psect	text1
   560  0688                     __ptext1:	
   561 ;; *************** function _SETUP *****************
   562 ;; Defined at:
   563 ;;		line 86 in file "Principal_Slave3.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   577 ;;      Params:         0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0
   580 ;;      Totals:         0       0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_main
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           
   591                           ;psect for function _SETUP
   592  0688                     _SETUP:
   593  0688                     l705:	
   594                           ;incstack = 0
   595                           ; Regs used in _SETUP: [wreg+status,2]
   596                           
   597                           
   598                           ;Principal_Slave3.c: 88:         PORTA = 0;
   599  0688  1283               	bcf	3,5	;RP0=0, select bank0
   600  0689  1303               	bcf	3,6	;RP1=0, select bank0
   601  068A  0185               	clrf	5	;volatile
   602                           
   603                           ;Principal_Slave3.c: 89:         PORTB = 0;
   604  068B  0186               	clrf	6	;volatile
   605                           
   606                           ;Principal_Slave3.c: 90:         PORTC = 0;
   607  068C  0187               	clrf	7	;volatile
   608                           
   609                           ;Principal_Slave3.c: 91:         PORTD = 0;
   610  068D  0188               	clrf	8	;volatile
   611                           
   612                           ;Principal_Slave3.c: 92:         PORTE = 0;
   613  068E  0189               	clrf	9	;volatile
   614  068F                     l707:
   615                           
   616                           ;Principal_Slave3.c: 94:         TRISA = 0b00100001;
   617  068F  3021               	movlw	33
   618  0690  1683               	bsf	3,5	;RP0=1, select bank1
   619  0691  1303               	bcf	3,6	;RP1=0, select bank1
   620  0692  0085               	movwf	5	;volatile
   621  0693                     l709:
   622                           
   623                           ;Principal_Slave3.c: 95:         TRISB = 0;
   624  0693  0186               	clrf	6	;volatile
   625  0694                     l711:
   626                           
   627                           ;Principal_Slave3.c: 96:         TRISD = 0;
   628  0694  0188               	clrf	8	;volatile
   629  0695                     l713:
   630                           
   631                           ;Principal_Slave3.c: 97:         TRISC = 0b00101000;
   632  0695  3028               	movlw	40
   633  0696  0087               	movwf	7	;volatile
   634                           
   635                           ;Principal_Slave3.c: 98:         TRISE = 0;
   636  0697  0189               	clrf	9	;volatile
   637                           
   638                           ;Principal_Slave3.c: 100:         ANSEL = 0;
   639  0698  1683               	bsf	3,5	;RP0=1, select bank3
   640  0699  1703               	bsf	3,6	;RP1=1, select bank3
   641  069A  0188               	clrf	8	;volatile
   642  069B                     l715:
   643                           
   644                           ;Principal_Slave3.c: 101:         ANSELbits.ANS0 = 1;
   645  069B  1408               	bsf	8,0	;volatile
   646                           
   647                           ;Principal_Slave3.c: 102:         ANSELH = 0;
   648  069C  0189               	clrf	9	;volatile
   649  069D                     l58:
   650  069D  0008               	return
   651  069E                     __end_of_SETUP:
   652                           
   653                           	psect	text2
   654  069E                     __ptext2:	
   655 ;; *************** function _ADC_READ *****************
   656 ;; Defined at:
   657 ;;		line 164 in file "ADC.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  JUSTIFICACIO    1    wreg     unsigned char 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  JUSTIFICACIO    1    2[COMMON] unsigned char 
   662 ;;  VALOR_ADC       1    3[COMMON] unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      unsigned char 
   665 ;; Registers used:
   666 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         2       0       0       0       0
   674 ;;      Temps:          2       0       0       0       0
   675 ;;      Totals:         4       0       0       0       0
   676 ;;Total ram usage:        4 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _ADC_READ
   687  069E                     _ADC_READ:
   688                           
   689                           ;incstack = 0
   690                           ; Regs used in _ADC_READ: [wreg-fsr0h+status,2+status,0]
   691                           ;ADC_READ@JUSTIFICACION stored from wreg
   692  069E  00F2               	movwf	ADC_READ@JUSTIFICACION
   693  069F                     l741:
   694                           
   695                           ;ADC.c: 168:     switch (JUSTIFICACION){
   696  069F  2EAE               	goto	l749
   697  06A0                     l743:
   698                           
   699                           ;ADC.c: 170:             VALOR_ADC = ADRESH;
   700  06A0  1283               	bcf	3,5	;RP0=0, select bank0
   701  06A1  1303               	bcf	3,6	;RP1=0, select bank0
   702  06A2  081E               	movf	30,w	;volatile
   703  06A3  00F0               	movwf	??_ADC_READ
   704  06A4  0870               	movf	??_ADC_READ,w
   705  06A5  00F3               	movwf	ADC_READ@VALOR_ADC
   706                           
   707                           ;ADC.c: 171:             break;
   708  06A6  2EBE               	goto	l751
   709  06A7                     l745:
   710                           
   711                           ;ADC.c: 173:             VALOR_ADC = ADRESL;
   712  06A7  1683               	bsf	3,5	;RP0=1, select bank1
   713  06A8  1303               	bcf	3,6	;RP1=0, select bank1
   714  06A9  081E               	movf	30,w	;volatile
   715  06AA  00F0               	movwf	??_ADC_READ
   716  06AB  0870               	movf	??_ADC_READ,w
   717  06AC  00F3               	movwf	ADC_READ@VALOR_ADC
   718                           
   719                           ;ADC.c: 174:             break;
   720  06AD  2EBE               	goto	l751
   721  06AE                     l749:
   722  06AE  0872               	movf	ADC_READ@JUSTIFICACION,w
   723  06AF  00F0               	movwf	??_ADC_READ
   724  06B0  01F1               	clrf	??_ADC_READ+1
   725                           
   726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   727                           ; Switch size 1, requested type "simple"
   728                           ; Number of cases is 1, Range of values is 0 to 0
   729                           ; switch strategies available:
   730                           ; Name         Instructions Cycles
   731                           ; simple_byte            4     3 (average)
   732                           ; direct_byte           11     8 (fixed)
   733                           ; jumptable            260     6 (fixed)
   734                           ;	Chosen strategy is simple_byte
   735  06B1  0871               	movf	??_ADC_READ+1,w
   736  06B2  3A00               	xorlw	0	; case 0
   737  06B3  1903               	skipnz
   738  06B4  2EB6               	goto	l953
   739  06B5  2EA0               	goto	l743
   740  06B6                     l953:
   741                           
   742                           ; Switch size 1, requested type "simple"
   743                           ; Number of cases is 2, Range of values is 0 to 1
   744                           ; switch strategies available:
   745                           ; Name         Instructions Cycles
   746                           ; simple_byte            7     4 (average)
   747                           ; direct_byte           14     8 (fixed)
   748                           ; jumptable            260     6 (fixed)
   749                           ;	Chosen strategy is simple_byte
   750  06B6  0870               	movf	??_ADC_READ,w
   751  06B7  3A00               	xorlw	0	; case 0
   752  06B8  1903               	skipnz
   753  06B9  2EA0               	goto	l743
   754  06BA  3A01               	xorlw	1	; case 1
   755  06BB  1903               	skipnz
   756  06BC  2EA7               	goto	l745
   757  06BD  2EA0               	goto	l743
   758  06BE                     l751:
   759                           
   760                           ;ADC.c: 178:     return (VALOR_ADC );
   761  06BE  0873               	movf	ADC_READ@VALOR_ADC,w
   762  06BF                     l113:
   763  06BF  0008               	return
   764  06C0                     __end_of_ADC_READ:
   765                           
   766                           	psect	text3
   767  06C0                     __ptext3:	
   768 ;; *************** function _ADC_CONVCLK *****************
   769 ;; Defined at:
   770 ;;		line 117 in file "ADC.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  CONV            1    wreg     unsigned char 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  CONV            1    2[COMMON] unsigned char 
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         1       0       0       0       0
   786 ;;      Temps:          2       0       0       0       0
   787 ;;      Totals:         3       0       0       0       0
   788 ;;Total ram usage:        3 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _ADC_CONVCLK
   799  06C0                     _ADC_CONVCLK:
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _ADC_CONVCLK: [wreg-fsr0h+status,2+status,0]
   803                           ;ADC_CONVCLK@CONV stored from wreg
   804  06C0  00F2               	movwf	ADC_CONVCLK@CONV
   805  06C1                     l727:
   806                           
   807                           ;ADC.c: 119:       switch(CONV){
   808  06C1  2EDB               	goto	l731
   809  06C2                     l96:	
   810                           ;ADC.c: 121:         case 0:
   811                           
   812                           
   813                           ;ADC.c: 122:             ADCON0bits.ADCS0 = 0;
   814  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   815  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   816  06C4  131F               	bcf	31,6	;volatile
   817                           
   818                           ;ADC.c: 123:             ADCON0bits.ADCS0 = 0;
   819  06C5  131F               	bcf	31,6	;volatile
   820                           
   821                           ;ADC.c: 124:             break;
   822  06C6  2EF1               	goto	l97
   823  06C7                     l98:	
   824                           ;ADC.c: 126:         case 1:
   825                           
   826                           
   827                           ;ADC.c: 127:             ADCON0bits.ADCS0 = 0;
   828  06C7  1283               	bcf	3,5	;RP0=0, select bank0
   829  06C8  1303               	bcf	3,6	;RP1=0, select bank0
   830  06C9  131F               	bcf	31,6	;volatile
   831                           
   832                           ;ADC.c: 128:             ADCON0bits.ADCS0 = 1;
   833  06CA  171F               	bsf	31,6	;volatile
   834                           
   835                           ;ADC.c: 129:             break;
   836  06CB  2EF1               	goto	l97
   837  06CC                     l99:	
   838                           ;ADC.c: 131:         case 2:
   839                           
   840                           
   841                           ;ADC.c: 132:             ADCON0bits.ADCS0 = 1;
   842  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   843  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   844  06CE  171F               	bsf	31,6	;volatile
   845                           
   846                           ;ADC.c: 133:             ADCON0bits.ADCS0 = 0;
   847  06CF  131F               	bcf	31,6	;volatile
   848                           
   849                           ;ADC.c: 134:             break;
   850  06D0  2EF1               	goto	l97
   851  06D1                     l100:	
   852                           ;ADC.c: 136:         case 3:
   853                           
   854                           
   855                           ;ADC.c: 137:             ADCON0bits.ADCS0 = 1;
   856  06D1  1283               	bcf	3,5	;RP0=0, select bank0
   857  06D2  1303               	bcf	3,6	;RP1=0, select bank0
   858  06D3  171F               	bsf	31,6	;volatile
   859                           
   860                           ;ADC.c: 138:             ADCON0bits.ADCS0 = 1;
   861  06D4  171F               	bsf	31,6	;volatile
   862                           
   863                           ;ADC.c: 139:             break;
   864  06D5  2EF1               	goto	l97
   865  06D6                     l101:	
   866                           ;ADC.c: 141:         default:
   867                           
   868                           
   869                           ;ADC.c: 142:             ADCON0bits.ADCS0 = 0;
   870  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   871  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   872  06D8  131F               	bcf	31,6	;volatile
   873                           
   874                           ;ADC.c: 143:             ADCON0bits.ADCS0 = 0;
   875  06D9  131F               	bcf	31,6	;volatile
   876                           
   877                           ;ADC.c: 144:             break;
   878  06DA  2EF1               	goto	l97
   879  06DB                     l731:
   880  06DB  0872               	movf	ADC_CONVCLK@CONV,w
   881  06DC  00F0               	movwf	??_ADC_CONVCLK
   882  06DD  01F1               	clrf	??_ADC_CONVCLK+1
   883                           
   884                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   885                           ; Switch size 1, requested type "simple"
   886                           ; Number of cases is 1, Range of values is 0 to 0
   887                           ; switch strategies available:
   888                           ; Name         Instructions Cycles
   889                           ; simple_byte            4     3 (average)
   890                           ; direct_byte           11     8 (fixed)
   891                           ; jumptable            260     6 (fixed)
   892                           ;	Chosen strategy is simple_byte
   893  06DE  0871               	movf	??_ADC_CONVCLK+1,w
   894  06DF  3A00               	xorlw	0	; case 0
   895  06E0  1903               	skipnz
   896  06E1  2EE3               	goto	l955
   897  06E2  2ED6               	goto	l101
   898  06E3                     l955:
   899                           
   900                           ; Switch size 1, requested type "simple"
   901                           ; Number of cases is 4, Range of values is 0 to 3
   902                           ; switch strategies available:
   903                           ; Name         Instructions Cycles
   904                           ; simple_byte           13     7 (average)
   905                           ; direct_byte           20     8 (fixed)
   906                           ; jumptable            260     6 (fixed)
   907                           ;	Chosen strategy is simple_byte
   908  06E3  0870               	movf	??_ADC_CONVCLK,w
   909  06E4  3A00               	xorlw	0	; case 0
   910  06E5  1903               	skipnz
   911  06E6  2EC2               	goto	l96
   912  06E7  3A01               	xorlw	1	; case 1
   913  06E8  1903               	skipnz
   914  06E9  2EC7               	goto	l98
   915  06EA  3A03               	xorlw	3	; case 2
   916  06EB  1903               	skipnz
   917  06EC  2ECC               	goto	l99
   918  06ED  3A01               	xorlw	1	; case 3
   919  06EE  1903               	skipnz
   920  06EF  2ED1               	goto	l100
   921  06F0  2ED6               	goto	l101
   922  06F1                     l97:
   923                           
   924                           ;ADC.c: 147:     ADCON0bits.ADON = 1;
   925  06F1  141F               	bsf	31,0	;volatile
   926                           
   927                           ;ADC.c: 148:     PIR1bits.ADIF = 0;
   928  06F2  130C               	bcf	12,6	;volatile
   929                           
   930                           ;ADC.c: 149:     PIE1bits.ADIE = 1;
   931  06F3  1683               	bsf	3,5	;RP0=1, select bank1
   932  06F4  1303               	bcf	3,6	;RP1=0, select bank1
   933  06F5  170C               	bsf	12,6	;volatile
   934                           
   935                           ;ADC.c: 150:     INTCONbits.PEIE = 1;
   936  06F6  170B               	bsf	11,6	;volatile
   937  06F7                     l733:
   938                           
   939                           ;ADC.c: 151:     _delay((unsigned long)((30)*(8000000/4000.0)));
   940  06F7  304E               	movlw	78
   941  06F8  00F1               	movwf	??_ADC_CONVCLK+1
   942  06F9  30EB               	movlw	235
   943  06FA  00F0               	movwf	??_ADC_CONVCLK
   944  06FB                     u107:
   945  06FB  0BF0               	decfsz	??_ADC_CONVCLK,f
   946  06FC  2EFB               	goto	u107
   947  06FD  0BF1               	decfsz	??_ADC_CONVCLK+1,f
   948  06FE  2EFB               	goto	u107
   949  06FF                     l735:
   950                           
   951                           ;ADC.c: 152:     ADCON0bits.GO_nDONE = 1;
   952  06FF  1283               	bcf	3,5	;RP0=0, select bank0
   953  0700  1303               	bcf	3,6	;RP1=0, select bank0
   954  0701  149F               	bsf	31,1	;volatile
   955  0702                     l102:
   956  0702  0008               	return
   957  0703                     __end_of_ADC_CONVCLK:
   958                           
   959                           	psect	text4
   960  0675                     __ptext4:	
   961 ;; *************** function _ADC_CONTINUE *****************
   962 ;; Defined at:
   963 ;;		line 156 in file "ADC.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   977 ;;      Params:         0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0
   979 ;;      Temps:          2       0       0       0       0
   980 ;;      Totals:         2       0       0       0       0
   981 ;;Total ram usage:        2 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           
   991                           ;psect for function _ADC_CONTINUE
   992  0675                     _ADC_CONTINUE:
   993  0675                     l759:	
   994                           ;incstack = 0
   995                           ; Regs used in _ADC_CONTINUE: [wreg]
   996                           
   997                           
   998                           ;ADC.c: 157:     PIR1bits.ADIF = 0;
   999  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1000  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0677  130C               	bcf	12,6	;volatile
  1002                           
  1003                           ;ADC.c: 158:     PIE1bits.ADIE = 1;
  1004  0678  1683               	bsf	3,5	;RP0=1, select bank1
  1005  0679  1303               	bcf	3,6	;RP1=0, select bank1
  1006  067A  170C               	bsf	12,6	;volatile
  1007  067B                     l761:
  1008                           
  1009                           ;ADC.c: 159:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1010  067B  3034               	movlw	52
  1011  067C  00F1               	movwf	??_ADC_CONTINUE+1
  1012  067D  30F1               	movlw	241
  1013  067E  00F0               	movwf	??_ADC_CONTINUE
  1014  067F                     u117:
  1015  067F  0BF0               	decfsz	??_ADC_CONTINUE,f
  1016  0680  2E7F               	goto	u117
  1017  0681  0BF1               	decfsz	??_ADC_CONTINUE+1,f
  1018  0682  2E7F               	goto	u117
  1019  0683  2E84               	nop2
  1020  0684                     l763:
  1021                           
  1022                           ;ADC.c: 160:     ADCON0bits.GO_nDONE = 1;
  1023  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0686  149F               	bsf	31,1	;volatile
  1026  0687                     l105:
  1027  0687  0008               	return
  1028  0688                     __end_of_ADC_CONTINUE:
  1029                           
  1030                           	psect	text5
  1031  075F                     __ptext5:	
  1032 ;; *************** function _ADC_C *****************
  1033 ;; Defined at:
  1034 ;;		line 7 in file "ADC.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  CH              2    0[COMMON] unsigned int 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1048 ;;      Params:         2       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0
  1051 ;;      Totals:         2       0       0       0       0
  1052 ;;Total ram usage:        2 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _ADC_C
  1063  075F                     _ADC_C:
  1064  075F                     l855:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _ADC_C: [wreg-fsr0h+status,2+status,0]
  1067                           
  1068                           
  1069                           ;ADC.c: 9:   switch(CH){
  1070  075F  2FC9               	goto	l859
  1071  0760                     l76:	
  1072                           ;ADC.c: 11:          case 0:
  1073                           
  1074                           
  1075                           ;ADC.c: 12:             ADCON0bits.CHS3 = 0;
  1076  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0762  129F               	bcf	31,5	;volatile
  1079                           
  1080                           ;ADC.c: 13:             ADCON0bits.CHS2 = 0;
  1081  0763  121F               	bcf	31,4	;volatile
  1082                           
  1083                           ;ADC.c: 14:             ADCON0bits.CHS1 = 0;
  1084  0764  119F               	bcf	31,3	;volatile
  1085                           
  1086                           ;ADC.c: 15:             ADCON0bits.CHS0 = 0;
  1087  0765  111F               	bcf	31,2	;volatile
  1088                           
  1089                           ;ADC.c: 16:             break;
  1090  0766  2FFA               	goto	l92
  1091  0767                     l78:	
  1092                           ;ADC.c: 18:         case 1:
  1093                           
  1094                           
  1095                           ;ADC.c: 19:             ADCON0bits.CHS3 = 0;
  1096  0767  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0768  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0769  129F               	bcf	31,5	;volatile
  1099                           
  1100                           ;ADC.c: 20:             ADCON0bits.CHS2 = 0;
  1101  076A  121F               	bcf	31,4	;volatile
  1102                           
  1103                           ;ADC.c: 21:             ADCON0bits.CHS1 = 0;
  1104  076B  119F               	bcf	31,3	;volatile
  1105                           
  1106                           ;ADC.c: 22:             ADCON0bits.CHS0 = 1;
  1107  076C  151F               	bsf	31,2	;volatile
  1108                           
  1109                           ;ADC.c: 23:             break;
  1110  076D  2FFA               	goto	l92
  1111  076E                     l79:	
  1112                           ;ADC.c: 25:         case 2:
  1113                           
  1114                           
  1115                           ;ADC.c: 26:             ADCON0bits.CHS3 = 0;
  1116  076E  1283               	bcf	3,5	;RP0=0, select bank0
  1117  076F  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0770  129F               	bcf	31,5	;volatile
  1119                           
  1120                           ;ADC.c: 27:             ADCON0bits.CHS2 = 0;
  1121  0771  121F               	bcf	31,4	;volatile
  1122                           
  1123                           ;ADC.c: 28:             ADCON0bits.CHS1 = 1;
  1124  0772  159F               	bsf	31,3	;volatile
  1125                           
  1126                           ;ADC.c: 29:             ADCON0bits.CHS0 = 0;
  1127  0773  111F               	bcf	31,2	;volatile
  1128                           
  1129                           ;ADC.c: 30:             break;
  1130  0774  2FFA               	goto	l92
  1131  0775                     l80:	
  1132                           ;ADC.c: 32:         case 3:
  1133                           
  1134                           
  1135                           ;ADC.c: 33:             ADCON0bits.CHS3 = 0;
  1136  0775  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0776  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0777  129F               	bcf	31,5	;volatile
  1139                           
  1140                           ;ADC.c: 34:             ADCON0bits.CHS2 = 0;
  1141  0778  121F               	bcf	31,4	;volatile
  1142                           
  1143                           ;ADC.c: 35:             ADCON0bits.CHS1 = 1;
  1144  0779  159F               	bsf	31,3	;volatile
  1145                           
  1146                           ;ADC.c: 36:             ADCON0bits.CHS0 = 1;
  1147  077A  151F               	bsf	31,2	;volatile
  1148                           
  1149                           ;ADC.c: 37:             break;
  1150  077B  2FFA               	goto	l92
  1151  077C                     l81:	
  1152                           ;ADC.c: 39:         case 4:
  1153                           
  1154                           
  1155                           ;ADC.c: 40:             ADCON0bits.CHS3 = 0;
  1156  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1157  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1158  077E  129F               	bcf	31,5	;volatile
  1159                           
  1160                           ;ADC.c: 41:             ADCON0bits.CHS2 = 1;
  1161  077F  161F               	bsf	31,4	;volatile
  1162                           
  1163                           ;ADC.c: 42:             ADCON0bits.CHS1 = 0;
  1164  0780  119F               	bcf	31,3	;volatile
  1165                           
  1166                           ;ADC.c: 43:             ADCON0bits.CHS0 = 0;
  1167  0781  111F               	bcf	31,2	;volatile
  1168                           
  1169                           ;ADC.c: 44:             break;
  1170  0782  2FFA               	goto	l92
  1171  0783                     l82:	
  1172                           ;ADC.c: 46:         case 5:
  1173                           
  1174                           
  1175                           ;ADC.c: 47:             ADCON0bits.CHS3 = 0;
  1176  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0785  129F               	bcf	31,5	;volatile
  1179                           
  1180                           ;ADC.c: 48:             ADCON0bits.CHS2 = 1;
  1181  0786  161F               	bsf	31,4	;volatile
  1182                           
  1183                           ;ADC.c: 49:             ADCON0bits.CHS1 = 0;
  1184  0787  119F               	bcf	31,3	;volatile
  1185                           
  1186                           ;ADC.c: 50:             ADCON0bits.CHS0 = 1;
  1187  0788  151F               	bsf	31,2	;volatile
  1188                           
  1189                           ;ADC.c: 51:             break;
  1190  0789  2FFA               	goto	l92
  1191  078A                     l83:	
  1192                           ;ADC.c: 53:         case 6:
  1193                           
  1194                           
  1195                           ;ADC.c: 54:             ADCON0bits.CHS3 = 0;
  1196  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1197  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1198  078C  129F               	bcf	31,5	;volatile
  1199                           
  1200                           ;ADC.c: 55:             ADCON0bits.CHS2 = 1;
  1201  078D  161F               	bsf	31,4	;volatile
  1202                           
  1203                           ;ADC.c: 56:             ADCON0bits.CHS1 = 1;
  1204  078E  159F               	bsf	31,3	;volatile
  1205                           
  1206                           ;ADC.c: 57:             ADCON0bits.CHS0 = 0;
  1207  078F  111F               	bcf	31,2	;volatile
  1208                           
  1209                           ;ADC.c: 58:             break;
  1210  0790  2FFA               	goto	l92
  1211  0791                     l84:	
  1212                           ;ADC.c: 60:         case 7:
  1213                           
  1214                           
  1215                           ;ADC.c: 61:             ADCON0bits.CHS3 = 0;
  1216  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0793  129F               	bcf	31,5	;volatile
  1219                           
  1220                           ;ADC.c: 62:             ADCON0bits.CHS2 = 1;
  1221  0794  161F               	bsf	31,4	;volatile
  1222                           
  1223                           ;ADC.c: 63:             ADCON0bits.CHS1 = 1;
  1224  0795  159F               	bsf	31,3	;volatile
  1225                           
  1226                           ;ADC.c: 64:             ADCON0bits.CHS0 = 1;
  1227  0796  151F               	bsf	31,2	;volatile
  1228                           
  1229                           ;ADC.c: 65:             break;
  1230  0797  2FFA               	goto	l92
  1231  0798                     l85:	
  1232                           ;ADC.c: 67:         case 8:
  1233                           
  1234                           
  1235                           ;ADC.c: 68:             ADCON0bits.CHS3 = 1;
  1236  0798  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0799  1303               	bcf	3,6	;RP1=0, select bank0
  1238  079A  169F               	bsf	31,5	;volatile
  1239                           
  1240                           ;ADC.c: 69:             ADCON0bits.CHS2 = 0;
  1241  079B  121F               	bcf	31,4	;volatile
  1242                           
  1243                           ;ADC.c: 70:             ADCON0bits.CHS1 = 0;
  1244  079C  119F               	bcf	31,3	;volatile
  1245                           
  1246                           ;ADC.c: 71:             ADCON0bits.CHS0 = 0;
  1247  079D  111F               	bcf	31,2	;volatile
  1248                           
  1249                           ;ADC.c: 72:             break;
  1250  079E  2FFA               	goto	l92
  1251  079F                     l86:	
  1252                           ;ADC.c: 74:         case 9:
  1253                           
  1254                           
  1255                           ;ADC.c: 75:             ADCON0bits.CHS3 = 1;
  1256  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1257  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1258  07A1  169F               	bsf	31,5	;volatile
  1259                           
  1260                           ;ADC.c: 76:             ADCON0bits.CHS2 = 0;
  1261  07A2  121F               	bcf	31,4	;volatile
  1262                           
  1263                           ;ADC.c: 77:             ADCON0bits.CHS1 = 0;
  1264  07A3  119F               	bcf	31,3	;volatile
  1265                           
  1266                           ;ADC.c: 78:             ADCON0bits.CHS0 = 1;
  1267  07A4  151F               	bsf	31,2	;volatile
  1268                           
  1269                           ;ADC.c: 79:             break;
  1270  07A5  2FFA               	goto	l92
  1271  07A6                     l87:	
  1272                           ;ADC.c: 81:         case 10:
  1273                           
  1274                           
  1275                           ;ADC.c: 82:             ADCON0bits.CHS3 = 1;
  1276  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1277  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1278  07A8  169F               	bsf	31,5	;volatile
  1279                           
  1280                           ;ADC.c: 83:             ADCON0bits.CHS2 = 0;
  1281  07A9  121F               	bcf	31,4	;volatile
  1282                           
  1283                           ;ADC.c: 84:             ADCON0bits.CHS1 = 1;
  1284  07AA  159F               	bsf	31,3	;volatile
  1285                           
  1286                           ;ADC.c: 85:             ADCON0bits.CHS0 = 0;
  1287  07AB  111F               	bcf	31,2	;volatile
  1288                           
  1289                           ;ADC.c: 86:             break;
  1290  07AC  2FFA               	goto	l92
  1291  07AD                     l88:	
  1292                           ;ADC.c: 88:         case 11:
  1293                           
  1294                           
  1295                           ;ADC.c: 89:             ADCON0bits.CHS3 = 1;
  1296  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1297  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1298  07AF  169F               	bsf	31,5	;volatile
  1299                           
  1300                           ;ADC.c: 90:             ADCON0bits.CHS2 = 0;
  1301  07B0  121F               	bcf	31,4	;volatile
  1302                           
  1303                           ;ADC.c: 91:             ADCON0bits.CHS1 = 1;
  1304  07B1  159F               	bsf	31,3	;volatile
  1305                           
  1306                           ;ADC.c: 92:             ADCON0bits.CHS0 = 1;
  1307  07B2  151F               	bsf	31,2	;volatile
  1308                           
  1309                           ;ADC.c: 93:             break;
  1310  07B3  2FFA               	goto	l92
  1311  07B4                     l89:	
  1312                           ;ADC.c: 95:         case 12:
  1313                           
  1314                           
  1315                           ;ADC.c: 96:             ADCON0bits.CHS3 = 1;
  1316  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1317  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1318  07B6  169F               	bsf	31,5	;volatile
  1319                           
  1320                           ;ADC.c: 97:             ADCON0bits.CHS2 = 1;
  1321  07B7  161F               	bsf	31,4	;volatile
  1322                           
  1323                           ;ADC.c: 98:             ADCON0bits.CHS1 = 0;
  1324  07B8  119F               	bcf	31,3	;volatile
  1325                           
  1326                           ;ADC.c: 99:             ADCON0bits.CHS0 = 0;
  1327  07B9  111F               	bcf	31,2	;volatile
  1328                           
  1329                           ;ADC.c: 100:             break;
  1330  07BA  2FFA               	goto	l92
  1331  07BB                     l90:	
  1332                           ;ADC.c: 101:         case 13:
  1333                           
  1334                           
  1335                           ;ADC.c: 102:             ADCON0bits.CHS3 = 1;
  1336  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1337  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1338  07BD  169F               	bsf	31,5	;volatile
  1339                           
  1340                           ;ADC.c: 103:             ADCON0bits.CHS2 = 1;
  1341  07BE  161F               	bsf	31,4	;volatile
  1342                           
  1343                           ;ADC.c: 104:             ADCON0bits.CHS1 = 0;
  1344  07BF  119F               	bcf	31,3	;volatile
  1345                           
  1346                           ;ADC.c: 105:             ADCON0bits.CHS0 = 1;
  1347  07C0  151F               	bsf	31,2	;volatile
  1348                           
  1349                           ;ADC.c: 106:             break;
  1350  07C1  2FFA               	goto	l92
  1351  07C2                     l91:	
  1352                           ;ADC.c: 108:         default:
  1353                           
  1354                           
  1355                           ;ADC.c: 109:             ADCON0bits.CHS3 = 0;
  1356  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1357  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1358  07C4  129F               	bcf	31,5	;volatile
  1359                           
  1360                           ;ADC.c: 110:             ADCON0bits.CHS2 = 0;
  1361  07C5  121F               	bcf	31,4	;volatile
  1362                           
  1363                           ;ADC.c: 111:             ADCON0bits.CHS1 = 0;
  1364  07C6  119F               	bcf	31,3	;volatile
  1365                           
  1366                           ;ADC.c: 112:             ADCON0bits.CHS0 = 0;
  1367  07C7  111F               	bcf	31,2	;volatile
  1368                           
  1369                           ;ADC.c: 113:             break;
  1370  07C8  2FFA               	goto	l92
  1371  07C9                     l859:
  1372                           
  1373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1374                           ; Switch size 1, requested type "simple"
  1375                           ; Number of cases is 1, Range of values is 0 to 0
  1376                           ; switch strategies available:
  1377                           ; Name         Instructions Cycles
  1378                           ; simple_byte            4     3 (average)
  1379                           ; direct_byte           11     8 (fixed)
  1380                           ; jumptable            260     6 (fixed)
  1381                           ;	Chosen strategy is simple_byte
  1382  07C9  0871               	movf	ADC_C@CH+1,w
  1383  07CA  3A00               	xorlw	0	; case 0
  1384  07CB  1903               	skipnz
  1385  07CC  2FCE               	goto	l957
  1386  07CD  2FC2               	goto	l91
  1387  07CE                     l957:
  1388                           
  1389                           ; Switch size 1, requested type "simple"
  1390                           ; Number of cases is 14, Range of values is 0 to 13
  1391                           ; switch strategies available:
  1392                           ; Name         Instructions Cycles
  1393                           ; simple_byte           43    22 (average)
  1394                           ; direct_byte           50     8 (fixed)
  1395                           ; jumptable            260     6 (fixed)
  1396                           ;	Chosen strategy is simple_byte
  1397  07CE  0870               	movf	ADC_C@CH,w
  1398  07CF  3A00               	xorlw	0	; case 0
  1399  07D0  1903               	skipnz
  1400  07D1  2F60               	goto	l76
  1401  07D2  3A01               	xorlw	1	; case 1
  1402  07D3  1903               	skipnz
  1403  07D4  2F67               	goto	l78
  1404  07D5  3A03               	xorlw	3	; case 2
  1405  07D6  1903               	skipnz
  1406  07D7  2F6E               	goto	l79
  1407  07D8  3A01               	xorlw	1	; case 3
  1408  07D9  1903               	skipnz
  1409  07DA  2F75               	goto	l80
  1410  07DB  3A07               	xorlw	7	; case 4
  1411  07DC  1903               	skipnz
  1412  07DD  2F7C               	goto	l81
  1413  07DE  3A01               	xorlw	1	; case 5
  1414  07DF  1903               	skipnz
  1415  07E0  2F83               	goto	l82
  1416  07E1  3A03               	xorlw	3	; case 6
  1417  07E2  1903               	skipnz
  1418  07E3  2F8A               	goto	l83
  1419  07E4  3A01               	xorlw	1	; case 7
  1420  07E5  1903               	skipnz
  1421  07E6  2F91               	goto	l84
  1422  07E7  3A0F               	xorlw	15	; case 8
  1423  07E8  1903               	skipnz
  1424  07E9  2F98               	goto	l85
  1425  07EA  3A01               	xorlw	1	; case 9
  1426  07EB  1903               	skipnz
  1427  07EC  2F9F               	goto	l86
  1428  07ED  3A03               	xorlw	3	; case 10
  1429  07EE  1903               	skipnz
  1430  07EF  2FA6               	goto	l87
  1431  07F0  3A01               	xorlw	1	; case 11
  1432  07F1  1903               	skipnz
  1433  07F2  2FAD               	goto	l88
  1434  07F3  3A07               	xorlw	7	; case 12
  1435  07F4  1903               	skipnz
  1436  07F5  2FB4               	goto	l89
  1437  07F6  3A01               	xorlw	1	; case 13
  1438  07F7  1903               	skipnz
  1439  07F8  2FBB               	goto	l90
  1440  07F9  2FC2               	goto	l91
  1441  07FA                     l92:
  1442  07FA  0008               	return
  1443  07FB                     __end_of_ADC_C:
  1444  007E                     btemp	set	126	;btemp
  1445  007E                     wtemp0	set	126
  1446                           
  1447                           	psect	config
  1448                           
  1449                           ;Config register CONFIG1 @ 0x2007
  1450                           ;	Oscillator Selection bits
  1451                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  1452                           ;	Watchdog Timer Enable bit
  1453                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1454                           ;	Power-up Timer Enable bit
  1455                           ;	PWRTE = OFF, PWRT disabled
  1456                           ;	RE3/MCLR pin function select bit
  1457                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1458                           ;	Code Protection bit
  1459                           ;	CP = OFF, Program memory code protection is disabled
  1460                           ;	Data Code Protection bit
  1461                           ;	CPD = OFF, Data memory code protection is disabled
  1462                           ;	Brown Out Reset Selection bits
  1463                           ;	BOREN = OFF, BOR disabled
  1464                           ;	Internal External Switchover bit
  1465                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1466                           ;	Fail-Safe Clock Monitor Enabled bit
  1467                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1468                           ;	Low Voltage Programming Enable bit
  1469                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1470                           ;	In-Circuit Debugger Mode bit
  1471                           ;	DEBUG = 0x1, unprogrammed default
  1472  2007                     	org	8199
  1473  2007  20D7               	dw	8407
  1474                           
  1475                           ;Config register CONFIG2 @ 0x2008
  1476                           ;	Brown-out Reset Selection bit
  1477                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1478                           ;	Flash Program Memory Self Write Enable bits
  1479                           ;	WRT = OFF, Write protection off
  1480  2008                     	org	8200
  1481  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_READ

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     143
                                              4 COMMON     2     2      0
                              _ADC_C
                       _ADC_CONTINUE
                        _ADC_CONVCLK
                           _ADC_READ
                              _SETUP
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_READ                                             4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONVCLK                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONTINUE                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_C                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_C
   _ADC_CONTINUE
   _ADC_CONVCLK
   _ADC_READ
   _SETUP

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 13 22:44:45 2021

   __size_of_ADC_CONVCLK 0043                       l80 0775                       l81 077C  
                     l49 075B                       l90 07BB                       l82 0783  
                     l58 069D                       l91 07C2                       l83 078A  
                     l84 0791                       l92 07FA                       l76 0760  
                     l85 0798                       l86 079F                       l78 0767  
                     l87 07A6                       l79 076E                       l88 07AD  
                     l96 06C2                       l89 07B4                       l97 06F1  
                     l98 06C7                       l99 06CC                       u50 0737  
                     u51 0736                       u60 0743                       u61 0742  
                     u70 0749                       u71 0748                       u80 0755  
                     u81 0754                       u97 070C    __size_of_ADC_CONTINUE 0013  
                    l100 06D1                      l101 06D6                      l102 0702  
                    l105 0687                      l113 06BF                      l711 0694  
                    l713 0695                      l705 0688                      l731 06DB  
                    l715 069B                      l707 068F                      l733 06F7  
                    l741 069F                      l709 0693                      l735 06FF  
                    l727 06C1                      l751 06BE                      l743 06A0  
                    l761 067B                      l745 06A7                      l763 0684  
                    l749 06AE                      l855 075F                      l759 0675  
                    l871 0719                      l953 06B6                      l881 0737  
                    l873 071F                      l865 0703                      l859 07C9  
                    l955 06E3                      l891 0755                      l883 073D  
                    l875 0728                      l867 0708                      l957 07CE  
                    l885 0743                      l877 072C                      l869 0711  
                    l887 0749                      l879 0731                      l889 074F  
                    u107 06FB                      u117 067F         __end_of_ADC_READ 06C0  
                   _main 0703                     btemp 007E                     start 0000  
        ADC_CONVCLK@CONV 0072             _ADC_CONTINUE 0675                    ?_main 0070  
                  _ADC_C 075F                    _ANSEL 0188                    _SETUP 0688  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    status 0003                    wtemp0 007E  
        __initialization 07FB             __end_of_main 075F                   ??_main 0074  
                 ?_ADC_C 0070                   ?_SETUP 0070                   _ADRESH 001E  
                 _ADRESL 009E                   _ANSELH 0189                ?_ADC_READ 0070  
__end_of__initialization 07FC            __end_of_ADC_C 07FB            __end_of_SETUP 069E  
         __pcstackCOMMON 0070                  ??_ADC_C 0072                  ADC_C@CH 0070  
             ??_ADC_READ 0070                  ??_SETUP 0070            ??_ADC_CONVCLK 0070  
             __pmaintext 0703      __end_of_ADC_CONVCLK 0703                _ANSELbits 0188  
                __ptext1 0688                  __ptext2 069E                  __ptext3 06C0  
                __ptext4 0675                  __ptext5 075F     end_of_initialization 07FC  
              _PORTBbits 0006        __size_of_ADC_READ 0022              _ADC_CONVCLK 06C0  
    start_initialization 07FB            ?_ADC_CONTINUE 0070              __pbssCOMMON 0076  
              ___latbits 0002           ??_ADC_CONTINUE 0070           __size_of_ADC_C 009C  
               _ADC_READ 069E           __size_of_SETUP 0016                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F    ADC_READ@JUSTIFICACION 0072  
           ?_ADC_CONVCLK 0070     __end_of_ADC_CONTINUE 0688            __size_of_main 005C  
      ADC_READ@VALOR_ADC 0073              _TEMPERATURA 0076               _INTCONbits 000B  
