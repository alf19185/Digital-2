

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 11:09:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.31
    27                           ; Generated 13/10/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	idataBANK0
   375  0332                     __pidataBANK0:
   376                           
   377                           ;initializer for _numerosDisplay
   378  0332  3488               	retlw	136
   379  0333  3400               	retlw	0
   380  0334  34EB               	retlw	235
   381  0335  3400               	retlw	0
   382  0336  344C               	retlw	76
   383  0337  3400               	retlw	0
   384  0338  3449               	retlw	73
   385  0339  3400               	retlw	0
   386  033A  342B               	retlw	43
   387  033B  3400               	retlw	0
   388  033C  3419               	retlw	25
   389  033D  3400               	retlw	0
   390  033E  3418               	retlw	24
   391  033F  3400               	retlw	0
   392  0340  34CB               	retlw	203
   393  0341  3400               	retlw	0
   394  0342  3408               	retlw	8
   395  0343  3400               	retlw	0
   396  0344  340B               	retlw	11
   397  0345  3400               	retlw	0
   398  0346  3402               	retlw	2
   399  0347  3400               	retlw	0
   400  0348  3430               	retlw	48
   401  0349  3400               	retlw	0
   402  034A  3494               	retlw	148
   403  034B  3400               	retlw	0
   404  034C  3460               	retlw	96
   405  034D  3400               	retlw	0
   406  034E  3414               	retlw	20
   407  034F  3400               	retlw	0
   408  0350  3416               	retlw	22
   409  0351  3400               	retlw	0
   410                           
   411                           ;initializer for _valorTMR0
   412  0352  3483               	retlw	131
   413  0001                     _TMR0	set	1
   414  0007                     _PORTCbits	set	7
   415  001E                     _ADRESH	set	30
   416  001F                     _ADCON0bits	set	31
   417  0006                     _PORTBbits	set	6
   418  0008                     _PORTD	set	8
   419  0007                     _PORTC	set	7
   420  0006                     _PORTB	set	6
   421  0009                     _PORTE	set	9
   422  0009                     _PORTEbits	set	9
   423  0005                     _PORTA	set	5
   424  000B                     _INTCONbits	set	11
   425  000C                     _PIR1bits	set	12
   426  008F                     _OSCCONbits	set	143
   427  0087                     _TRISCbits	set	135
   428  009E                     _ADRESL	set	158
   429  0089                     _TRISEbits	set	137
   430  0085                     _TRISAbits	set	133
   431  009F                     _ADCON1bits	set	159
   432  0096                     _IOCB	set	150
   433  0081                     _OPTION_REGbits	set	129
   434  0095                     _WPUB	set	149
   435  0089                     _TRISE	set	137
   436  0086                     _TRISB	set	134
   437  0085                     _TRISA	set	133
   438  0087                     _TRISC	set	135
   439  0088                     _TRISD	set	136
   440  008C                     _PIE1bits	set	140
   441  0188                     _ANSELbits	set	392
   442  0189                     _ANSELH	set	393
   443  0188                     _ANSEL	set	392
   444                           
   445                           	psect	cinit
   446  0011                     start_initialization:	
   447                           ; #config settings
   448                           
   449  0011                     __initialization:
   450                           
   451                           ; Initialize objects allocated to BANK0
   452  0011  1383               	bcf	3,7	;select IRP bank0
   453  0012  3041               	movlw	low (__pdataBANK0+33)
   454  0013  00FD               	movwf	btemp+-1
   455  0014  3003               	movlw	high __pidataBANK0
   456  0015  00FE               	movwf	btemp
   457  0016  3032               	movlw	low __pidataBANK0
   458  0017  00FF               	movwf	btemp+1
   459  0018  3020               	movlw	low __pdataBANK0
   460  0019  0084               	movwf	4
   461  001A  120A  118A  238A  120A  118A  	fcall	init_ram0
   462                           
   463                           ; Clear objects allocated to BANK0
   464  001F  01C9               	clrf	__pbssBANK0& (0+127)
   465  0020  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   466  0021  01CB               	clrf	(__pbssBANK0+2)& (0+127)
   467                           
   468                           ; Clear objects allocated to COMMON
   469  0022  01FA               	clrf	__pbssCOMMON& (0+127)
   470  0023  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   471  0024  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   472  0025  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   473  0026                     end_of_initialization:	
   474                           ;End of C runtime variable initialization code
   475                           
   476  0026                     __end_of__initialization:
   477  0026  0183               	clrf	3
   478  0027  120A  118A  29B6   	ljmp	_main	;jump to C main() function
   479                           
   480                           	psect	bssCOMMON
   481  007A                     __pbssCOMMON:
   482  007A                     _banderaTMR0:
   483  007A                     	ds	1
   484  007B                     _banderaDO:
   485  007B                     	ds	1
   486  007C                     _banderaUP:
   487  007C                     	ds	1
   488  007D                     _banderaBoton:
   489  007D                     	ds	1
   490                           
   491                           	psect	bssBANK0
   492  0049                     __pbssBANK0:
   493  0049                     _valorDisplay_Uni:
   494  0049                     	ds	1
   495  004A                     _valorDisplay_Dec:
   496  004A                     	ds	1
   497  004B                     _banderaADC:
   498  004B                     	ds	1
   499                           
   500                           	psect	dataBANK0
   501  0020                     __pdataBANK0:
   502  0020                     _numerosDisplay:
   503  0020                     	ds	32
   504  0040                     _valorTMR0:
   505  0040                     	ds	1
   506                           
   507                           	psect	inittext
   508  0386                     init_fetch0:	
   509                           ;	Called with low address in FSR and high address in W
   510                           
   511  0386  087E               	movf	btemp,w
   512  0387  008A               	movwf	10
   513  0388  087F               	movf	btemp+1,w
   514  0389  0082               	movwf	2
   515  038A                     init_ram0:	
   516                           ;Called with:
   517                           ;	high address of idata address in btemp 
   518                           ;	low address of idata address in btemp+1 
   519                           ;	low address of data in FSR
   520                           ;	high address + 1 of data in btemp-1
   521                           
   522  038A  120A  118A  2386  120A  118A  	fcall	init_fetch0
   523  038F  0080               	movwf	0
   524  0390  0A84               	incf	4,f
   525  0391  0804               	movf	4,w
   526  0392  067D               	xorwf	btemp+-1,w
   527  0393  1903               	btfsc	3,2
   528  0394  3400               	retlw	0
   529  0395  0AFF               	incf	btemp+1,f
   530  0396  1903               	btfsc	3,2
   531  0397  0AFE               	incf	btemp,f
   532  0398  2B8A               	goto	init_ram0
   533                           
   534                           	psect	cstackCOMMON
   535  0070                     __pcstackCOMMON:
   536  0070                     ?_cambioDisplay:
   537  0070                     ?_config_PUERTOS:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_AnalogRead_8:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_ADCinit:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_press_Subir:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_press_Bajar:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_ISR:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_main:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     cambioDisplay@valDec:	
   559                           ; 1 bytes @ 0x0
   560                           
   561                           
   562                           ; 1 bytes @ 0x0
   563  0070                     	ds	1
   564  0071                     cambioDisplay@bandera:
   565                           
   566                           ; 1 bytes @ 0x1
   567  0071                     	ds	1
   568  0072                     ??_cambioDisplay:
   569                           
   570                           ; 1 bytes @ 0x2
   571  0072                     	ds	2
   572  0074                     cambioDisplay@valUni:
   573                           
   574                           ; 1 bytes @ 0x4
   575  0074                     	ds	1
   576  0075                     ??_ISR:
   577                           
   578                           ; 1 bytes @ 0x5
   579  0075                     	ds	5
   580                           
   581                           	psect	cstackBANK0
   582  0041                     __pcstackBANK0:
   583  0041                     ??_config_PUERTOS:
   584  0041                     ?_config2Display:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0041                     ?_ADConfig:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0041                     ??_AnalogRead_8:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0041                     ??_ADCinit:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0041                     ??_press_Subir:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0041                     ??_press_Bajar:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0041                     ADConfig@canal:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0041                     config2Display@FreqOsc:	
   606                           ; 1 bytes @ 0x0
   607                           
   608                           
   609                           ; 2 bytes @ 0x0
   610  0041                     	ds	1
   611  0042                     ADConfig@justificado:
   612                           
   613                           ; 1 bytes @ 0x1
   614  0042                     	ds	1
   615  0043                     ??_config2Display:
   616  0043                     ??_ADConfig:	
   617                           ; 1 bytes @ 0x2
   618                           
   619  0043                     AnalogRead_8@just:	
   620                           ; 1 bytes @ 0x2
   621                           
   622                           
   623                           ; 1 bytes @ 0x2
   624  0043                     	ds	1
   625  0044                     AnalogRead_8@conversion:
   626                           
   627                           ; 1 bytes @ 0x3
   628  0044                     	ds	1
   629  0045                     ADConfig@oscFreq:
   630                           
   631                           ; 1 bytes @ 0x4
   632  0045                     	ds	1
   633  0046                     ??_main:
   634                           
   635                           ; 1 bytes @ 0x5
   636  0046                     	ds	2
   637  0048                     main@lectura:
   638                           
   639                           ; 1 bytes @ 0x7
   640  0048                     	ds	1
   641                           
   642                           	psect	maintext
   643  01B6                     __pmaintext:	
   644 ;;
   645 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   646 ;;
   647 ;; *************** function _main *****************
   648 ;; Defined at:
   649 ;;		line 68 in file "Principal2.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  lectura         1    7[BANK0 ] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : B00/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         0       0       0       0       0
   664 ;;      Locals:         0       1       0       0       0
   665 ;;      Temps:          0       2       0       0       0
   666 ;;      Totals:         0       3       0       0       0
   667 ;;Total ram usage:        3 bytes
   668 ;; Hardware stack levels required when called:    3
   669 ;; This function calls:
   670 ;;		_ADCinit
   671 ;;		_ADConfig
   672 ;;		_AnalogRead_8
   673 ;;		_config2Display
   674 ;;		_config_PUERTOS
   675 ;;		_press_Bajar
   676 ;;		_press_Subir
   677 ;; This function is called by:
   678 ;;		Startup code after reset
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function _main
   684  01B6                     _main:
   685  01B6                     l1564:	
   686                           ;incstack = 0
   687                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   688                           
   689                           
   690                           ;Principal2.c: 70:     config_PUERTOS();
   691  01B6  120A  118A  2353  120A  118A  	fcall	_config_PUERTOS
   692  01BB                     l1566:
   693                           
   694                           ;Principal2.c: 71:     config2Display(4000);
   695  01BB  30A0               	movlw	160
   696  01BC  1283               	bcf	3,5	;RP0=0, select bank0
   697  01BD  1303               	bcf	3,6	;RP1=0, select bank0
   698  01BE  00C1               	movwf	config2Display@FreqOsc
   699  01BF  300F               	movlw	15
   700  01C0  00C2               	movwf	config2Display@FreqOsc+1
   701  01C1  120A  118A  2114  120A  118A  	fcall	_config2Display
   702  01C6                     l1568:
   703                           
   704                           ;Principal2.c: 72:     ADConfig(8, 5, 'H');
   705  01C6  3005               	movlw	5
   706  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   707  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   708  01C9  00C6               	movwf	??_main
   709  01CA  0846               	movf	??_main,w
   710  01CB  00C1               	movwf	ADConfig@canal
   711  01CC  3048               	movlw	72
   712  01CD  00C7               	movwf	??_main+1
   713  01CE  0847               	movf	??_main+1,w
   714  01CF  00C2               	movwf	ADConfig@justificado
   715  01D0  3008               	movlw	8
   716  01D1  120A  118A  202A  120A  118A  	fcall	_ADConfig
   717  01D6                     l1570:
   718                           
   719                           ;Principal2.c: 73:     INTCONbits.GIE = 1;
   720  01D6  178B               	bsf	11,7	;volatile
   721  01D7                     l1572:
   722                           
   723                           ;Principal2.c: 77:         if (banderaADC == 1){
   724  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   725  01D8  1303               	bcf	3,6	;RP1=0, select bank0
   726  01D9  034B               	decf	_banderaADC,w
   727  01DA  1D03               	btfss	3,2
   728  01DB  29DD               	goto	u391
   729  01DC  29DE               	goto	u390
   730  01DD                     u391:
   731  01DD  2A14               	goto	l1594
   732  01DE                     u390:
   733  01DE                     l1574:
   734                           
   735                           ;Principal2.c: 78:             valorDisplay_Uni = 9;
   736  01DE  3009               	movlw	9
   737  01DF  00C6               	movwf	??_main
   738  01E0  0846               	movf	??_main,w
   739  01E1  00C9               	movwf	_valorDisplay_Uni
   740  01E2                     l1576:
   741                           
   742                           ;Principal2.c: 79:             uint8_t lectura = AnalogRead_8('H');
   743  01E2  3048               	movlw	72
   744  01E3  120A  118A  230E  120A  118A  	fcall	_AnalogRead_8
   745  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   746  01E9  1303               	bcf	3,6	;RP1=0, select bank0
   747  01EA  00C6               	movwf	??_main
   748  01EB  0846               	movf	??_main,w
   749  01EC  00C8               	movwf	main@lectura
   750  01ED                     l1578:
   751                           
   752                           ;Principal2.c: 80:             if(lectura == PORTA){
   753  01ED  0848               	movf	main@lectura,w
   754  01EE  0605               	xorwf	5,w	;volatile
   755  01EF  1D03               	skipz
   756  01F0  29F2               	goto	u401
   757  01F1  29F3               	goto	u400
   758  01F2                     u401:
   759  01F2  29F5               	goto	l1582
   760  01F3                     u400:
   761  01F3                     l1580:
   762                           
   763                           ;Principal2.c: 81:                 PORTEbits.RE1 = 1;
   764  01F3  1489               	bsf	9,1	;volatile
   765                           
   766                           ;Principal2.c: 82:             }
   767  01F4  29FC               	goto	l1586
   768  01F5                     l1582:
   769  01F5  0848               	movf	main@lectura,w
   770  01F6  0605               	xorwf	5,w	;volatile
   771  01F7  1903               	skipnz
   772  01F8  29FA               	goto	u411
   773  01F9  29FB               	goto	u410
   774  01FA                     u411:
   775  01FA  29FC               	goto	l1586
   776  01FB                     u410:
   777  01FB                     l1584:
   778                           
   779                           ;Principal2.c: 84:                 PORTEbits.RE1 = 0;
   780  01FB  1089               	bcf	9,1	;volatile
   781  01FC                     l1586:
   782                           
   783                           ;Principal2.c: 87:             valorDisplay_Uni = lectura & 0x0F;
   784  01FC  0848               	movf	main@lectura,w
   785  01FD  390F               	andlw	15
   786  01FE  00C6               	movwf	??_main
   787  01FF  0846               	movf	??_main,w
   788  0200  00C9               	movwf	_valorDisplay_Uni
   789  0201                     l1588:
   790                           
   791                           ;Principal2.c: 88:             valorDisplay_Dec = (lectura & 0xF0) >> 4;
   792  0201  0848               	movf	main@lectura,w
   793  0202  00C6               	movwf	??_main
   794  0203  3004               	movlw	4
   795  0204                     u425:
   796  0204  1003               	clrc
   797  0205  0CC6               	rrf	??_main,f
   798  0206  3EFF               	addlw	-1
   799  0207  1D03               	skipz
   800  0208  2A04               	goto	u425
   801  0209  0846               	movf	??_main,w
   802  020A  390F               	andlw	15
   803  020B  00C7               	movwf	??_main+1
   804  020C  0847               	movf	??_main+1,w
   805  020D  00CA               	movwf	_valorDisplay_Dec
   806  020E                     l1590:
   807                           
   808                           ;Principal2.c: 89:             banderaADC = 0;
   809  020E  01CB               	clrf	_banderaADC
   810  020F                     l1592:
   811                           
   812                           ;Principal2.c: 90:             ADCinit();
   813  020F  120A  118A  2371  120A  118A  	fcall	_ADCinit
   814  0214                     l1594:
   815                           
   816                           ;Principal2.c: 92:         press_Subir();
   817  0214  120A  118A  2266  120A  118A  	fcall	_press_Subir
   818  0219                     l1596:
   819                           
   820                           ;Principal2.c: 93:         press_Bajar();
   821  0219  120A  118A  22A2  120A  118A  	fcall	_press_Bajar
   822  021E  29D7               	goto	l1572
   823  021F  120A  118A  280E   	ljmp	start
   824  0222                     __end_of_main:
   825                           
   826                           	psect	text1
   827  0266                     __ptext1:	
   828 ;; *************** function _press_Subir *****************
   829 ;; Defined at:
   830 ;;		line 123 in file "Principal2.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0
   846 ;;      Temps:          0       2       0       0       0
   847 ;;      Totals:         0       2       0       0       0
   848 ;;Total ram usage:        2 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:    2
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _press_Subir
   860  0266                     _press_Subir:
   861  0266                     l1492:	
   862                           ;incstack = 0
   863                           ; Regs used in _press_Subir: [wreg+status,2+status,0]
   864                           
   865                           
   866                           ;Principal2.c: 125:     if (banderaBoton == 1){
   867  0266  037D               	decf	_banderaBoton,w
   868  0267  1D03               	btfss	3,2
   869  0268  2A6A               	goto	u221
   870  0269  2A6B               	goto	u220
   871  026A                     u221:
   872  026A  2A8A               	goto	l1508
   873  026B                     u220:
   874  026B                     l1494:
   875                           
   876                           ;Principal2.c: 126:         if (banderaUP == 0){
   877  026B  087C               	movf	_banderaUP,w
   878  026C  1D03               	btfss	3,2
   879  026D  2A6F               	goto	u231
   880  026E  2A70               	goto	u230
   881  026F                     u231:
   882  026F  2A8A               	goto	l1508
   883  0270                     u230:
   884  0270                     l1496:
   885                           
   886                           ;Principal2.c: 127:             if (PORTBbits.RB0 == 0){
   887  0270  1283               	bcf	3,5	;RP0=0, select bank0
   888  0271  1303               	bcf	3,6	;RP1=0, select bank0
   889  0272  1806               	btfsc	6,0	;volatile
   890  0273  2A75               	goto	u241
   891  0274  2A76               	goto	u240
   892  0275                     u241:
   893  0275  2A8A               	goto	l1508
   894  0276                     u240:
   895  0276                     l1498:
   896                           
   897                           ;Principal2.c: 128:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   898  0276  305A               	movlw	90
   899  0277  1283               	bcf	3,5	;RP0=0, select bank0
   900  0278  1303               	bcf	3,6	;RP1=0, select bank0
   901  0279  00C2               	movwf	??_press_Subir+1
   902  027A  309A               	movlw	154
   903  027B  00C1               	movwf	??_press_Subir
   904  027C                     u437:
   905  027C  0BC1               	decfsz	??_press_Subir,f
   906  027D  2A7C               	goto	u437
   907  027E  0BC2               	decfsz	??_press_Subir+1,f
   908  027F  2A7C               	goto	u437
   909  0280  0000               	nop
   910  0281                     l1500:
   911                           
   912                           ;Principal2.c: 129:                 PORTA = PORTA + 1;
   913  0281  1283               	bcf	3,5	;RP0=0, select bank0
   914  0282  1303               	bcf	3,6	;RP1=0, select bank0
   915  0283  0805               	movf	5,w	;volatile
   916  0284  3E01               	addlw	1
   917  0285  0085               	movwf	5	;volatile
   918  0286                     l1502:
   919                           
   920                           ;Principal2.c: 130:                 banderaBoton = 0;
   921  0286  01FD               	clrf	_banderaBoton
   922  0287                     l1504:
   923                           
   924                           ;Principal2.c: 131:                 banderaUP = 1;
   925  0287  01FC               	clrf	_banderaUP
   926  0288  0AFC               	incf	_banderaUP,f
   927  0289                     l1506:
   928                           
   929                           ;Principal2.c: 132:                 INTCONbits.RBIE = 1;
   930  0289  158B               	bsf	11,3	;volatile
   931  028A                     l1508:
   932                           
   933                           ;Principal2.c: 136:     if (banderaUP == 1){
   934  028A  037C               	decf	_banderaUP,w
   935  028B  1D03               	btfss	3,2
   936  028C  2A8E               	goto	u251
   937  028D  2A8F               	goto	u250
   938  028E                     u251:
   939  028E  2AA1               	goto	l106
   940  028F                     u250:
   941  028F                     l1510:
   942                           
   943                           ;Principal2.c: 137:         if (PORTBbits.RB0 == 1){
   944  028F  1283               	bcf	3,5	;RP0=0, select bank0
   945  0290  1303               	bcf	3,6	;RP1=0, select bank0
   946  0291  1C06               	btfss	6,0	;volatile
   947  0292  2A94               	goto	u261
   948  0293  2A95               	goto	u260
   949  0294                     u261:
   950  0294  2AA1               	goto	l106
   951  0295                     u260:
   952  0295                     l1512:
   953                           
   954                           ;Principal2.c: 138:         _delay((unsigned long)((69)*(4000000/4000.0)));
   955  0295  305A               	movlw	90
   956  0296  1283               	bcf	3,5	;RP0=0, select bank0
   957  0297  1303               	bcf	3,6	;RP1=0, select bank0
   958  0298  00C2               	movwf	??_press_Subir+1
   959  0299  309A               	movlw	154
   960  029A  00C1               	movwf	??_press_Subir
   961  029B                     u447:
   962  029B  0BC1               	decfsz	??_press_Subir,f
   963  029C  2A9B               	goto	u447
   964  029D  0BC2               	decfsz	??_press_Subir+1,f
   965  029E  2A9B               	goto	u447
   966  029F  0000               	nop
   967  02A0                     l1514:
   968                           
   969                           ;Principal2.c: 139:         banderaUP = 0;
   970  02A0  01FC               	clrf	_banderaUP
   971  02A1                     l106:
   972  02A1  0008               	return
   973  02A2                     __end_of_press_Subir:
   974                           
   975                           	psect	text2
   976  02A2                     __ptext2:	
   977 ;; *************** function _press_Bajar *****************
   978 ;; Defined at:
   979 ;;		line 146 in file "Principal2.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0
   995 ;;      Temps:          0       2       0       0       0
   996 ;;      Totals:         0       2       0       0       0
   997 ;;Total ram usage:        2 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; Hardware stack levels required when called:    2
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _press_Bajar
  1009  02A2                     _press_Bajar:
  1010  02A2                     l1516:	
  1011                           ;incstack = 0
  1012                           ; Regs used in _press_Bajar: [wreg+status,2+status,0]
  1013                           
  1014                           
  1015                           ;Principal2.c: 147:     if (banderaBoton == 1){
  1016  02A2  037D               	decf	_banderaBoton,w
  1017  02A3  1D03               	btfss	3,2
  1018  02A4  2AA6               	goto	u271
  1019  02A5  2AA7               	goto	u270
  1020  02A6                     u271:
  1021  02A6  2AC6               	goto	l1532
  1022  02A7                     u270:
  1023  02A7                     l1518:
  1024                           
  1025                           ;Principal2.c: 148:         if (banderaDO == 0){
  1026  02A7  087B               	movf	_banderaDO,w
  1027  02A8  1D03               	btfss	3,2
  1028  02A9  2AAB               	goto	u281
  1029  02AA  2AAC               	goto	u280
  1030  02AB                     u281:
  1031  02AB  2AC6               	goto	l1532
  1032  02AC                     u280:
  1033  02AC                     l1520:
  1034                           
  1035                           ;Principal2.c: 149:             if (PORTBbits.RB2 == 0){
  1036  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1037  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1038  02AE  1906               	btfsc	6,2	;volatile
  1039  02AF  2AB1               	goto	u291
  1040  02B0  2AB2               	goto	u290
  1041  02B1                     u291:
  1042  02B1  2AC6               	goto	l1532
  1043  02B2                     u290:
  1044  02B2                     l1522:
  1045                           
  1046                           ;Principal2.c: 150:                 _delay((unsigned long)((69)*(4000000/4000.0)));
  1047  02B2  305A               	movlw	90
  1048  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1049  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1050  02B5  00C2               	movwf	??_press_Bajar+1
  1051  02B6  309A               	movlw	154
  1052  02B7  00C1               	movwf	??_press_Bajar
  1053  02B8                     u457:
  1054  02B8  0BC1               	decfsz	??_press_Bajar,f
  1055  02B9  2AB8               	goto	u457
  1056  02BA  0BC2               	decfsz	??_press_Bajar+1,f
  1057  02BB  2AB8               	goto	u457
  1058  02BC  0000               	nop
  1059  02BD                     l1524:
  1060                           
  1061                           ;Principal2.c: 151:                 PORTA = PORTA - 1;
  1062  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1063  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1064  02BF  0805               	movf	5,w	;volatile
  1065  02C0  3EFF               	addlw	255
  1066  02C1  0085               	movwf	5	;volatile
  1067  02C2                     l1526:
  1068                           
  1069                           ;Principal2.c: 152:                 banderaBoton = 0;
  1070  02C2  01FD               	clrf	_banderaBoton
  1071  02C3                     l1528:
  1072                           
  1073                           ;Principal2.c: 153:                 banderaDO = 1;
  1074  02C3  01FB               	clrf	_banderaDO
  1075  02C4  0AFB               	incf	_banderaDO,f
  1076  02C5                     l1530:
  1077                           
  1078                           ;Principal2.c: 154:                 INTCONbits.RBIE = 1;
  1079  02C5  158B               	bsf	11,3	;volatile
  1080  02C6                     l1532:
  1081                           
  1082                           ;Principal2.c: 158:     if (banderaDO == 1){
  1083  02C6  037B               	decf	_banderaDO,w
  1084  02C7  1D03               	btfss	3,2
  1085  02C8  2ACA               	goto	u301
  1086  02C9  2ACB               	goto	u300
  1087  02CA                     u301:
  1088  02CA  2ADD               	goto	l114
  1089  02CB                     u300:
  1090  02CB                     l1534:
  1091                           
  1092                           ;Principal2.c: 159:         if (PORTBbits.RB2 == 1){
  1093  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1094  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1095  02CD  1D06               	btfss	6,2	;volatile
  1096  02CE  2AD0               	goto	u311
  1097  02CF  2AD1               	goto	u310
  1098  02D0                     u311:
  1099  02D0  2ADD               	goto	l114
  1100  02D1                     u310:
  1101  02D1                     l1536:
  1102                           
  1103                           ;Principal2.c: 160:         _delay((unsigned long)((69)*(4000000/4000.0)));
  1104  02D1  305A               	movlw	90
  1105  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1106  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1107  02D4  00C2               	movwf	??_press_Bajar+1
  1108  02D5  309A               	movlw	154
  1109  02D6  00C1               	movwf	??_press_Bajar
  1110  02D7                     u467:
  1111  02D7  0BC1               	decfsz	??_press_Bajar,f
  1112  02D8  2AD7               	goto	u467
  1113  02D9  0BC2               	decfsz	??_press_Bajar+1,f
  1114  02DA  2AD7               	goto	u467
  1115  02DB  0000               	nop
  1116  02DC                     l1538:
  1117                           
  1118                           ;Principal2.c: 161:         banderaDO = 0;
  1119  02DC  01FB               	clrf	_banderaDO
  1120  02DD                     l114:
  1121  02DD  0008               	return
  1122  02DE                     __end_of_press_Bajar:
  1123                           
  1124                           	psect	text3
  1125  0353                     __ptext3:	
  1126 ;; *************** function _config_PUERTOS *****************
  1127 ;; Defined at:
  1128 ;;		line 98 in file "Principal2.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0
  1145 ;;      Totals:         0       0       0       0       0
  1146 ;;Total ram usage:        0 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    2
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           
  1157                           ;psect for function _config_PUERTOS
  1158  0353                     _config_PUERTOS:
  1159  0353                     l1326:	
  1160                           ;incstack = 0
  1161                           ; Regs used in _config_PUERTOS: [wreg+status,2]
  1162                           
  1163                           
  1164                           ;Principal2.c: 100:     TRISD = 255;
  1165  0353  30FF               	movlw	255
  1166  0354  1683               	bsf	3,5	;RP0=1, select bank1
  1167  0355  1303               	bcf	3,6	;RP1=0, select bank1
  1168  0356  0088               	movwf	8	;volatile
  1169                           
  1170                           ;Principal2.c: 101:     TRISC = 255;
  1171  0357  30FF               	movlw	255
  1172  0358  0087               	movwf	7	;volatile
  1173  0359                     l1328:
  1174                           
  1175                           ;Principal2.c: 102:     TRISA = 0;
  1176  0359  0185               	clrf	5	;volatile
  1177  035A                     l1330:
  1178                           
  1179                           ;Principal2.c: 103:     TRISB = 0b00000101;
  1180  035A  3005               	movlw	5
  1181  035B  0086               	movwf	6	;volatile
  1182                           
  1183                           ;Principal2.c: 104:     TRISE = 0;
  1184  035C  0189               	clrf	9	;volatile
  1185                           
  1186                           ;Principal2.c: 105:     PORTE = 0;
  1187  035D  1283               	bcf	3,5	;RP0=0, select bank0
  1188  035E  1303               	bcf	3,6	;RP1=0, select bank0
  1189  035F  0189               	clrf	9	;volatile
  1190                           
  1191                           ;Principal2.c: 106:     PORTA = 0;
  1192  0360  0185               	clrf	5	;volatile
  1193                           
  1194                           ;Principal2.c: 107:     PORTB = 0;
  1195  0361  0186               	clrf	6	;volatile
  1196                           
  1197                           ;Principal2.c: 108:     PORTC = 0;
  1198  0362  0187               	clrf	7	;volatile
  1199                           
  1200                           ;Principal2.c: 109:     PORTD = 0;
  1201  0363  0188               	clrf	8	;volatile
  1202                           
  1203                           ;Principal2.c: 110:     ANSEL = 0;
  1204  0364  1683               	bsf	3,5	;RP0=1, select bank3
  1205  0365  1703               	bsf	3,6	;RP1=1, select bank3
  1206  0366  0188               	clrf	8	;volatile
  1207                           
  1208                           ;Principal2.c: 111:     ANSELH = 0;
  1209  0367  0189               	clrf	9	;volatile
  1210  0368                     l1332:
  1211                           
  1212                           ;Principal2.c: 112:     WPUB = 0b00000101;
  1213  0368  3005               	movlw	5
  1214  0369  1683               	bsf	3,5	;RP0=1, select bank1
  1215  036A  1303               	bcf	3,6	;RP1=0, select bank1
  1216  036B  0095               	movwf	21	;volatile
  1217  036C                     l1334:
  1218                           
  1219                           ;Principal2.c: 113:     OPTION_REGbits.nRBPU = 0;
  1220  036C  1381               	bcf	1,7	;volatile
  1221  036D                     l1336:
  1222                           
  1223                           ;Principal2.c: 117:     IOCB = 0b00000101;;
  1224  036D  3005               	movlw	5
  1225  036E  0096               	movwf	22	;volatile
  1226  036F                     l1338:
  1227                           
  1228                           ;Principal2.c: 118:     INTCONbits.RBIE = 1;
  1229  036F  158B               	bsf	11,3	;volatile
  1230  0370                     l98:
  1231  0370  0008               	return
  1232  0371                     __end_of_config_PUERTOS:
  1233                           
  1234                           	psect	text4
  1235  0114                     __ptext4:	
  1236 ;; *************** function _config2Display *****************
  1237 ;; Defined at:
  1238 ;;		line 8 in file "DISPLAY7.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  FreqOsc         2    0[BANK0 ] unsigned int 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1252 ;;      Params:         0       2       0       0       0
  1253 ;;      Locals:         0       0       0       0       0
  1254 ;;      Temps:          0       1       0       0       0
  1255 ;;      Totals:         0       3       0       0       0
  1256 ;;Total ram usage:        3 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    2
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _config2Display
  1268  0114                     _config2Display:
  1269  0114                     l1342:	
  1270                           ;incstack = 0
  1271                           ; Regs used in _config2Display: [wreg-fsr0h+status,2+status,0]
  1272                           
  1273                           
  1274                           ;DISPLAY7.c: 10:      TRISD = 0;
  1275  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1276  0115  1303               	bcf	3,6	;RP1=0, select bank1
  1277  0116  0188               	clrf	8	;volatile
  1278                           
  1279                           ;DISPLAY7.c: 11:      PORTD = 0;
  1280  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0119  0188               	clrf	8	;volatile
  1283  011A                     l1344:
  1284                           
  1285                           ;DISPLAY7.c: 12:      TRISCbits.TRISC2 = 0;
  1286  011A  1683               	bsf	3,5	;RP0=1, select bank1
  1287  011B  1303               	bcf	3,6	;RP1=0, select bank1
  1288  011C  1107               	bcf	7,2	;volatile
  1289  011D                     l1346:
  1290                           
  1291                           ;DISPLAY7.c: 13:      TRISCbits.TRISC0 = 0;
  1292  011D  1007               	bcf	7,0	;volatile
  1293  011E                     l1348:
  1294                           
  1295                           ;DISPLAY7.c: 14:      PORTCbits.RC2 = 0;
  1296  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1297  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0120  1107               	bcf	7,2	;volatile
  1299  0121                     l1350:
  1300                           
  1301                           ;DISPLAY7.c: 15:      PORTCbits.RC0 =0;
  1302  0121  1007               	bcf	7,0	;volatile
  1303                           
  1304                           ;DISPLAY7.c: 19:     switch (FreqOsc){
  1305  0122  2972               	goto	l1374
  1306  0123                     l1352:
  1307                           
  1308                           ;DISPLAY7.c: 22:             OSCCONbits.IRCF = 0b000;
  1309  0123  308F               	movlw	-113
  1310  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1311  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1312  0126  058F               	andwf	15,f	;volatile
  1313                           
  1314                           ;DISPLAY7.c: 23:             break;
  1315  0127  29AA               	goto	l197
  1316  0128                     l1354:
  1317                           
  1318                           ;DISPLAY7.c: 25:             OSCCONbits.IRCF = 0b001;
  1319  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1320  0129  1303               	bcf	3,6	;RP1=0, select bank1
  1321  012A  080F               	movf	15,w	;volatile
  1322  012B  398F               	andlw	-113
  1323  012C  3810               	iorlw	16
  1324  012D  008F               	movwf	15	;volatile
  1325                           
  1326                           ;DISPLAY7.c: 26:             break;
  1327  012E  29AA               	goto	l197
  1328  012F                     l1356:
  1329                           
  1330                           ;DISPLAY7.c: 28:             OSCCONbits.IRCF = 0b010;
  1331  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1332  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1333  0131  080F               	movf	15,w	;volatile
  1334  0132  398F               	andlw	-113
  1335  0133  3820               	iorlw	32
  1336  0134  008F               	movwf	15	;volatile
  1337                           
  1338                           ;DISPLAY7.c: 29:             break;
  1339  0135  29AA               	goto	l197
  1340  0136                     l1358:
  1341                           
  1342                           ;DISPLAY7.c: 31:             OSCCONbits.IRCF = 0b011;
  1343  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1344  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1345  0138  080F               	movf	15,w	;volatile
  1346  0139  398F               	andlw	-113
  1347  013A  3830               	iorlw	48
  1348  013B  008F               	movwf	15	;volatile
  1349                           
  1350                           ;DISPLAY7.c: 32:             break;
  1351  013C  29AA               	goto	l197
  1352  013D                     l1360:
  1353                           
  1354                           ;DISPLAY7.c: 34:             OSCCONbits.IRCF = 0b100;
  1355  013D  1683               	bsf	3,5	;RP0=1, select bank1
  1356  013E  1303               	bcf	3,6	;RP1=0, select bank1
  1357  013F  080F               	movf	15,w	;volatile
  1358  0140  398F               	andlw	-113
  1359  0141  3840               	iorlw	64
  1360  0142  008F               	movwf	15	;volatile
  1361                           
  1362                           ;DISPLAY7.c: 35:             break;
  1363  0143  29AA               	goto	l197
  1364  0144                     l1362:
  1365                           
  1366                           ;DISPLAY7.c: 37:             OSCCONbits.IRCF = 0b101;
  1367  0144  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0145  1303               	bcf	3,6	;RP1=0, select bank1
  1369  0146  080F               	movf	15,w	;volatile
  1370  0147  398F               	andlw	-113
  1371  0148  3850               	iorlw	80
  1372  0149  008F               	movwf	15	;volatile
  1373                           
  1374                           ;DISPLAY7.c: 38:             break;
  1375  014A  29AA               	goto	l197
  1376  014B                     l1364:
  1377                           
  1378                           ;DISPLAY7.c: 40:             OSCCONbits.IRCF = 0b110;
  1379  014B  1683               	bsf	3,5	;RP0=1, select bank1
  1380  014C  1303               	bcf	3,6	;RP1=0, select bank1
  1381  014D  080F               	movf	15,w	;volatile
  1382  014E  398F               	andlw	-113
  1383  014F  3860               	iorlw	96
  1384  0150  008F               	movwf	15	;volatile
  1385                           
  1386                           ;DISPLAY7.c: 41:             OPTION_REGbits.PS = 0b110;
  1387  0151  0801               	movf	1,w	;volatile
  1388  0152  39F8               	andlw	-8
  1389  0153  3806               	iorlw	6
  1390  0154  0081               	movwf	1	;volatile
  1391  0155                     l1366:
  1392                           
  1393                           ;DISPLAY7.c: 42:             valorTMR0 = 177;
  1394  0155  30B1               	movlw	177
  1395  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0158  00C3               	movwf	??_config2Display
  1398  0159  0843               	movf	??_config2Display,w
  1399  015A  00C0               	movwf	_valorTMR0
  1400                           
  1401                           ;DISPLAY7.c: 43:             break;
  1402  015B  29AA               	goto	l197
  1403  015C                     l1368:
  1404                           
  1405                           ;DISPLAY7.c: 45:             OSCCONbits.IRCF = 0b111;
  1406  015C  3070               	movlw	112
  1407  015D  1683               	bsf	3,5	;RP0=1, select bank1
  1408  015E  1303               	bcf	3,6	;RP1=0, select bank1
  1409  015F  048F               	iorwf	15,f	;volatile
  1410                           
  1411                           ;DISPLAY7.c: 46:             OPTION_REGbits.PS = 0b110;
  1412  0160  0801               	movf	1,w	;volatile
  1413  0161  39F8               	andlw	-8
  1414  0162  3806               	iorlw	6
  1415  0163  0081               	movwf	1	;volatile
  1416  0164                     l1370:
  1417                           
  1418                           ;DISPLAY7.c: 47:             valorTMR0 = 98;
  1419  0164  3062               	movlw	98
  1420  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0167  00C3               	movwf	??_config2Display
  1423  0168  0843               	movf	??_config2Display,w
  1424  0169  00C0               	movwf	_valorTMR0
  1425                           
  1426                           ;DISPLAY7.c: 48:             break;
  1427  016A  29AA               	goto	l197
  1428  016B                     l1372:
  1429                           
  1430                           ;DISPLAY7.c: 50:             OSCCONbits.IRCF = 0b110;
  1431  016B  1683               	bsf	3,5	;RP0=1, select bank1
  1432  016C  1303               	bcf	3,6	;RP1=0, select bank1
  1433  016D  080F               	movf	15,w	;volatile
  1434  016E  398F               	andlw	-113
  1435  016F  3860               	iorlw	96
  1436  0170  008F               	movwf	15	;volatile
  1437                           
  1438                           ;DISPLAY7.c: 51:     }
  1439  0171  29AA               	goto	l197
  1440  0172                     l1374:
  1441                           
  1442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  1443                           ; Switch size 1, requested type "simple"
  1444                           ; Number of cases is 6, Range of values is 0 to 31
  1445                           ; switch strategies available:
  1446                           ; Name         Instructions Cycles
  1447                           ; simple_byte           19    10 (average)
  1448                           ; direct_byte          104     8 (fixed)
  1449                           ; jumptable            260     6 (fixed)
  1450                           ;	Chosen strategy is simple_byte
  1451  0172  0842               	movf	config2Display@FreqOsc+1,w
  1452  0173  3A00               	xorlw	0	; case 0
  1453  0174  1903               	skipnz
  1454  0175  2986               	goto	l1858
  1455  0176  3A01               	xorlw	1	; case 1
  1456  0177  1903               	skipnz
  1457  0178  2991               	goto	l1860
  1458  0179  3A02               	xorlw	2	; case 3
  1459  017A  1903               	skipnz
  1460  017B  2996               	goto	l1862
  1461  017C  3A04               	xorlw	4	; case 7
  1462  017D  1903               	skipnz
  1463  017E  299B               	goto	l1864
  1464  017F  3A08               	xorlw	8	; case 15
  1465  0180  1903               	skipnz
  1466  0181  29A0               	goto	l1866
  1467  0182  3A10               	xorlw	16	; case 31
  1468  0183  1903               	skipnz
  1469  0184  29A5               	goto	l1868
  1470  0185  296B               	goto	l1372
  1471  0186                     l1858:
  1472                           
  1473                           ; Switch size 1, requested type "simple"
  1474                           ; Number of cases is 3, Range of values is 31 to 250
  1475                           ; switch strategies available:
  1476                           ; Name         Instructions Cycles
  1477                           ; simple_byte           10     6 (average)
  1478                           ; jumptable            263     9 (fixed)
  1479                           ;	Chosen strategy is simple_byte
  1480  0186  0841               	movf	config2Display@FreqOsc,w
  1481  0187  3A1F               	xorlw	31	; case 31
  1482  0188  1903               	skipnz
  1483  0189  2923               	goto	l1352
  1484  018A  3A62               	xorlw	98	; case 125
  1485  018B  1903               	skipnz
  1486  018C  2928               	goto	l1354
  1487  018D  3A87               	xorlw	135	; case 250
  1488  018E  1903               	skipnz
  1489  018F  292F               	goto	l1356
  1490  0190  296B               	goto	l1372
  1491  0191                     l1860:
  1492                           
  1493                           ; Switch size 1, requested type "simple"
  1494                           ; Number of cases is 1, Range of values is 244 to 244
  1495                           ; switch strategies available:
  1496                           ; Name         Instructions Cycles
  1497                           ; simple_byte            4     3 (average)
  1498                           ; direct_byte           14    11 (fixed)
  1499                           ; jumptable            263     9 (fixed)
  1500                           ;	Chosen strategy is simple_byte
  1501  0191  0841               	movf	config2Display@FreqOsc,w
  1502  0192  3AF4               	xorlw	244	; case 244
  1503  0193  1903               	skipnz
  1504  0194  2936               	goto	l1358
  1505  0195  296B               	goto	l1372
  1506  0196                     l1862:
  1507                           
  1508                           ; Switch size 1, requested type "simple"
  1509                           ; Number of cases is 1, Range of values is 232 to 232
  1510                           ; switch strategies available:
  1511                           ; Name         Instructions Cycles
  1512                           ; simple_byte            4     3 (average)
  1513                           ; direct_byte           14    11 (fixed)
  1514                           ; jumptable            263     9 (fixed)
  1515                           ;	Chosen strategy is simple_byte
  1516  0196  0841               	movf	config2Display@FreqOsc,w
  1517  0197  3AE8               	xorlw	232	; case 232
  1518  0198  1903               	skipnz
  1519  0199  293D               	goto	l1360
  1520  019A  296B               	goto	l1372
  1521  019B                     l1864:
  1522                           
  1523                           ; Switch size 1, requested type "simple"
  1524                           ; Number of cases is 1, Range of values is 208 to 208
  1525                           ; switch strategies available:
  1526                           ; Name         Instructions Cycles
  1527                           ; simple_byte            4     3 (average)
  1528                           ; direct_byte           14    11 (fixed)
  1529                           ; jumptable            263     9 (fixed)
  1530                           ;	Chosen strategy is simple_byte
  1531  019B  0841               	movf	config2Display@FreqOsc,w
  1532  019C  3AD0               	xorlw	208	; case 208
  1533  019D  1903               	skipnz
  1534  019E  2944               	goto	l1362
  1535  019F  296B               	goto	l1372
  1536  01A0                     l1866:
  1537                           
  1538                           ; Switch size 1, requested type "simple"
  1539                           ; Number of cases is 1, Range of values is 160 to 160
  1540                           ; switch strategies available:
  1541                           ; Name         Instructions Cycles
  1542                           ; simple_byte            4     3 (average)
  1543                           ; direct_byte           14    11 (fixed)
  1544                           ; jumptable            263     9 (fixed)
  1545                           ;	Chosen strategy is simple_byte
  1546  01A0  0841               	movf	config2Display@FreqOsc,w
  1547  01A1  3AA0               	xorlw	160	; case 160
  1548  01A2  1903               	skipnz
  1549  01A3  294B               	goto	l1364
  1550  01A4  296B               	goto	l1372
  1551  01A5                     l1868:
  1552                           
  1553                           ; Switch size 1, requested type "simple"
  1554                           ; Number of cases is 1, Range of values is 64 to 64
  1555                           ; switch strategies available:
  1556                           ; Name         Instructions Cycles
  1557                           ; simple_byte            4     3 (average)
  1558                           ; direct_byte           14    11 (fixed)
  1559                           ; jumptable            263     9 (fixed)
  1560                           ;	Chosen strategy is simple_byte
  1561  01A5  0841               	movf	config2Display@FreqOsc,w
  1562  01A6  3A40               	xorlw	64	; case 64
  1563  01A7  1903               	skipnz
  1564  01A8  295C               	goto	l1368
  1565  01A9  296B               	goto	l1372
  1566  01AA                     l197:
  1567                           
  1568                           ;DISPLAY7.c: 53:     OPTION_REGbits.T0CS = 0;
  1569  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1570  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  1571  01AC  1281               	bcf	1,5	;volatile
  1572                           
  1573                           ;DISPLAY7.c: 54:     OPTION_REGbits.T0SE = 0;
  1574  01AD  1201               	bcf	1,4	;volatile
  1575                           
  1576                           ;DISPLAY7.c: 55:     OPTION_REGbits.PSA = 0;
  1577  01AE  1181               	bcf	1,3	;volatile
  1578  01AF                     l1376:
  1579                           
  1580                           ;DISPLAY7.c: 56:     TMR0 = valorTMR0;
  1581  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1582  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1583  01B1  0840               	movf	_valorTMR0,w
  1584  01B2  0081               	movwf	1	;volatile
  1585  01B3                     l1378:
  1586                           
  1587                           ;DISPLAY7.c: 57:     INTCONbits.T0IF = 0;
  1588  01B3  110B               	bcf	11,2	;volatile
  1589  01B4                     l1380:
  1590                           
  1591                           ;DISPLAY7.c: 58:     INTCONbits.T0IE = 1;
  1592  01B4  168B               	bsf	11,5	;volatile
  1593  01B5                     l206:
  1594  01B5  0008               	return
  1595  01B6                     __end_of_config2Display:
  1596                           
  1597                           	psect	text5
  1598  030E                     __ptext5:	
  1599 ;; *************** function _AnalogRead_8 *****************
  1600 ;; Defined at:
  1601 ;;		line 89 in file "ADC.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  just            1    wreg     unsigned char 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  just            1    2[BANK0 ] unsigned char 
  1606 ;;  conversion      1    3[BANK0 ] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      unsigned char 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1616 ;;      Params:         0       0       0       0       0
  1617 ;;      Locals:         0       2       0       0       0
  1618 ;;      Temps:          0       2       0       0       0
  1619 ;;      Totals:         0       4       0       0       0
  1620 ;;Total ram usage:        4 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    2
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function _AnalogRead_8
  1632  030E                     _AnalogRead_8:
  1633                           
  1634                           ;incstack = 0
  1635                           ; Regs used in _AnalogRead_8: [wreg-fsr0h+status,2+status,0]
  1636                           ;AnalogRead_8@just stored from wreg
  1637  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1638  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0310  00C3               	movwf	AnalogRead_8@just
  1640  0311                     l1464:
  1641                           
  1642                           ;ADC.c: 91:     switch (just){
  1643  0311  2B20               	goto	l1472
  1644  0312                     l1466:
  1645                           
  1646                           ;ADC.c: 93:             conversion = ADRESH;
  1647  0312  081E               	movf	30,w	;volatile
  1648  0313  00C1               	movwf	??_AnalogRead_8
  1649  0314  0841               	movf	??_AnalogRead_8,w
  1650  0315  00C4               	movwf	AnalogRead_8@conversion
  1651                           
  1652                           ;ADC.c: 94:             break;
  1653  0316  2B30               	goto	l1474
  1654  0317                     l1468:
  1655                           
  1656                           ;ADC.c: 96:             conversion = ADRESL;
  1657  0317  1683               	bsf	3,5	;RP0=1, select bank1
  1658  0318  1303               	bcf	3,6	;RP1=0, select bank1
  1659  0319  081E               	movf	30,w	;volatile
  1660  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1661  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1662  031C  00C1               	movwf	??_AnalogRead_8
  1663  031D  0841               	movf	??_AnalogRead_8,w
  1664  031E  00C4               	movwf	AnalogRead_8@conversion
  1665                           
  1666                           ;ADC.c: 97:             break;
  1667  031F  2B30               	goto	l1474
  1668  0320                     l1472:
  1669  0320  0843               	movf	AnalogRead_8@just,w
  1670  0321  00C1               	movwf	??_AnalogRead_8
  1671  0322  01C2               	clrf	??_AnalogRead_8+1
  1672                           
  1673                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1674                           ; Switch size 1, requested type "simple"
  1675                           ; Number of cases is 1, Range of values is 0 to 0
  1676                           ; switch strategies available:
  1677                           ; Name         Instructions Cycles
  1678                           ; simple_byte            4     3 (average)
  1679                           ; direct_byte           11     8 (fixed)
  1680                           ; jumptable            260     6 (fixed)
  1681                           ;	Chosen strategy is simple_byte
  1682  0323  0842               	movf	??_AnalogRead_8+1,w
  1683  0324  3A00               	xorlw	0	; case 0
  1684  0325  1903               	skipnz
  1685  0326  2B28               	goto	l1870
  1686  0327  2B12               	goto	l1466
  1687  0328                     l1870:
  1688                           
  1689                           ; Switch size 1, requested type "simple"
  1690                           ; Number of cases is 2, Range of values is 72 to 76
  1691                           ; switch strategies available:
  1692                           ; Name         Instructions Cycles
  1693                           ; simple_byte            7     4 (average)
  1694                           ; direct_byte           26    11 (fixed)
  1695                           ; jumptable            263     9 (fixed)
  1696                           ;	Chosen strategy is simple_byte
  1697  0328  0841               	movf	??_AnalogRead_8,w
  1698  0329  3A48               	xorlw	72	; case 72
  1699  032A  1903               	skipnz
  1700  032B  2B12               	goto	l1466
  1701  032C  3A04               	xorlw	4	; case 76
  1702  032D  1903               	skipnz
  1703  032E  2B17               	goto	l1468
  1704  032F  2B12               	goto	l1466
  1705  0330                     l1474:
  1706                           
  1707                           ;ADC.c: 101:     return (conversion);
  1708  0330  0844               	movf	AnalogRead_8@conversion,w
  1709  0331                     l169:
  1710  0331  0008               	return
  1711  0332                     __end_of_AnalogRead_8:
  1712                           
  1713                           	psect	text6
  1714  002A                     __ptext6:	
  1715 ;; *************** function _ADConfig *****************
  1716 ;; Defined at:
  1717 ;;		line 10 in file "ADC.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  oscFreq         1    wreg     unsigned char 
  1720 ;;  canal           1    0[BANK0 ] unsigned char 
  1721 ;;  justificado     1    1[BANK0 ] unsigned char 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  oscFreq         1    4[BANK0 ] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         0       2       0       0       0
  1734 ;;      Locals:         0       1       0       0       0
  1735 ;;      Temps:          0       2       0       0       0
  1736 ;;      Totals:         0       5       0       0       0
  1737 ;;Total ram usage:        5 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    2
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _ADConfig
  1749  002A                     _ADConfig:
  1750                           
  1751                           ;incstack = 0
  1752                           ; Regs used in _ADConfig: [wreg-fsr0h+status,2+status,0]
  1753                           ;ADConfig@oscFreq stored from wreg
  1754  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1755  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1756  002C  00C5               	movwf	ADConfig@oscFreq
  1757  002D                     l1406:
  1758                           
  1759                           ;ADC.c: 11:     switch(oscFreq){
  1760  002D  2843               	goto	l1418
  1761  002E                     l1408:
  1762                           
  1763                           ;ADC.c: 13:             ADCON0bits.ADCS = 0b00;
  1764  002E  303F               	movlw	-193
  1765  002F  059F               	andwf	31,f	;volatile
  1766                           
  1767                           ;ADC.c: 14:             break;
  1768  0030  2865               	goto	l1420
  1769  0031                     l1410:
  1770                           
  1771                           ;ADC.c: 16:             ADCON0bits.ADCS = 0b01;
  1772  0031  081F               	movf	31,w	;volatile
  1773  0032  393F               	andlw	-193
  1774  0033  3840               	iorlw	64
  1775  0034  009F               	movwf	31	;volatile
  1776                           
  1777                           ;ADC.c: 17:             break;
  1778  0035  2865               	goto	l1420
  1779  0036                     l1412:
  1780                           
  1781                           ;ADC.c: 19:             ADCON0bits.ADCS = 0b10;
  1782  0036  081F               	movf	31,w	;volatile
  1783  0037  393F               	andlw	-193
  1784  0038  3880               	iorlw	128
  1785  0039  009F               	movwf	31	;volatile
  1786                           
  1787                           ;ADC.c: 20:             break;
  1788  003A  2865               	goto	l1420
  1789  003B                     l1414:
  1790                           
  1791                           ;ADC.c: 22:             ADCON0bits.ADCS = 0b11;
  1792  003B  30C0               	movlw	192
  1793  003C  049F               	iorwf	31,f	;volatile
  1794                           
  1795                           ;ADC.c: 23:             break;
  1796  003D  2865               	goto	l1420
  1797  003E                     l1416:
  1798                           
  1799                           ;ADC.c: 25:             ADCON0bits.ADCS = 0b01;
  1800  003E  081F               	movf	31,w	;volatile
  1801  003F  393F               	andlw	-193
  1802  0040  3840               	iorlw	64
  1803  0041  009F               	movwf	31	;volatile
  1804                           
  1805                           ;ADC.c: 26:     }
  1806  0042  2865               	goto	l1420
  1807  0043                     l1418:
  1808  0043  0845               	movf	ADConfig@oscFreq,w
  1809  0044  00C3               	movwf	??_ADConfig
  1810  0045  01C4               	clrf	??_ADConfig+1
  1811                           
  1812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1813                           ; Switch size 1, requested type "simple"
  1814                           ; Number of cases is 1, Range of values is 0 to 0
  1815                           ; switch strategies available:
  1816                           ; Name         Instructions Cycles
  1817                           ; simple_byte            4     3 (average)
  1818                           ; direct_byte           11     8 (fixed)
  1819                           ; jumptable            260     6 (fixed)
  1820                           ;	Chosen strategy is simple_byte
  1821  0046  0844               	movf	??_ADConfig+1,w
  1822  0047  3A00               	xorlw	0	; case 0
  1823  0048  1903               	skipnz
  1824  0049  284B               	goto	l1872
  1825  004A  283E               	goto	l1416
  1826  004B                     l1872:
  1827                           
  1828                           ; Switch size 1, requested type "simple"
  1829                           ; Number of cases is 4, Range of values is 1 to 20
  1830                           ; switch strategies available:
  1831                           ; Name         Instructions Cycles
  1832                           ; simple_byte           13     7 (average)
  1833                           ; direct_byte           71    11 (fixed)
  1834                           ; jumptable            263     9 (fixed)
  1835                           ;	Chosen strategy is simple_byte
  1836  004B  0843               	movf	??_ADConfig,w
  1837  004C  3A01               	xorlw	1	; case 1
  1838  004D  1903               	skipnz
  1839  004E  282E               	goto	l1408
  1840  004F  3A05               	xorlw	5	; case 4
  1841  0050  1903               	skipnz
  1842  0051  2831               	goto	l1410
  1843  0052  3A0C               	xorlw	12	; case 8
  1844  0053  1903               	skipnz
  1845  0054  2836               	goto	l1412
  1846  0055  3A1C               	xorlw	28	; case 20
  1847  0056  1903               	skipnz
  1848  0057  283B               	goto	l1414
  1849  0058  283E               	goto	l1416
  1850  0059                     l147:	
  1851                           ;ADC.c: 28:         case 'H':
  1852                           
  1853                           
  1854                           ;ADC.c: 29:             ADCON1bits.ADFM = 0;
  1855  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1856  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1857  005B  139F               	bcf	31,7	;volatile
  1858                           
  1859                           ;ADC.c: 30:             break;
  1860  005C  28DB               	goto	l1440
  1861  005D                     l149:	
  1862                           ;ADC.c: 31:         case 'L':
  1863                           
  1864                           
  1865                           ;ADC.c: 32:             ADCON1bits.ADFM = 1;
  1866  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1867  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1868  005F  179F               	bsf	31,7	;volatile
  1869                           
  1870                           ;ADC.c: 33:             break;
  1871  0060  28DB               	goto	l1440
  1872  0061                     l150:	
  1873                           ;ADC.c: 34:         default:
  1874                           
  1875                           
  1876                           ;ADC.c: 35:             ADCON1bits.ADFM = 0;
  1877  0061  1683               	bsf	3,5	;RP0=1, select bank1
  1878  0062  1303               	bcf	3,6	;RP1=0, select bank1
  1879  0063  139F               	bcf	31,7	;volatile
  1880                           
  1881                           ;ADC.c: 36:     }
  1882  0064  28DB               	goto	l1440
  1883  0065                     l1420:
  1884  0065  0842               	movf	ADConfig@justificado,w
  1885  0066  00C3               	movwf	??_ADConfig
  1886  0067  01C4               	clrf	??_ADConfig+1
  1887                           
  1888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1889                           ; Switch size 1, requested type "simple"
  1890                           ; Number of cases is 1, Range of values is 0 to 0
  1891                           ; switch strategies available:
  1892                           ; Name         Instructions Cycles
  1893                           ; simple_byte            4     3 (average)
  1894                           ; direct_byte           11     8 (fixed)
  1895                           ; jumptable            260     6 (fixed)
  1896                           ;	Chosen strategy is simple_byte
  1897  0068  0844               	movf	??_ADConfig+1,w
  1898  0069  3A00               	xorlw	0	; case 0
  1899  006A  1903               	skipnz
  1900  006B  286D               	goto	l1874
  1901  006C  2861               	goto	l150
  1902  006D                     l1874:
  1903                           
  1904                           ; Switch size 1, requested type "simple"
  1905                           ; Number of cases is 2, Range of values is 72 to 76
  1906                           ; switch strategies available:
  1907                           ; Name         Instructions Cycles
  1908                           ; simple_byte            7     4 (average)
  1909                           ; direct_byte           26    11 (fixed)
  1910                           ; jumptable            263     9 (fixed)
  1911                           ;	Chosen strategy is simple_byte
  1912  006D  0843               	movf	??_ADConfig,w
  1913  006E  3A48               	xorlw	72	; case 72
  1914  006F  1903               	skipnz
  1915  0070  2859               	goto	l147
  1916  0071  3A04               	xorlw	4	; case 76
  1917  0072  1903               	skipnz
  1918  0073  285D               	goto	l149
  1919  0074  2861               	goto	l150
  1920  0075                     l152:	
  1921                           ;ADC.c: 38:         case 0:
  1922                           
  1923                           
  1924                           ;ADC.c: 39:             TRISAbits.TRISA0 = 1;
  1925  0075  1683               	bsf	3,5	;RP0=1, select bank1
  1926  0076  1303               	bcf	3,6	;RP1=0, select bank1
  1927  0077  1405               	bsf	5,0	;volatile
  1928                           
  1929                           ;ADC.c: 40:             ANSELbits.ANS0 = 1;
  1930  0078  1683               	bsf	3,5	;RP0=1, select bank3
  1931  0079  1703               	bsf	3,6	;RP1=1, select bank3
  1932  007A  1408               	bsf	8,0	;volatile
  1933  007B                     l1422:
  1934                           
  1935                           ;ADC.c: 41:             ADCON0bits.CHS = 0;
  1936  007B  30C3               	movlw	-61
  1937  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1938  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1939  007E  059F               	andwf	31,f	;volatile
  1940                           
  1941                           ;ADC.c: 42:             break;
  1942  007F  28FF               	goto	l153
  1943  0080                     l154:	
  1944                           ;ADC.c: 43:         case 1:
  1945                           
  1946                           
  1947                           ;ADC.c: 44:             TRISAbits.TRISA1 = 1;
  1948  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1949  0081  1303               	bcf	3,6	;RP1=0, select bank1
  1950  0082  1485               	bsf	5,1	;volatile
  1951                           
  1952                           ;ADC.c: 45:             ANSELbits.ANS1 = 1;
  1953  0083  1683               	bsf	3,5	;RP0=1, select bank3
  1954  0084  1703               	bsf	3,6	;RP1=1, select bank3
  1955  0085  1488               	bsf	8,1	;volatile
  1956  0086                     l1424:
  1957                           
  1958                           ;ADC.c: 46:             ADCON0bits.CHS = 1;
  1959  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1961  0088  081F               	movf	31,w	;volatile
  1962  0089  39C3               	andlw	-61
  1963  008A  3804               	iorlw	4
  1964  008B  009F               	movwf	31	;volatile
  1965                           
  1966                           ;ADC.c: 47:             break;
  1967  008C  28FF               	goto	l153
  1968  008D                     l155:	
  1969                           ;ADC.c: 48:         case 2:
  1970                           
  1971                           
  1972                           ;ADC.c: 49:             TRISAbits.TRISA2 = 1;
  1973  008D  1683               	bsf	3,5	;RP0=1, select bank1
  1974  008E  1303               	bcf	3,6	;RP1=0, select bank1
  1975  008F  1505               	bsf	5,2	;volatile
  1976                           
  1977                           ;ADC.c: 50:             ANSELbits.ANS2 = 1;
  1978  0090  1683               	bsf	3,5	;RP0=1, select bank3
  1979  0091  1703               	bsf	3,6	;RP1=1, select bank3
  1980  0092  1508               	bsf	8,2	;volatile
  1981  0093                     l1426:
  1982                           
  1983                           ;ADC.c: 51:             ADCON0bits.CHS = 2;
  1984  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0095  081F               	movf	31,w	;volatile
  1987  0096  39C3               	andlw	-61
  1988  0097  3808               	iorlw	8
  1989  0098  009F               	movwf	31	;volatile
  1990                           
  1991                           ;ADC.c: 52:             break;
  1992  0099  28FF               	goto	l153
  1993  009A                     l156:	
  1994                           ;ADC.c: 53:         case 3:
  1995                           
  1996                           
  1997                           ;ADC.c: 54:             TRISAbits.TRISA3 = 1;
  1998  009A  1683               	bsf	3,5	;RP0=1, select bank1
  1999  009B  1303               	bcf	3,6	;RP1=0, select bank1
  2000  009C  1585               	bsf	5,3	;volatile
  2001                           
  2002                           ;ADC.c: 55:             ANSELbits.ANS3 = 1;
  2003  009D  1683               	bsf	3,5	;RP0=1, select bank3
  2004  009E  1703               	bsf	3,6	;RP1=1, select bank3
  2005  009F  1588               	bsf	8,3	;volatile
  2006  00A0                     l1428:
  2007                           
  2008                           ;ADC.c: 56:             ADCON0bits.CHS = 3;
  2009  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  2010  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  2011  00A2  081F               	movf	31,w	;volatile
  2012  00A3  39C3               	andlw	-61
  2013  00A4  380C               	iorlw	12
  2014  00A5  009F               	movwf	31	;volatile
  2015                           
  2016                           ;ADC.c: 57:             break;
  2017  00A6  28FF               	goto	l153
  2018  00A7                     l157:	
  2019                           ;ADC.c: 58:         case 4:
  2020                           
  2021                           
  2022                           ;ADC.c: 59:             TRISAbits.TRISA5 = 1;
  2023  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  2024  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  2025  00A9  1685               	bsf	5,5	;volatile
  2026                           
  2027                           ;ADC.c: 60:             ANSELbits.ANS4 = 1;
  2028  00AA  1683               	bsf	3,5	;RP0=1, select bank3
  2029  00AB  1703               	bsf	3,6	;RP1=1, select bank3
  2030  00AC  1608               	bsf	8,4	;volatile
  2031  00AD                     l1430:
  2032                           
  2033                           ;ADC.c: 61:             ADCON0bits.CHS = 3;
  2034  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  2035  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  2036  00AF  081F               	movf	31,w	;volatile
  2037  00B0  39C3               	andlw	-61
  2038  00B1  380C               	iorlw	12
  2039  00B2  009F               	movwf	31	;volatile
  2040                           
  2041                           ;ADC.c: 62:             break;
  2042  00B3  28FF               	goto	l153
  2043  00B4                     l158:	
  2044                           ;ADC.c: 63:         case 5:
  2045                           
  2046                           
  2047                           ;ADC.c: 64:             TRISEbits.TRISE0 = 1;
  2048  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  2049  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  2050  00B6  1409               	bsf	9,0	;volatile
  2051                           
  2052                           ;ADC.c: 65:             ANSELbits.ANS5 = 1;
  2053  00B7  1683               	bsf	3,5	;RP0=1, select bank3
  2054  00B8  1703               	bsf	3,6	;RP1=1, select bank3
  2055  00B9  1688               	bsf	8,5	;volatile
  2056  00BA                     l1432:
  2057                           
  2058                           ;ADC.c: 66:             ADCON0bits.CHS = 5;
  2059  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  2060  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  2061  00BC  081F               	movf	31,w	;volatile
  2062  00BD  39C3               	andlw	-61
  2063  00BE  3814               	iorlw	20
  2064  00BF  009F               	movwf	31	;volatile
  2065                           
  2066                           ;ADC.c: 67:             break;
  2067  00C0  28FF               	goto	l153
  2068  00C1                     l159:	
  2069                           ;ADC.c: 68:         case 6:
  2070                           
  2071                           
  2072                           ;ADC.c: 69:             TRISEbits.TRISE1 = 1;
  2073  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  2074  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  2075  00C3  1489               	bsf	9,1	;volatile
  2076                           
  2077                           ;ADC.c: 70:             ANSELbits.ANS6 = 1;
  2078  00C4  1683               	bsf	3,5	;RP0=1, select bank3
  2079  00C5  1703               	bsf	3,6	;RP1=1, select bank3
  2080  00C6  1708               	bsf	8,6	;volatile
  2081  00C7                     l1434:
  2082                           
  2083                           ;ADC.c: 71:             ADCON0bits.CHS = 6;
  2084  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2085  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2086  00C9  081F               	movf	31,w	;volatile
  2087  00CA  39C3               	andlw	-61
  2088  00CB  3818               	iorlw	24
  2089  00CC  009F               	movwf	31	;volatile
  2090                           
  2091                           ;ADC.c: 72:             break;
  2092  00CD  28FF               	goto	l153
  2093  00CE                     l160:	
  2094                           ;ADC.c: 73:         case 7:
  2095                           
  2096                           
  2097                           ;ADC.c: 74:             TRISEbits.TRISE2 = 1;
  2098  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  2099  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  2100  00D0  1509               	bsf	9,2	;volatile
  2101                           
  2102                           ;ADC.c: 75:             ANSELbits.ANS7 = 1;
  2103  00D1  1683               	bsf	3,5	;RP0=1, select bank3
  2104  00D2  1703               	bsf	3,6	;RP1=1, select bank3
  2105  00D3  1788               	bsf	8,7	;volatile
  2106  00D4                     l1436:
  2107                           
  2108                           ;ADC.c: 76:             ADCON0bits.CHS = 7;
  2109  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  2110  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  2111  00D6  081F               	movf	31,w	;volatile
  2112  00D7  39C3               	andlw	-61
  2113  00D8  381C               	iorlw	28
  2114  00D9  009F               	movwf	31	;volatile
  2115                           
  2116                           ;ADC.c: 77:             break;
  2117  00DA  28FF               	goto	l153
  2118  00DB                     l1440:
  2119  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  2120  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  2121  00DD  0841               	movf	ADConfig@canal,w
  2122  00DE  00C3               	movwf	??_ADConfig
  2123  00DF  01C4               	clrf	??_ADConfig+1
  2124                           
  2125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2126                           ; Switch size 1, requested type "simple"
  2127                           ; Number of cases is 1, Range of values is 0 to 0
  2128                           ; switch strategies available:
  2129                           ; Name         Instructions Cycles
  2130                           ; simple_byte            4     3 (average)
  2131                           ; direct_byte           11     8 (fixed)
  2132                           ; jumptable            260     6 (fixed)
  2133                           ;	Chosen strategy is simple_byte
  2134  00E0  0844               	movf	??_ADConfig+1,w
  2135  00E1  3A00               	xorlw	0	; case 0
  2136  00E2  1903               	skipnz
  2137  00E3  28E5               	goto	l1876
  2138  00E4  28FF               	goto	l153
  2139  00E5                     l1876:
  2140                           
  2141                           ; Switch size 1, requested type "simple"
  2142                           ; Number of cases is 8, Range of values is 0 to 7
  2143                           ; switch strategies available:
  2144                           ; Name         Instructions Cycles
  2145                           ; simple_byte           25    13 (average)
  2146                           ; direct_byte           32     8 (fixed)
  2147                           ; jumptable            260     6 (fixed)
  2148                           ;	Chosen strategy is simple_byte
  2149  00E5  0843               	movf	??_ADConfig,w
  2150  00E6  3A00               	xorlw	0	; case 0
  2151  00E7  1903               	skipnz
  2152  00E8  2875               	goto	l152
  2153  00E9  3A01               	xorlw	1	; case 1
  2154  00EA  1903               	skipnz
  2155  00EB  2880               	goto	l154
  2156  00EC  3A03               	xorlw	3	; case 2
  2157  00ED  1903               	skipnz
  2158  00EE  288D               	goto	l155
  2159  00EF  3A01               	xorlw	1	; case 3
  2160  00F0  1903               	skipnz
  2161  00F1  289A               	goto	l156
  2162  00F2  3A07               	xorlw	7	; case 4
  2163  00F3  1903               	skipnz
  2164  00F4  28A7               	goto	l157
  2165  00F5  3A01               	xorlw	1	; case 5
  2166  00F6  1903               	skipnz
  2167  00F7  28B4               	goto	l158
  2168  00F8  3A03               	xorlw	3	; case 6
  2169  00F9  1903               	skipnz
  2170  00FA  28C1               	goto	l159
  2171  00FB  3A01               	xorlw	1	; case 7
  2172  00FC  1903               	skipnz
  2173  00FD  28CE               	goto	l160
  2174  00FE  28FF               	goto	l153
  2175  00FF                     l153:
  2176                           
  2177                           ;ADC.c: 81:     ADCON0bits.ADON = 1;
  2178  00FF  141F               	bsf	31,0	;volatile
  2179                           
  2180                           ;ADC.c: 82:     PIR1bits.ADIF = 0;
  2181  0100  130C               	bcf	12,6	;volatile
  2182                           
  2183                           ;ADC.c: 83:     PIE1bits.ADIE = 1;
  2184  0101  1683               	bsf	3,5	;RP0=1, select bank1
  2185  0102  1303               	bcf	3,6	;RP1=0, select bank1
  2186  0103  170C               	bsf	12,6	;volatile
  2187                           
  2188                           ;ADC.c: 84:     INTCONbits.PEIE = 1;
  2189  0104  170B               	bsf	11,6	;volatile
  2190  0105                     l1442:
  2191                           
  2192                           ;ADC.c: 85:     _delay((unsigned long)((30)*(4000000/4000.0)));
  2193  0105  3027               	movlw	39
  2194  0106  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0107  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0108  00C4               	movwf	??_ADConfig+1
  2197  0109  30F4               	movlw	244
  2198  010A  00C3               	movwf	??_ADConfig
  2199  010B                     u477:
  2200  010B  0BC3               	decfsz	??_ADConfig,f
  2201  010C  290B               	goto	u477
  2202  010D  0BC4               	decfsz	??_ADConfig+1,f
  2203  010E  290B               	goto	u477
  2204  010F  0000               	nop
  2205  0110                     l1444:
  2206                           
  2207                           ;ADC.c: 86:     ADCON0bits.GO_nDONE = 1;
  2208  0110  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0111  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0112  149F               	bsf	31,1	;volatile
  2211  0113                     l161:
  2212  0113  0008               	return
  2213  0114                     __end_of_ADConfig:
  2214                           
  2215                           	psect	text7
  2216  0371                     __ptext7:	
  2217 ;; *************** function _ADCinit *****************
  2218 ;; Defined at:
  2219 ;;		line 104 in file "ADC.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2233 ;;      Params:         0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0
  2235 ;;      Temps:          0       2       0       0       0
  2236 ;;      Totals:         0       2       0       0       0
  2237 ;;Total ram usage:        2 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    2
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_main
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _ADCinit
  2249  0371                     _ADCinit:
  2250  0371                     l1484:	
  2251                           ;incstack = 0
  2252                           ; Regs used in _ADCinit: [wreg]
  2253                           
  2254                           
  2255                           ;ADC.c: 105:     PIR1bits.ADIF = 0;
  2256  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0373  130C               	bcf	12,6	;volatile
  2259                           
  2260                           ;ADC.c: 106:     PIE1bits.ADIE = 1;
  2261  0374  1683               	bsf	3,5	;RP0=1, select bank1
  2262  0375  1303               	bcf	3,6	;RP1=0, select bank1
  2263  0376  170C               	bsf	12,6	;volatile
  2264  0377                     l1486:
  2265                           
  2266                           ;ADC.c: 107:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2267  0377  301A               	movlw	26
  2268  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2270  037A  00C2               	movwf	??_ADCinit+1
  2271  037B  30F7               	movlw	247
  2272  037C  00C1               	movwf	??_ADCinit
  2273  037D                     u487:
  2274  037D  0BC1               	decfsz	??_ADCinit,f
  2275  037E  2B7D               	goto	u487
  2276  037F  0BC2               	decfsz	??_ADCinit+1,f
  2277  0380  2B7D               	goto	u487
  2278  0381  2B82               	nop2
  2279  0382                     l1488:
  2280                           
  2281                           ;ADC.c: 108:     ADCON0bits.GO_nDONE = 1;
  2282  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0384  149F               	bsf	31,1	;volatile
  2285  0385                     l172:
  2286  0385  0008               	return
  2287  0386                     __end_of_ADCinit:
  2288                           
  2289                           	psect	text8
  2290  0222                     __ptext8:	
  2291 ;; *************** function _ISR *****************
  2292 ;; Defined at:
  2293 ;;		line 44 in file "Principal2.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2307 ;;      Params:         0       0       0       0       0
  2308 ;;      Locals:         0       0       0       0       0
  2309 ;;      Temps:          5       0       0       0       0
  2310 ;;      Totals:         5       0       0       0       0
  2311 ;;Total ram usage:        5 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    1
  2314 ;; This function calls:
  2315 ;;		_cambioDisplay
  2316 ;; This function is called by:
  2317 ;;		Interrupt level 1
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _ISR
  2323  0222                     _ISR:
  2324  0222                     i1l1540:
  2325                           
  2326                           ;Principal2.c: 46:     if (PIR1bits.ADIF && PIE1bits.ADIE){
  2327  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2329  0224  1F0C               	btfss	12,6	;volatile
  2330  0225  2A27               	goto	u32_21
  2331  0226  2A28               	goto	u32_20
  2332  0227                     u32_21:
  2333  0227  2A33               	goto	i1l79
  2334  0228                     u32_20:
  2335  0228                     i1l1542:
  2336  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2337  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2338  022A  1F0C               	btfss	12,6	;volatile
  2339  022B  2A2D               	goto	u33_21
  2340  022C  2A2E               	goto	u33_20
  2341  022D                     u33_21:
  2342  022D  2A33               	goto	i1l79
  2343  022E                     u33_20:
  2344  022E                     i1l1544:
  2345                           
  2346                           ;Principal2.c: 47:         PIE1bits.ADIE = 0;
  2347  022E  130C               	bcf	12,6	;volatile
  2348                           
  2349                           ;Principal2.c: 48:         banderaADC = 1;
  2350  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0231  01CB               	clrf	_banderaADC
  2353  0232  0ACB               	incf	_banderaADC,f
  2354  0233                     i1l79:	
  2355                           ;Principal2.c: 49:     }
  2356                           
  2357                           
  2358                           ;Principal2.c: 51:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  2359  0233  1C0B               	btfss	11,0	;volatile
  2360  0234  2A36               	goto	u34_21
  2361  0235  2A37               	goto	u34_20
  2362  0236                     u34_21:
  2363  0236  2A44               	goto	i1l80
  2364  0237                     u34_20:
  2365  0237                     i1l1546:
  2366  0237  1D8B               	btfss	11,3	;volatile
  2367  0238  2A3A               	goto	u35_21
  2368  0239  2A3B               	goto	u35_20
  2369  023A                     u35_21:
  2370  023A  2A44               	goto	i1l80
  2371  023B                     u35_20:
  2372  023B                     i1l1548:
  2373                           
  2374                           ;Principal2.c: 52:         INTCONbits.RBIF = 0;
  2375  023B  100B               	bcf	11,0	;volatile
  2376  023C                     i1l1550:
  2377                           
  2378                           ;Principal2.c: 53:         if (banderaBoton == 0){
  2379  023C  087D               	movf	_banderaBoton,w
  2380  023D  1D03               	btfss	3,2
  2381  023E  2A40               	goto	u36_21
  2382  023F  2A41               	goto	u36_20
  2383  0240                     u36_21:
  2384  0240  2A44               	goto	i1l80
  2385  0241                     u36_20:
  2386  0241                     i1l1552:
  2387                           
  2388                           ;Principal2.c: 54:             banderaBoton = 1;
  2389  0241  01FD               	clrf	_banderaBoton
  2390  0242  0AFD               	incf	_banderaBoton,f
  2391                           
  2392                           ;Principal2.c: 55:             INTCONbits.RBIE = 0;
  2393  0243  118B               	bcf	11,3	;volatile
  2394  0244                     i1l80:	
  2395                           ;Principal2.c: 57:     }
  2396                           
  2397                           
  2398                           ;Principal2.c: 59:     if (INTCONbits.T0IF == 1 && INTCONbits.T0IE == 1){
  2399  0244  1D0B               	btfss	11,2	;volatile
  2400  0245  2A47               	goto	u37_21
  2401  0246  2A48               	goto	u37_20
  2402  0247                     u37_21:
  2403  0247  2A5D               	goto	i1l83
  2404  0248                     u37_20:
  2405  0248                     i1l1554:
  2406  0248  1E8B               	btfss	11,5	;volatile
  2407  0249  2A4B               	goto	u38_21
  2408  024A  2A4C               	goto	u38_20
  2409  024B                     u38_21:
  2410  024B  2A5D               	goto	i1l83
  2411  024C                     u38_20:
  2412  024C                     i1l1556:
  2413                           
  2414                           ;Principal2.c: 60:         banderaTMR0 = ~banderaTMR0;
  2415  024C  09FA               	comf	_banderaTMR0,f
  2416  024D                     i1l1558:
  2417                           
  2418                           ;Principal2.c: 61:         cambioDisplay(valorDisplay_Uni, valorDisplay_Dec, banderaTMR0
      +                          );
  2419  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2420  024E  084A               	movf	_valorDisplay_Dec,w
  2421  024F  00F5               	movwf	??_ISR
  2422  0250  0875               	movf	??_ISR,w
  2423  0251  00F0               	movwf	cambioDisplay@valDec
  2424  0252  087A               	movf	_banderaTMR0,w
  2425  0253  00F6               	movwf	??_ISR+1
  2426  0254  0876               	movf	??_ISR+1,w
  2427  0255  00F1               	movwf	cambioDisplay@bandera
  2428  0256  0849               	movf	_valorDisplay_Uni,w
  2429  0257  120A  118A  22DE  120A  118A  	fcall	_cambioDisplay
  2430  025C                     i1l1560:
  2431                           
  2432                           ;Principal2.c: 62:         INTCONbits.T0IF = 0;
  2433  025C  110B               	bcf	11,2	;volatile
  2434  025D                     i1l83:
  2435  025D  0879               	movf	??_ISR+4,w
  2436  025E  008A               	movwf	10
  2437  025F  0878               	movf	??_ISR+3,w
  2438  0260  0084               	movwf	4
  2439  0261  0E77               	swapf	??_ISR+2,w
  2440  0262  0083               	movwf	3
  2441  0263  0EFE               	swapf	btemp,f
  2442  0264  0E7E               	swapf	btemp,w
  2443  0265  0009               	retfie
  2444  0266                     __end_of_ISR:
  2445                           
  2446                           	psect	intentry
  2447  0004                     __pintentry:	
  2448                           ;incstack = 0
  2449                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2450                           
  2451  0004                     interrupt_function:
  2452  007E                     saved_w	set	btemp
  2453  0004  00FE               	movwf	btemp
  2454  0005  0E03               	swapf	3,w
  2455  0006  00F7               	movwf	??_ISR+2
  2456  0007  0804               	movf	4,w
  2457  0008  00F8               	movwf	??_ISR+3
  2458  0009  080A               	movf	10,w
  2459  000A  00F9               	movwf	??_ISR+4
  2460  000B  120A  118A  2A22   	ljmp	_ISR
  2461                           
  2462                           	psect	text9
  2463  02DE                     __ptext9:	
  2464 ;; *************** function _cambioDisplay *****************
  2465 ;; Defined at:
  2466 ;;		line 62 in file "DISPLAY7.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  valUni          1    wreg     unsigned char 
  2469 ;;  valDec          1    0[COMMON] unsigned char 
  2470 ;;  bandera         1    1[COMMON] unsigned char 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  valUni          1    4[COMMON] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2482 ;;      Params:         2       0       0       0       0
  2483 ;;      Locals:         1       0       0       0       0
  2484 ;;      Temps:          2       0       0       0       0
  2485 ;;      Totals:         5       0       0       0       0
  2486 ;;Total ram usage:        5 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_ISR
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function _cambioDisplay
  2497  02DE                     _cambioDisplay:
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in _cambioDisplay: [wreg-fsr0h+status,2+status,0]
  2501                           ;cambioDisplay@valUni stored from wreg
  2502  02DE  00F4               	movwf	cambioDisplay@valUni
  2503  02DF                     i1l1308:
  2504                           
  2505                           ;DISPLAY7.c: 63:     TMR0 = valorTMR0;
  2506  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2507  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2508  02E1  0840               	movf	_valorTMR0,w
  2509  02E2  0081               	movwf	1	;volatile
  2510                           
  2511                           ;DISPLAY7.c: 67:     switch (bandera){
  2512  02E3  2AFD               	goto	i1l1320
  2513  02E4                     i1l210:	
  2514                           ;DISPLAY7.c: 68:         case 0:
  2515                           
  2516                           
  2517                           ;DISPLAY7.c: 69:             PORTCbits.RC0 = 0;
  2518  02E4  1007               	bcf	7,0	;volatile
  2519  02E5                     i1l1310:
  2520                           
  2521                           ;DISPLAY7.c: 70:             PORTD = numerosDisplay[valUni];
  2522  02E5  0874               	movf	cambioDisplay@valUni,w
  2523  02E6  00F2               	movwf	??_cambioDisplay
  2524  02E7  0772               	addwf	??_cambioDisplay,w
  2525  02E8  3E20               	addlw	(low (_numerosDisplay| 0))& (0+255)
  2526  02E9  0084               	movwf	4
  2527  02EA  1383               	bcf	3,7	;select IRP bank0
  2528  02EB  0800               	movf	0,w
  2529  02EC  0088               	movwf	8	;volatile
  2530  02ED                     i1l1312:
  2531                           
  2532                           ;DISPLAY7.c: 71:             PORTCbits.RC2 = 1;
  2533  02ED  1507               	bsf	7,2	;volatile
  2534                           
  2535                           ;DISPLAY7.c: 72:             break;
  2536  02EE  2B0D               	goto	i1l214
  2537  02EF                     i1l212:	
  2538                           ;DISPLAY7.c: 73:         case 255:
  2539                           
  2540                           
  2541                           ;DISPLAY7.c: 74:             PORTCbits.RC2 = 0;
  2542  02EF  1107               	bcf	7,2	;volatile
  2543  02F0                     i1l1314:
  2544                           
  2545                           ;DISPLAY7.c: 75:             PORTD = numerosDisplay[valDec];
  2546  02F0  0870               	movf	cambioDisplay@valDec,w
  2547  02F1  00F2               	movwf	??_cambioDisplay
  2548  02F2  0772               	addwf	??_cambioDisplay,w
  2549  02F3  3E20               	addlw	(low (_numerosDisplay| 0))& (0+255)
  2550  02F4  0084               	movwf	4
  2551  02F5  1383               	bcf	3,7	;select IRP bank0
  2552  02F6  0800               	movf	0,w
  2553  02F7  0088               	movwf	8	;volatile
  2554  02F8                     i1l1316:
  2555                           
  2556                           ;DISPLAY7.c: 76:             PORTCbits.RC0 = 1;
  2557  02F8  1407               	bsf	7,0	;volatile
  2558                           
  2559                           ;DISPLAY7.c: 77:             break;
  2560  02F9  2B0D               	goto	i1l214
  2561  02FA                     i1l1318:
  2562                           
  2563                           ;DISPLAY7.c: 79:             PORTD = PORTD;
  2564  02FA  0808               	movf	8,w	;volatile
  2565  02FB  0088               	movwf	8	;volatile
  2566                           
  2567                           ;DISPLAY7.c: 80:     }
  2568  02FC  2B0D               	goto	i1l214
  2569  02FD                     i1l1320:
  2570  02FD  0871               	movf	cambioDisplay@bandera,w
  2571  02FE  00F2               	movwf	??_cambioDisplay
  2572  02FF  01F3               	clrf	??_cambioDisplay+1
  2573                           
  2574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2575                           ; Switch size 1, requested type "simple"
  2576                           ; Number of cases is 1, Range of values is 0 to 0
  2577                           ; switch strategies available:
  2578                           ; Name         Instructions Cycles
  2579                           ; simple_byte            4     3 (average)
  2580                           ; direct_byte           11     8 (fixed)
  2581                           ; jumptable            260     6 (fixed)
  2582                           ;	Chosen strategy is simple_byte
  2583  0300  0873               	movf	??_cambioDisplay+1,w
  2584  0301  3A00               	xorlw	0	; case 0
  2585  0302  1903               	skipnz
  2586  0303  2B05               	goto	i1l1878
  2587  0304  2AFA               	goto	i1l1318
  2588  0305                     i1l1878:
  2589                           
  2590                           ; Switch size 1, requested type "simple"
  2591                           ; Number of cases is 2, Range of values is 0 to 255
  2592                           ; switch strategies available:
  2593                           ; Name         Instructions Cycles
  2594                           ; simple_byte            7     4 (average)
  2595                           ; jumptable            260     6 (fixed)
  2596                           ;	Chosen strategy is simple_byte
  2597  0305  0872               	movf	??_cambioDisplay,w
  2598  0306  3A00               	xorlw	0	; case 0
  2599  0307  1903               	skipnz
  2600  0308  2AE4               	goto	i1l210
  2601  0309  3AFF               	xorlw	255	; case 255
  2602  030A  1903               	skipnz
  2603  030B  2AEF               	goto	i1l212
  2604  030C  2AFA               	goto	i1l1318
  2605  030D                     i1l214:
  2606  030D  0008               	return
  2607  030E                     __end_of_cambioDisplay:
  2608  007E                     btemp	set	126	;btemp
  2609  007E                     wtemp0	set	126
  2610                           
  2611                           	psect	config
  2612                           
  2613                           ;Config register CONFIG1 @ 0x2007
  2614                           ;	Oscillator Selection bits
  2615                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2616                           ;	Watchdog Timer Enable bit
  2617                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2618                           ;	Power-up Timer Enable bit
  2619                           ;	PWRTE = OFF, PWRT disabled
  2620                           ;	RE3/MCLR pin function select bit
  2621                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2622                           ;	Code Protection bit
  2623                           ;	CP = OFF, Program memory code protection is disabled
  2624                           ;	Data Code Protection bit
  2625                           ;	CPD = OFF, Data memory code protection is disabled
  2626                           ;	Brown Out Reset Selection bits
  2627                           ;	BOREN = OFF, BOR disabled
  2628                           ;	Internal External Switchover bit
  2629                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2630                           ;	Fail-Safe Clock Monitor Enabled bit
  2631                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2632                           ;	Low Voltage Programming Enable bit
  2633                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2634                           ;	In-Circuit Debugger Mode bit
  2635                           ;	DEBUG = 0x1, unprogrammed default
  2636  2007                     	org	8199
  2637  2007  20D4               	dw	8404
  2638                           
  2639                           ;Config register CONFIG2 @ 0x2008
  2640                           ;	Brown-out Reset Selection bit
  2641                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2642                           ;	Flash Program Memory Self Write Enable bits
  2643                           ;	WRT = OFF, Write protection off
  2644  2008                     	org	8200
  2645  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      8      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_cambioDisplay

Critical Paths under _main in BANK0

    _main->_ADConfig

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     453
                                              5 BANK0      3     3      0
                            _ADCinit
                           _ADConfig
                       _AnalogRead_8
                     _config2Display
                     _config_PUERTOS
                        _press_Bajar
                        _press_Subir
 ---------------------------------------------------------------------------------
 (1) _press_Subir                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _press_Bajar                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_PUERTOS                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config2Display                                       3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _AnalogRead_8                                         4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADConfig                                             5     3      2     218
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADCinit                                              2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0     218
                                              5 COMMON     5     5      0
                      _cambioDisplay
 ---------------------------------------------------------------------------------
 (3) _cambioDisplay                                        5     3      2     218
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCinit
   _ADConfig
   _AnalogRead_8
   _config2Display
   _config_PUERTOS
   _press_Bajar
   _press_Subir

 _ISR (ROOT)
   _cambioDisplay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3A      12        0.0%
ABS                  0      0      3A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 11:09:49 2021

                      pc 0002                       l98 0370                       fsr 0004  
                    l114 02DD                      l106 02A1                      l150 0061  
                    l206 01B5                      l160 00CE                      l152 0075  
                    l161 0113                      l153 00FF                      l154 0080  
                    l155 008D                      l147 0059                      l172 0385  
                    l156 009A                      l157 00A7                      l149 005D  
                    l158 00B4                      l159 00C1                      l169 0331  
                    l197 01AA                      u300 02CB                      u220 026B  
                    u301 02CA                      u221 026A                      u310 02D1  
                    u230 0270                      u311 02D0                      u231 026F  
                    u240 0276                      u400 01F3                      u241 0275  
                    u401 01F2                      u250 028F                      u410 01FB  
                    u251 028E                      u411 01FA                      u260 0295  
                    u261 0294                      u270 02A7                      u271 02A6  
                    u280 02AC                      u281 02AB                      u425 0204  
                    u290 02B2                      u291 02B1                      _ISR 0222  
                    u437 027C                      u390 01DE                      u447 029B  
                    u391 01DD                      u457 02B8                      u467 02D7  
                    u477 010B                      u487 037D                      fsr0 0004  
                    indf 0000     cambioDisplay@bandera 0071          __end_of_ADCinit 0386  
                   ?_ISR 0070                     l1410 0031                     l1330 035A  
                   l1412 0036                     l1420 0065                     l1332 0368  
                   l1500 0281                     l1430 00AD                     l1422 007B  
                   l1414 003B                     l1406 002D                     l1350 0121  
                   l1342 0114                     l1334 036C                     l1326 0353  
                   l1510 028F                     l1502 0286                     l1432 00BA  
                   l1424 0086                     l1440 00DB                     l1416 003E  
                   l1408 002E                     l1360 013D                     l1352 0123  
                   l1344 011A                     l1336 036D                     l1328 0359  
                   l1520 02AC                     l1512 0295                     l1504 0287  
                   l1442 0105                     l1434 00C7                     l1426 0093  
                   l1418 0043                     l1370 0164                     l1362 0144  
                   l1354 0128                     l1346 011D                     l1338 036F  
                   l1530 02C5                     l1522 02B2                     l1514 02A0  
                   l1506 0289                     l1444 0110                     l1436 00D4  
                   l1428 00A0                     l1380 01B4                     l1372 016B  
                   l1364 014B                     l1356 012F                     l1348 011E  
                   l1524 02BD                     l1532 02C6                     l1516 02A2  
                   l1508 028A                     l1366 0155                     l1358 0136  
                   l1374 0172                     l1534 02CB                     l1526 02C2  
                   l1518 02A7                     l1472 0320                     l1464 0311  
                   l1376 01AF                     l1368 015C                     l1536 02D1  
                   l1528 02C3                     l1474 0330                     l1466 0312  
                   l1378 01B3                     l1538 02DC                     l1570 01D6  
                   l1484 0371                     l1468 0317                     l1492 0266  
                   l1580 01F3                     l1572 01D7                     l1564 01B6  
                   l1486 0377                     l1494 026B                     l1590 020E  
                   l1582 01F5                     l1574 01DE                     l1566 01BB  
                   l1488 0382                     l1496 0270                     l1592 020F  
                   l1584 01FB                     l1576 01E2                     l1568 01C6  
                   l1498 0276                     l1586 01FC                     l1578 01ED  
                   l1594 0214                     l1860 0191                     l1596 0219  
                   l1588 0201                     l1870 0328                     l1862 0196  
                   l1872 004B                     l1864 019B                     l1874 006D  
                   l1866 01A0                     l1858 0186                     l1876 00E5  
                   l1868 01A5                     _IOCB 0096                     i1l80 0244  
                   i1l83 025D              main@lectura 0048                     i1l79 0233  
                   _TMR0 0001                     _WPUB 0095                     _main 01B6  
                   btemp 007E                     start 000E         __end_of_ADConfig 0114  
                  ??_ISR 0075                    ?_main 0070                    _ANSEL 0188  
                  i1l210 02E4                    i1l212 02EF                    i1l214 030D  
                  u32_20 0228                    u32_21 0227                    u33_20 022E  
                  u33_21 022D                    u34_20 0237                    u34_21 0236  
                  u35_20 023B                    u35_21 023A                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u36_20 0241                    u36_21 0240  
                  u37_20 0248                    u37_21 0247                    u38_20 024C  
                  u38_21 024B                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
       _valorDisplay_Dec 004A         _valorDisplay_Uni 0049         ??_config2Display 0043  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0222                ??_ADCinit 0041  
                 ??_main 0046    __size_of_AnalogRead_8 0024                   _ADRESH 001E  
                 _ADRESL 009E                   _ANSELH 0189         ??_config_PUERTOS 0041  
           _banderaBoton 007D                   i1l1310 02E5                   i1l1312 02ED  
                 i1l1320 02FD                   i1l1314 02F0                   i1l1316 02F8  
                 i1l1308 02DF                   i1l1318 02FA                   i1l1540 0222  
                 i1l1550 023C                   i1l1542 0228                   i1l1560 025C  
                 i1l1552 0241                   i1l1544 022E                   i1l1554 0248  
                 i1l1546 0237                   i1l1556 024C                   i1l1548 023B  
                 i1l1558 024D                   i1l1878 0305             _AnalogRead_8 030E  
           ?_press_Bajar 0070                   saved_w 007E             ?_press_Subir 0070  
              ?_ADConfig 0041  __end_of__initialization 0026           __pcstackCOMMON 0070  
           __pidataBANK0 0332               _banderaADC 004B           _OPTION_REGbits 0081  
 __size_of_cambioDisplay 0030               ??_ADConfig 0043               __pbssBANK0 0049  
             __pmaintext 01B6            ADConfig@canal 0041               __pintentry 0004  
                _ADCinit 0371          ADConfig@oscFreq 0045   AnalogRead_8@conversion 0044  
          _cambioDisplay 02DE    config2Display@FreqOsc 0041                _ANSELbits 0188  
                __ptext1 0266                  __ptext2 02A2                  __ptext3 0353  
                __ptext4 0114                  __ptext5 030E                  __ptext6 002A  
                __ptext7 0371                  __ptext8 0222                  __ptext9 02DE  
           __size_of_ISR 0044     __size_of_press_Bajar 003C     end_of_initialization 0026  
   __size_of_press_Subir 003C           ?_cambioDisplay 0070                _PORTBbits 0006  
              _PORTCbits 0007                _PORTEbits 0009                _TRISAbits 0085  
              _TRISCbits 0087                _TRISEbits 0089        __size_of_ADConfig 00EA  
__size_of_config2Display 00A2      cambioDisplay@valDec 0070      cambioDisplay@valUni 0074  
    start_initialization 0011              __end_of_ISR 0266          ??_cambioDisplay 0072  
            _banderaTMR0 007A  __size_of_config_PUERTOS 001E               init_fetch0 0386  
            __pdataBANK0 0020                 ?_ADCinit 0070              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0041                _banderaDO 007B  
              _banderaUP 007C                 _ADConfig 002A        interrupt_function 0004  
         _config2Display 0114                 _PIE1bits 008C                 _PIR1bits 000C  
              _valorTMR0 0040            ?_AnalogRead_8 0070               _ADCON0bits 001F  
             _ADCON1bits 009F      ADConfig@justificado 0042         __size_of_ADCinit 0015  
          ??_press_Bajar 0041            ??_press_Subir 0041   __end_of_config2Display 01B6  
         _config_PUERTOS 0353           ??_AnalogRead_8 0041           _numerosDisplay 0020  
    __end_of_press_Bajar 02DE          ?_config2Display 0041      __end_of_press_Subir 02A2  
          __size_of_main 006C   __end_of_config_PUERTOS 0371               _INTCONbits 000B  
               init_ram0 038A                 intlevel1 0000    __end_of_cambioDisplay 030E  
        ?_config_PUERTOS 0070               _OSCCONbits 008F         AnalogRead_8@just 0043  
            _press_Bajar 02A2              _press_Subir 0266     __end_of_AnalogRead_8 0332  
