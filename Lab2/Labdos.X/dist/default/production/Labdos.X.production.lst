

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 15:49:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.31
    27                           ; Generated 13/10/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	idataBANK0
   375  033C                     __pidataBANK0:
   376                           
   377                           ;initializer for _numerosDisplay
   378  033C  3488               	retlw	136
   379  033D  3400               	retlw	0
   380  033E  34EB               	retlw	235
   381  033F  3400               	retlw	0
   382  0340  344C               	retlw	76
   383  0341  3400               	retlw	0
   384  0342  3449               	retlw	73
   385  0343  3400               	retlw	0
   386  0344  342B               	retlw	43
   387  0345  3400               	retlw	0
   388  0346  3419               	retlw	25
   389  0347  3400               	retlw	0
   390  0348  3418               	retlw	24
   391  0349  3400               	retlw	0
   392  034A  34CB               	retlw	203
   393  034B  3400               	retlw	0
   394  034C  3408               	retlw	8
   395  034D  3400               	retlw	0
   396  034E  340B               	retlw	11
   397  034F  3400               	retlw	0
   398  0350  3402               	retlw	2
   399  0351  3400               	retlw	0
   400  0352  3430               	retlw	48
   401  0353  3400               	retlw	0
   402  0354  3494               	retlw	148
   403  0355  3400               	retlw	0
   404  0356  3460               	retlw	96
   405  0357  3400               	retlw	0
   406  0358  3414               	retlw	20
   407  0359  3400               	retlw	0
   408  035A  3416               	retlw	22
   409  035B  3400               	retlw	0
   410                           
   411                           ;initializer for _valorTMR0
   412  035C  3483               	retlw	131
   413  0001                     _TMR0	set	1
   414  0007                     _PORTCbits	set	7
   415  001E                     _ADRESH	set	30
   416  001F                     _ADCON0bits	set	31
   417  0006                     _PORTBbits	set	6
   418  0008                     _PORTD	set	8
   419  0007                     _PORTC	set	7
   420  0006                     _PORTB	set	6
   421  0009                     _PORTE	set	9
   422  0009                     _PORTEbits	set	9
   423  0005                     _PORTA	set	5
   424  000B                     _INTCONbits	set	11
   425  000C                     _PIR1bits	set	12
   426  008F                     _OSCCONbits	set	143
   427  0087                     _TRISCbits	set	135
   428  009E                     _ADRESL	set	158
   429  0089                     _TRISEbits	set	137
   430  0085                     _TRISAbits	set	133
   431  009F                     _ADCON1bits	set	159
   432  0096                     _IOCB	set	150
   433  0081                     _OPTION_REGbits	set	129
   434  0095                     _WPUB	set	149
   435  0089                     _TRISE	set	137
   436  0086                     _TRISB	set	134
   437  0085                     _TRISA	set	133
   438  0087                     _TRISC	set	135
   439  0088                     _TRISD	set	136
   440  008C                     _PIE1bits	set	140
   441  0188                     _ANSELbits	set	392
   442  0189                     _ANSELH	set	393
   443  0188                     _ANSEL	set	392
   444                           
   445                           	psect	cinit
   446  0011                     start_initialization:	
   447                           ; #config settings
   448                           
   449  0011                     __initialization:
   450                           
   451                           ; Initialize objects allocated to BANK0
   452  0011  1383               	bcf	3,7	;select IRP bank0
   453  0012  3041               	movlw	low (__pdataBANK0+33)
   454  0013  00FD               	movwf	btemp+-1
   455  0014  3003               	movlw	high __pidataBANK0
   456  0015  00FE               	movwf	btemp
   457  0016  303C               	movlw	low __pidataBANK0
   458  0017  00FF               	movwf	btemp+1
   459  0018  3020               	movlw	low __pdataBANK0
   460  0019  0084               	movwf	4
   461  001A  120A  118A  2394  120A  118A  	fcall	init_ram0
   462                           
   463                           ; Clear objects allocated to BANK0
   464  001F  01CB               	clrf	__pbssBANK0& (0+127)
   465  0020  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   466  0021  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   467                           
   468                           ; Clear objects allocated to COMMON
   469  0022  01FA               	clrf	__pbssCOMMON& (0+127)
   470  0023  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   471  0024  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   472  0025  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   473  0026                     end_of_initialization:	
   474                           ;End of C runtime variable initialization code
   475                           
   476  0026                     __end_of__initialization:
   477  0026  0183               	clrf	3
   478  0027  120A  118A  29B6   	ljmp	_main	;jump to C main() function
   479                           
   480                           	psect	bssCOMMON
   481  007A                     __pbssCOMMON:
   482  007A                     _banderaTMR0:
   483  007A                     	ds	1
   484  007B                     _banderaDO:
   485  007B                     	ds	1
   486  007C                     _banderaUP:
   487  007C                     	ds	1
   488  007D                     _banderaBoton:
   489  007D                     	ds	1
   490                           
   491                           	psect	bssBANK0
   492  004B                     __pbssBANK0:
   493  004B                     _valorDisplay_Uni:
   494  004B                     	ds	1
   495  004C                     _valorDisplay_Dec:
   496  004C                     	ds	1
   497  004D                     _banderaADC:
   498  004D                     	ds	1
   499                           
   500                           	psect	dataBANK0
   501  0020                     __pdataBANK0:
   502  0020                     _numerosDisplay:
   503  0020                     	ds	32
   504  0040                     _valorTMR0:
   505  0040                     	ds	1
   506                           
   507                           	psect	inittext
   508  0390                     init_fetch0:	
   509                           ;	Called with low address in FSR and high address in W
   510                           
   511  0390  087E               	movf	btemp,w
   512  0391  008A               	movwf	10
   513  0392  087F               	movf	btemp+1,w
   514  0393  0082               	movwf	2
   515  0394                     init_ram0:	
   516                           ;Called with:
   517                           ;	high address of idata address in btemp 
   518                           ;	low address of idata address in btemp+1 
   519                           ;	low address of data in FSR
   520                           ;	high address + 1 of data in btemp-1
   521                           
   522  0394  120A  118A  2390  120A  118A  	fcall	init_fetch0
   523  0399  0080               	movwf	0
   524  039A  0A84               	incf	4,f
   525  039B  0804               	movf	4,w
   526  039C  067D               	xorwf	btemp+-1,w
   527  039D  1903               	btfsc	3,2
   528  039E  3400               	retlw	0
   529  039F  0AFF               	incf	btemp+1,f
   530  03A0  1903               	btfsc	3,2
   531  03A1  0AFE               	incf	btemp,f
   532  03A2  2B94               	goto	init_ram0
   533                           
   534                           	psect	cstackCOMMON
   535  0070                     __pcstackCOMMON:
   536  0070                     ?_cambioDisplay:
   537  0070                     ?_config_PUERTOS:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_AnalogRead_8:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_ADCinit:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_press_Subir:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_press_Bajar:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_ISR:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_main:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     cambioDisplay@valDec:	
   559                           ; 1 bytes @ 0x0
   560                           
   561                           
   562                           ; 1 bytes @ 0x0
   563  0070                     	ds	1
   564  0071                     cambioDisplay@bandera:
   565                           
   566                           ; 1 bytes @ 0x1
   567  0071                     	ds	1
   568  0072                     ??_cambioDisplay:
   569                           
   570                           ; 1 bytes @ 0x2
   571  0072                     	ds	2
   572  0074                     cambioDisplay@valUni:
   573                           
   574                           ; 1 bytes @ 0x4
   575  0074                     	ds	1
   576  0075                     ??_ISR:
   577                           
   578                           ; 1 bytes @ 0x5
   579  0075                     	ds	5
   580                           
   581                           	psect	cstackBANK0
   582  0041                     __pcstackBANK0:
   583  0041                     ??_config_PUERTOS:
   584  0041                     ?_config2Display:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0041                     ?_ADConfig:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0041                     ??_AnalogRead_8:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0041                     ??_ADCinit:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0041                     ??_press_Subir:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0041                     ??_press_Bajar:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0041                     ADConfig@canal:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0041                     config2Display@FreqOsc:	
   606                           ; 1 bytes @ 0x0
   607                           
   608                           
   609                           ; 2 bytes @ 0x0
   610  0041                     	ds	1
   611  0042                     ADConfig@justificado:
   612                           
   613                           ; 1 bytes @ 0x1
   614  0042                     	ds	1
   615  0043                     ??_config2Display:
   616  0043                     ??_ADConfig:	
   617                           ; 1 bytes @ 0x2
   618                           
   619  0043                     AnalogRead_8@just:	
   620                           ; 1 bytes @ 0x2
   621                           
   622                           
   623                           ; 1 bytes @ 0x2
   624  0043                     	ds	1
   625  0044                     AnalogRead_8@conversion:
   626                           
   627                           ; 1 bytes @ 0x3
   628  0044                     	ds	1
   629  0045                     ADConfig@oscFreq:
   630                           
   631                           ; 1 bytes @ 0x4
   632  0045                     	ds	1
   633  0046                     ??_main:
   634                           
   635                           ; 1 bytes @ 0x5
   636  0046                     	ds	2
   637  0048                     _main$253:
   638                           
   639                           ; 1 bytes @ 0x7
   640  0048                     	ds	1
   641  0049                     _main$254:
   642                           
   643                           ; 1 bytes @ 0x8
   644  0049                     	ds	1
   645  004A                     main@lectura:
   646                           
   647                           ; 1 bytes @ 0x9
   648  004A                     	ds	1
   649                           
   650                           	psect	maintext
   651  01B6                     __pmaintext:	
   652 ;;
   653 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   654 ;;
   655 ;; *************** function _main *****************
   656 ;; Defined at:
   657 ;;		line 68 in file "Principal2.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  lectura         1    9[BANK0 ] unsigned char 
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : B00/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       0       0       0       0
   672 ;;      Locals:         0       3       0       0       0
   673 ;;      Temps:          0       2       0       0       0
   674 ;;      Totals:         0       5       0       0       0
   675 ;;Total ram usage:        5 bytes
   676 ;; Hardware stack levels required when called:    3
   677 ;; This function calls:
   678 ;;		_ADCinit
   679 ;;		_ADConfig
   680 ;;		_AnalogRead_8
   681 ;;		_config2Display
   682 ;;		_config_PUERTOS
   683 ;;		_press_Bajar
   684 ;;		_press_Subir
   685 ;; This function is called by:
   686 ;;		Startup code after reset
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function _main
   692  01B6                     _main:
   693  01B6                     l1574:	
   694                           ;incstack = 0
   695                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   696                           
   697                           
   698                           ;Principal2.c: 70:     config_PUERTOS();
   699  01B6  120A  118A  235D  120A  118A  	fcall	_config_PUERTOS
   700  01BB                     l1576:
   701                           
   702                           ;Principal2.c: 71:     config2Display(4000);
   703  01BB  30A0               	movlw	160
   704  01BC  1283               	bcf	3,5	;RP0=0, select bank0
   705  01BD  1303               	bcf	3,6	;RP1=0, select bank0
   706  01BE  00C1               	movwf	config2Display@FreqOsc
   707  01BF  300F               	movlw	15
   708  01C0  00C2               	movwf	config2Display@FreqOsc+1
   709  01C1  120A  118A  2114  120A  118A  	fcall	_config2Display
   710  01C6                     l1578:
   711                           
   712                           ;Principal2.c: 72:     ADConfig(8, 5, 'H');
   713  01C6  3005               	movlw	5
   714  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   715  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   716  01C9  00C6               	movwf	??_main
   717  01CA  0846               	movf	??_main,w
   718  01CB  00C1               	movwf	ADConfig@canal
   719  01CC  3048               	movlw	72
   720  01CD  00C7               	movwf	??_main+1
   721  01CE  0847               	movf	??_main+1,w
   722  01CF  00C2               	movwf	ADConfig@justificado
   723  01D0  3008               	movlw	8
   724  01D1  120A  118A  202A  120A  118A  	fcall	_ADConfig
   725  01D6                     l1580:
   726                           
   727                           ;Principal2.c: 73:     INTCONbits.GIE = 1;
   728  01D6  178B               	bsf	11,7	;volatile
   729  01D7                     l1582:
   730                           
   731                           ;Principal2.c: 78:         if (banderaADC == 1){
   732  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   733  01D8  1303               	bcf	3,6	;RP1=0, select bank0
   734  01D9  034D               	decf	_banderaADC,w
   735  01DA  1D03               	btfss	3,2
   736  01DB  29DD               	goto	u411
   737  01DC  29DE               	goto	u410
   738  01DD                     u411:
   739  01DD  2A1E               	goto	l89
   740  01DE                     u410:
   741  01DE                     l1584:
   742                           
   743                           ;Principal2.c: 80:             uint8_t lectura = AnalogRead_8('H');
   744  01DE  3048               	movlw	72
   745  01DF  120A  118A  2318  120A  118A  	fcall	_AnalogRead_8
   746  01E4  1283               	bcf	3,5	;RP0=0, select bank0
   747  01E5  1303               	bcf	3,6	;RP1=0, select bank0
   748  01E6  00C6               	movwf	??_main
   749  01E7  0846               	movf	??_main,w
   750  01E8  00CA               	movwf	main@lectura
   751  01E9                     l1586:
   752                           
   753                           ;Principal2.c: 83:             valorDisplay_Uni = lectura && 0x0F;
   754  01E9  01C8               	clrf	_main$253
   755  01EA                     l1588:
   756  01EA  084A               	movf	main@lectura,w
   757  01EB  1903               	btfsc	3,2
   758  01EC  29EE               	goto	u421
   759  01ED  29EF               	goto	u420
   760  01EE                     u421:
   761  01EE  29F1               	goto	l1592
   762  01EF                     u420:
   763  01EF                     l1590:
   764  01EF  01C8               	clrf	_main$253
   765  01F0  0AC8               	incf	_main$253,f
   766  01F1                     l1592:
   767  01F1  0848               	movf	_main$253,w
   768  01F2  00C6               	movwf	??_main
   769  01F3  0846               	movf	??_main,w
   770  01F4  00CB               	movwf	_valorDisplay_Uni
   771  01F5                     l1594:
   772                           
   773                           ;Principal2.c: 84:             valorDisplay_Dec = (lectura && 0xF0) >> 4;
   774  01F5  01C9               	clrf	_main$254
   775  01F6                     l1596:
   776  01F6  084A               	movf	main@lectura,w
   777  01F7  1903               	btfsc	3,2
   778  01F8  29FA               	goto	u431
   779  01F9  29FB               	goto	u430
   780  01FA                     u431:
   781  01FA  29FD               	goto	l1600
   782  01FB                     u430:
   783  01FB                     l1598:
   784  01FB  01C9               	clrf	_main$254
   785  01FC  0AC9               	incf	_main$254,f
   786  01FD                     l1600:
   787  01FD  0849               	movf	_main$254,w
   788  01FE  00C6               	movwf	??_main
   789  01FF  3004               	movlw	4
   790  0200                     u445:
   791  0200  1003               	clrc
   792  0201  0CC6               	rrf	??_main,f
   793  0202  3EFF               	addlw	-1
   794  0203  1D03               	skipz
   795  0204  2A00               	goto	u445
   796  0205  0846               	movf	??_main,w
   797  0206  00C7               	movwf	??_main+1
   798  0207  0847               	movf	??_main+1,w
   799  0208  00CC               	movwf	_valorDisplay_Dec
   800  0209                     l1602:
   801                           
   802                           ;Principal2.c: 85:             banderaADC = 0;
   803  0209  01CD               	clrf	_banderaADC
   804  020A                     l1604:
   805                           
   806                           ;Principal2.c: 87:             if(lectura == PORTA){
   807  020A  084A               	movf	main@lectura,w
   808  020B  0605               	xorwf	5,w	;volatile
   809  020C  1D03               	skipz
   810  020D  2A0F               	goto	u451
   811  020E  2A10               	goto	u450
   812  020F                     u451:
   813  020F  2A12               	goto	l1608
   814  0210                     u450:
   815  0210                     l1606:
   816                           
   817                           ;Principal2.c: 88:                 PORTEbits.RE1 = 1;
   818  0210  1489               	bsf	9,1	;volatile
   819                           
   820                           ;Principal2.c: 89:             }
   821  0211  2A19               	goto	l1612
   822  0212                     l1608:
   823  0212  084A               	movf	main@lectura,w
   824  0213  0605               	xorwf	5,w	;volatile
   825  0214  1903               	skipnz
   826  0215  2A17               	goto	u461
   827  0216  2A18               	goto	u460
   828  0217                     u461:
   829  0217  2A19               	goto	l1612
   830  0218                     u460:
   831  0218                     l1610:
   832                           
   833                           ;Principal2.c: 91:                 PORTEbits.RE1 = 0;
   834  0218  1089               	bcf	9,1	;volatile
   835  0219                     l1612:
   836                           
   837                           ;Principal2.c: 95:             ADCinit();
   838  0219  120A  118A  237B  120A  118A  	fcall	_ADCinit
   839  021E                     l89:	
   840                           ;Principal2.c: 96:         }
   841                           
   842                           
   843                           ;Principal2.c: 97:         press_Subir();
   844  021E  120A  118A  2270  120A  118A  	fcall	_press_Subir
   845                           
   846                           ;Principal2.c: 98:         press_Bajar();
   847  0223  120A  118A  22AC  120A  118A  	fcall	_press_Bajar
   848  0228  29D7               	goto	l1582
   849  0229  120A  118A  280E   	ljmp	start
   850  022C                     __end_of_main:
   851                           
   852                           	psect	text1
   853  0270                     __ptext1:	
   854 ;; *************** function _press_Subir *****************
   855 ;; Defined at:
   856 ;;		line 128 in file "Principal2.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, status,2, status,0
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0
   872 ;;      Temps:          0       2       0       0       0
   873 ;;      Totals:         0       2       0       0       0
   874 ;;Total ram usage:        2 bytes
   875 ;; Hardware stack levels used:    1
   876 ;; Hardware stack levels required when called:    2
   877 ;; This function calls:
   878 ;;		Nothing
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           
   885                           ;psect for function _press_Subir
   886  0270                     _press_Subir:
   887  0270                     l1502:	
   888                           ;incstack = 0
   889                           ; Regs used in _press_Subir: [wreg+status,2+status,0]
   890                           
   891                           
   892                           ;Principal2.c: 130:     if (banderaBoton == 1){
   893  0270  037D               	decf	_banderaBoton,w
   894  0271  1D03               	btfss	3,2
   895  0272  2A74               	goto	u241
   896  0273  2A75               	goto	u240
   897  0274                     u241:
   898  0274  2A94               	goto	l1518
   899  0275                     u240:
   900  0275                     l1504:
   901                           
   902                           ;Principal2.c: 131:         if (banderaUP == 0){
   903  0275  087C               	movf	_banderaUP,w
   904  0276  1D03               	btfss	3,2
   905  0277  2A79               	goto	u251
   906  0278  2A7A               	goto	u250
   907  0279                     u251:
   908  0279  2A94               	goto	l1518
   909  027A                     u250:
   910  027A                     l1506:
   911                           
   912                           ;Principal2.c: 132:             if (PORTBbits.RB0 == 0){
   913  027A  1283               	bcf	3,5	;RP0=0, select bank0
   914  027B  1303               	bcf	3,6	;RP1=0, select bank0
   915  027C  1806               	btfsc	6,0	;volatile
   916  027D  2A7F               	goto	u261
   917  027E  2A80               	goto	u260
   918  027F                     u261:
   919  027F  2A94               	goto	l1518
   920  0280                     u260:
   921  0280                     l1508:
   922                           
   923                           ;Principal2.c: 133:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   924  0280  305A               	movlw	90
   925  0281  1283               	bcf	3,5	;RP0=0, select bank0
   926  0282  1303               	bcf	3,6	;RP1=0, select bank0
   927  0283  00C2               	movwf	??_press_Subir+1
   928  0284  309A               	movlw	154
   929  0285  00C1               	movwf	??_press_Subir
   930  0286                     u477:
   931  0286  0BC1               	decfsz	??_press_Subir,f
   932  0287  2A86               	goto	u477
   933  0288  0BC2               	decfsz	??_press_Subir+1,f
   934  0289  2A86               	goto	u477
   935  028A  0000               	nop
   936  028B                     l1510:
   937                           
   938                           ;Principal2.c: 134:                 PORTA = PORTA + 1;
   939  028B  1283               	bcf	3,5	;RP0=0, select bank0
   940  028C  1303               	bcf	3,6	;RP1=0, select bank0
   941  028D  0805               	movf	5,w	;volatile
   942  028E  3E01               	addlw	1
   943  028F  0085               	movwf	5	;volatile
   944  0290                     l1512:
   945                           
   946                           ;Principal2.c: 135:                 banderaBoton = 0;
   947  0290  01FD               	clrf	_banderaBoton
   948  0291                     l1514:
   949                           
   950                           ;Principal2.c: 136:                 banderaUP = 1;
   951  0291  01FC               	clrf	_banderaUP
   952  0292  0AFC               	incf	_banderaUP,f
   953  0293                     l1516:
   954                           
   955                           ;Principal2.c: 137:                 INTCONbits.RBIE = 1;
   956  0293  158B               	bsf	11,3	;volatile
   957  0294                     l1518:
   958                           
   959                           ;Principal2.c: 141:     if (banderaUP == 1){
   960  0294  037C               	decf	_banderaUP,w
   961  0295  1D03               	btfss	3,2
   962  0296  2A98               	goto	u271
   963  0297  2A99               	goto	u270
   964  0298                     u271:
   965  0298  2AAB               	goto	l110
   966  0299                     u270:
   967  0299                     l1520:
   968                           
   969                           ;Principal2.c: 142:         if (PORTBbits.RB0 == 1){
   970  0299  1283               	bcf	3,5	;RP0=0, select bank0
   971  029A  1303               	bcf	3,6	;RP1=0, select bank0
   972  029B  1C06               	btfss	6,0	;volatile
   973  029C  2A9E               	goto	u281
   974  029D  2A9F               	goto	u280
   975  029E                     u281:
   976  029E  2AAB               	goto	l110
   977  029F                     u280:
   978  029F                     l1522:
   979                           
   980                           ;Principal2.c: 143:         _delay((unsigned long)((69)*(4000000/4000.0)));
   981  029F  305A               	movlw	90
   982  02A0  1283               	bcf	3,5	;RP0=0, select bank0
   983  02A1  1303               	bcf	3,6	;RP1=0, select bank0
   984  02A2  00C2               	movwf	??_press_Subir+1
   985  02A3  309A               	movlw	154
   986  02A4  00C1               	movwf	??_press_Subir
   987  02A5                     u487:
   988  02A5  0BC1               	decfsz	??_press_Subir,f
   989  02A6  2AA5               	goto	u487
   990  02A7  0BC2               	decfsz	??_press_Subir+1,f
   991  02A8  2AA5               	goto	u487
   992  02A9  0000               	nop
   993  02AA                     l1524:
   994                           
   995                           ;Principal2.c: 144:         banderaUP = 0;
   996  02AA  01FC               	clrf	_banderaUP
   997  02AB                     l110:
   998  02AB  0008               	return
   999  02AC                     __end_of_press_Subir:
  1000                           
  1001                           	psect	text2
  1002  02AC                     __ptext2:	
  1003 ;; *************** function _press_Bajar *****************
  1004 ;; Defined at:
  1005 ;;		line 151 in file "Principal2.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0
  1021 ;;      Temps:          0       2       0       0       0
  1022 ;;      Totals:         0       2       0       0       0
  1023 ;;Total ram usage:        2 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:    2
  1026 ;; This function calls:
  1027 ;;		Nothing
  1028 ;; This function is called by:
  1029 ;;		_main
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           
  1034                           ;psect for function _press_Bajar
  1035  02AC                     _press_Bajar:
  1036  02AC                     l1526:	
  1037                           ;incstack = 0
  1038                           ; Regs used in _press_Bajar: [wreg+status,2+status,0]
  1039                           
  1040                           
  1041                           ;Principal2.c: 152:     if (banderaBoton == 1){
  1042  02AC  037D               	decf	_banderaBoton,w
  1043  02AD  1D03               	btfss	3,2
  1044  02AE  2AB0               	goto	u291
  1045  02AF  2AB1               	goto	u290
  1046  02B0                     u291:
  1047  02B0  2AD0               	goto	l1542
  1048  02B1                     u290:
  1049  02B1                     l1528:
  1050                           
  1051                           ;Principal2.c: 153:         if (banderaDO == 0){
  1052  02B1  087B               	movf	_banderaDO,w
  1053  02B2  1D03               	btfss	3,2
  1054  02B3  2AB5               	goto	u301
  1055  02B4  2AB6               	goto	u300
  1056  02B5                     u301:
  1057  02B5  2AD0               	goto	l1542
  1058  02B6                     u300:
  1059  02B6                     l1530:
  1060                           
  1061                           ;Principal2.c: 154:             if (PORTBbits.RB2 == 0){
  1062  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1063  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1064  02B8  1906               	btfsc	6,2	;volatile
  1065  02B9  2ABB               	goto	u311
  1066  02BA  2ABC               	goto	u310
  1067  02BB                     u311:
  1068  02BB  2AD0               	goto	l1542
  1069  02BC                     u310:
  1070  02BC                     l1532:
  1071                           
  1072                           ;Principal2.c: 155:                 _delay((unsigned long)((69)*(4000000/4000.0)));
  1073  02BC  305A               	movlw	90
  1074  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1075  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1076  02BF  00C2               	movwf	??_press_Bajar+1
  1077  02C0  309A               	movlw	154
  1078  02C1  00C1               	movwf	??_press_Bajar
  1079  02C2                     u497:
  1080  02C2  0BC1               	decfsz	??_press_Bajar,f
  1081  02C3  2AC2               	goto	u497
  1082  02C4  0BC2               	decfsz	??_press_Bajar+1,f
  1083  02C5  2AC2               	goto	u497
  1084  02C6  0000               	nop
  1085  02C7                     l1534:
  1086                           
  1087                           ;Principal2.c: 156:                 PORTA = PORTA - 1;
  1088  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1089  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1090  02C9  0805               	movf	5,w	;volatile
  1091  02CA  3EFF               	addlw	255
  1092  02CB  0085               	movwf	5	;volatile
  1093  02CC                     l1536:
  1094                           
  1095                           ;Principal2.c: 157:                 banderaBoton = 0;
  1096  02CC  01FD               	clrf	_banderaBoton
  1097  02CD                     l1538:
  1098                           
  1099                           ;Principal2.c: 158:                 banderaDO = 1;
  1100  02CD  01FB               	clrf	_banderaDO
  1101  02CE  0AFB               	incf	_banderaDO,f
  1102  02CF                     l1540:
  1103                           
  1104                           ;Principal2.c: 159:                 INTCONbits.RBIE = 1;
  1105  02CF  158B               	bsf	11,3	;volatile
  1106  02D0                     l1542:
  1107                           
  1108                           ;Principal2.c: 163:     if (banderaDO == 1){
  1109  02D0  037B               	decf	_banderaDO,w
  1110  02D1  1D03               	btfss	3,2
  1111  02D2  2AD4               	goto	u321
  1112  02D3  2AD5               	goto	u320
  1113  02D4                     u321:
  1114  02D4  2AE7               	goto	l118
  1115  02D5                     u320:
  1116  02D5                     l1544:
  1117                           
  1118                           ;Principal2.c: 164:         if (PORTBbits.RB2 == 1){
  1119  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1120  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1121  02D7  1D06               	btfss	6,2	;volatile
  1122  02D8  2ADA               	goto	u331
  1123  02D9  2ADB               	goto	u330
  1124  02DA                     u331:
  1125  02DA  2AE7               	goto	l118
  1126  02DB                     u330:
  1127  02DB                     l1546:
  1128                           
  1129                           ;Principal2.c: 165:         _delay((unsigned long)((69)*(4000000/4000.0)));
  1130  02DB  305A               	movlw	90
  1131  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1132  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  1133  02DE  00C2               	movwf	??_press_Bajar+1
  1134  02DF  309A               	movlw	154
  1135  02E0  00C1               	movwf	??_press_Bajar
  1136  02E1                     u507:
  1137  02E1  0BC1               	decfsz	??_press_Bajar,f
  1138  02E2  2AE1               	goto	u507
  1139  02E3  0BC2               	decfsz	??_press_Bajar+1,f
  1140  02E4  2AE1               	goto	u507
  1141  02E5  0000               	nop
  1142  02E6                     l1548:
  1143                           
  1144                           ;Principal2.c: 166:         banderaDO = 0;
  1145  02E6  01FB               	clrf	_banderaDO
  1146  02E7                     l118:
  1147  02E7  0008               	return
  1148  02E8                     __end_of_press_Bajar:
  1149                           
  1150                           	psect	text3
  1151  035D                     __ptext3:	
  1152 ;; *************** function _config_PUERTOS *****************
  1153 ;; Defined at:
  1154 ;;		line 103 in file "Principal2.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0
  1171 ;;      Totals:         0       0       0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    2
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _config_PUERTOS
  1184  035D                     _config_PUERTOS:
  1185  035D                     l1336:	
  1186                           ;incstack = 0
  1187                           ; Regs used in _config_PUERTOS: [wreg+status,2]
  1188                           
  1189                           
  1190                           ;Principal2.c: 105:     TRISD = 255;
  1191  035D  30FF               	movlw	255
  1192  035E  1683               	bsf	3,5	;RP0=1, select bank1
  1193  035F  1303               	bcf	3,6	;RP1=0, select bank1
  1194  0360  0088               	movwf	8	;volatile
  1195                           
  1196                           ;Principal2.c: 106:     TRISC = 255;
  1197  0361  30FF               	movlw	255
  1198  0362  0087               	movwf	7	;volatile
  1199  0363                     l1338:
  1200                           
  1201                           ;Principal2.c: 107:     TRISA = 0;
  1202  0363  0185               	clrf	5	;volatile
  1203  0364                     l1340:
  1204                           
  1205                           ;Principal2.c: 108:     TRISB = 0b00000101;
  1206  0364  3005               	movlw	5
  1207  0365  0086               	movwf	6	;volatile
  1208                           
  1209                           ;Principal2.c: 109:     TRISE = 0;
  1210  0366  0189               	clrf	9	;volatile
  1211                           
  1212                           ;Principal2.c: 110:     PORTE = 0;
  1213  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0369  0189               	clrf	9	;volatile
  1216                           
  1217                           ;Principal2.c: 111:     PORTA = 0;
  1218  036A  0185               	clrf	5	;volatile
  1219                           
  1220                           ;Principal2.c: 112:     PORTB = 0;
  1221  036B  0186               	clrf	6	;volatile
  1222                           
  1223                           ;Principal2.c: 113:     PORTC = 0;
  1224  036C  0187               	clrf	7	;volatile
  1225                           
  1226                           ;Principal2.c: 114:     PORTD = 0;
  1227  036D  0188               	clrf	8	;volatile
  1228                           
  1229                           ;Principal2.c: 115:     ANSEL = 0;
  1230  036E  1683               	bsf	3,5	;RP0=1, select bank3
  1231  036F  1703               	bsf	3,6	;RP1=1, select bank3
  1232  0370  0188               	clrf	8	;volatile
  1233                           
  1234                           ;Principal2.c: 116:     ANSELH = 0;
  1235  0371  0189               	clrf	9	;volatile
  1236  0372                     l1342:
  1237                           
  1238                           ;Principal2.c: 117:     WPUB = 0b00000101;
  1239  0372  3005               	movlw	5
  1240  0373  1683               	bsf	3,5	;RP0=1, select bank1
  1241  0374  1303               	bcf	3,6	;RP1=0, select bank1
  1242  0375  0095               	movwf	21	;volatile
  1243  0376                     l1344:
  1244                           
  1245                           ;Principal2.c: 118:     OPTION_REGbits.nRBPU = 0;
  1246  0376  1381               	bcf	1,7	;volatile
  1247  0377                     l1346:
  1248                           
  1249                           ;Principal2.c: 122:     IOCB = 0b00000101;;
  1250  0377  3005               	movlw	5
  1251  0378  0096               	movwf	22	;volatile
  1252  0379                     l1348:
  1253                           
  1254                           ;Principal2.c: 123:     INTCONbits.RBIE = 1;
  1255  0379  158B               	bsf	11,3	;volatile
  1256  037A                     l102:
  1257  037A  0008               	return
  1258  037B                     __end_of_config_PUERTOS:
  1259                           
  1260                           	psect	text4
  1261  0114                     __ptext4:	
  1262 ;; *************** function _config2Display *****************
  1263 ;; Defined at:
  1264 ;;		line 8 in file "DISPLAY7.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  FreqOsc         2    0[BANK0 ] unsigned int 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         0       2       0       0       0
  1279 ;;      Locals:         0       0       0       0       0
  1280 ;;      Temps:          0       1       0       0       0
  1281 ;;      Totals:         0       3       0       0       0
  1282 ;;Total ram usage:        3 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    2
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _config2Display
  1294  0114                     _config2Display:
  1295  0114                     l1352:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _config2Display: [wreg-fsr0h+status,2+status,0]
  1298                           
  1299                           
  1300                           ;DISPLAY7.c: 10:      TRISD = 0;
  1301  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1302  0115  1303               	bcf	3,6	;RP1=0, select bank1
  1303  0116  0188               	clrf	8	;volatile
  1304                           
  1305                           ;DISPLAY7.c: 11:      PORTD = 0;
  1306  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0119  0188               	clrf	8	;volatile
  1309  011A                     l1354:
  1310                           
  1311                           ;DISPLAY7.c: 12:      TRISCbits.TRISC2 = 0;
  1312  011A  1683               	bsf	3,5	;RP0=1, select bank1
  1313  011B  1303               	bcf	3,6	;RP1=0, select bank1
  1314  011C  1107               	bcf	7,2	;volatile
  1315  011D                     l1356:
  1316                           
  1317                           ;DISPLAY7.c: 13:      TRISCbits.TRISC0 = 0;
  1318  011D  1007               	bcf	7,0	;volatile
  1319  011E                     l1358:
  1320                           
  1321                           ;DISPLAY7.c: 14:      PORTCbits.RC2 = 0;
  1322  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1323  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0120  1107               	bcf	7,2	;volatile
  1325  0121                     l1360:
  1326                           
  1327                           ;DISPLAY7.c: 15:      PORTCbits.RC0 =0;
  1328  0121  1007               	bcf	7,0	;volatile
  1329                           
  1330                           ;DISPLAY7.c: 19:     switch (FreqOsc){
  1331  0122  2972               	goto	l1384
  1332  0123                     l1362:
  1333                           
  1334                           ;DISPLAY7.c: 22:             OSCCONbits.IRCF = 0b000;
  1335  0123  308F               	movlw	-113
  1336  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1337  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1338  0126  058F               	andwf	15,f	;volatile
  1339                           
  1340                           ;DISPLAY7.c: 23:             break;
  1341  0127  29AA               	goto	l201
  1342  0128                     l1364:
  1343                           
  1344                           ;DISPLAY7.c: 25:             OSCCONbits.IRCF = 0b001;
  1345  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1346  0129  1303               	bcf	3,6	;RP1=0, select bank1
  1347  012A  080F               	movf	15,w	;volatile
  1348  012B  398F               	andlw	-113
  1349  012C  3810               	iorlw	16
  1350  012D  008F               	movwf	15	;volatile
  1351                           
  1352                           ;DISPLAY7.c: 26:             break;
  1353  012E  29AA               	goto	l201
  1354  012F                     l1366:
  1355                           
  1356                           ;DISPLAY7.c: 28:             OSCCONbits.IRCF = 0b010;
  1357  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1358  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1359  0131  080F               	movf	15,w	;volatile
  1360  0132  398F               	andlw	-113
  1361  0133  3820               	iorlw	32
  1362  0134  008F               	movwf	15	;volatile
  1363                           
  1364                           ;DISPLAY7.c: 29:             break;
  1365  0135  29AA               	goto	l201
  1366  0136                     l1368:
  1367                           
  1368                           ;DISPLAY7.c: 31:             OSCCONbits.IRCF = 0b011;
  1369  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1370  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1371  0138  080F               	movf	15,w	;volatile
  1372  0139  398F               	andlw	-113
  1373  013A  3830               	iorlw	48
  1374  013B  008F               	movwf	15	;volatile
  1375                           
  1376                           ;DISPLAY7.c: 32:             break;
  1377  013C  29AA               	goto	l201
  1378  013D                     l1370:
  1379                           
  1380                           ;DISPLAY7.c: 34:             OSCCONbits.IRCF = 0b100;
  1381  013D  1683               	bsf	3,5	;RP0=1, select bank1
  1382  013E  1303               	bcf	3,6	;RP1=0, select bank1
  1383  013F  080F               	movf	15,w	;volatile
  1384  0140  398F               	andlw	-113
  1385  0141  3840               	iorlw	64
  1386  0142  008F               	movwf	15	;volatile
  1387                           
  1388                           ;DISPLAY7.c: 35:             break;
  1389  0143  29AA               	goto	l201
  1390  0144                     l1372:
  1391                           
  1392                           ;DISPLAY7.c: 37:             OSCCONbits.IRCF = 0b101;
  1393  0144  1683               	bsf	3,5	;RP0=1, select bank1
  1394  0145  1303               	bcf	3,6	;RP1=0, select bank1
  1395  0146  080F               	movf	15,w	;volatile
  1396  0147  398F               	andlw	-113
  1397  0148  3850               	iorlw	80
  1398  0149  008F               	movwf	15	;volatile
  1399                           
  1400                           ;DISPLAY7.c: 38:             break;
  1401  014A  29AA               	goto	l201
  1402  014B                     l1374:
  1403                           
  1404                           ;DISPLAY7.c: 40:             OSCCONbits.IRCF = 0b110;
  1405  014B  1683               	bsf	3,5	;RP0=1, select bank1
  1406  014C  1303               	bcf	3,6	;RP1=0, select bank1
  1407  014D  080F               	movf	15,w	;volatile
  1408  014E  398F               	andlw	-113
  1409  014F  3860               	iorlw	96
  1410  0150  008F               	movwf	15	;volatile
  1411                           
  1412                           ;DISPLAY7.c: 41:             OPTION_REGbits.PS = 0b110;
  1413  0151  0801               	movf	1,w	;volatile
  1414  0152  39F8               	andlw	-8
  1415  0153  3806               	iorlw	6
  1416  0154  0081               	movwf	1	;volatile
  1417  0155                     l1376:
  1418                           
  1419                           ;DISPLAY7.c: 42:             valorTMR0 = 177;
  1420  0155  30B1               	movlw	177
  1421  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0158  00C3               	movwf	??_config2Display
  1424  0159  0843               	movf	??_config2Display,w
  1425  015A  00C0               	movwf	_valorTMR0
  1426                           
  1427                           ;DISPLAY7.c: 43:             break;
  1428  015B  29AA               	goto	l201
  1429  015C                     l1378:
  1430                           
  1431                           ;DISPLAY7.c: 45:             OSCCONbits.IRCF = 0b111;
  1432  015C  3070               	movlw	112
  1433  015D  1683               	bsf	3,5	;RP0=1, select bank1
  1434  015E  1303               	bcf	3,6	;RP1=0, select bank1
  1435  015F  048F               	iorwf	15,f	;volatile
  1436                           
  1437                           ;DISPLAY7.c: 46:             OPTION_REGbits.PS = 0b110;
  1438  0160  0801               	movf	1,w	;volatile
  1439  0161  39F8               	andlw	-8
  1440  0162  3806               	iorlw	6
  1441  0163  0081               	movwf	1	;volatile
  1442  0164                     l1380:
  1443                           
  1444                           ;DISPLAY7.c: 47:             valorTMR0 = 98;
  1445  0164  3062               	movlw	98
  1446  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0167  00C3               	movwf	??_config2Display
  1449  0168  0843               	movf	??_config2Display,w
  1450  0169  00C0               	movwf	_valorTMR0
  1451                           
  1452                           ;DISPLAY7.c: 48:             break;
  1453  016A  29AA               	goto	l201
  1454  016B                     l1382:
  1455                           
  1456                           ;DISPLAY7.c: 50:             OSCCONbits.IRCF = 0b110;
  1457  016B  1683               	bsf	3,5	;RP0=1, select bank1
  1458  016C  1303               	bcf	3,6	;RP1=0, select bank1
  1459  016D  080F               	movf	15,w	;volatile
  1460  016E  398F               	andlw	-113
  1461  016F  3860               	iorlw	96
  1462  0170  008F               	movwf	15	;volatile
  1463                           
  1464                           ;DISPLAY7.c: 51:     }
  1465  0171  29AA               	goto	l201
  1466  0172                     l1384:
  1467                           
  1468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  1469                           ; Switch size 1, requested type "simple"
  1470                           ; Number of cases is 6, Range of values is 0 to 31
  1471                           ; switch strategies available:
  1472                           ; Name         Instructions Cycles
  1473                           ; simple_byte           19    10 (average)
  1474                           ; direct_byte          104     8 (fixed)
  1475                           ; jumptable            260     6 (fixed)
  1476                           ;	Chosen strategy is simple_byte
  1477  0172  0842               	movf	config2Display@FreqOsc+1,w
  1478  0173  3A00               	xorlw	0	; case 0
  1479  0174  1903               	skipnz
  1480  0175  2986               	goto	l1874
  1481  0176  3A01               	xorlw	1	; case 1
  1482  0177  1903               	skipnz
  1483  0178  2991               	goto	l1876
  1484  0179  3A02               	xorlw	2	; case 3
  1485  017A  1903               	skipnz
  1486  017B  2996               	goto	l1878
  1487  017C  3A04               	xorlw	4	; case 7
  1488  017D  1903               	skipnz
  1489  017E  299B               	goto	l1880
  1490  017F  3A08               	xorlw	8	; case 15
  1491  0180  1903               	skipnz
  1492  0181  29A0               	goto	l1882
  1493  0182  3A10               	xorlw	16	; case 31
  1494  0183  1903               	skipnz
  1495  0184  29A5               	goto	l1884
  1496  0185  296B               	goto	l1382
  1497  0186                     l1874:
  1498                           
  1499                           ; Switch size 1, requested type "simple"
  1500                           ; Number of cases is 3, Range of values is 31 to 250
  1501                           ; switch strategies available:
  1502                           ; Name         Instructions Cycles
  1503                           ; simple_byte           10     6 (average)
  1504                           ; jumptable            263     9 (fixed)
  1505                           ;	Chosen strategy is simple_byte
  1506  0186  0841               	movf	config2Display@FreqOsc,w
  1507  0187  3A1F               	xorlw	31	; case 31
  1508  0188  1903               	skipnz
  1509  0189  2923               	goto	l1362
  1510  018A  3A62               	xorlw	98	; case 125
  1511  018B  1903               	skipnz
  1512  018C  2928               	goto	l1364
  1513  018D  3A87               	xorlw	135	; case 250
  1514  018E  1903               	skipnz
  1515  018F  292F               	goto	l1366
  1516  0190  296B               	goto	l1382
  1517  0191                     l1876:
  1518                           
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 1, Range of values is 244 to 244
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte            4     3 (average)
  1524                           ; direct_byte           14    11 (fixed)
  1525                           ; jumptable            263     9 (fixed)
  1526                           ;	Chosen strategy is simple_byte
  1527  0191  0841               	movf	config2Display@FreqOsc,w
  1528  0192  3AF4               	xorlw	244	; case 244
  1529  0193  1903               	skipnz
  1530  0194  2936               	goto	l1368
  1531  0195  296B               	goto	l1382
  1532  0196                     l1878:
  1533                           
  1534                           ; Switch size 1, requested type "simple"
  1535                           ; Number of cases is 1, Range of values is 232 to 232
  1536                           ; switch strategies available:
  1537                           ; Name         Instructions Cycles
  1538                           ; simple_byte            4     3 (average)
  1539                           ; direct_byte           14    11 (fixed)
  1540                           ; jumptable            263     9 (fixed)
  1541                           ;	Chosen strategy is simple_byte
  1542  0196  0841               	movf	config2Display@FreqOsc,w
  1543  0197  3AE8               	xorlw	232	; case 232
  1544  0198  1903               	skipnz
  1545  0199  293D               	goto	l1370
  1546  019A  296B               	goto	l1382
  1547  019B                     l1880:
  1548                           
  1549                           ; Switch size 1, requested type "simple"
  1550                           ; Number of cases is 1, Range of values is 208 to 208
  1551                           ; switch strategies available:
  1552                           ; Name         Instructions Cycles
  1553                           ; simple_byte            4     3 (average)
  1554                           ; direct_byte           14    11 (fixed)
  1555                           ; jumptable            263     9 (fixed)
  1556                           ;	Chosen strategy is simple_byte
  1557  019B  0841               	movf	config2Display@FreqOsc,w
  1558  019C  3AD0               	xorlw	208	; case 208
  1559  019D  1903               	skipnz
  1560  019E  2944               	goto	l1372
  1561  019F  296B               	goto	l1382
  1562  01A0                     l1882:
  1563                           
  1564                           ; Switch size 1, requested type "simple"
  1565                           ; Number of cases is 1, Range of values is 160 to 160
  1566                           ; switch strategies available:
  1567                           ; Name         Instructions Cycles
  1568                           ; simple_byte            4     3 (average)
  1569                           ; direct_byte           14    11 (fixed)
  1570                           ; jumptable            263     9 (fixed)
  1571                           ;	Chosen strategy is simple_byte
  1572  01A0  0841               	movf	config2Display@FreqOsc,w
  1573  01A1  3AA0               	xorlw	160	; case 160
  1574  01A2  1903               	skipnz
  1575  01A3  294B               	goto	l1374
  1576  01A4  296B               	goto	l1382
  1577  01A5                     l1884:
  1578                           
  1579                           ; Switch size 1, requested type "simple"
  1580                           ; Number of cases is 1, Range of values is 64 to 64
  1581                           ; switch strategies available:
  1582                           ; Name         Instructions Cycles
  1583                           ; simple_byte            4     3 (average)
  1584                           ; direct_byte           14    11 (fixed)
  1585                           ; jumptable            263     9 (fixed)
  1586                           ;	Chosen strategy is simple_byte
  1587  01A5  0841               	movf	config2Display@FreqOsc,w
  1588  01A6  3A40               	xorlw	64	; case 64
  1589  01A7  1903               	skipnz
  1590  01A8  295C               	goto	l1378
  1591  01A9  296B               	goto	l1382
  1592  01AA                     l201:
  1593                           
  1594                           ;DISPLAY7.c: 53:     OPTION_REGbits.T0CS = 0;
  1595  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1596  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  1597  01AC  1281               	bcf	1,5	;volatile
  1598                           
  1599                           ;DISPLAY7.c: 54:     OPTION_REGbits.T0SE = 0;
  1600  01AD  1201               	bcf	1,4	;volatile
  1601                           
  1602                           ;DISPLAY7.c: 55:     OPTION_REGbits.PSA = 0;
  1603  01AE  1181               	bcf	1,3	;volatile
  1604  01AF                     l1386:
  1605                           
  1606                           ;DISPLAY7.c: 56:     TMR0 = valorTMR0;
  1607  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1608  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1609  01B1  0840               	movf	_valorTMR0,w
  1610  01B2  0081               	movwf	1	;volatile
  1611  01B3                     l1388:
  1612                           
  1613                           ;DISPLAY7.c: 57:     INTCONbits.T0IF = 0;
  1614  01B3  110B               	bcf	11,2	;volatile
  1615  01B4                     l1390:
  1616                           
  1617                           ;DISPLAY7.c: 58:     INTCONbits.T0IE = 1;
  1618  01B4  168B               	bsf	11,5	;volatile
  1619  01B5                     l210:
  1620  01B5  0008               	return
  1621  01B6                     __end_of_config2Display:
  1622                           
  1623                           	psect	text5
  1624  0318                     __ptext5:	
  1625 ;; *************** function _AnalogRead_8 *****************
  1626 ;; Defined at:
  1627 ;;		line 89 in file "ADC.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  just            1    wreg     unsigned char 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  just            1    2[BANK0 ] unsigned char 
  1632 ;;  conversion      1    3[BANK0 ] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      unsigned char 
  1635 ;; Registers used:
  1636 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1642 ;;      Params:         0       0       0       0       0
  1643 ;;      Locals:         0       2       0       0       0
  1644 ;;      Temps:          0       2       0       0       0
  1645 ;;      Totals:         0       4       0       0       0
  1646 ;;Total ram usage:        4 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    2
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function _AnalogRead_8
  1658  0318                     _AnalogRead_8:
  1659                           
  1660                           ;incstack = 0
  1661                           ; Regs used in _AnalogRead_8: [wreg-fsr0h+status,2+status,0]
  1662                           ;AnalogRead_8@just stored from wreg
  1663  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1665  031A  00C3               	movwf	AnalogRead_8@just
  1666  031B                     l1474:
  1667                           
  1668                           ;ADC.c: 91:     switch (just){
  1669  031B  2B2A               	goto	l1482
  1670  031C                     l1476:
  1671                           
  1672                           ;ADC.c: 93:             conversion = ADRESH;
  1673  031C  081E               	movf	30,w	;volatile
  1674  031D  00C1               	movwf	??_AnalogRead_8
  1675  031E  0841               	movf	??_AnalogRead_8,w
  1676  031F  00C4               	movwf	AnalogRead_8@conversion
  1677                           
  1678                           ;ADC.c: 94:             break;
  1679  0320  2B3A               	goto	l1484
  1680  0321                     l1478:
  1681                           
  1682                           ;ADC.c: 96:             conversion = ADRESL;
  1683  0321  1683               	bsf	3,5	;RP0=1, select bank1
  1684  0322  1303               	bcf	3,6	;RP1=0, select bank1
  1685  0323  081E               	movf	30,w	;volatile
  1686  0324  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0325  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0326  00C1               	movwf	??_AnalogRead_8
  1689  0327  0841               	movf	??_AnalogRead_8,w
  1690  0328  00C4               	movwf	AnalogRead_8@conversion
  1691                           
  1692                           ;ADC.c: 97:             break;
  1693  0329  2B3A               	goto	l1484
  1694  032A                     l1482:
  1695  032A  0843               	movf	AnalogRead_8@just,w
  1696  032B  00C1               	movwf	??_AnalogRead_8
  1697  032C  01C2               	clrf	??_AnalogRead_8+1
  1698                           
  1699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1700                           ; Switch size 1, requested type "simple"
  1701                           ; Number of cases is 1, Range of values is 0 to 0
  1702                           ; switch strategies available:
  1703                           ; Name         Instructions Cycles
  1704                           ; simple_byte            4     3 (average)
  1705                           ; direct_byte           11     8 (fixed)
  1706                           ; jumptable            260     6 (fixed)
  1707                           ;	Chosen strategy is simple_byte
  1708  032D  0842               	movf	??_AnalogRead_8+1,w
  1709  032E  3A00               	xorlw	0	; case 0
  1710  032F  1903               	skipnz
  1711  0330  2B32               	goto	l1886
  1712  0331  2B1C               	goto	l1476
  1713  0332                     l1886:
  1714                           
  1715                           ; Switch size 1, requested type "simple"
  1716                           ; Number of cases is 2, Range of values is 72 to 76
  1717                           ; switch strategies available:
  1718                           ; Name         Instructions Cycles
  1719                           ; simple_byte            7     4 (average)
  1720                           ; direct_byte           26    11 (fixed)
  1721                           ; jumptable            263     9 (fixed)
  1722                           ;	Chosen strategy is simple_byte
  1723  0332  0841               	movf	??_AnalogRead_8,w
  1724  0333  3A48               	xorlw	72	; case 72
  1725  0334  1903               	skipnz
  1726  0335  2B1C               	goto	l1476
  1727  0336  3A04               	xorlw	4	; case 76
  1728  0337  1903               	skipnz
  1729  0338  2B21               	goto	l1478
  1730  0339  2B1C               	goto	l1476
  1731  033A                     l1484:
  1732                           
  1733                           ;ADC.c: 101:     return (conversion);
  1734  033A  0844               	movf	AnalogRead_8@conversion,w
  1735  033B                     l173:
  1736  033B  0008               	return
  1737  033C                     __end_of_AnalogRead_8:
  1738                           
  1739                           	psect	text6
  1740  002A                     __ptext6:	
  1741 ;; *************** function _ADConfig *****************
  1742 ;; Defined at:
  1743 ;;		line 10 in file "ADC.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  oscFreq         1    wreg     unsigned char 
  1746 ;;  canal           1    0[BANK0 ] unsigned char 
  1747 ;;  justificado     1    1[BANK0 ] unsigned char 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  oscFreq         1    4[BANK0 ] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         0       2       0       0       0
  1760 ;;      Locals:         0       1       0       0       0
  1761 ;;      Temps:          0       2       0       0       0
  1762 ;;      Totals:         0       5       0       0       0
  1763 ;;Total ram usage:        5 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    2
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function _ADConfig
  1775  002A                     _ADConfig:
  1776                           
  1777                           ;incstack = 0
  1778                           ; Regs used in _ADConfig: [wreg-fsr0h+status,2+status,0]
  1779                           ;ADConfig@oscFreq stored from wreg
  1780  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1781  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1782  002C  00C5               	movwf	ADConfig@oscFreq
  1783  002D                     l1416:
  1784                           
  1785                           ;ADC.c: 11:     switch(oscFreq){
  1786  002D  2843               	goto	l1428
  1787  002E                     l1418:
  1788                           
  1789                           ;ADC.c: 13:             ADCON0bits.ADCS = 0b00;
  1790  002E  303F               	movlw	-193
  1791  002F  059F               	andwf	31,f	;volatile
  1792                           
  1793                           ;ADC.c: 14:             break;
  1794  0030  2865               	goto	l1430
  1795  0031                     l1420:
  1796                           
  1797                           ;ADC.c: 16:             ADCON0bits.ADCS = 0b01;
  1798  0031  081F               	movf	31,w	;volatile
  1799  0032  393F               	andlw	-193
  1800  0033  3840               	iorlw	64
  1801  0034  009F               	movwf	31	;volatile
  1802                           
  1803                           ;ADC.c: 17:             break;
  1804  0035  2865               	goto	l1430
  1805  0036                     l1422:
  1806                           
  1807                           ;ADC.c: 19:             ADCON0bits.ADCS = 0b10;
  1808  0036  081F               	movf	31,w	;volatile
  1809  0037  393F               	andlw	-193
  1810  0038  3880               	iorlw	128
  1811  0039  009F               	movwf	31	;volatile
  1812                           
  1813                           ;ADC.c: 20:             break;
  1814  003A  2865               	goto	l1430
  1815  003B                     l1424:
  1816                           
  1817                           ;ADC.c: 22:             ADCON0bits.ADCS = 0b11;
  1818  003B  30C0               	movlw	192
  1819  003C  049F               	iorwf	31,f	;volatile
  1820                           
  1821                           ;ADC.c: 23:             break;
  1822  003D  2865               	goto	l1430
  1823  003E                     l1426:
  1824                           
  1825                           ;ADC.c: 25:             ADCON0bits.ADCS = 0b01;
  1826  003E  081F               	movf	31,w	;volatile
  1827  003F  393F               	andlw	-193
  1828  0040  3840               	iorlw	64
  1829  0041  009F               	movwf	31	;volatile
  1830                           
  1831                           ;ADC.c: 26:     }
  1832  0042  2865               	goto	l1430
  1833  0043                     l1428:
  1834  0043  0845               	movf	ADConfig@oscFreq,w
  1835  0044  00C3               	movwf	??_ADConfig
  1836  0045  01C4               	clrf	??_ADConfig+1
  1837                           
  1838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1839                           ; Switch size 1, requested type "simple"
  1840                           ; Number of cases is 1, Range of values is 0 to 0
  1841                           ; switch strategies available:
  1842                           ; Name         Instructions Cycles
  1843                           ; simple_byte            4     3 (average)
  1844                           ; direct_byte           11     8 (fixed)
  1845                           ; jumptable            260     6 (fixed)
  1846                           ;	Chosen strategy is simple_byte
  1847  0046  0844               	movf	??_ADConfig+1,w
  1848  0047  3A00               	xorlw	0	; case 0
  1849  0048  1903               	skipnz
  1850  0049  284B               	goto	l1888
  1851  004A  283E               	goto	l1426
  1852  004B                     l1888:
  1853                           
  1854                           ; Switch size 1, requested type "simple"
  1855                           ; Number of cases is 4, Range of values is 1 to 20
  1856                           ; switch strategies available:
  1857                           ; Name         Instructions Cycles
  1858                           ; simple_byte           13     7 (average)
  1859                           ; direct_byte           71    11 (fixed)
  1860                           ; jumptable            263     9 (fixed)
  1861                           ;	Chosen strategy is simple_byte
  1862  004B  0843               	movf	??_ADConfig,w
  1863  004C  3A01               	xorlw	1	; case 1
  1864  004D  1903               	skipnz
  1865  004E  282E               	goto	l1418
  1866  004F  3A05               	xorlw	5	; case 4
  1867  0050  1903               	skipnz
  1868  0051  2831               	goto	l1420
  1869  0052  3A0C               	xorlw	12	; case 8
  1870  0053  1903               	skipnz
  1871  0054  2836               	goto	l1422
  1872  0055  3A1C               	xorlw	28	; case 20
  1873  0056  1903               	skipnz
  1874  0057  283B               	goto	l1424
  1875  0058  283E               	goto	l1426
  1876  0059                     l151:	
  1877                           ;ADC.c: 28:         case 'H':
  1878                           
  1879                           
  1880                           ;ADC.c: 29:             ADCON1bits.ADFM = 0;
  1881  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1882  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1883  005B  139F               	bcf	31,7	;volatile
  1884                           
  1885                           ;ADC.c: 30:             break;
  1886  005C  28DB               	goto	l1450
  1887  005D                     l153:	
  1888                           ;ADC.c: 31:         case 'L':
  1889                           
  1890                           
  1891                           ;ADC.c: 32:             ADCON1bits.ADFM = 1;
  1892  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1893  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1894  005F  179F               	bsf	31,7	;volatile
  1895                           
  1896                           ;ADC.c: 33:             break;
  1897  0060  28DB               	goto	l1450
  1898  0061                     l154:	
  1899                           ;ADC.c: 34:         default:
  1900                           
  1901                           
  1902                           ;ADC.c: 35:             ADCON1bits.ADFM = 0;
  1903  0061  1683               	bsf	3,5	;RP0=1, select bank1
  1904  0062  1303               	bcf	3,6	;RP1=0, select bank1
  1905  0063  139F               	bcf	31,7	;volatile
  1906                           
  1907                           ;ADC.c: 36:     }
  1908  0064  28DB               	goto	l1450
  1909  0065                     l1430:
  1910  0065  0842               	movf	ADConfig@justificado,w
  1911  0066  00C3               	movwf	??_ADConfig
  1912  0067  01C4               	clrf	??_ADConfig+1
  1913                           
  1914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1915                           ; Switch size 1, requested type "simple"
  1916                           ; Number of cases is 1, Range of values is 0 to 0
  1917                           ; switch strategies available:
  1918                           ; Name         Instructions Cycles
  1919                           ; simple_byte            4     3 (average)
  1920                           ; direct_byte           11     8 (fixed)
  1921                           ; jumptable            260     6 (fixed)
  1922                           ;	Chosen strategy is simple_byte
  1923  0068  0844               	movf	??_ADConfig+1,w
  1924  0069  3A00               	xorlw	0	; case 0
  1925  006A  1903               	skipnz
  1926  006B  286D               	goto	l1890
  1927  006C  2861               	goto	l154
  1928  006D                     l1890:
  1929                           
  1930                           ; Switch size 1, requested type "simple"
  1931                           ; Number of cases is 2, Range of values is 72 to 76
  1932                           ; switch strategies available:
  1933                           ; Name         Instructions Cycles
  1934                           ; simple_byte            7     4 (average)
  1935                           ; direct_byte           26    11 (fixed)
  1936                           ; jumptable            263     9 (fixed)
  1937                           ;	Chosen strategy is simple_byte
  1938  006D  0843               	movf	??_ADConfig,w
  1939  006E  3A48               	xorlw	72	; case 72
  1940  006F  1903               	skipnz
  1941  0070  2859               	goto	l151
  1942  0071  3A04               	xorlw	4	; case 76
  1943  0072  1903               	skipnz
  1944  0073  285D               	goto	l153
  1945  0074  2861               	goto	l154
  1946  0075                     l156:	
  1947                           ;ADC.c: 38:         case 0:
  1948                           
  1949                           
  1950                           ;ADC.c: 39:             TRISAbits.TRISA0 = 1;
  1951  0075  1683               	bsf	3,5	;RP0=1, select bank1
  1952  0076  1303               	bcf	3,6	;RP1=0, select bank1
  1953  0077  1405               	bsf	5,0	;volatile
  1954                           
  1955                           ;ADC.c: 40:             ANSELbits.ANS0 = 1;
  1956  0078  1683               	bsf	3,5	;RP0=1, select bank3
  1957  0079  1703               	bsf	3,6	;RP1=1, select bank3
  1958  007A  1408               	bsf	8,0	;volatile
  1959  007B                     l1432:
  1960                           
  1961                           ;ADC.c: 41:             ADCON0bits.CHS = 0;
  1962  007B  30C3               	movlw	-61
  1963  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1964  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1965  007E  059F               	andwf	31,f	;volatile
  1966                           
  1967                           ;ADC.c: 42:             break;
  1968  007F  28FF               	goto	l157
  1969  0080                     l158:	
  1970                           ;ADC.c: 43:         case 1:
  1971                           
  1972                           
  1973                           ;ADC.c: 44:             TRISAbits.TRISA1 = 1;
  1974  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1975  0081  1303               	bcf	3,6	;RP1=0, select bank1
  1976  0082  1485               	bsf	5,1	;volatile
  1977                           
  1978                           ;ADC.c: 45:             ANSELbits.ANS1 = 1;
  1979  0083  1683               	bsf	3,5	;RP0=1, select bank3
  1980  0084  1703               	bsf	3,6	;RP1=1, select bank3
  1981  0085  1488               	bsf	8,1	;volatile
  1982  0086                     l1434:
  1983                           
  1984                           ;ADC.c: 46:             ADCON0bits.CHS = 1;
  1985  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0088  081F               	movf	31,w	;volatile
  1988  0089  39C3               	andlw	-61
  1989  008A  3804               	iorlw	4
  1990  008B  009F               	movwf	31	;volatile
  1991                           
  1992                           ;ADC.c: 47:             break;
  1993  008C  28FF               	goto	l157
  1994  008D                     l159:	
  1995                           ;ADC.c: 48:         case 2:
  1996                           
  1997                           
  1998                           ;ADC.c: 49:             TRISAbits.TRISA2 = 1;
  1999  008D  1683               	bsf	3,5	;RP0=1, select bank1
  2000  008E  1303               	bcf	3,6	;RP1=0, select bank1
  2001  008F  1505               	bsf	5,2	;volatile
  2002                           
  2003                           ;ADC.c: 50:             ANSELbits.ANS2 = 1;
  2004  0090  1683               	bsf	3,5	;RP0=1, select bank3
  2005  0091  1703               	bsf	3,6	;RP1=1, select bank3
  2006  0092  1508               	bsf	8,2	;volatile
  2007  0093                     l1436:
  2008                           
  2009                           ;ADC.c: 51:             ADCON0bits.CHS = 2;
  2010  0093  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0094  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0095  081F               	movf	31,w	;volatile
  2013  0096  39C3               	andlw	-61
  2014  0097  3808               	iorlw	8
  2015  0098  009F               	movwf	31	;volatile
  2016                           
  2017                           ;ADC.c: 52:             break;
  2018  0099  28FF               	goto	l157
  2019  009A                     l160:	
  2020                           ;ADC.c: 53:         case 3:
  2021                           
  2022                           
  2023                           ;ADC.c: 54:             TRISAbits.TRISA3 = 1;
  2024  009A  1683               	bsf	3,5	;RP0=1, select bank1
  2025  009B  1303               	bcf	3,6	;RP1=0, select bank1
  2026  009C  1585               	bsf	5,3	;volatile
  2027                           
  2028                           ;ADC.c: 55:             ANSELbits.ANS3 = 1;
  2029  009D  1683               	bsf	3,5	;RP0=1, select bank3
  2030  009E  1703               	bsf	3,6	;RP1=1, select bank3
  2031  009F  1588               	bsf	8,3	;volatile
  2032  00A0                     l1438:
  2033                           
  2034                           ;ADC.c: 56:             ADCON0bits.CHS = 3;
  2035  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  2036  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  2037  00A2  081F               	movf	31,w	;volatile
  2038  00A3  39C3               	andlw	-61
  2039  00A4  380C               	iorlw	12
  2040  00A5  009F               	movwf	31	;volatile
  2041                           
  2042                           ;ADC.c: 57:             break;
  2043  00A6  28FF               	goto	l157
  2044  00A7                     l161:	
  2045                           ;ADC.c: 58:         case 4:
  2046                           
  2047                           
  2048                           ;ADC.c: 59:             TRISAbits.TRISA5 = 1;
  2049  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  2050  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  2051  00A9  1685               	bsf	5,5	;volatile
  2052                           
  2053                           ;ADC.c: 60:             ANSELbits.ANS4 = 1;
  2054  00AA  1683               	bsf	3,5	;RP0=1, select bank3
  2055  00AB  1703               	bsf	3,6	;RP1=1, select bank3
  2056  00AC  1608               	bsf	8,4	;volatile
  2057  00AD                     l1440:
  2058                           
  2059                           ;ADC.c: 61:             ADCON0bits.CHS = 3;
  2060  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  2061  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  2062  00AF  081F               	movf	31,w	;volatile
  2063  00B0  39C3               	andlw	-61
  2064  00B1  380C               	iorlw	12
  2065  00B2  009F               	movwf	31	;volatile
  2066                           
  2067                           ;ADC.c: 62:             break;
  2068  00B3  28FF               	goto	l157
  2069  00B4                     l162:	
  2070                           ;ADC.c: 63:         case 5:
  2071                           
  2072                           
  2073                           ;ADC.c: 64:             TRISEbits.TRISE0 = 1;
  2074  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  2075  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  2076  00B6  1409               	bsf	9,0	;volatile
  2077                           
  2078                           ;ADC.c: 65:             ANSELbits.ANS5 = 1;
  2079  00B7  1683               	bsf	3,5	;RP0=1, select bank3
  2080  00B8  1703               	bsf	3,6	;RP1=1, select bank3
  2081  00B9  1688               	bsf	8,5	;volatile
  2082  00BA                     l1442:
  2083                           
  2084                           ;ADC.c: 66:             ADCON0bits.CHS = 5;
  2085  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  2086  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  2087  00BC  081F               	movf	31,w	;volatile
  2088  00BD  39C3               	andlw	-61
  2089  00BE  3814               	iorlw	20
  2090  00BF  009F               	movwf	31	;volatile
  2091                           
  2092                           ;ADC.c: 67:             break;
  2093  00C0  28FF               	goto	l157
  2094  00C1                     l163:	
  2095                           ;ADC.c: 68:         case 6:
  2096                           
  2097                           
  2098                           ;ADC.c: 69:             TRISEbits.TRISE1 = 1;
  2099  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  2100  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  2101  00C3  1489               	bsf	9,1	;volatile
  2102                           
  2103                           ;ADC.c: 70:             ANSELbits.ANS6 = 1;
  2104  00C4  1683               	bsf	3,5	;RP0=1, select bank3
  2105  00C5  1703               	bsf	3,6	;RP1=1, select bank3
  2106  00C6  1708               	bsf	8,6	;volatile
  2107  00C7                     l1444:
  2108                           
  2109                           ;ADC.c: 71:             ADCON0bits.CHS = 6;
  2110  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2111  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2112  00C9  081F               	movf	31,w	;volatile
  2113  00CA  39C3               	andlw	-61
  2114  00CB  3818               	iorlw	24
  2115  00CC  009F               	movwf	31	;volatile
  2116                           
  2117                           ;ADC.c: 72:             break;
  2118  00CD  28FF               	goto	l157
  2119  00CE                     l164:	
  2120                           ;ADC.c: 73:         case 7:
  2121                           
  2122                           
  2123                           ;ADC.c: 74:             TRISEbits.TRISE2 = 1;
  2124  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  2125  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  2126  00D0  1509               	bsf	9,2	;volatile
  2127                           
  2128                           ;ADC.c: 75:             ANSELbits.ANS7 = 1;
  2129  00D1  1683               	bsf	3,5	;RP0=1, select bank3
  2130  00D2  1703               	bsf	3,6	;RP1=1, select bank3
  2131  00D3  1788               	bsf	8,7	;volatile
  2132  00D4                     l1446:
  2133                           
  2134                           ;ADC.c: 76:             ADCON0bits.CHS = 7;
  2135  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  2136  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  2137  00D6  081F               	movf	31,w	;volatile
  2138  00D7  39C3               	andlw	-61
  2139  00D8  381C               	iorlw	28
  2140  00D9  009F               	movwf	31	;volatile
  2141                           
  2142                           ;ADC.c: 77:             break;
  2143  00DA  28FF               	goto	l157
  2144  00DB                     l1450:
  2145  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  2146  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  2147  00DD  0841               	movf	ADConfig@canal,w
  2148  00DE  00C3               	movwf	??_ADConfig
  2149  00DF  01C4               	clrf	??_ADConfig+1
  2150                           
  2151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2152                           ; Switch size 1, requested type "simple"
  2153                           ; Number of cases is 1, Range of values is 0 to 0
  2154                           ; switch strategies available:
  2155                           ; Name         Instructions Cycles
  2156                           ; simple_byte            4     3 (average)
  2157                           ; direct_byte           11     8 (fixed)
  2158                           ; jumptable            260     6 (fixed)
  2159                           ;	Chosen strategy is simple_byte
  2160  00E0  0844               	movf	??_ADConfig+1,w
  2161  00E1  3A00               	xorlw	0	; case 0
  2162  00E2  1903               	skipnz
  2163  00E3  28E5               	goto	l1892
  2164  00E4  28FF               	goto	l157
  2165  00E5                     l1892:
  2166                           
  2167                           ; Switch size 1, requested type "simple"
  2168                           ; Number of cases is 8, Range of values is 0 to 7
  2169                           ; switch strategies available:
  2170                           ; Name         Instructions Cycles
  2171                           ; simple_byte           25    13 (average)
  2172                           ; direct_byte           32     8 (fixed)
  2173                           ; jumptable            260     6 (fixed)
  2174                           ;	Chosen strategy is simple_byte
  2175  00E5  0843               	movf	??_ADConfig,w
  2176  00E6  3A00               	xorlw	0	; case 0
  2177  00E7  1903               	skipnz
  2178  00E8  2875               	goto	l156
  2179  00E9  3A01               	xorlw	1	; case 1
  2180  00EA  1903               	skipnz
  2181  00EB  2880               	goto	l158
  2182  00EC  3A03               	xorlw	3	; case 2
  2183  00ED  1903               	skipnz
  2184  00EE  288D               	goto	l159
  2185  00EF  3A01               	xorlw	1	; case 3
  2186  00F0  1903               	skipnz
  2187  00F1  289A               	goto	l160
  2188  00F2  3A07               	xorlw	7	; case 4
  2189  00F3  1903               	skipnz
  2190  00F4  28A7               	goto	l161
  2191  00F5  3A01               	xorlw	1	; case 5
  2192  00F6  1903               	skipnz
  2193  00F7  28B4               	goto	l162
  2194  00F8  3A03               	xorlw	3	; case 6
  2195  00F9  1903               	skipnz
  2196  00FA  28C1               	goto	l163
  2197  00FB  3A01               	xorlw	1	; case 7
  2198  00FC  1903               	skipnz
  2199  00FD  28CE               	goto	l164
  2200  00FE  28FF               	goto	l157
  2201  00FF                     l157:
  2202                           
  2203                           ;ADC.c: 81:     ADCON0bits.ADON = 1;
  2204  00FF  141F               	bsf	31,0	;volatile
  2205                           
  2206                           ;ADC.c: 82:     PIR1bits.ADIF = 0;
  2207  0100  130C               	bcf	12,6	;volatile
  2208                           
  2209                           ;ADC.c: 83:     PIE1bits.ADIE = 1;
  2210  0101  1683               	bsf	3,5	;RP0=1, select bank1
  2211  0102  1303               	bcf	3,6	;RP1=0, select bank1
  2212  0103  170C               	bsf	12,6	;volatile
  2213                           
  2214                           ;ADC.c: 84:     INTCONbits.PEIE = 1;
  2215  0104  170B               	bsf	11,6	;volatile
  2216  0105                     l1452:
  2217                           
  2218                           ;ADC.c: 85:     _delay((unsigned long)((30)*(4000000/4000.0)));
  2219  0105  3027               	movlw	39
  2220  0106  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0107  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0108  00C4               	movwf	??_ADConfig+1
  2223  0109  30F4               	movlw	244
  2224  010A  00C3               	movwf	??_ADConfig
  2225  010B                     u517:
  2226  010B  0BC3               	decfsz	??_ADConfig,f
  2227  010C  290B               	goto	u517
  2228  010D  0BC4               	decfsz	??_ADConfig+1,f
  2229  010E  290B               	goto	u517
  2230  010F  0000               	nop
  2231  0110                     l1454:
  2232                           
  2233                           ;ADC.c: 86:     ADCON0bits.GO_nDONE = 1;
  2234  0110  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0111  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0112  149F               	bsf	31,1	;volatile
  2237  0113                     l165:
  2238  0113  0008               	return
  2239  0114                     __end_of_ADConfig:
  2240                           
  2241                           	psect	text7
  2242  037B                     __ptext7:	
  2243 ;; *************** function _ADCinit *****************
  2244 ;; Defined at:
  2245 ;;		line 104 in file "ADC.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         0       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0
  2261 ;;      Temps:          0       2       0       0       0
  2262 ;;      Totals:         0       2       0       0       0
  2263 ;;Total ram usage:        2 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    2
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function _ADCinit
  2275  037B                     _ADCinit:
  2276  037B                     l1494:	
  2277                           ;incstack = 0
  2278                           ; Regs used in _ADCinit: [wreg]
  2279                           
  2280                           
  2281                           ;ADC.c: 105:     PIR1bits.ADIF = 0;
  2282  037B  1283               	bcf	3,5	;RP0=0, select bank0
  2283  037C  1303               	bcf	3,6	;RP1=0, select bank0
  2284  037D  130C               	bcf	12,6	;volatile
  2285                           
  2286                           ;ADC.c: 106:     PIE1bits.ADIE = 1;
  2287  037E  1683               	bsf	3,5	;RP0=1, select bank1
  2288  037F  1303               	bcf	3,6	;RP1=0, select bank1
  2289  0380  170C               	bsf	12,6	;volatile
  2290  0381                     l1496:
  2291                           
  2292                           ;ADC.c: 107:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2293  0381  301A               	movlw	26
  2294  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0384  00C2               	movwf	??_ADCinit+1
  2297  0385  30F7               	movlw	247
  2298  0386  00C1               	movwf	??_ADCinit
  2299  0387                     u527:
  2300  0387  0BC1               	decfsz	??_ADCinit,f
  2301  0388  2B87               	goto	u527
  2302  0389  0BC2               	decfsz	??_ADCinit+1,f
  2303  038A  2B87               	goto	u527
  2304  038B  2B8C               	nop2
  2305  038C                     l1498:
  2306                           
  2307                           ;ADC.c: 108:     ADCON0bits.GO_nDONE = 1;
  2308  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2309  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2310  038E  149F               	bsf	31,1	;volatile
  2311  038F                     l176:
  2312  038F  0008               	return
  2313  0390                     __end_of_ADCinit:
  2314                           
  2315                           	psect	text8
  2316  022C                     __ptext8:	
  2317 ;; *************** function _ISR *****************
  2318 ;; Defined at:
  2319 ;;		line 44 in file "Principal2.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2333 ;;      Params:         0       0       0       0       0
  2334 ;;      Locals:         0       0       0       0       0
  2335 ;;      Temps:          5       0       0       0       0
  2336 ;;      Totals:         5       0       0       0       0
  2337 ;;Total ram usage:        5 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    1
  2340 ;; This function calls:
  2341 ;;		_cambioDisplay
  2342 ;; This function is called by:
  2343 ;;		Interrupt level 1
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           
  2348                           ;psect for function _ISR
  2349  022C                     _ISR:
  2350  022C                     i1l1550:
  2351                           
  2352                           ;Principal2.c: 46:     if (PIR1bits.ADIF && PIE1bits.ADIE){
  2353  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2354  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2355  022E  1F0C               	btfss	12,6	;volatile
  2356  022F  2A31               	goto	u34_21
  2357  0230  2A32               	goto	u34_20
  2358  0231                     u34_21:
  2359  0231  2A3D               	goto	i1l79
  2360  0232                     u34_20:
  2361  0232                     i1l1552:
  2362  0232  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0233  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0234  1F0C               	btfss	12,6	;volatile
  2365  0235  2A37               	goto	u35_21
  2366  0236  2A38               	goto	u35_20
  2367  0237                     u35_21:
  2368  0237  2A3D               	goto	i1l79
  2369  0238                     u35_20:
  2370  0238                     i1l1554:
  2371                           
  2372                           ;Principal2.c: 47:         PIE1bits.ADIE = 0;
  2373  0238  130C               	bcf	12,6	;volatile
  2374                           
  2375                           ;Principal2.c: 48:         banderaADC = 1;
  2376  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2377  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2378  023B  01CD               	clrf	_banderaADC
  2379  023C  0ACD               	incf	_banderaADC,f
  2380  023D                     i1l79:	
  2381                           ;Principal2.c: 49:     }
  2382                           
  2383                           
  2384                           ;Principal2.c: 51:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  2385  023D  1C0B               	btfss	11,0	;volatile
  2386  023E  2A40               	goto	u36_21
  2387  023F  2A41               	goto	u36_20
  2388  0240                     u36_21:
  2389  0240  2A4E               	goto	i1l80
  2390  0241                     u36_20:
  2391  0241                     i1l1556:
  2392  0241  1D8B               	btfss	11,3	;volatile
  2393  0242  2A44               	goto	u37_21
  2394  0243  2A45               	goto	u37_20
  2395  0244                     u37_21:
  2396  0244  2A4E               	goto	i1l80
  2397  0245                     u37_20:
  2398  0245                     i1l1558:
  2399                           
  2400                           ;Principal2.c: 52:         INTCONbits.RBIF = 0;
  2401  0245  100B               	bcf	11,0	;volatile
  2402  0246                     i1l1560:
  2403                           
  2404                           ;Principal2.c: 53:         if (banderaBoton == 0){
  2405  0246  087D               	movf	_banderaBoton,w
  2406  0247  1D03               	btfss	3,2
  2407  0248  2A4A               	goto	u38_21
  2408  0249  2A4B               	goto	u38_20
  2409  024A                     u38_21:
  2410  024A  2A4E               	goto	i1l80
  2411  024B                     u38_20:
  2412  024B                     i1l1562:
  2413                           
  2414                           ;Principal2.c: 54:             banderaBoton = 1;
  2415  024B  01FD               	clrf	_banderaBoton
  2416  024C  0AFD               	incf	_banderaBoton,f
  2417                           
  2418                           ;Principal2.c: 55:             INTCONbits.RBIE = 0;
  2419  024D  118B               	bcf	11,3	;volatile
  2420  024E                     i1l80:	
  2421                           ;Principal2.c: 57:     }
  2422                           
  2423                           
  2424                           ;Principal2.c: 59:     if (INTCONbits.T0IF == 1 && INTCONbits.T0IE == 1){
  2425  024E  1D0B               	btfss	11,2	;volatile
  2426  024F  2A51               	goto	u39_21
  2427  0250  2A52               	goto	u39_20
  2428  0251                     u39_21:
  2429  0251  2A67               	goto	i1l83
  2430  0252                     u39_20:
  2431  0252                     i1l1564:
  2432  0252  1E8B               	btfss	11,5	;volatile
  2433  0253  2A55               	goto	u40_21
  2434  0254  2A56               	goto	u40_20
  2435  0255                     u40_21:
  2436  0255  2A67               	goto	i1l83
  2437  0256                     u40_20:
  2438  0256                     i1l1566:
  2439                           
  2440                           ;Principal2.c: 60:         banderaTMR0 = ~banderaTMR0;
  2441  0256  09FA               	comf	_banderaTMR0,f
  2442  0257                     i1l1568:
  2443                           
  2444                           ;Principal2.c: 61:         cambioDisplay(valorDisplay_Uni, valorDisplay_Dec, banderaTMR0
      +                          );
  2445  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0258  084C               	movf	_valorDisplay_Dec,w
  2447  0259  00F5               	movwf	??_ISR
  2448  025A  0875               	movf	??_ISR,w
  2449  025B  00F0               	movwf	cambioDisplay@valDec
  2450  025C  087A               	movf	_banderaTMR0,w
  2451  025D  00F6               	movwf	??_ISR+1
  2452  025E  0876               	movf	??_ISR+1,w
  2453  025F  00F1               	movwf	cambioDisplay@bandera
  2454  0260  084B               	movf	_valorDisplay_Uni,w
  2455  0261  120A  118A  22E8  120A  118A  	fcall	_cambioDisplay
  2456  0266                     i1l1570:
  2457                           
  2458                           ;Principal2.c: 62:         INTCONbits.T0IF = 0;
  2459  0266  110B               	bcf	11,2	;volatile
  2460  0267                     i1l83:
  2461  0267  0879               	movf	??_ISR+4,w
  2462  0268  008A               	movwf	10
  2463  0269  0878               	movf	??_ISR+3,w
  2464  026A  0084               	movwf	4
  2465  026B  0E77               	swapf	??_ISR+2,w
  2466  026C  0083               	movwf	3
  2467  026D  0EFE               	swapf	btemp,f
  2468  026E  0E7E               	swapf	btemp,w
  2469  026F  0009               	retfie
  2470  0270                     __end_of_ISR:
  2471                           
  2472                           	psect	intentry
  2473  0004                     __pintentry:	
  2474                           ;incstack = 0
  2475                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2476                           
  2477  0004                     interrupt_function:
  2478  007E                     saved_w	set	btemp
  2479  0004  00FE               	movwf	btemp
  2480  0005  0E03               	swapf	3,w
  2481  0006  00F7               	movwf	??_ISR+2
  2482  0007  0804               	movf	4,w
  2483  0008  00F8               	movwf	??_ISR+3
  2484  0009  080A               	movf	10,w
  2485  000A  00F9               	movwf	??_ISR+4
  2486  000B  120A  118A  2A2C   	ljmp	_ISR
  2487                           
  2488                           	psect	text9
  2489  02E8                     __ptext9:	
  2490 ;; *************** function _cambioDisplay *****************
  2491 ;; Defined at:
  2492 ;;		line 62 in file "DISPLAY7.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  valUni          1    wreg     unsigned char 
  2495 ;;  valDec          1    0[COMMON] unsigned char 
  2496 ;;  bandera         1    1[COMMON] unsigned char 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  valUni          1    4[COMMON] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         2       0       0       0       0
  2509 ;;      Locals:         1       0       0       0       0
  2510 ;;      Temps:          2       0       0       0       0
  2511 ;;      Totals:         5       0       0       0       0
  2512 ;;Total ram usage:        5 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_ISR
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function _cambioDisplay
  2523  02E8                     _cambioDisplay:
  2524                           
  2525                           ;incstack = 0
  2526                           ; Regs used in _cambioDisplay: [wreg-fsr0h+status,2+status,0]
  2527                           ;cambioDisplay@valUni stored from wreg
  2528  02E8  00F4               	movwf	cambioDisplay@valUni
  2529  02E9                     i1l1318:
  2530                           
  2531                           ;DISPLAY7.c: 63:     TMR0 = valorTMR0;
  2532  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2533  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2534  02EB  0840               	movf	_valorTMR0,w
  2535  02EC  0081               	movwf	1	;volatile
  2536                           
  2537                           ;DISPLAY7.c: 67:     switch (bandera){
  2538  02ED  2B07               	goto	i1l1330
  2539  02EE                     i1l214:	
  2540                           ;DISPLAY7.c: 68:         case 0:
  2541                           
  2542                           
  2543                           ;DISPLAY7.c: 69:             PORTCbits.RC0 = 0;
  2544  02EE  1007               	bcf	7,0	;volatile
  2545  02EF                     i1l1320:
  2546                           
  2547                           ;DISPLAY7.c: 70:             PORTD = numerosDisplay[valUni];
  2548  02EF  0874               	movf	cambioDisplay@valUni,w
  2549  02F0  00F2               	movwf	??_cambioDisplay
  2550  02F1  0772               	addwf	??_cambioDisplay,w
  2551  02F2  3E20               	addlw	(low (_numerosDisplay| 0))& (0+255)
  2552  02F3  0084               	movwf	4
  2553  02F4  1383               	bcf	3,7	;select IRP bank0
  2554  02F5  0800               	movf	0,w
  2555  02F6  0088               	movwf	8	;volatile
  2556  02F7                     i1l1322:
  2557                           
  2558                           ;DISPLAY7.c: 71:             PORTCbits.RC2 = 1;
  2559  02F7  1507               	bsf	7,2	;volatile
  2560                           
  2561                           ;DISPLAY7.c: 72:             break;
  2562  02F8  2B17               	goto	i1l218
  2563  02F9                     i1l216:	
  2564                           ;DISPLAY7.c: 73:         case 255:
  2565                           
  2566                           
  2567                           ;DISPLAY7.c: 74:             PORTCbits.RC2 = 0;
  2568  02F9  1107               	bcf	7,2	;volatile
  2569  02FA                     i1l1324:
  2570                           
  2571                           ;DISPLAY7.c: 75:             PORTD = numerosDisplay[valDec];
  2572  02FA  0870               	movf	cambioDisplay@valDec,w
  2573  02FB  00F2               	movwf	??_cambioDisplay
  2574  02FC  0772               	addwf	??_cambioDisplay,w
  2575  02FD  3E20               	addlw	(low (_numerosDisplay| 0))& (0+255)
  2576  02FE  0084               	movwf	4
  2577  02FF  1383               	bcf	3,7	;select IRP bank0
  2578  0300  0800               	movf	0,w
  2579  0301  0088               	movwf	8	;volatile
  2580  0302                     i1l1326:
  2581                           
  2582                           ;DISPLAY7.c: 76:             PORTCbits.RC0 = 1;
  2583  0302  1407               	bsf	7,0	;volatile
  2584                           
  2585                           ;DISPLAY7.c: 77:             break;
  2586  0303  2B17               	goto	i1l218
  2587  0304                     i1l1328:
  2588                           
  2589                           ;DISPLAY7.c: 79:             PORTD = PORTD;
  2590  0304  0808               	movf	8,w	;volatile
  2591  0305  0088               	movwf	8	;volatile
  2592                           
  2593                           ;DISPLAY7.c: 80:     }
  2594  0306  2B17               	goto	i1l218
  2595  0307                     i1l1330:
  2596  0307  0871               	movf	cambioDisplay@bandera,w
  2597  0308  00F2               	movwf	??_cambioDisplay
  2598  0309  01F3               	clrf	??_cambioDisplay+1
  2599                           
  2600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2601                           ; Switch size 1, requested type "simple"
  2602                           ; Number of cases is 1, Range of values is 0 to 0
  2603                           ; switch strategies available:
  2604                           ; Name         Instructions Cycles
  2605                           ; simple_byte            4     3 (average)
  2606                           ; direct_byte           11     8 (fixed)
  2607                           ; jumptable            260     6 (fixed)
  2608                           ;	Chosen strategy is simple_byte
  2609  030A  0873               	movf	??_cambioDisplay+1,w
  2610  030B  3A00               	xorlw	0	; case 0
  2611  030C  1903               	skipnz
  2612  030D  2B0F               	goto	i1l1894
  2613  030E  2B04               	goto	i1l1328
  2614  030F                     i1l1894:
  2615                           
  2616                           ; Switch size 1, requested type "simple"
  2617                           ; Number of cases is 2, Range of values is 0 to 255
  2618                           ; switch strategies available:
  2619                           ; Name         Instructions Cycles
  2620                           ; simple_byte            7     4 (average)
  2621                           ; jumptable            260     6 (fixed)
  2622                           ;	Chosen strategy is simple_byte
  2623  030F  0872               	movf	??_cambioDisplay,w
  2624  0310  3A00               	xorlw	0	; case 0
  2625  0311  1903               	skipnz
  2626  0312  2AEE               	goto	i1l214
  2627  0313  3AFF               	xorlw	255	; case 255
  2628  0314  1903               	skipnz
  2629  0315  2AF9               	goto	i1l216
  2630  0316  2B04               	goto	i1l1328
  2631  0317                     i1l218:
  2632  0317  0008               	return
  2633  0318                     __end_of_cambioDisplay:
  2634  007E                     btemp	set	126	;btemp
  2635  007E                     wtemp0	set	126
  2636                           
  2637                           	psect	config
  2638                           
  2639                           ;Config register CONFIG1 @ 0x2007
  2640                           ;	Oscillator Selection bits
  2641                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2642                           ;	Watchdog Timer Enable bit
  2643                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2644                           ;	Power-up Timer Enable bit
  2645                           ;	PWRTE = OFF, PWRT disabled
  2646                           ;	RE3/MCLR pin function select bit
  2647                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2648                           ;	Code Protection bit
  2649                           ;	CP = OFF, Program memory code protection is disabled
  2650                           ;	Data Code Protection bit
  2651                           ;	CPD = OFF, Data memory code protection is disabled
  2652                           ;	Brown Out Reset Selection bits
  2653                           ;	BOREN = OFF, BOR disabled
  2654                           ;	Internal External Switchover bit
  2655                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2656                           ;	Fail-Safe Clock Monitor Enabled bit
  2657                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2658                           ;	Low Voltage Programming Enable bit
  2659                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2660                           ;	In-Circuit Debugger Mode bit
  2661                           ;	DEBUG = 0x1, unprogrammed default
  2662  2007                     	org	8199
  2663  2007  20D4               	dw	8404
  2664                           
  2665                           ;Config register CONFIG2 @ 0x2008
  2666                           ;	Brown-out Reset Selection bit
  2667                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2668                           ;	Flash Program Memory Self Write Enable bits
  2669                           ;	WRT = OFF, Write protection off
  2670  2008                     	org	8200
  2671  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     10      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_cambioDisplay

Critical Paths under _main in BANK0

    _main->_ADConfig

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     501
                                              5 BANK0      5     5      0
                            _ADCinit
                           _ADConfig
                       _AnalogRead_8
                     _config2Display
                     _config_PUERTOS
                        _press_Bajar
                        _press_Subir
 ---------------------------------------------------------------------------------
 (1) _press_Subir                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _press_Bajar                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_PUERTOS                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config2Display                                       3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _AnalogRead_8                                         4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADConfig                                             5     3      2     218
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADCinit                                              2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0     218
                                              5 COMMON     5     5      0
                      _cambioDisplay
 ---------------------------------------------------------------------------------
 (3) _cambioDisplay                                        5     3      2     218
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCinit
   _ADConfig
   _AnalogRead_8
   _config2Display
   _config_PUERTOS
   _press_Bajar
   _press_Subir

 _ISR (ROOT)
   _cambioDisplay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3C      12        0.0%
ABS                  0      0      3C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 15:49:23 2021

                      pc 0002                       l89 021E                       fsr 0004  
                    l102 037A                      l110 02AB                      l201 01AA  
                    l210 01B5                      l118 02E7                      l151 0059  
                    l160 009A                      l161 00A7                      l153 005D  
                    l162 00B4                      l154 0061                      l163 00C1  
                    l164 00CE                      l156 0075                      l165 0113  
                    l157 00FF                      l173 033B                      l158 0080  
                    l159 008D                      l176 038F                      u300 02B6  
                    u301 02B5                      u310 02BC                      u311 02BB  
                    u320 02D5                      u240 0275                      u321 02D4  
                    u241 0274                      u330 02DB                      u250 027A  
                    u410 01DE                      u331 02DA                      u251 0279  
                    u411 01DD                      u260 0280                      u420 01EF  
                    u261 027F                      u421 01EE                      u270 0299  
                    u430 01FB                      u271 0298                      u431 01FA  
                    u280 029F                      u281 029E                      u290 02B1  
                    u450 0210                      u507 02E1                      u291 02B0  
                    u451 020F                      u460 0218                      _ISR 022C  
                    u517 010B                      u461 0217                      u445 0200  
                    u527 0387                      u477 0286                      u487 02A5  
                    u497 02C2                      fsr0 0004                      indf 0000  
   cambioDisplay@bandera 0071          __end_of_ADCinit 0390                     ?_ISR 0070  
                   l1420 0031                     l1340 0364                     l1422 0036  
                   l1430 0065                     l1342 0372                     l1510 028B  
                   l1502 0270                     l1440 00AD                     l1432 007B  
                   l1424 003B                     l1416 002D                     l1360 0121  
                   l1352 0114                     l1344 0376                     l1336 035D  
                   l1520 0299                     l1512 0290                     l1504 0275  
                   l1600 01FD                     l1442 00BA                     l1434 0086  
                   l1450 00DB                     l1426 003E                     l1418 002E  
                   l1370 013D                     l1362 0123                     l1354 011A  
                   l1346 0377                     l1338 0363                     l1530 02B6  
                   l1522 029F                     l1514 0291                     l1506 027A  
                   l1610 0218                     l1602 0209                     l1452 0105  
                   l1444 00C7                     l1436 0093                     l1428 0043  
                   l1380 0164                     l1372 0144                     l1364 0128  
                   l1356 011D                     l1348 0379                     l1540 02CF  
                   l1532 02BC                     l1524 02AA                     l1516 0293  
                   l1508 0280                     l1612 0219                     l1604 020A  
                   l1454 0110                     l1446 00D4                     l1438 00A0  
                   l1390 01B4                     l1382 016B                     l1374 014B  
                   l1366 012F                     l1358 011E                     l1534 02C7  
                   l1542 02D0                     l1526 02AC                     l1518 0294  
                   l1606 0210                     l1376 0155                     l1368 0136  
                   l1384 0172                     l1544 02D5                     l1536 02CC  
                   l1528 02B1                     l1608 0212                     l1482 032A  
                   l1474 031B                     l1386 01AF                     l1378 015C  
                   l1546 02DB                     l1538 02CD                     l1484 033A  
                   l1476 031C                     l1388 01B3                     l1548 02E6  
                   l1580 01D6                     l1494 037B                     l1478 0321  
                   l1590 01EF                     l1582 01D7                     l1574 01B6  
                   l1496 0381                     l1592 01F1                     l1584 01DE  
                   l1576 01BB                     l1498 038C                     l1594 01F5  
                   l1586 01E9                     l1578 01C6                     l1596 01F6  
                   l1588 01EA                     l1598 01FB                     l1880 019B  
                   l1890 006D                     l1882 01A0                     l1874 0186  
                   l1892 00E5                     l1884 01A5                     l1876 0191  
                   l1886 0332                     l1878 0196                     l1888 004B  
                   _IOCB 0096                     i1l80 024E                     i1l83 0267  
            main@lectura 004A                     i1l79 023D                     _TMR0 0001  
                   _WPUB 0095                     _main 01B6                     btemp 007E  
                   start 000E         __end_of_ADConfig 0114                    ??_ISR 0075  
                  ?_main 0070                    _ANSEL 0188                    i1l214 02EE  
                  i1l216 02F9                    i1l218 0317                    u40_20 0256  
                  u40_21 0255                    u34_20 0232                    u34_21 0231  
                  u35_20 0238                    u35_21 0237                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u36_20 0241                    u36_21 0240  
                  u37_20 0245                    u37_21 0244                    u38_20 024B  
                  u38_21 024A                    u39_20 0252                    u39_21 0251  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089         _valorDisplay_Dec 004C  
       _valorDisplay_Uni 004B         ??_config2Display 0043                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 022C                ??_ADCinit 0041                   ??_main 0046  
  __size_of_AnalogRead_8 0024                   _ADRESH 001E                   _ADRESL 009E  
                 _ANSELH 0189         ??_config_PUERTOS 0041             _banderaBoton 007D  
                 i1l1320 02EF                   i1l1322 02F7                   i1l1330 0307  
                 i1l1324 02FA                   i1l1326 0302                   i1l1318 02E9  
                 i1l1328 0304                   i1l1550 022C                   i1l1560 0246  
                 i1l1552 0232                   i1l1570 0266                   i1l1562 024B  
                 i1l1554 0238                   i1l1564 0252                   i1l1556 0241  
                 i1l1566 0256                   i1l1558 0245                   i1l1568 0257  
                 i1l1894 030F             _AnalogRead_8 0318             ?_press_Bajar 0070  
                 saved_w 007E             ?_press_Subir 0070                ?_ADConfig 0041  
__end_of__initialization 0026           __pcstackCOMMON 0070             __pidataBANK0 033C  
             _banderaADC 004D           _OPTION_REGbits 0081   __size_of_cambioDisplay 0030  
             ??_ADConfig 0043               __pbssBANK0 004B               __pmaintext 01B6  
          ADConfig@canal 0041               __pintentry 0004                  _ADCinit 037B  
        ADConfig@oscFreq 0045   AnalogRead_8@conversion 0044            _cambioDisplay 02E8  
  config2Display@FreqOsc 0041                _ANSELbits 0188                  __ptext1 0270  
                __ptext2 02AC                  __ptext3 035D                  __ptext4 0114  
                __ptext5 0318                  __ptext6 002A                  __ptext7 037B  
                __ptext8 022C                  __ptext9 02E8             __size_of_ISR 0044  
   __size_of_press_Bajar 003C     end_of_initialization 0026     __size_of_press_Subir 003C  
         ?_cambioDisplay 0070                _PORTBbits 0006                _PORTCbits 0007  
              _PORTEbits 0009                _TRISAbits 0085                _TRISCbits 0087  
              _TRISEbits 0089        __size_of_ADConfig 00EA  __size_of_config2Display 00A2  
    cambioDisplay@valDec 0070      cambioDisplay@valUni 0074      start_initialization 0011  
            __end_of_ISR 0270          ??_cambioDisplay 0072              _banderaTMR0 007A  
__size_of_config_PUERTOS 001E               init_fetch0 0390              __pdataBANK0 0020  
               ?_ADCinit 0070              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0041                _banderaDO 007B                _banderaUP 007C  
               _ADConfig 002A        interrupt_function 0004           _config2Display 0114  
               _PIE1bits 008C                 _PIR1bits 000C                _valorTMR0 0040  
          ?_AnalogRead_8 0070               _ADCON0bits 001F               _ADCON1bits 009F  
    ADConfig@justificado 0042         __size_of_ADCinit 0015            ??_press_Bajar 0041  
          ??_press_Subir 0041   __end_of_config2Display 01B6           _config_PUERTOS 035D  
         ??_AnalogRead_8 0041           _numerosDisplay 0020                 _main$253 0048  
               _main$254 0049      __end_of_press_Bajar 02E8          ?_config2Display 0041  
    __end_of_press_Subir 02AC            __size_of_main 0076   __end_of_config_PUERTOS 037B  
             _INTCONbits 000B                 init_ram0 0394                 intlevel1 0000  
  __end_of_cambioDisplay 0318          ?_config_PUERTOS 0070               _OSCCONbits 008F  
       AnalogRead_8@just 0043              _press_Bajar 02AC              _press_Subir 0270  
   __end_of_AnalogRead_8 033C  
