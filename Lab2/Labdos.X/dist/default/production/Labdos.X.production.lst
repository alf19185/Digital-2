

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 03 10:41:03 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.31
    27                           ; Generated 13/10/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	idataBANK0
   375  0374                     __pidataBANK0:
   376                           
   377                           ;initializer for _numerosDisplay
   378  0374  343F               	retlw	63
   379  0375  3406               	retlw	6
   380  0376  345B               	retlw	91
   381  0377  344F               	retlw	79
   382  0378  3466               	retlw	102
   383  0379  346D               	retlw	109
   384  037A  347D               	retlw	125
   385  037B  3407               	retlw	7
   386  037C  347F               	retlw	127
   387  037D  346F               	retlw	111
   388  037E  3477               	retlw	119
   389  037F  347C               	retlw	124
   390  0380  3439               	retlw	57
   391  0381  345E               	retlw	94
   392  0382  3479               	retlw	121
   393  0383  3471               	retlw	113
   394                           
   395                           ;initializer for _valorTMR0
   396  0384  3483               	retlw	131
   397  0001                     _TMR0	set	1
   398  0007                     _PORTCbits	set	7
   399  001E                     _ADRESH	set	30
   400  001F                     _ADCON0bits	set	31
   401  0006                     _PORTBbits	set	6
   402  0008                     _PORTD	set	8
   403  0007                     _PORTC	set	7
   404  0006                     _PORTB	set	6
   405  0009                     _PORTE	set	9
   406  0009                     _PORTEbits	set	9
   407  0005                     _PORTA	set	5
   408  000B                     _INTCONbits	set	11
   409  000C                     _PIR1bits	set	12
   410  008F                     _OSCCONbits	set	143
   411  0087                     _TRISCbits	set	135
   412  009E                     _ADRESL	set	158
   413  0089                     _TRISEbits	set	137
   414  0085                     _TRISAbits	set	133
   415  009F                     _ADCON1bits	set	159
   416  0096                     _IOCB	set	150
   417  0081                     _OPTION_REGbits	set	129
   418  0095                     _WPUB	set	149
   419  0089                     _TRISE	set	137
   420  0086                     _TRISB	set	134
   421  0085                     _TRISA	set	133
   422  0087                     _TRISC	set	135
   423  0088                     _TRISD	set	136
   424  008C                     _PIE1bits	set	140
   425  0188                     _ANSELbits	set	392
   426  0189                     _ANSELH	set	393
   427  0188                     _ANSEL	set	392
   428                           
   429                           	psect	cinit
   430  0011                     start_initialization:	
   431                           ; #config settings
   432                           
   433  0011                     __initialization:
   434                           
   435                           ; Initialize objects allocated to BANK0
   436  0011  1383               	bcf	3,7	;select IRP bank0
   437  0012  3031               	movlw	low (__pdataBANK0+17)
   438  0013  00FD               	movwf	btemp+-1
   439  0014  3003               	movlw	high __pidataBANK0
   440  0015  00FE               	movwf	btemp
   441  0016  3074               	movlw	low __pidataBANK0
   442  0017  00FF               	movwf	btemp+1
   443  0018  3020               	movlw	low __pdataBANK0
   444  0019  0084               	movwf	4
   445  001A  120A  118A  2365  120A  118A  	fcall	init_ram0
   446                           
   447                           ; Clear objects allocated to BANK0
   448  001F  01B9               	clrf	__pbssBANK0& (0+127)
   449  0020  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   450  0021  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   451                           
   452                           ; Clear objects allocated to COMMON
   453  0022  01FA               	clrf	__pbssCOMMON& (0+127)
   454  0023  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   455  0024  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   456  0025  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   457  0026                     end_of_initialization:	
   458                           ;End of C runtime variable initialization code
   459                           
   460  0026                     __end_of__initialization:
   461  0026  0183               	clrf	3
   462  0027  120A  118A  29B6   	ljmp	_main	;jump to C main() function
   463                           
   464                           	psect	bssCOMMON
   465  007A                     __pbssCOMMON:
   466  007A                     _banderaTMR0:
   467  007A                     	ds	1
   468  007B                     _banderaDO:
   469  007B                     	ds	1
   470  007C                     _banderaUP:
   471  007C                     	ds	1
   472  007D                     _banderaBoton:
   473  007D                     	ds	1
   474                           
   475                           	psect	bssBANK0
   476  0039                     __pbssBANK0:
   477  0039                     _valorDisplay_Uni:
   478  0039                     	ds	1
   479  003A                     _valorDisplay_Dec:
   480  003A                     	ds	1
   481  003B                     _banderaADC:
   482  003B                     	ds	1
   483                           
   484                           	psect	dataBANK0
   485  0020                     __pdataBANK0:
   486  0020                     _numerosDisplay:
   487  0020                     	ds	16
   488  0030                     _valorTMR0:
   489  0030                     	ds	1
   490                           
   491                           	psect	inittext
   492  0361                     init_fetch0:	
   493                           ;	Called with low address in FSR and high address in W
   494                           
   495  0361  087E               	movf	btemp,w
   496  0362  008A               	movwf	10
   497  0363  087F               	movf	btemp+1,w
   498  0364  0082               	movwf	2
   499  0365                     init_ram0:	
   500                           ;Called with:
   501                           ;	high address of idata address in btemp 
   502                           ;	low address of idata address in btemp+1 
   503                           ;	low address of data in FSR
   504                           ;	high address + 1 of data in btemp-1
   505                           
   506  0365  120A  118A  2361  120A  118A  	fcall	init_fetch0
   507  036A  0080               	movwf	0
   508  036B  0A84               	incf	4,f
   509  036C  0804               	movf	4,w
   510  036D  067D               	xorwf	btemp+-1,w
   511  036E  1903               	btfsc	3,2
   512  036F  3400               	retlw	0
   513  0370  0AFF               	incf	btemp+1,f
   514  0371  1903               	btfsc	3,2
   515  0372  0AFE               	incf	btemp,f
   516  0373  2B65               	goto	init_ram0
   517                           
   518                           	psect	cstackCOMMON
   519  0070                     __pcstackCOMMON:
   520  0070                     ?_cambioDisplay:
   521  0070                     ?_config_PUERTOS:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_AnalogRead_8:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_ADCinit:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_press_Subir:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_press_Bajar:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_ISR:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_main:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     cambioDisplay@valDec:	
   543                           ; 1 bytes @ 0x0
   544                           
   545                           
   546                           ; 1 bytes @ 0x0
   547  0070                     	ds	1
   548  0071                     cambioDisplay@bandera:
   549                           
   550                           ; 1 bytes @ 0x1
   551  0071                     	ds	1
   552  0072                     ??_cambioDisplay:
   553                           
   554                           ; 1 bytes @ 0x2
   555  0072                     	ds	2
   556  0074                     cambioDisplay@valUni:
   557                           
   558                           ; 1 bytes @ 0x4
   559  0074                     	ds	1
   560  0075                     ??_ISR:
   561                           
   562                           ; 1 bytes @ 0x5
   563  0075                     	ds	5
   564                           
   565                           	psect	cstackBANK0
   566  0031                     __pcstackBANK0:
   567  0031                     ??_config_PUERTOS:
   568  0031                     ?_config2Display:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0031                     ?_ADConfig:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0031                     ??_AnalogRead_8:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0031                     ??_ADCinit:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0031                     ??_press_Subir:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0031                     ??_press_Bajar:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0031                     ADConfig@canal:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0031                     config2Display@FreqOsc:	
   590                           ; 1 bytes @ 0x0
   591                           
   592                           
   593                           ; 2 bytes @ 0x0
   594  0031                     	ds	1
   595  0032                     ADConfig@justificado:
   596                           
   597                           ; 1 bytes @ 0x1
   598  0032                     	ds	1
   599  0033                     ??_config2Display:
   600  0033                     ??_ADConfig:	
   601                           ; 1 bytes @ 0x2
   602                           
   603  0033                     AnalogRead_8@just:	
   604                           ; 1 bytes @ 0x2
   605                           
   606                           
   607                           ; 1 bytes @ 0x2
   608  0033                     	ds	1
   609  0034                     AnalogRead_8@conversion:
   610                           
   611                           ; 1 bytes @ 0x3
   612  0034                     	ds	1
   613  0035                     ADConfig@oscFreq:
   614                           
   615                           ; 1 bytes @ 0x4
   616  0035                     	ds	1
   617  0036                     ??_main:
   618                           
   619                           ; 1 bytes @ 0x5
   620  0036                     	ds	2
   621  0038                     main@lectura:
   622                           
   623                           ; 1 bytes @ 0x7
   624  0038                     	ds	1
   625                           
   626                           	psect	maintext
   627  01B6                     __pmaintext:	
   628 ;;
   629 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   630 ;;
   631 ;; *************** function _main *****************
   632 ;; Defined at:
   633 ;;		line 68 in file "Principal2.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  lectura         1    7[BANK0 ] unsigned char 
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : B00/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   647 ;;      Params:         0       0       0       0       0
   648 ;;      Locals:         0       1       0       0       0
   649 ;;      Temps:          0       2       0       0       0
   650 ;;      Totals:         0       3       0       0       0
   651 ;;Total ram usage:        3 bytes
   652 ;; Hardware stack levels required when called:    3
   653 ;; This function calls:
   654 ;;		_ADCinit
   655 ;;		_ADConfig
   656 ;;		_AnalogRead_8
   657 ;;		_config2Display
   658 ;;		_config_PUERTOS
   659 ;;		_press_Bajar
   660 ;;		_press_Subir
   661 ;; This function is called by:
   662 ;;		Startup code after reset
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           
   667                           ;psect for function _main
   668  01B6                     _main:
   669  01B6                     l1564:	
   670                           ;incstack = 0
   671                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   672                           
   673                           
   674                           ;Principal2.c: 70:     config_PUERTOS();
   675  01B6  120A  118A  232E  120A  118A  	fcall	_config_PUERTOS
   676  01BB                     l1566:
   677                           
   678                           ;Principal2.c: 71:     config2Display(4000);
   679  01BB  30A0               	movlw	160
   680  01BC  1283               	bcf	3,5	;RP0=0, select bank0
   681  01BD  1303               	bcf	3,6	;RP1=0, select bank0
   682  01BE  00B1               	movwf	config2Display@FreqOsc
   683  01BF  300F               	movlw	15
   684  01C0  00B2               	movwf	config2Display@FreqOsc+1
   685  01C1  120A  118A  2114  120A  118A  	fcall	_config2Display
   686  01C6                     l1568:
   687                           
   688                           ;Principal2.c: 72:     ADConfig(8, 5, 'H');
   689  01C6  3005               	movlw	5
   690  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   691  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   692  01C9  00B6               	movwf	??_main
   693  01CA  0836               	movf	??_main,w
   694  01CB  00B1               	movwf	ADConfig@canal
   695  01CC  3048               	movlw	72
   696  01CD  00B7               	movwf	??_main+1
   697  01CE  0837               	movf	??_main+1,w
   698  01CF  00B2               	movwf	ADConfig@justificado
   699  01D0  3008               	movlw	8
   700  01D1  120A  118A  202A  120A  118A  	fcall	_ADConfig
   701  01D6                     l1570:
   702                           
   703                           ;Principal2.c: 73:     INTCONbits.GIE = 1;
   704  01D6  178B               	bsf	11,7	;volatile
   705  01D7                     l1572:
   706                           
   707                           ;Principal2.c: 76:         if (banderaADC == 1){
   708  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   709  01D8  1303               	bcf	3,6	;RP1=0, select bank0
   710  01D9  033B               	decf	_banderaADC,w
   711  01DA  1D03               	btfss	3,2
   712  01DB  29DD               	goto	u391
   713  01DC  29DE               	goto	u390
   714  01DD                     u391:
   715  01DD  2A14               	goto	l1594
   716  01DE                     u390:
   717  01DE                     l1574:
   718                           
   719                           ;Principal2.c: 77:             valorDisplay_Uni = 9;
   720  01DE  3009               	movlw	9
   721  01DF  00B6               	movwf	??_main
   722  01E0  0836               	movf	??_main,w
   723  01E1  00B9               	movwf	_valorDisplay_Uni
   724  01E2                     l1576:
   725                           
   726                           ;Principal2.c: 78:             uint8_t lectura = AnalogRead_8('H');
   727  01E2  3048               	movlw	72
   728  01E3  120A  118A  230A  120A  118A  	fcall	_AnalogRead_8
   729  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   730  01E9  1303               	bcf	3,6	;RP1=0, select bank0
   731  01EA  00B6               	movwf	??_main
   732  01EB  0836               	movf	??_main,w
   733  01EC  00B8               	movwf	main@lectura
   734  01ED                     l1578:
   735                           
   736                           ;Principal2.c: 79:             if(lectura == PORTA){
   737  01ED  0838               	movf	main@lectura,w
   738  01EE  0605               	xorwf	5,w	;volatile
   739  01EF  1D03               	skipz
   740  01F0  29F2               	goto	u401
   741  01F1  29F3               	goto	u400
   742  01F2                     u401:
   743  01F2  29F5               	goto	l1582
   744  01F3                     u400:
   745  01F3                     l1580:
   746                           
   747                           ;Principal2.c: 80:                 PORTEbits.RE1 = 1;
   748  01F3  1489               	bsf	9,1	;volatile
   749                           
   750                           ;Principal2.c: 81:             }
   751  01F4  29FC               	goto	l1586
   752  01F5                     l1582:
   753  01F5  0838               	movf	main@lectura,w
   754  01F6  0605               	xorwf	5,w	;volatile
   755  01F7  1903               	skipnz
   756  01F8  29FA               	goto	u411
   757  01F9  29FB               	goto	u410
   758  01FA                     u411:
   759  01FA  29FC               	goto	l1586
   760  01FB                     u410:
   761  01FB                     l1584:
   762                           
   763                           ;Principal2.c: 83:                 PORTEbits.RE1 = 0;
   764  01FB  1089               	bcf	9,1	;volatile
   765  01FC                     l1586:
   766                           
   767                           ;Principal2.c: 85:             valorDisplay_Uni = lectura & 0x0F;
   768  01FC  0838               	movf	main@lectura,w
   769  01FD  390F               	andlw	15
   770  01FE  00B6               	movwf	??_main
   771  01FF  0836               	movf	??_main,w
   772  0200  00B9               	movwf	_valorDisplay_Uni
   773  0201                     l1588:
   774                           
   775                           ;Principal2.c: 86:             valorDisplay_Dec = (lectura & 0xF0) >> 4;
   776  0201  0838               	movf	main@lectura,w
   777  0202  00B6               	movwf	??_main
   778  0203  3004               	movlw	4
   779  0204                     u425:
   780  0204  1003               	clrc
   781  0205  0CB6               	rrf	??_main,f
   782  0206  3EFF               	addlw	-1
   783  0207  1D03               	skipz
   784  0208  2A04               	goto	u425
   785  0209  0836               	movf	??_main,w
   786  020A  390F               	andlw	15
   787  020B  00B7               	movwf	??_main+1
   788  020C  0837               	movf	??_main+1,w
   789  020D  00BA               	movwf	_valorDisplay_Dec
   790  020E                     l1590:
   791                           
   792                           ;Principal2.c: 87:             banderaADC = 0;
   793  020E  01BB               	clrf	_banderaADC
   794  020F                     l1592:
   795                           
   796                           ;Principal2.c: 88:             ADCinit();
   797  020F  120A  118A  234C  120A  118A  	fcall	_ADCinit
   798  0214                     l1594:
   799                           
   800                           ;Principal2.c: 90:         press_Subir();
   801  0214  120A  118A  2266  120A  118A  	fcall	_press_Subir
   802  0219                     l1596:
   803                           
   804                           ;Principal2.c: 91:         press_Bajar();
   805  0219  120A  118A  22A2  120A  118A  	fcall	_press_Bajar
   806  021E  29D7               	goto	l1572
   807  021F  120A  118A  280E   	ljmp	start
   808  0222                     __end_of_main:
   809                           
   810                           	psect	text1
   811  0266                     __ptext1:	
   812 ;; *************** function _press_Subir *****************
   813 ;; Defined at:
   814 ;;		line 119 in file "Principal2.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          0       2       0       0       0
   831 ;;      Totals:         0       2       0       0       0
   832 ;;Total ram usage:        2 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    2
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           
   843                           ;psect for function _press_Subir
   844  0266                     _press_Subir:
   845  0266                     l1492:	
   846                           ;incstack = 0
   847                           ; Regs used in _press_Subir: [wreg+status,2+status,0]
   848                           
   849                           
   850                           ;Principal2.c: 120:     if (banderaBoton == 1){
   851  0266  037D               	decf	_banderaBoton,w
   852  0267  1D03               	btfss	3,2
   853  0268  2A6A               	goto	u221
   854  0269  2A6B               	goto	u220
   855  026A                     u221:
   856  026A  2A8A               	goto	l1508
   857  026B                     u220:
   858  026B                     l1494:
   859                           
   860                           ;Principal2.c: 121:         if (banderaUP == 0){
   861  026B  087C               	movf	_banderaUP,w
   862  026C  1D03               	btfss	3,2
   863  026D  2A6F               	goto	u231
   864  026E  2A70               	goto	u230
   865  026F                     u231:
   866  026F  2A8A               	goto	l1508
   867  0270                     u230:
   868  0270                     l1496:
   869                           
   870                           ;Principal2.c: 122:             if (PORTBbits.RB0 == 0){
   871  0270  1283               	bcf	3,5	;RP0=0, select bank0
   872  0271  1303               	bcf	3,6	;RP1=0, select bank0
   873  0272  1806               	btfsc	6,0	;volatile
   874  0273  2A75               	goto	u241
   875  0274  2A76               	goto	u240
   876  0275                     u241:
   877  0275  2A8A               	goto	l1508
   878  0276                     u240:
   879  0276                     l1498:
   880                           
   881                           ;Principal2.c: 123:                 _delay((unsigned long)((69)*(4000000/4000.0)));
   882  0276  305A               	movlw	90
   883  0277  1283               	bcf	3,5	;RP0=0, select bank0
   884  0278  1303               	bcf	3,6	;RP1=0, select bank0
   885  0279  00B2               	movwf	??_press_Subir+1
   886  027A  309A               	movlw	154
   887  027B  00B1               	movwf	??_press_Subir
   888  027C                     u437:
   889  027C  0BB1               	decfsz	??_press_Subir,f
   890  027D  2A7C               	goto	u437
   891  027E  0BB2               	decfsz	??_press_Subir+1,f
   892  027F  2A7C               	goto	u437
   893  0280  0000               	nop
   894  0281                     l1500:
   895                           
   896                           ;Principal2.c: 124:                 PORTA = PORTA + 1;
   897  0281  1283               	bcf	3,5	;RP0=0, select bank0
   898  0282  1303               	bcf	3,6	;RP1=0, select bank0
   899  0283  0805               	movf	5,w	;volatile
   900  0284  3E01               	addlw	1
   901  0285  0085               	movwf	5	;volatile
   902  0286                     l1502:
   903                           
   904                           ;Principal2.c: 125:                 banderaBoton = 0;
   905  0286  01FD               	clrf	_banderaBoton
   906  0287                     l1504:
   907                           
   908                           ;Principal2.c: 126:                 banderaUP = 1;
   909  0287  01FC               	clrf	_banderaUP
   910  0288  0AFC               	incf	_banderaUP,f
   911  0289                     l1506:
   912                           
   913                           ;Principal2.c: 127:                 INTCONbits.RBIE = 1;
   914  0289  158B               	bsf	11,3	;volatile
   915  028A                     l1508:
   916                           
   917                           ;Principal2.c: 131:     if (banderaUP == 1){
   918  028A  037C               	decf	_banderaUP,w
   919  028B  1D03               	btfss	3,2
   920  028C  2A8E               	goto	u251
   921  028D  2A8F               	goto	u250
   922  028E                     u251:
   923  028E  2AA1               	goto	l106
   924  028F                     u250:
   925  028F                     l1510:
   926                           
   927                           ;Principal2.c: 132:         if (PORTBbits.RB0 == 1){
   928  028F  1283               	bcf	3,5	;RP0=0, select bank0
   929  0290  1303               	bcf	3,6	;RP1=0, select bank0
   930  0291  1C06               	btfss	6,0	;volatile
   931  0292  2A94               	goto	u261
   932  0293  2A95               	goto	u260
   933  0294                     u261:
   934  0294  2AA1               	goto	l106
   935  0295                     u260:
   936  0295                     l1512:
   937                           
   938                           ;Principal2.c: 133:         _delay((unsigned long)((69)*(4000000/4000.0)));
   939  0295  305A               	movlw	90
   940  0296  1283               	bcf	3,5	;RP0=0, select bank0
   941  0297  1303               	bcf	3,6	;RP1=0, select bank0
   942  0298  00B2               	movwf	??_press_Subir+1
   943  0299  309A               	movlw	154
   944  029A  00B1               	movwf	??_press_Subir
   945  029B                     u447:
   946  029B  0BB1               	decfsz	??_press_Subir,f
   947  029C  2A9B               	goto	u447
   948  029D  0BB2               	decfsz	??_press_Subir+1,f
   949  029E  2A9B               	goto	u447
   950  029F  0000               	nop
   951  02A0                     l1514:
   952                           
   953                           ;Principal2.c: 134:         banderaUP = 0;
   954  02A0  01FC               	clrf	_banderaUP
   955  02A1                     l106:
   956  02A1  0008               	return
   957  02A2                     __end_of_press_Subir:
   958                           
   959                           	psect	text2
   960  02A2                     __ptext2:	
   961 ;; *************** function _press_Bajar *****************
   962 ;; Defined at:
   963 ;;		line 138 in file "Principal2.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   977 ;;      Params:         0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0
   979 ;;      Temps:          0       2       0       0       0
   980 ;;      Totals:         0       2       0       0       0
   981 ;;Total ram usage:        2 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    2
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _press_Bajar
   993  02A2                     _press_Bajar:
   994  02A2                     l1516:	
   995                           ;incstack = 0
   996                           ; Regs used in _press_Bajar: [wreg+status,2+status,0]
   997                           
   998                           
   999                           ;Principal2.c: 139:     if (banderaBoton == 1){
  1000  02A2  037D               	decf	_banderaBoton,w
  1001  02A3  1D03               	btfss	3,2
  1002  02A4  2AA6               	goto	u271
  1003  02A5  2AA7               	goto	u270
  1004  02A6                     u271:
  1005  02A6  2AC6               	goto	l1532
  1006  02A7                     u270:
  1007  02A7                     l1518:
  1008                           
  1009                           ;Principal2.c: 140:         if (banderaDO == 0){
  1010  02A7  087B               	movf	_banderaDO,w
  1011  02A8  1D03               	btfss	3,2
  1012  02A9  2AAB               	goto	u281
  1013  02AA  2AAC               	goto	u280
  1014  02AB                     u281:
  1015  02AB  2AC6               	goto	l1532
  1016  02AC                     u280:
  1017  02AC                     l1520:
  1018                           
  1019                           ;Principal2.c: 141:             if (PORTBbits.RB2 == 0){
  1020  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1021  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1022  02AE  1906               	btfsc	6,2	;volatile
  1023  02AF  2AB1               	goto	u291
  1024  02B0  2AB2               	goto	u290
  1025  02B1                     u291:
  1026  02B1  2AC6               	goto	l1532
  1027  02B2                     u290:
  1028  02B2                     l1522:
  1029                           
  1030                           ;Principal2.c: 142:                 _delay((unsigned long)((69)*(4000000/4000.0)));
  1031  02B2  305A               	movlw	90
  1032  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1033  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1034  02B5  00B2               	movwf	??_press_Bajar+1
  1035  02B6  309A               	movlw	154
  1036  02B7  00B1               	movwf	??_press_Bajar
  1037  02B8                     u457:
  1038  02B8  0BB1               	decfsz	??_press_Bajar,f
  1039  02B9  2AB8               	goto	u457
  1040  02BA  0BB2               	decfsz	??_press_Bajar+1,f
  1041  02BB  2AB8               	goto	u457
  1042  02BC  0000               	nop
  1043  02BD                     l1524:
  1044                           
  1045                           ;Principal2.c: 143:                 PORTA = PORTA - 1;
  1046  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1047  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1048  02BF  0805               	movf	5,w	;volatile
  1049  02C0  3EFF               	addlw	255
  1050  02C1  0085               	movwf	5	;volatile
  1051  02C2                     l1526:
  1052                           
  1053                           ;Principal2.c: 144:                 banderaBoton = 0;
  1054  02C2  01FD               	clrf	_banderaBoton
  1055  02C3                     l1528:
  1056                           
  1057                           ;Principal2.c: 145:                 banderaDO = 1;
  1058  02C3  01FB               	clrf	_banderaDO
  1059  02C4  0AFB               	incf	_banderaDO,f
  1060  02C5                     l1530:
  1061                           
  1062                           ;Principal2.c: 146:                 INTCONbits.RBIE = 1;
  1063  02C5  158B               	bsf	11,3	;volatile
  1064  02C6                     l1532:
  1065                           
  1066                           ;Principal2.c: 150:     if (banderaDO == 1){
  1067  02C6  037B               	decf	_banderaDO,w
  1068  02C7  1D03               	btfss	3,2
  1069  02C8  2ACA               	goto	u301
  1070  02C9  2ACB               	goto	u300
  1071  02CA                     u301:
  1072  02CA  2ADD               	goto	l114
  1073  02CB                     u300:
  1074  02CB                     l1534:
  1075                           
  1076                           ;Principal2.c: 151:         if (PORTBbits.RB2 == 1){
  1077  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1078  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1079  02CD  1D06               	btfss	6,2	;volatile
  1080  02CE  2AD0               	goto	u311
  1081  02CF  2AD1               	goto	u310
  1082  02D0                     u311:
  1083  02D0  2ADD               	goto	l114
  1084  02D1                     u310:
  1085  02D1                     l1536:
  1086                           
  1087                           ;Principal2.c: 152:         _delay((unsigned long)((69)*(4000000/4000.0)));
  1088  02D1  305A               	movlw	90
  1089  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1090  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1091  02D4  00B2               	movwf	??_press_Bajar+1
  1092  02D5  309A               	movlw	154
  1093  02D6  00B1               	movwf	??_press_Bajar
  1094  02D7                     u467:
  1095  02D7  0BB1               	decfsz	??_press_Bajar,f
  1096  02D8  2AD7               	goto	u467
  1097  02D9  0BB2               	decfsz	??_press_Bajar+1,f
  1098  02DA  2AD7               	goto	u467
  1099  02DB  0000               	nop
  1100  02DC                     l1538:
  1101                           
  1102                           ;Principal2.c: 153:         banderaDO = 0;
  1103  02DC  01FB               	clrf	_banderaDO
  1104  02DD                     l114:
  1105  02DD  0008               	return
  1106  02DE                     __end_of_press_Bajar:
  1107                           
  1108                           	psect	text3
  1109  032E                     __ptext3:	
  1110 ;; *************** function _config_PUERTOS *****************
  1111 ;; Defined at:
  1112 ;;		line 96 in file "Principal2.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0
  1129 ;;      Totals:         0       0       0       0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    2
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           
  1141                           ;psect for function _config_PUERTOS
  1142  032E                     _config_PUERTOS:
  1143  032E                     l1326:	
  1144                           ;incstack = 0
  1145                           ; Regs used in _config_PUERTOS: [wreg+status,2]
  1146                           
  1147                           
  1148                           ;Principal2.c: 98:     TRISD = 255;
  1149  032E  30FF               	movlw	255
  1150  032F  1683               	bsf	3,5	;RP0=1, select bank1
  1151  0330  1303               	bcf	3,6	;RP1=0, select bank1
  1152  0331  0088               	movwf	8	;volatile
  1153                           
  1154                           ;Principal2.c: 99:     TRISC = 255;
  1155  0332  30FF               	movlw	255
  1156  0333  0087               	movwf	7	;volatile
  1157  0334                     l1328:
  1158                           
  1159                           ;Principal2.c: 100:     TRISA = 0;
  1160  0334  0185               	clrf	5	;volatile
  1161  0335                     l1330:
  1162                           
  1163                           ;Principal2.c: 101:     TRISB = 0b00000101;
  1164  0335  3005               	movlw	5
  1165  0336  0086               	movwf	6	;volatile
  1166                           
  1167                           ;Principal2.c: 102:     TRISE = 0;
  1168  0337  0189               	clrf	9	;volatile
  1169                           
  1170                           ;Principal2.c: 103:     PORTE = 0;
  1171  0338  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0339  1303               	bcf	3,6	;RP1=0, select bank0
  1173  033A  0189               	clrf	9	;volatile
  1174                           
  1175                           ;Principal2.c: 104:     PORTA = 0;
  1176  033B  0185               	clrf	5	;volatile
  1177                           
  1178                           ;Principal2.c: 105:     PORTB = 0;
  1179  033C  0186               	clrf	6	;volatile
  1180                           
  1181                           ;Principal2.c: 106:     PORTC = 0;
  1182  033D  0187               	clrf	7	;volatile
  1183                           
  1184                           ;Principal2.c: 107:     PORTD = 0;
  1185  033E  0188               	clrf	8	;volatile
  1186                           
  1187                           ;Principal2.c: 108:     ANSEL = 0;
  1188  033F  1683               	bsf	3,5	;RP0=1, select bank3
  1189  0340  1703               	bsf	3,6	;RP1=1, select bank3
  1190  0341  0188               	clrf	8	;volatile
  1191                           
  1192                           ;Principal2.c: 109:     ANSELH = 0;
  1193  0342  0189               	clrf	9	;volatile
  1194  0343                     l1332:
  1195                           
  1196                           ;Principal2.c: 110:     WPUB = 0b00000101;
  1197  0343  3005               	movlw	5
  1198  0344  1683               	bsf	3,5	;RP0=1, select bank1
  1199  0345  1303               	bcf	3,6	;RP1=0, select bank1
  1200  0346  0095               	movwf	21	;volatile
  1201  0347                     l1334:
  1202                           
  1203                           ;Principal2.c: 111:     OPTION_REGbits.nRBPU = 0;
  1204  0347  1381               	bcf	1,7	;volatile
  1205  0348                     l1336:
  1206                           
  1207                           ;Principal2.c: 115:     IOCB = 0b00000101;;
  1208  0348  3005               	movlw	5
  1209  0349  0096               	movwf	22	;volatile
  1210  034A                     l1338:
  1211                           
  1212                           ;Principal2.c: 116:     INTCONbits.RBIE = 1;
  1213  034A  158B               	bsf	11,3	;volatile
  1214  034B                     l98:
  1215  034B  0008               	return
  1216  034C                     __end_of_config_PUERTOS:
  1217                           
  1218                           	psect	text4
  1219  0114                     __ptext4:	
  1220 ;; *************** function _config2Display *****************
  1221 ;; Defined at:
  1222 ;;		line 7 in file "DISPLAY7.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  FreqOsc         2    0[BANK0 ] unsigned int 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1236 ;;      Params:         0       2       0       0       0
  1237 ;;      Locals:         0       0       0       0       0
  1238 ;;      Temps:          0       1       0       0       0
  1239 ;;      Totals:         0       3       0       0       0
  1240 ;;Total ram usage:        3 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    2
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _config2Display
  1252  0114                     _config2Display:
  1253  0114                     l1342:	
  1254                           ;incstack = 0
  1255                           ; Regs used in _config2Display: [wreg-fsr0h+status,2+status,0]
  1256                           
  1257                           
  1258                           ;DISPLAY7.c: 9:     TRISD = 0;
  1259  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1260  0115  1303               	bcf	3,6	;RP1=0, select bank1
  1261  0116  0188               	clrf	8	;volatile
  1262                           
  1263                           ;DISPLAY7.c: 10:     PORTD = 0;
  1264  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0119  0188               	clrf	8	;volatile
  1267  011A                     l1344:
  1268                           
  1269                           ;DISPLAY7.c: 11:     TRISCbits.TRISC2 = 0;
  1270  011A  1683               	bsf	3,5	;RP0=1, select bank1
  1271  011B  1303               	bcf	3,6	;RP1=0, select bank1
  1272  011C  1107               	bcf	7,2	;volatile
  1273  011D                     l1346:
  1274                           
  1275                           ;DISPLAY7.c: 12:     TRISCbits.TRISC0 = 0;
  1276  011D  1007               	bcf	7,0	;volatile
  1277  011E                     l1348:
  1278                           
  1279                           ;DISPLAY7.c: 13:     PORTCbits.RC2 = 0;
  1280  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1281  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0120  1107               	bcf	7,2	;volatile
  1283  0121                     l1350:
  1284                           
  1285                           ;DISPLAY7.c: 14:     PORTCbits.RC0 =0;
  1286  0121  1007               	bcf	7,0	;volatile
  1287                           
  1288                           ;DISPLAY7.c: 18:     switch (FreqOsc){
  1289  0122  2972               	goto	l1374
  1290  0123                     l1352:
  1291                           
  1292                           ;DISPLAY7.c: 21:             OSCCONbits.IRCF = 0b000;
  1293  0123  308F               	movlw	-113
  1294  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1295  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1296  0126  058F               	andwf	15,f	;volatile
  1297                           
  1298                           ;DISPLAY7.c: 22:             break;
  1299  0127  29AA               	goto	l197
  1300  0128                     l1354:
  1301                           
  1302                           ;DISPLAY7.c: 24:             OSCCONbits.IRCF = 0b001;
  1303  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1304  0129  1303               	bcf	3,6	;RP1=0, select bank1
  1305  012A  080F               	movf	15,w	;volatile
  1306  012B  398F               	andlw	-113
  1307  012C  3810               	iorlw	16
  1308  012D  008F               	movwf	15	;volatile
  1309                           
  1310                           ;DISPLAY7.c: 25:             break;
  1311  012E  29AA               	goto	l197
  1312  012F                     l1356:
  1313                           
  1314                           ;DISPLAY7.c: 27:             OSCCONbits.IRCF = 0b010;
  1315  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1316  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1317  0131  080F               	movf	15,w	;volatile
  1318  0132  398F               	andlw	-113
  1319  0133  3820               	iorlw	32
  1320  0134  008F               	movwf	15	;volatile
  1321                           
  1322                           ;DISPLAY7.c: 28:             break;
  1323  0135  29AA               	goto	l197
  1324  0136                     l1358:
  1325                           
  1326                           ;DISPLAY7.c: 30:             OSCCONbits.IRCF = 0b011;
  1327  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1328  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1329  0138  080F               	movf	15,w	;volatile
  1330  0139  398F               	andlw	-113
  1331  013A  3830               	iorlw	48
  1332  013B  008F               	movwf	15	;volatile
  1333                           
  1334                           ;DISPLAY7.c: 31:             break;
  1335  013C  29AA               	goto	l197
  1336  013D                     l1360:
  1337                           
  1338                           ;DISPLAY7.c: 33:             OSCCONbits.IRCF = 0b100;
  1339  013D  1683               	bsf	3,5	;RP0=1, select bank1
  1340  013E  1303               	bcf	3,6	;RP1=0, select bank1
  1341  013F  080F               	movf	15,w	;volatile
  1342  0140  398F               	andlw	-113
  1343  0141  3840               	iorlw	64
  1344  0142  008F               	movwf	15	;volatile
  1345                           
  1346                           ;DISPLAY7.c: 34:             break;
  1347  0143  29AA               	goto	l197
  1348  0144                     l1362:
  1349                           
  1350                           ;DISPLAY7.c: 36:             OSCCONbits.IRCF = 0b101;
  1351  0144  1683               	bsf	3,5	;RP0=1, select bank1
  1352  0145  1303               	bcf	3,6	;RP1=0, select bank1
  1353  0146  080F               	movf	15,w	;volatile
  1354  0147  398F               	andlw	-113
  1355  0148  3850               	iorlw	80
  1356  0149  008F               	movwf	15	;volatile
  1357                           
  1358                           ;DISPLAY7.c: 37:             break;
  1359  014A  29AA               	goto	l197
  1360  014B                     l1364:
  1361                           
  1362                           ;DISPLAY7.c: 39:             OSCCONbits.IRCF = 0b110;
  1363  014B  1683               	bsf	3,5	;RP0=1, select bank1
  1364  014C  1303               	bcf	3,6	;RP1=0, select bank1
  1365  014D  080F               	movf	15,w	;volatile
  1366  014E  398F               	andlw	-113
  1367  014F  3860               	iorlw	96
  1368  0150  008F               	movwf	15	;volatile
  1369                           
  1370                           ;DISPLAY7.c: 40:             OPTION_REGbits.PS = 0b110;
  1371  0151  0801               	movf	1,w	;volatile
  1372  0152  39F8               	andlw	-8
  1373  0153  3806               	iorlw	6
  1374  0154  0081               	movwf	1	;volatile
  1375  0155                     l1366:
  1376                           
  1377                           ;DISPLAY7.c: 41:             valorTMR0 = 177;
  1378  0155  30B1               	movlw	177
  1379  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1381  0158  00B3               	movwf	??_config2Display
  1382  0159  0833               	movf	??_config2Display,w
  1383  015A  00B0               	movwf	_valorTMR0
  1384                           
  1385                           ;DISPLAY7.c: 42:             break;
  1386  015B  29AA               	goto	l197
  1387  015C                     l1368:
  1388                           
  1389                           ;DISPLAY7.c: 44:             OSCCONbits.IRCF = 0b111;
  1390  015C  3070               	movlw	112
  1391  015D  1683               	bsf	3,5	;RP0=1, select bank1
  1392  015E  1303               	bcf	3,6	;RP1=0, select bank1
  1393  015F  048F               	iorwf	15,f	;volatile
  1394                           
  1395                           ;DISPLAY7.c: 45:             OPTION_REGbits.PS = 0b110;
  1396  0160  0801               	movf	1,w	;volatile
  1397  0161  39F8               	andlw	-8
  1398  0162  3806               	iorlw	6
  1399  0163  0081               	movwf	1	;volatile
  1400  0164                     l1370:
  1401                           
  1402                           ;DISPLAY7.c: 46:             valorTMR0 = 98;
  1403  0164  3062               	movlw	98
  1404  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0167  00B3               	movwf	??_config2Display
  1407  0168  0833               	movf	??_config2Display,w
  1408  0169  00B0               	movwf	_valorTMR0
  1409                           
  1410                           ;DISPLAY7.c: 47:             break;
  1411  016A  29AA               	goto	l197
  1412  016B                     l1372:
  1413                           
  1414                           ;DISPLAY7.c: 49:             OSCCONbits.IRCF = 0b110;
  1415  016B  1683               	bsf	3,5	;RP0=1, select bank1
  1416  016C  1303               	bcf	3,6	;RP1=0, select bank1
  1417  016D  080F               	movf	15,w	;volatile
  1418  016E  398F               	andlw	-113
  1419  016F  3860               	iorlw	96
  1420  0170  008F               	movwf	15	;volatile
  1421                           
  1422                           ;DISPLAY7.c: 50:     }
  1423  0171  29AA               	goto	l197
  1424  0172                     l1374:
  1425                           
  1426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  1427                           ; Switch size 1, requested type "simple"
  1428                           ; Number of cases is 6, Range of values is 0 to 31
  1429                           ; switch strategies available:
  1430                           ; Name         Instructions Cycles
  1431                           ; simple_byte           19    10 (average)
  1432                           ; direct_byte          104     8 (fixed)
  1433                           ; jumptable            260     6 (fixed)
  1434                           ;	Chosen strategy is simple_byte
  1435  0172  0832               	movf	config2Display@FreqOsc+1,w
  1436  0173  3A00               	xorlw	0	; case 0
  1437  0174  1903               	skipnz
  1438  0175  2986               	goto	l1858
  1439  0176  3A01               	xorlw	1	; case 1
  1440  0177  1903               	skipnz
  1441  0178  2991               	goto	l1860
  1442  0179  3A02               	xorlw	2	; case 3
  1443  017A  1903               	skipnz
  1444  017B  2996               	goto	l1862
  1445  017C  3A04               	xorlw	4	; case 7
  1446  017D  1903               	skipnz
  1447  017E  299B               	goto	l1864
  1448  017F  3A08               	xorlw	8	; case 15
  1449  0180  1903               	skipnz
  1450  0181  29A0               	goto	l1866
  1451  0182  3A10               	xorlw	16	; case 31
  1452  0183  1903               	skipnz
  1453  0184  29A5               	goto	l1868
  1454  0185  296B               	goto	l1372
  1455  0186                     l1858:
  1456                           
  1457                           ; Switch size 1, requested type "simple"
  1458                           ; Number of cases is 3, Range of values is 31 to 250
  1459                           ; switch strategies available:
  1460                           ; Name         Instructions Cycles
  1461                           ; simple_byte           10     6 (average)
  1462                           ; jumptable            263     9 (fixed)
  1463                           ;	Chosen strategy is simple_byte
  1464  0186  0831               	movf	config2Display@FreqOsc,w
  1465  0187  3A1F               	xorlw	31	; case 31
  1466  0188  1903               	skipnz
  1467  0189  2923               	goto	l1352
  1468  018A  3A62               	xorlw	98	; case 125
  1469  018B  1903               	skipnz
  1470  018C  2928               	goto	l1354
  1471  018D  3A87               	xorlw	135	; case 250
  1472  018E  1903               	skipnz
  1473  018F  292F               	goto	l1356
  1474  0190  296B               	goto	l1372
  1475  0191                     l1860:
  1476                           
  1477                           ; Switch size 1, requested type "simple"
  1478                           ; Number of cases is 1, Range of values is 244 to 244
  1479                           ; switch strategies available:
  1480                           ; Name         Instructions Cycles
  1481                           ; simple_byte            4     3 (average)
  1482                           ; direct_byte           14    11 (fixed)
  1483                           ; jumptable            263     9 (fixed)
  1484                           ;	Chosen strategy is simple_byte
  1485  0191  0831               	movf	config2Display@FreqOsc,w
  1486  0192  3AF4               	xorlw	244	; case 244
  1487  0193  1903               	skipnz
  1488  0194  2936               	goto	l1358
  1489  0195  296B               	goto	l1372
  1490  0196                     l1862:
  1491                           
  1492                           ; Switch size 1, requested type "simple"
  1493                           ; Number of cases is 1, Range of values is 232 to 232
  1494                           ; switch strategies available:
  1495                           ; Name         Instructions Cycles
  1496                           ; simple_byte            4     3 (average)
  1497                           ; direct_byte           14    11 (fixed)
  1498                           ; jumptable            263     9 (fixed)
  1499                           ;	Chosen strategy is simple_byte
  1500  0196  0831               	movf	config2Display@FreqOsc,w
  1501  0197  3AE8               	xorlw	232	; case 232
  1502  0198  1903               	skipnz
  1503  0199  293D               	goto	l1360
  1504  019A  296B               	goto	l1372
  1505  019B                     l1864:
  1506                           
  1507                           ; Switch size 1, requested type "simple"
  1508                           ; Number of cases is 1, Range of values is 208 to 208
  1509                           ; switch strategies available:
  1510                           ; Name         Instructions Cycles
  1511                           ; simple_byte            4     3 (average)
  1512                           ; direct_byte           14    11 (fixed)
  1513                           ; jumptable            263     9 (fixed)
  1514                           ;	Chosen strategy is simple_byte
  1515  019B  0831               	movf	config2Display@FreqOsc,w
  1516  019C  3AD0               	xorlw	208	; case 208
  1517  019D  1903               	skipnz
  1518  019E  2944               	goto	l1362
  1519  019F  296B               	goto	l1372
  1520  01A0                     l1866:
  1521                           
  1522                           ; Switch size 1, requested type "simple"
  1523                           ; Number of cases is 1, Range of values is 160 to 160
  1524                           ; switch strategies available:
  1525                           ; Name         Instructions Cycles
  1526                           ; simple_byte            4     3 (average)
  1527                           ; direct_byte           14    11 (fixed)
  1528                           ; jumptable            263     9 (fixed)
  1529                           ;	Chosen strategy is simple_byte
  1530  01A0  0831               	movf	config2Display@FreqOsc,w
  1531  01A1  3AA0               	xorlw	160	; case 160
  1532  01A2  1903               	skipnz
  1533  01A3  294B               	goto	l1364
  1534  01A4  296B               	goto	l1372
  1535  01A5                     l1868:
  1536                           
  1537                           ; Switch size 1, requested type "simple"
  1538                           ; Number of cases is 1, Range of values is 64 to 64
  1539                           ; switch strategies available:
  1540                           ; Name         Instructions Cycles
  1541                           ; simple_byte            4     3 (average)
  1542                           ; direct_byte           14    11 (fixed)
  1543                           ; jumptable            263     9 (fixed)
  1544                           ;	Chosen strategy is simple_byte
  1545  01A5  0831               	movf	config2Display@FreqOsc,w
  1546  01A6  3A40               	xorlw	64	; case 64
  1547  01A7  1903               	skipnz
  1548  01A8  295C               	goto	l1368
  1549  01A9  296B               	goto	l1372
  1550  01AA                     l197:
  1551                           
  1552                           ;DISPLAY7.c: 52:     OPTION_REGbits.T0CS = 0;
  1553  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1554  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  1555  01AC  1281               	bcf	1,5	;volatile
  1556                           
  1557                           ;DISPLAY7.c: 53:     OPTION_REGbits.T0SE = 0;
  1558  01AD  1201               	bcf	1,4	;volatile
  1559                           
  1560                           ;DISPLAY7.c: 54:     OPTION_REGbits.PSA = 0;
  1561  01AE  1181               	bcf	1,3	;volatile
  1562  01AF                     l1376:
  1563                           
  1564                           ;DISPLAY7.c: 55:     TMR0 = valorTMR0;
  1565  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1566  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1567  01B1  0830               	movf	_valorTMR0,w
  1568  01B2  0081               	movwf	1	;volatile
  1569  01B3                     l1378:
  1570                           
  1571                           ;DISPLAY7.c: 56:     INTCONbits.T0IF = 0;
  1572  01B3  110B               	bcf	11,2	;volatile
  1573  01B4                     l1380:
  1574                           
  1575                           ;DISPLAY7.c: 57:     INTCONbits.T0IE = 1;
  1576  01B4  168B               	bsf	11,5	;volatile
  1577  01B5                     l206:
  1578  01B5  0008               	return
  1579  01B6                     __end_of_config2Display:
  1580                           
  1581                           	psect	text5
  1582  030A                     __ptext5:	
  1583 ;; *************** function _AnalogRead_8 *****************
  1584 ;; Defined at:
  1585 ;;		line 89 in file "ADC.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  just            1    wreg     unsigned char 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  just            1    2[BANK0 ] unsigned char 
  1590 ;;  conversion      1    3[BANK0 ] unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      unsigned char 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         0       0       0       0       0
  1601 ;;      Locals:         0       2       0       0       0
  1602 ;;      Temps:          0       2       0       0       0
  1603 ;;      Totals:         0       4       0       0       0
  1604 ;;Total ram usage:        4 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    2
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _AnalogRead_8
  1616  030A                     _AnalogRead_8:
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _AnalogRead_8: [wreg-fsr0h+status,2+status,0]
  1620                           ;AnalogRead_8@just stored from wreg
  1621  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1622  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1623  030C  00B3               	movwf	AnalogRead_8@just
  1624  030D                     l1464:
  1625                           
  1626                           ;ADC.c: 91:     switch (just){
  1627  030D  2B1C               	goto	l1472
  1628  030E                     l1466:
  1629                           
  1630                           ;ADC.c: 93:             conversion = ADRESH;
  1631  030E  081E               	movf	30,w	;volatile
  1632  030F  00B1               	movwf	??_AnalogRead_8
  1633  0310  0831               	movf	??_AnalogRead_8,w
  1634  0311  00B4               	movwf	AnalogRead_8@conversion
  1635                           
  1636                           ;ADC.c: 94:             break;
  1637  0312  2B2C               	goto	l1474
  1638  0313                     l1468:
  1639                           
  1640                           ;ADC.c: 96:             conversion = ADRESL;
  1641  0313  1683               	bsf	3,5	;RP0=1, select bank1
  1642  0314  1303               	bcf	3,6	;RP1=0, select bank1
  1643  0315  081E               	movf	30,w	;volatile
  1644  0316  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0317  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0318  00B1               	movwf	??_AnalogRead_8
  1647  0319  0831               	movf	??_AnalogRead_8,w
  1648  031A  00B4               	movwf	AnalogRead_8@conversion
  1649                           
  1650                           ;ADC.c: 97:             break;
  1651  031B  2B2C               	goto	l1474
  1652  031C                     l1472:
  1653  031C  0833               	movf	AnalogRead_8@just,w
  1654  031D  00B1               	movwf	??_AnalogRead_8
  1655  031E  01B2               	clrf	??_AnalogRead_8+1
  1656                           
  1657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1658                           ; Switch size 1, requested type "simple"
  1659                           ; Number of cases is 1, Range of values is 0 to 0
  1660                           ; switch strategies available:
  1661                           ; Name         Instructions Cycles
  1662                           ; simple_byte            4     3 (average)
  1663                           ; direct_byte           11     8 (fixed)
  1664                           ; jumptable            260     6 (fixed)
  1665                           ;	Chosen strategy is simple_byte
  1666  031F  0832               	movf	??_AnalogRead_8+1,w
  1667  0320  3A00               	xorlw	0	; case 0
  1668  0321  1903               	skipnz
  1669  0322  2B24               	goto	l1870
  1670  0323  2B0E               	goto	l1466
  1671  0324                     l1870:
  1672                           
  1673                           ; Switch size 1, requested type "simple"
  1674                           ; Number of cases is 2, Range of values is 72 to 76
  1675                           ; switch strategies available:
  1676                           ; Name         Instructions Cycles
  1677                           ; simple_byte            7     4 (average)
  1678                           ; direct_byte           26    11 (fixed)
  1679                           ; jumptable            263     9 (fixed)
  1680                           ;	Chosen strategy is simple_byte
  1681  0324  0831               	movf	??_AnalogRead_8,w
  1682  0325  3A48               	xorlw	72	; case 72
  1683  0326  1903               	skipnz
  1684  0327  2B0E               	goto	l1466
  1685  0328  3A04               	xorlw	4	; case 76
  1686  0329  1903               	skipnz
  1687  032A  2B13               	goto	l1468
  1688  032B  2B0E               	goto	l1466
  1689  032C                     l1474:
  1690                           
  1691                           ;ADC.c: 101:     return (conversion);
  1692  032C  0834               	movf	AnalogRead_8@conversion,w
  1693  032D                     l169:
  1694  032D  0008               	return
  1695  032E                     __end_of_AnalogRead_8:
  1696                           
  1697                           	psect	text6
  1698  002A                     __ptext6:	
  1699 ;; *************** function _ADConfig *****************
  1700 ;; Defined at:
  1701 ;;		line 10 in file "ADC.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  oscFreq         1    wreg     unsigned char 
  1704 ;;  canal           1    0[BANK0 ] unsigned char 
  1705 ;;  justificado     1    1[BANK0 ] unsigned char 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  oscFreq         1    4[BANK0 ] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       2       0       0       0
  1718 ;;      Locals:         0       1       0       0       0
  1719 ;;      Temps:          0       2       0       0       0
  1720 ;;      Totals:         0       5       0       0       0
  1721 ;;Total ram usage:        5 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    2
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           
  1732                           ;psect for function _ADConfig
  1733  002A                     _ADConfig:
  1734                           
  1735                           ;incstack = 0
  1736                           ; Regs used in _ADConfig: [wreg-fsr0h+status,2+status,0]
  1737                           ;ADConfig@oscFreq stored from wreg
  1738  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1739  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1740  002C  00B5               	movwf	ADConfig@oscFreq
  1741  002D                     l1406:
  1742                           
  1743                           ;ADC.c: 11:     switch(oscFreq){
  1744  002D  2843               	goto	l1418
  1745  002E                     l1408:
  1746                           
  1747                           ;ADC.c: 13:             ADCON0bits.ADCS = 0b00;
  1748  002E  303F               	movlw	-193
  1749  002F  059F               	andwf	31,f	;volatile
  1750                           
  1751                           ;ADC.c: 14:             break;
  1752  0030  2865               	goto	l1420
  1753  0031                     l1410:
  1754                           
  1755                           ;ADC.c: 16:             ADCON0bits.ADCS = 0b01;
  1756  0031  081F               	movf	31,w	;volatile
  1757  0032  393F               	andlw	-193
  1758  0033  3840               	iorlw	64
  1759  0034  009F               	movwf	31	;volatile
  1760                           
  1761                           ;ADC.c: 17:             break;
  1762  0035  2865               	goto	l1420
  1763  0036                     l1412:
  1764                           
  1765                           ;ADC.c: 19:             ADCON0bits.ADCS = 0b10;
  1766  0036  081F               	movf	31,w	;volatile
  1767  0037  393F               	andlw	-193
  1768  0038  3880               	iorlw	128
  1769  0039  009F               	movwf	31	;volatile
  1770                           
  1771                           ;ADC.c: 20:             break;
  1772  003A  2865               	goto	l1420
  1773  003B                     l1414:
  1774                           
  1775                           ;ADC.c: 22:             ADCON0bits.ADCS = 0b11;
  1776  003B  30C0               	movlw	192
  1777  003C  049F               	iorwf	31,f	;volatile
  1778                           
  1779                           ;ADC.c: 23:             break;
  1780  003D  2865               	goto	l1420
  1781  003E                     l1416:
  1782                           
  1783                           ;ADC.c: 25:             ADCON0bits.ADCS = 0b01;
  1784  003E  081F               	movf	31,w	;volatile
  1785  003F  393F               	andlw	-193
  1786  0040  3840               	iorlw	64
  1787  0041  009F               	movwf	31	;volatile
  1788                           
  1789                           ;ADC.c: 26:     }
  1790  0042  2865               	goto	l1420
  1791  0043                     l1418:
  1792  0043  0835               	movf	ADConfig@oscFreq,w
  1793  0044  00B3               	movwf	??_ADConfig
  1794  0045  01B4               	clrf	??_ADConfig+1
  1795                           
  1796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1797                           ; Switch size 1, requested type "simple"
  1798                           ; Number of cases is 1, Range of values is 0 to 0
  1799                           ; switch strategies available:
  1800                           ; Name         Instructions Cycles
  1801                           ; simple_byte            4     3 (average)
  1802                           ; direct_byte           11     8 (fixed)
  1803                           ; jumptable            260     6 (fixed)
  1804                           ;	Chosen strategy is simple_byte
  1805  0046  0834               	movf	??_ADConfig+1,w
  1806  0047  3A00               	xorlw	0	; case 0
  1807  0048  1903               	skipnz
  1808  0049  284B               	goto	l1872
  1809  004A  283E               	goto	l1416
  1810  004B                     l1872:
  1811                           
  1812                           ; Switch size 1, requested type "simple"
  1813                           ; Number of cases is 4, Range of values is 1 to 20
  1814                           ; switch strategies available:
  1815                           ; Name         Instructions Cycles
  1816                           ; simple_byte           13     7 (average)
  1817                           ; direct_byte           71    11 (fixed)
  1818                           ; jumptable            263     9 (fixed)
  1819                           ;	Chosen strategy is simple_byte
  1820  004B  0833               	movf	??_ADConfig,w
  1821  004C  3A01               	xorlw	1	; case 1
  1822  004D  1903               	skipnz
  1823  004E  282E               	goto	l1408
  1824  004F  3A05               	xorlw	5	; case 4
  1825  0050  1903               	skipnz
  1826  0051  2831               	goto	l1410
  1827  0052  3A0C               	xorlw	12	; case 8
  1828  0053  1903               	skipnz
  1829  0054  2836               	goto	l1412
  1830  0055  3A1C               	xorlw	28	; case 20
  1831  0056  1903               	skipnz
  1832  0057  283B               	goto	l1414
  1833  0058  283E               	goto	l1416
  1834  0059                     l147:	
  1835                           ;ADC.c: 28:         case 'H':
  1836                           
  1837                           
  1838                           ;ADC.c: 29:             ADCON1bits.ADFM = 0;
  1839  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1840  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1841  005B  139F               	bcf	31,7	;volatile
  1842                           
  1843                           ;ADC.c: 30:             break;
  1844  005C  28DB               	goto	l1440
  1845  005D                     l149:	
  1846                           ;ADC.c: 31:         case 'L':
  1847                           
  1848                           
  1849                           ;ADC.c: 32:             ADCON1bits.ADFM = 1;
  1850  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1851  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1852  005F  179F               	bsf	31,7	;volatile
  1853                           
  1854                           ;ADC.c: 33:             break;
  1855  0060  28DB               	goto	l1440
  1856  0061                     l150:	
  1857                           ;ADC.c: 34:         default:
  1858                           
  1859                           
  1860                           ;ADC.c: 35:             ADCON1bits.ADFM = 0;
  1861  0061  1683               	bsf	3,5	;RP0=1, select bank1
  1862  0062  1303               	bcf	3,6	;RP1=0, select bank1
  1863  0063  139F               	bcf	31,7	;volatile
  1864                           
  1865                           ;ADC.c: 36:     }
  1866  0064  28DB               	goto	l1440
  1867  0065                     l1420:
  1868  0065  0832               	movf	ADConfig@justificado,w
  1869  0066  00B3               	movwf	??_ADConfig
  1870  0067  01B4               	clrf	??_ADConfig+1
  1871                           
  1872                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1873                           ; Switch size 1, requested type "simple"
  1874                           ; Number of cases is 1, Range of values is 0 to 0
  1875                           ; switch strategies available:
  1876                           ; Name         Instructions Cycles
  1877                           ; simple_byte            4     3 (average)
  1878                           ; direct_byte           11     8 (fixed)
  1879                           ; jumptable            260     6 (fixed)
  1880                           ;	Chosen strategy is simple_byte
  1881  0068  0834               	movf	??_ADConfig+1,w
  1882  0069  3A00               	xorlw	0	; case 0
  1883  006A  1903               	skipnz
  1884  006B  286D               	goto	l1874
  1885  006C  2861               	goto	l150
  1886  006D                     l1874:
  1887                           
  1888                           ; Switch size 1, requested type "simple"
  1889                           ; Number of cases is 2, Range of values is 72 to 76
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte            7     4 (average)
  1893                           ; direct_byte           26    11 (fixed)
  1894                           ; jumptable            263     9 (fixed)
  1895                           ;	Chosen strategy is simple_byte
  1896  006D  0833               	movf	??_ADConfig,w
  1897  006E  3A48               	xorlw	72	; case 72
  1898  006F  1903               	skipnz
  1899  0070  2859               	goto	l147
  1900  0071  3A04               	xorlw	4	; case 76
  1901  0072  1903               	skipnz
  1902  0073  285D               	goto	l149
  1903  0074  2861               	goto	l150
  1904  0075                     l152:	
  1905                           ;ADC.c: 38:         case 0:
  1906                           
  1907                           
  1908                           ;ADC.c: 39:             TRISAbits.TRISA0 = 1;
  1909  0075  1683               	bsf	3,5	;RP0=1, select bank1
  1910  0076  1303               	bcf	3,6	;RP1=0, select bank1
  1911  0077  1405               	bsf	5,0	;volatile
  1912                           
  1913                           ;ADC.c: 40:             ANSELbits.ANS0 = 1;
  1914  0078  1683               	bsf	3,5	;RP0=1, select bank3
  1915  0079  1703               	bsf	3,6	;RP1=1, select bank3
  1916  007A  1408               	bsf	8,0	;volatile
  1917  007B                     l1422:
  1918                           
  1919                           ;ADC.c: 41:             ADCON0bits.CHS = 0;
  1920  007B  30C3               	movlw	-61
  1921  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1922  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1923  007E  059F               	andwf	31,f	;volatile
  1924                           
  1925                           ;ADC.c: 42:             break;
  1926  007F  28FF               	goto	l153
  1927  0080                     l154:	
  1928                           ;ADC.c: 43:         case 1:
  1929                           
  1930                           
  1931                           ;ADC.c: 44:             TRISAbits.TRISA1 = 1;
  1932  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1933  0081  1303               	bcf	3,6	;RP1=0, select bank1
  1934  0082  1485               	bsf	5,1	;volatile
  1935                           
  1936                           ;ADC.c: 45:             ANSELbits.ANS1 = 1;
  1937  0083  1683               	bsf	3,5	;RP0=1, select bank3
  1938  0084  1703               	bsf	3,6	;RP1=1, select bank3
  1939  0085  1488               	bsf	8,1	;volatile
  1940  0086                     l1424:
  1941                           
  1942                           ;ADC.c: 46:             ADCON0bits.CHS = 1;
  1943  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0088  081F               	movf	31,w	;volatile
  1946  0089  39C3               	andlw	-61
  1947  008A  3804               	iorlw	4
  1948  008B  009F               	movwf	31	;volatile
  1949                           
  1950                           ;ADC.c: 47:             break;
  1951  008C  28FF               	goto	l153
  1952  008D                     l155:	
  1953                           ;ADC.c: 48:         case 2:
  1954                           
  1955                           
  1956                           ;ADC.c: 49:             TRISAbits.TRISA2 = 1;
  1957  008D  1683               	bsf	3,5	;RP0=1, select bank1
  1958  008E  1303               	bcf	3,6	;RP1=0, select bank1
  1959  008F  1505               	bsf	5,2	;volatile
  1960                           
  1961                           ;ADC.c: 50:             ANSELbits.ANS2 = 1;
  1962  0090  1683               	bsf	3,5	;RP0=1, select bank3
  1963  0091  1703               	bsf	3,6	;RP1=1, select bank3
  1964  0092  1508               	bsf	8,2	;volatile
  1965  0093                     l1426:
  1966                           
  1967                           ;ADC.c: 51:             ADCON0bits.CHS = 2;
  1968  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0095  081F               	movf	31,w	;volatile
  1971  0096  39C3               	andlw	-61
  1972  0097  3808               	iorlw	8
  1973  0098  009F               	movwf	31	;volatile
  1974                           
  1975                           ;ADC.c: 52:             break;
  1976  0099  28FF               	goto	l153
  1977  009A                     l156:	
  1978                           ;ADC.c: 53:         case 3:
  1979                           
  1980                           
  1981                           ;ADC.c: 54:             TRISAbits.TRISA3 = 1;
  1982  009A  1683               	bsf	3,5	;RP0=1, select bank1
  1983  009B  1303               	bcf	3,6	;RP1=0, select bank1
  1984  009C  1585               	bsf	5,3	;volatile
  1985                           
  1986                           ;ADC.c: 55:             ANSELbits.ANS3 = 1;
  1987  009D  1683               	bsf	3,5	;RP0=1, select bank3
  1988  009E  1703               	bsf	3,6	;RP1=1, select bank3
  1989  009F  1588               	bsf	8,3	;volatile
  1990  00A0                     l1428:
  1991                           
  1992                           ;ADC.c: 56:             ADCON0bits.CHS = 3;
  1993  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1994  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1995  00A2  081F               	movf	31,w	;volatile
  1996  00A3  39C3               	andlw	-61
  1997  00A4  380C               	iorlw	12
  1998  00A5  009F               	movwf	31	;volatile
  1999                           
  2000                           ;ADC.c: 57:             break;
  2001  00A6  28FF               	goto	l153
  2002  00A7                     l157:	
  2003                           ;ADC.c: 58:         case 4:
  2004                           
  2005                           
  2006                           ;ADC.c: 59:             TRISAbits.TRISA5 = 1;
  2007  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  2008  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  2009  00A9  1685               	bsf	5,5	;volatile
  2010                           
  2011                           ;ADC.c: 60:             ANSELbits.ANS4 = 1;
  2012  00AA  1683               	bsf	3,5	;RP0=1, select bank3
  2013  00AB  1703               	bsf	3,6	;RP1=1, select bank3
  2014  00AC  1608               	bsf	8,4	;volatile
  2015  00AD                     l1430:
  2016                           
  2017                           ;ADC.c: 61:             ADCON0bits.CHS = 3;
  2018  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  2019  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  2020  00AF  081F               	movf	31,w	;volatile
  2021  00B0  39C3               	andlw	-61
  2022  00B1  380C               	iorlw	12
  2023  00B2  009F               	movwf	31	;volatile
  2024                           
  2025                           ;ADC.c: 62:             break;
  2026  00B3  28FF               	goto	l153
  2027  00B4                     l158:	
  2028                           ;ADC.c: 63:         case 5:
  2029                           
  2030                           
  2031                           ;ADC.c: 64:             TRISEbits.TRISE0 = 1;
  2032  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  2033  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  2034  00B6  1409               	bsf	9,0	;volatile
  2035                           
  2036                           ;ADC.c: 65:             ANSELbits.ANS5 = 1;
  2037  00B7  1683               	bsf	3,5	;RP0=1, select bank3
  2038  00B8  1703               	bsf	3,6	;RP1=1, select bank3
  2039  00B9  1688               	bsf	8,5	;volatile
  2040  00BA                     l1432:
  2041                           
  2042                           ;ADC.c: 66:             ADCON0bits.CHS = 5;
  2043  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  2044  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  2045  00BC  081F               	movf	31,w	;volatile
  2046  00BD  39C3               	andlw	-61
  2047  00BE  3814               	iorlw	20
  2048  00BF  009F               	movwf	31	;volatile
  2049                           
  2050                           ;ADC.c: 67:             break;
  2051  00C0  28FF               	goto	l153
  2052  00C1                     l159:	
  2053                           ;ADC.c: 68:         case 6:
  2054                           
  2055                           
  2056                           ;ADC.c: 69:             TRISEbits.TRISE1 = 1;
  2057  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  2058  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  2059  00C3  1489               	bsf	9,1	;volatile
  2060                           
  2061                           ;ADC.c: 70:             ANSELbits.ANS6 = 1;
  2062  00C4  1683               	bsf	3,5	;RP0=1, select bank3
  2063  00C5  1703               	bsf	3,6	;RP1=1, select bank3
  2064  00C6  1708               	bsf	8,6	;volatile
  2065  00C7                     l1434:
  2066                           
  2067                           ;ADC.c: 71:             ADCON0bits.CHS = 6;
  2068  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2069  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2070  00C9  081F               	movf	31,w	;volatile
  2071  00CA  39C3               	andlw	-61
  2072  00CB  3818               	iorlw	24
  2073  00CC  009F               	movwf	31	;volatile
  2074                           
  2075                           ;ADC.c: 72:             break;
  2076  00CD  28FF               	goto	l153
  2077  00CE                     l160:	
  2078                           ;ADC.c: 73:         case 7:
  2079                           
  2080                           
  2081                           ;ADC.c: 74:             TRISEbits.TRISE2 = 1;
  2082  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  2083  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  2084  00D0  1509               	bsf	9,2	;volatile
  2085                           
  2086                           ;ADC.c: 75:             ANSELbits.ANS7 = 1;
  2087  00D1  1683               	bsf	3,5	;RP0=1, select bank3
  2088  00D2  1703               	bsf	3,6	;RP1=1, select bank3
  2089  00D3  1788               	bsf	8,7	;volatile
  2090  00D4                     l1436:
  2091                           
  2092                           ;ADC.c: 76:             ADCON0bits.CHS = 7;
  2093  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  2094  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  2095  00D6  081F               	movf	31,w	;volatile
  2096  00D7  39C3               	andlw	-61
  2097  00D8  381C               	iorlw	28
  2098  00D9  009F               	movwf	31	;volatile
  2099                           
  2100                           ;ADC.c: 77:             break;
  2101  00DA  28FF               	goto	l153
  2102  00DB                     l1440:
  2103  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  2104  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  2105  00DD  0831               	movf	ADConfig@canal,w
  2106  00DE  00B3               	movwf	??_ADConfig
  2107  00DF  01B4               	clrf	??_ADConfig+1
  2108                           
  2109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2110                           ; Switch size 1, requested type "simple"
  2111                           ; Number of cases is 1, Range of values is 0 to 0
  2112                           ; switch strategies available:
  2113                           ; Name         Instructions Cycles
  2114                           ; simple_byte            4     3 (average)
  2115                           ; direct_byte           11     8 (fixed)
  2116                           ; jumptable            260     6 (fixed)
  2117                           ;	Chosen strategy is simple_byte
  2118  00E0  0834               	movf	??_ADConfig+1,w
  2119  00E1  3A00               	xorlw	0	; case 0
  2120  00E2  1903               	skipnz
  2121  00E3  28E5               	goto	l1876
  2122  00E4  28FF               	goto	l153
  2123  00E5                     l1876:
  2124                           
  2125                           ; Switch size 1, requested type "simple"
  2126                           ; Number of cases is 8, Range of values is 0 to 7
  2127                           ; switch strategies available:
  2128                           ; Name         Instructions Cycles
  2129                           ; simple_byte           25    13 (average)
  2130                           ; direct_byte           32     8 (fixed)
  2131                           ; jumptable            260     6 (fixed)
  2132                           ;	Chosen strategy is simple_byte
  2133  00E5  0833               	movf	??_ADConfig,w
  2134  00E6  3A00               	xorlw	0	; case 0
  2135  00E7  1903               	skipnz
  2136  00E8  2875               	goto	l152
  2137  00E9  3A01               	xorlw	1	; case 1
  2138  00EA  1903               	skipnz
  2139  00EB  2880               	goto	l154
  2140  00EC  3A03               	xorlw	3	; case 2
  2141  00ED  1903               	skipnz
  2142  00EE  288D               	goto	l155
  2143  00EF  3A01               	xorlw	1	; case 3
  2144  00F0  1903               	skipnz
  2145  00F1  289A               	goto	l156
  2146  00F2  3A07               	xorlw	7	; case 4
  2147  00F3  1903               	skipnz
  2148  00F4  28A7               	goto	l157
  2149  00F5  3A01               	xorlw	1	; case 5
  2150  00F6  1903               	skipnz
  2151  00F7  28B4               	goto	l158
  2152  00F8  3A03               	xorlw	3	; case 6
  2153  00F9  1903               	skipnz
  2154  00FA  28C1               	goto	l159
  2155  00FB  3A01               	xorlw	1	; case 7
  2156  00FC  1903               	skipnz
  2157  00FD  28CE               	goto	l160
  2158  00FE  28FF               	goto	l153
  2159  00FF                     l153:
  2160                           
  2161                           ;ADC.c: 81:     ADCON0bits.ADON = 1;
  2162  00FF  141F               	bsf	31,0	;volatile
  2163                           
  2164                           ;ADC.c: 82:     PIR1bits.ADIF = 0;
  2165  0100  130C               	bcf	12,6	;volatile
  2166                           
  2167                           ;ADC.c: 83:     PIE1bits.ADIE = 1;
  2168  0101  1683               	bsf	3,5	;RP0=1, select bank1
  2169  0102  1303               	bcf	3,6	;RP1=0, select bank1
  2170  0103  170C               	bsf	12,6	;volatile
  2171                           
  2172                           ;ADC.c: 84:     INTCONbits.PEIE = 1;
  2173  0104  170B               	bsf	11,6	;volatile
  2174  0105                     l1442:
  2175                           
  2176                           ;ADC.c: 85:     _delay((unsigned long)((30)*(4000000/4000.0)));
  2177  0105  3027               	movlw	39
  2178  0106  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0107  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0108  00B4               	movwf	??_ADConfig+1
  2181  0109  30F4               	movlw	244
  2182  010A  00B3               	movwf	??_ADConfig
  2183  010B                     u477:
  2184  010B  0BB3               	decfsz	??_ADConfig,f
  2185  010C  290B               	goto	u477
  2186  010D  0BB4               	decfsz	??_ADConfig+1,f
  2187  010E  290B               	goto	u477
  2188  010F  0000               	nop
  2189  0110                     l1444:
  2190                           
  2191                           ;ADC.c: 86:     ADCON0bits.GO_nDONE = 1;
  2192  0110  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0111  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0112  149F               	bsf	31,1	;volatile
  2195  0113                     l161:
  2196  0113  0008               	return
  2197  0114                     __end_of_ADConfig:
  2198                           
  2199                           	psect	text7
  2200  034C                     __ptext7:	
  2201 ;; *************** function _ADCinit *****************
  2202 ;; Defined at:
  2203 ;;		line 104 in file "ADC.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2217 ;;      Params:         0       0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0
  2219 ;;      Temps:          0       2       0       0       0
  2220 ;;      Totals:         0       2       0       0       0
  2221 ;;Total ram usage:        2 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    2
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_main
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           
  2232                           ;psect for function _ADCinit
  2233  034C                     _ADCinit:
  2234  034C                     l1484:	
  2235                           ;incstack = 0
  2236                           ; Regs used in _ADCinit: [wreg]
  2237                           
  2238                           
  2239                           ;ADC.c: 105:     PIR1bits.ADIF = 0;
  2240  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2241  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2242  034E  130C               	bcf	12,6	;volatile
  2243                           
  2244                           ;ADC.c: 106:     PIE1bits.ADIE = 1;
  2245  034F  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0350  1303               	bcf	3,6	;RP1=0, select bank1
  2247  0351  170C               	bsf	12,6	;volatile
  2248  0352                     l1486:
  2249                           
  2250                           ;ADC.c: 107:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2251  0352  301A               	movlw	26
  2252  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2254  0355  00B2               	movwf	??_ADCinit+1
  2255  0356  30F7               	movlw	247
  2256  0357  00B1               	movwf	??_ADCinit
  2257  0358                     u487:
  2258  0358  0BB1               	decfsz	??_ADCinit,f
  2259  0359  2B58               	goto	u487
  2260  035A  0BB2               	decfsz	??_ADCinit+1,f
  2261  035B  2B58               	goto	u487
  2262  035C  2B5D               	nop2
  2263  035D                     l1488:
  2264                           
  2265                           ;ADC.c: 108:     ADCON0bits.GO_nDONE = 1;
  2266  035D  1283               	bcf	3,5	;RP0=0, select bank0
  2267  035E  1303               	bcf	3,6	;RP1=0, select bank0
  2268  035F  149F               	bsf	31,1	;volatile
  2269  0360                     l172:
  2270  0360  0008               	return
  2271  0361                     __end_of_ADCinit:
  2272                           
  2273                           	psect	text8
  2274  0222                     __ptext8:	
  2275 ;; *************** function _ISR *****************
  2276 ;; Defined at:
  2277 ;;		line 44 in file "Principal2.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2291 ;;      Params:         0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0
  2293 ;;      Temps:          5       0       0       0       0
  2294 ;;      Totals:         5       0       0       0       0
  2295 ;;Total ram usage:        5 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    1
  2298 ;; This function calls:
  2299 ;;		_cambioDisplay
  2300 ;; This function is called by:
  2301 ;;		Interrupt level 1
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function _ISR
  2307  0222                     _ISR:
  2308  0222                     i1l1540:
  2309                           
  2310                           ;Principal2.c: 46:     if (PIR1bits.ADIF && PIE1bits.ADIE){
  2311  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0224  1F0C               	btfss	12,6	;volatile
  2314  0225  2A27               	goto	u32_21
  2315  0226  2A28               	goto	u32_20
  2316  0227                     u32_21:
  2317  0227  2A33               	goto	i1l79
  2318  0228                     u32_20:
  2319  0228                     i1l1542:
  2320  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2322  022A  1F0C               	btfss	12,6	;volatile
  2323  022B  2A2D               	goto	u33_21
  2324  022C  2A2E               	goto	u33_20
  2325  022D                     u33_21:
  2326  022D  2A33               	goto	i1l79
  2327  022E                     u33_20:
  2328  022E                     i1l1544:
  2329                           
  2330                           ;Principal2.c: 47:         PIE1bits.ADIE = 0;
  2331  022E  130C               	bcf	12,6	;volatile
  2332                           
  2333                           ;Principal2.c: 48:         banderaADC = 1;
  2334  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0231  01BB               	clrf	_banderaADC
  2337  0232  0ABB               	incf	_banderaADC,f
  2338  0233                     i1l79:	
  2339                           ;Principal2.c: 49:     }
  2340                           
  2341                           
  2342                           ;Principal2.c: 51:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
  2343  0233  1C0B               	btfss	11,0	;volatile
  2344  0234  2A36               	goto	u34_21
  2345  0235  2A37               	goto	u34_20
  2346  0236                     u34_21:
  2347  0236  2A44               	goto	i1l80
  2348  0237                     u34_20:
  2349  0237                     i1l1546:
  2350  0237  1D8B               	btfss	11,3	;volatile
  2351  0238  2A3A               	goto	u35_21
  2352  0239  2A3B               	goto	u35_20
  2353  023A                     u35_21:
  2354  023A  2A44               	goto	i1l80
  2355  023B                     u35_20:
  2356  023B                     i1l1548:
  2357                           
  2358                           ;Principal2.c: 52:         INTCONbits.RBIF = 0;
  2359  023B  100B               	bcf	11,0	;volatile
  2360  023C                     i1l1550:
  2361                           
  2362                           ;Principal2.c: 53:         if (banderaBoton == 0){
  2363  023C  087D               	movf	_banderaBoton,w
  2364  023D  1D03               	btfss	3,2
  2365  023E  2A40               	goto	u36_21
  2366  023F  2A41               	goto	u36_20
  2367  0240                     u36_21:
  2368  0240  2A44               	goto	i1l80
  2369  0241                     u36_20:
  2370  0241                     i1l1552:
  2371                           
  2372                           ;Principal2.c: 54:             banderaBoton = 1;
  2373  0241  01FD               	clrf	_banderaBoton
  2374  0242  0AFD               	incf	_banderaBoton,f
  2375                           
  2376                           ;Principal2.c: 55:             INTCONbits.RBIE = 0;
  2377  0243  118B               	bcf	11,3	;volatile
  2378  0244                     i1l80:	
  2379                           ;Principal2.c: 57:     }
  2380                           
  2381                           
  2382                           ;Principal2.c: 59:     if (INTCONbits.T0IF == 1 && INTCONbits.T0IE == 1){
  2383  0244  1D0B               	btfss	11,2	;volatile
  2384  0245  2A47               	goto	u37_21
  2385  0246  2A48               	goto	u37_20
  2386  0247                     u37_21:
  2387  0247  2A5D               	goto	i1l83
  2388  0248                     u37_20:
  2389  0248                     i1l1554:
  2390  0248  1E8B               	btfss	11,5	;volatile
  2391  0249  2A4B               	goto	u38_21
  2392  024A  2A4C               	goto	u38_20
  2393  024B                     u38_21:
  2394  024B  2A5D               	goto	i1l83
  2395  024C                     u38_20:
  2396  024C                     i1l1556:
  2397                           
  2398                           ;Principal2.c: 60:         banderaTMR0 = ~banderaTMR0;
  2399  024C  09FA               	comf	_banderaTMR0,f
  2400  024D                     i1l1558:
  2401                           
  2402                           ;Principal2.c: 61:         cambioDisplay(valorDisplay_Uni, valorDisplay_Dec, banderaTMR0
      +                          );
  2403  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2404  024E  083A               	movf	_valorDisplay_Dec,w
  2405  024F  00F5               	movwf	??_ISR
  2406  0250  0875               	movf	??_ISR,w
  2407  0251  00F0               	movwf	cambioDisplay@valDec
  2408  0252  087A               	movf	_banderaTMR0,w
  2409  0253  00F6               	movwf	??_ISR+1
  2410  0254  0876               	movf	??_ISR+1,w
  2411  0255  00F1               	movwf	cambioDisplay@bandera
  2412  0256  0839               	movf	_valorDisplay_Uni,w
  2413  0257  120A  118A  22DE  120A  118A  	fcall	_cambioDisplay
  2414  025C                     i1l1560:
  2415                           
  2416                           ;Principal2.c: 62:         INTCONbits.T0IF = 0;
  2417  025C  110B               	bcf	11,2	;volatile
  2418  025D                     i1l83:
  2419  025D  0879               	movf	??_ISR+4,w
  2420  025E  008A               	movwf	10
  2421  025F  0878               	movf	??_ISR+3,w
  2422  0260  0084               	movwf	4
  2423  0261  0E77               	swapf	??_ISR+2,w
  2424  0262  0083               	movwf	3
  2425  0263  0EFE               	swapf	btemp,f
  2426  0264  0E7E               	swapf	btemp,w
  2427  0265  0009               	retfie
  2428  0266                     __end_of_ISR:
  2429                           
  2430                           	psect	intentry
  2431  0004                     __pintentry:	
  2432                           ;incstack = 0
  2433                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2434                           
  2435  0004                     interrupt_function:
  2436  007E                     saved_w	set	btemp
  2437  0004  00FE               	movwf	btemp
  2438  0005  0E03               	swapf	3,w
  2439  0006  00F7               	movwf	??_ISR+2
  2440  0007  0804               	movf	4,w
  2441  0008  00F8               	movwf	??_ISR+3
  2442  0009  080A               	movf	10,w
  2443  000A  00F9               	movwf	??_ISR+4
  2444  000B  120A  118A  2A22   	ljmp	_ISR
  2445                           
  2446                           	psect	text9
  2447  02DE                     __ptext9:	
  2448 ;; *************** function _cambioDisplay *****************
  2449 ;; Defined at:
  2450 ;;		line 61 in file "DISPLAY7.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  valUni          1    wreg     unsigned char 
  2453 ;;  valDec          1    0[COMMON] unsigned char 
  2454 ;;  bandera         1    1[COMMON] unsigned char 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  valUni          1    4[COMMON] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         2       0       0       0       0
  2467 ;;      Locals:         1       0       0       0       0
  2468 ;;      Temps:          2       0       0       0       0
  2469 ;;      Totals:         5       0       0       0       0
  2470 ;;Total ram usage:        5 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_ISR
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function _cambioDisplay
  2481  02DE                     _cambioDisplay:
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _cambioDisplay: [wreg-fsr0h+status,2+status,0]
  2485                           ;cambioDisplay@valUni stored from wreg
  2486  02DE  00F4               	movwf	cambioDisplay@valUni
  2487  02DF                     i1l1308:
  2488                           
  2489                           ;DISPLAY7.c: 62:     TMR0 = valorTMR0;
  2490  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2491  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2492  02E1  0830               	movf	_valorTMR0,w
  2493  02E2  0081               	movwf	1	;volatile
  2494                           
  2495                           ;DISPLAY7.c: 66:     switch (bandera){
  2496  02E3  2AF9               	goto	i1l1320
  2497  02E4                     i1l210:	
  2498                           ;DISPLAY7.c: 67:         case 0:
  2499                           
  2500                           
  2501                           ;DISPLAY7.c: 68:             PORTCbits.RC0 = 0;
  2502  02E4  1007               	bcf	7,0	;volatile
  2503  02E5                     i1l1310:
  2504                           
  2505                           ;DISPLAY7.c: 69:             PORTD = numerosDisplay[valUni];
  2506  02E5  0874               	movf	cambioDisplay@valUni,w
  2507  02E6  3E20               	addlw	(low (_numerosDisplay| 0))& (0+255)
  2508  02E7  0084               	movwf	4
  2509  02E8  1383               	bcf	3,7	;select IRP bank0
  2510  02E9  0800               	movf	0,w
  2511  02EA  0088               	movwf	8	;volatile
  2512  02EB                     i1l1312:
  2513                           
  2514                           ;DISPLAY7.c: 70:             PORTCbits.RC2 = 1;
  2515  02EB  1507               	bsf	7,2	;volatile
  2516                           
  2517                           ;DISPLAY7.c: 71:             break;
  2518  02EC  2B09               	goto	i1l214
  2519  02ED                     i1l212:	
  2520                           ;DISPLAY7.c: 72:         case 255:
  2521                           
  2522                           
  2523                           ;DISPLAY7.c: 73:             PORTCbits.RC2 = 0;
  2524  02ED  1107               	bcf	7,2	;volatile
  2525  02EE                     i1l1314:
  2526                           
  2527                           ;DISPLAY7.c: 74:             PORTD = numerosDisplay[valDec];
  2528  02EE  0870               	movf	cambioDisplay@valDec,w
  2529  02EF  3E20               	addlw	(low (_numerosDisplay| 0))& (0+255)
  2530  02F0  0084               	movwf	4
  2531  02F1  1383               	bcf	3,7	;select IRP bank0
  2532  02F2  0800               	movf	0,w
  2533  02F3  0088               	movwf	8	;volatile
  2534  02F4                     i1l1316:
  2535                           
  2536                           ;DISPLAY7.c: 75:             PORTCbits.RC0 = 1;
  2537  02F4  1407               	bsf	7,0	;volatile
  2538                           
  2539                           ;DISPLAY7.c: 76:             break;
  2540  02F5  2B09               	goto	i1l214
  2541  02F6                     i1l1318:
  2542                           
  2543                           ;DISPLAY7.c: 78:             PORTD = PORTD;
  2544  02F6  0808               	movf	8,w	;volatile
  2545  02F7  0088               	movwf	8	;volatile
  2546                           
  2547                           ;DISPLAY7.c: 79:     }
  2548  02F8  2B09               	goto	i1l214
  2549  02F9                     i1l1320:
  2550  02F9  0871               	movf	cambioDisplay@bandera,w
  2551  02FA  00F2               	movwf	??_cambioDisplay
  2552  02FB  01F3               	clrf	??_cambioDisplay+1
  2553                           
  2554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2555                           ; Switch size 1, requested type "simple"
  2556                           ; Number of cases is 1, Range of values is 0 to 0
  2557                           ; switch strategies available:
  2558                           ; Name         Instructions Cycles
  2559                           ; simple_byte            4     3 (average)
  2560                           ; direct_byte           11     8 (fixed)
  2561                           ; jumptable            260     6 (fixed)
  2562                           ;	Chosen strategy is simple_byte
  2563  02FC  0873               	movf	??_cambioDisplay+1,w
  2564  02FD  3A00               	xorlw	0	; case 0
  2565  02FE  1903               	skipnz
  2566  02FF  2B01               	goto	i1l1878
  2567  0300  2AF6               	goto	i1l1318
  2568  0301                     i1l1878:
  2569                           
  2570                           ; Switch size 1, requested type "simple"
  2571                           ; Number of cases is 2, Range of values is 0 to 255
  2572                           ; switch strategies available:
  2573                           ; Name         Instructions Cycles
  2574                           ; simple_byte            7     4 (average)
  2575                           ; jumptable            260     6 (fixed)
  2576                           ;	Chosen strategy is simple_byte
  2577  0301  0872               	movf	??_cambioDisplay,w
  2578  0302  3A00               	xorlw	0	; case 0
  2579  0303  1903               	skipnz
  2580  0304  2AE4               	goto	i1l210
  2581  0305  3AFF               	xorlw	255	; case 255
  2582  0306  1903               	skipnz
  2583  0307  2AED               	goto	i1l212
  2584  0308  2AF6               	goto	i1l1318
  2585  0309                     i1l214:
  2586  0309  0008               	return
  2587  030A                     __end_of_cambioDisplay:
  2588  007E                     btemp	set	126	;btemp
  2589  007E                     wtemp0	set	126
  2590                           
  2591                           	psect	config
  2592                           
  2593                           ;Config register CONFIG1 @ 0x2007
  2594                           ;	Oscillator Selection bits
  2595                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2596                           ;	Watchdog Timer Enable bit
  2597                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2598                           ;	Power-up Timer Enable bit
  2599                           ;	PWRTE = OFF, PWRT disabled
  2600                           ;	RE3/MCLR pin function select bit
  2601                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2602                           ;	Code Protection bit
  2603                           ;	CP = OFF, Program memory code protection is disabled
  2604                           ;	Data Code Protection bit
  2605                           ;	CPD = OFF, Data memory code protection is disabled
  2606                           ;	Brown Out Reset Selection bits
  2607                           ;	BOREN = OFF, BOR disabled
  2608                           ;	Internal External Switchover bit
  2609                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2610                           ;	Fail-Safe Clock Monitor Enabled bit
  2611                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2612                           ;	Low Voltage Programming Enable bit
  2613                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2614                           ;	In-Circuit Debugger Mode bit
  2615                           ;	DEBUG = 0x1, unprogrammed default
  2616  2007                     	org	8199
  2617  2007  20D4               	dw	8404
  2618                           
  2619                           ;Config register CONFIG2 @ 0x2008
  2620                           ;	Brown-out Reset Selection bit
  2621                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2622                           ;	Flash Program Memory Self Write Enable bits
  2623                           ;	WRT = OFF, Write protection off
  2624  2008                     	org	8200
  2625  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      8      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_cambioDisplay

Critical Paths under _main in BANK0

    _main->_ADConfig

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     453
                                              5 BANK0      3     3      0
                            _ADCinit
                           _ADConfig
                       _AnalogRead_8
                     _config2Display
                     _config_PUERTOS
                        _press_Bajar
                        _press_Subir
 ---------------------------------------------------------------------------------
 (1) _press_Subir                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _press_Bajar                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_PUERTOS                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config2Display                                       3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _AnalogRead_8                                         4     4      0      48
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADConfig                                             5     3      2     218
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADCinit                                              2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0     218
                                              5 COMMON     5     5      0
                      _cambioDisplay
 ---------------------------------------------------------------------------------
 (3) _cambioDisplay                                        5     3      2     218
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCinit
   _ADConfig
   _AnalogRead_8
   _config2Display
   _config_PUERTOS
   _press_Bajar
   _press_Subir

 _ISR (ROOT)
   _cambioDisplay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      1C       5       35.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      12        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 03 10:41:03 2021

                      pc 0002                       l98 034B                       fsr 0004  
                    l114 02DD                      l106 02A1                      l150 0061  
                    l206 01B5                      l160 00CE                      l152 0075  
                    l161 0113                      l153 00FF                      l154 0080  
                    l155 008D                      l147 0059                      l172 0360  
                    l156 009A                      l157 00A7                      l149 005D  
                    l158 00B4                      l159 00C1                      l169 032D  
                    l197 01AA                      u300 02CB                      u220 026B  
                    u301 02CA                      u221 026A                      u310 02D1  
                    u230 0270                      u311 02D0                      u231 026F  
                    u240 0276                      u400 01F3                      u241 0275  
                    u401 01F2                      u250 028F                      u410 01FB  
                    u251 028E                      u411 01FA                      u260 0295  
                    u261 0294                      u270 02A7                      u271 02A6  
                    u280 02AC                      u281 02AB                      u425 0204  
                    u290 02B2                      u291 02B1                      _ISR 0222  
                    u437 027C                      u390 01DE                      u447 029B  
                    u391 01DD                      u457 02B8                      u467 02D7  
                    u477 010B                      u487 0358                      fsr0 0004  
                    indf 0000     cambioDisplay@bandera 0071          __end_of_ADCinit 0361  
                   ?_ISR 0070                     l1410 0031                     l1330 0335  
                   l1412 0036                     l1420 0065                     l1332 0343  
                   l1500 0281                     l1430 00AD                     l1422 007B  
                   l1414 003B                     l1406 002D                     l1350 0121  
                   l1342 0114                     l1334 0347                     l1326 032E  
                   l1510 028F                     l1502 0286                     l1432 00BA  
                   l1424 0086                     l1440 00DB                     l1416 003E  
                   l1408 002E                     l1360 013D                     l1352 0123  
                   l1344 011A                     l1336 0348                     l1328 0334  
                   l1520 02AC                     l1512 0295                     l1504 0287  
                   l1442 0105                     l1434 00C7                     l1426 0093  
                   l1418 0043                     l1370 0164                     l1362 0144  
                   l1354 0128                     l1346 011D                     l1338 034A  
                   l1530 02C5                     l1522 02B2                     l1514 02A0  
                   l1506 0289                     l1444 0110                     l1436 00D4  
                   l1428 00A0                     l1380 01B4                     l1372 016B  
                   l1364 014B                     l1356 012F                     l1348 011E  
                   l1524 02BD                     l1532 02C6                     l1516 02A2  
                   l1508 028A                     l1366 0155                     l1358 0136  
                   l1374 0172                     l1534 02CB                     l1526 02C2  
                   l1518 02A7                     l1472 031C                     l1464 030D  
                   l1376 01AF                     l1368 015C                     l1536 02D1  
                   l1528 02C3                     l1474 032C                     l1466 030E  
                   l1378 01B3                     l1538 02DC                     l1570 01D6  
                   l1484 034C                     l1468 0313                     l1492 0266  
                   l1580 01F3                     l1572 01D7                     l1564 01B6  
                   l1486 0352                     l1494 026B                     l1590 020E  
                   l1582 01F5                     l1574 01DE                     l1566 01BB  
                   l1488 035D                     l1496 0270                     l1592 020F  
                   l1584 01FB                     l1576 01E2                     l1568 01C6  
                   l1498 0276                     l1586 01FC                     l1578 01ED  
                   l1594 0214                     l1860 0191                     l1596 0219  
                   l1588 0201                     l1870 0324                     l1862 0196  
                   l1872 004B                     l1864 019B                     l1874 006D  
                   l1866 01A0                     l1858 0186                     l1876 00E5  
                   l1868 01A5                     _IOCB 0096                     i1l80 0244  
                   i1l83 025D              main@lectura 0038                     i1l79 0233  
                   _TMR0 0001                     _WPUB 0095                     _main 01B6  
                   btemp 007E                     start 000E         __end_of_ADConfig 0114  
                  ??_ISR 0075                    ?_main 0070                    _ANSEL 0188  
                  i1l210 02E4                    i1l212 02ED                    i1l214 0309  
                  u32_20 0228                    u32_21 0227                    u33_20 022E  
                  u33_21 022D                    u34_20 0237                    u34_21 0236  
                  u35_20 023B                    u35_21 023A                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u36_20 0241                    u36_21 0240  
                  u37_20 0248                    u37_21 0247                    u38_20 024C  
                  u38_21 024B                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
       _valorDisplay_Dec 003A         _valorDisplay_Uni 0039         ??_config2Display 0033  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0222                ??_ADCinit 0031  
                 ??_main 0036    __size_of_AnalogRead_8 0024                   _ADRESH 001E  
                 _ADRESL 009E                   _ANSELH 0189         ??_config_PUERTOS 0031  
           _banderaBoton 007D                   i1l1310 02E5                   i1l1312 02EB  
                 i1l1320 02F9                   i1l1314 02EE                   i1l1316 02F4  
                 i1l1308 02DF                   i1l1318 02F6                   i1l1540 0222  
                 i1l1550 023C                   i1l1542 0228                   i1l1560 025C  
                 i1l1552 0241                   i1l1544 022E                   i1l1554 0248  
                 i1l1546 0237                   i1l1556 024C                   i1l1548 023B  
                 i1l1558 024D                   i1l1878 0301             _AnalogRead_8 030A  
           ?_press_Bajar 0070                   saved_w 007E             ?_press_Subir 0070  
              ?_ADConfig 0031  __end_of__initialization 0026           __pcstackCOMMON 0070  
           __pidataBANK0 0374               _banderaADC 003B           _OPTION_REGbits 0081  
 __size_of_cambioDisplay 002C               ??_ADConfig 0033               __pbssBANK0 0039  
             __pmaintext 01B6            ADConfig@canal 0031               __pintentry 0004  
                _ADCinit 034C          ADConfig@oscFreq 0035   AnalogRead_8@conversion 0034  
          _cambioDisplay 02DE    config2Display@FreqOsc 0031                _ANSELbits 0188  
                __ptext1 0266                  __ptext2 02A2                  __ptext3 032E  
                __ptext4 0114                  __ptext5 030A                  __ptext6 002A  
                __ptext7 034C                  __ptext8 0222                  __ptext9 02DE  
           __size_of_ISR 0044     __size_of_press_Bajar 003C     end_of_initialization 0026  
   __size_of_press_Subir 003C           ?_cambioDisplay 0070                _PORTBbits 0006  
              _PORTCbits 0007                _PORTEbits 0009                _TRISAbits 0085  
              _TRISCbits 0087                _TRISEbits 0089        __size_of_ADConfig 00EA  
__size_of_config2Display 00A2      cambioDisplay@valDec 0070      cambioDisplay@valUni 0074  
    start_initialization 0011              __end_of_ISR 0266          ??_cambioDisplay 0072  
            _banderaTMR0 007A  __size_of_config_PUERTOS 001E               init_fetch0 0361  
            __pdataBANK0 0020                 ?_ADCinit 0070              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0031                _banderaDO 007B  
              _banderaUP 007C                 _ADConfig 002A        interrupt_function 0004  
         _config2Display 0114                 _PIE1bits 008C                 _PIR1bits 000C  
              _valorTMR0 0030            ?_AnalogRead_8 0070               _ADCON0bits 001F  
             _ADCON1bits 009F      ADConfig@justificado 0032         __size_of_ADCinit 0015  
          ??_press_Bajar 0031            ??_press_Subir 0031   __end_of_config2Display 01B6  
         _config_PUERTOS 032E           ??_AnalogRead_8 0031           _numerosDisplay 0020  
    __end_of_press_Bajar 02DE          ?_config2Display 0031      __end_of_press_Subir 02A2  
          __size_of_main 006C   __end_of_config_PUERTOS 034C               _INTCONbits 000B  
               init_ram0 0365                 intlevel1 0000    __end_of_cambioDisplay 030A  
        ?_config_PUERTOS 0070               _OSCCONbits 008F         AnalogRead_8@just 0033  
            _press_Bajar 02A2              _press_Subir 0266     __end_of_AnalogRead_8 032E  
