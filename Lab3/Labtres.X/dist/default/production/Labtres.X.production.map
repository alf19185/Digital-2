Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Labtres.X.production.sym \
  --cmf=dist/default/production\Labtres.X.production.cmf -z -Q16F887 \
  -oC:\Users\Gaby\AppData\Local\Temp\sg7k.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Labtres.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\Gaby\AppData\Local\Temp\sg7k.o \
  dist/default/production\Labtres.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Gaby\AppData\Local\Temp\sg7k.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\Labtres.X.production.o
                cinit                                 F        F       1B        8       0
                intentry                              4        4        8        8       0
                config                             2007     2007        2        0       4
                text17                              6EA      6EA       18        8       0
                text16                              35E      35E       8B        8       0
                text15                              1DB      1DB       DF        8       0
                text14                              6C8      6C8       22        8       0
                text13                              621      621       2F        8       0
                text12                              5EF      5EF       32        8       0
                text11                              72B      72B        F      E2E       0
                text10                              6A3      6A3       25        8       0
                text9                               4D9      4D9       67        8       0
                text8                               5A3      5A3       4C        8       0
                text7                               67E      67E       25        8       0
                text6                               2BA      2BA       A4        8       0
                text5                               470      470       69        8       0
                text4                               3E9      3E9       87        8       0
                text3                               540      540       63        8       0
                text2                               650      650       2E        8       0
                text1                               717      717       14      E2E       0
                maintext                             2A       2A      1B1        8       0
                cstackBANK0                          45       45       1A       20       1
                cstackCOMMON                         70       70        A       70       1
                clrtext                             73A      73A        8      E2E       0
                dataBANK0                            5F       5F        2       20       1
                bssBANK0                             20       20       25       20       1
                bssCOMMON                            7A       7A        2       70       1
                strings                             702      702       15      E04       0
                idataBANK0                          742      742        2      E2E       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F       1B         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text17                              6EA      6EA       18         0
                text16                              35E      35E       8B         0
                text15                              1DB      1DB       DF         0
                text14                              6C8      6C8       22         0
                text13                              621      621       2F         0
                text12                              5EF      5EF       32         0
                text11                              72B      72B        F         0
                text10                              6A3      6A3       25         0
                text9                               4D9      4D9       67         0
                text8                               5A3      5A3       4C         0
                text7                               67E      67E       25         0
                text6                               2BA      2BA       A4         0
                text5                               470      470       69         0
                text4                               3E9      3E9       87         0
                text3                               540      540       63         0
                text2                               650      650       2E         0
                text1                               717      717       14         0
                maintext                             2A       2A      1B1         0
                clrtext                             73A      73A        8         0
                idataBANK0                          742      742        2         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             702      702       15         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        A         1
                bssCOMMON                            7A       7A        2         1

        CLASS   BANK0          
                cstackBANK0                          45       45       1A         1
                dataBANK0                            5F       5F        2         1
                bssBANK0                             20       20       25         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0006FE  000702         8       0  CODE        2
                bssBANK0                       000020  000041  000061        20       1  BANK0       1
                cstackCOMMON                   000070  00000C  00007C        70       1  COMMON      1
                strings                        000702  000015  000717       E04       0  STRING      2
                text1                          000717  00002D  000744       E2E       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0061-006F              F           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0744-1FFF            800
        COMMON           007C-007D              2           1
        CONST            0003-0003              1           2
                         0744-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0744-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0061-006F              F           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0744-1FFF           18BC
        STRING           0003-0003              1           2
                         0744-1FFF            100

                                  Symbol Table

?___awdiv                     cstackBANK0  0045
?___wmul                      cstackCOMMON 0072
ADC_CHselect@canal            cstackCOMMON 0074
ADConfig@canal                cstackCOMMON 0072
ADConfig@justificado          cstackCOMMON 0073
ADConfig@oscFreq              cstackCOMMON 0076
AnalogRead_8@conversion       cstackCOMMON 0075
AnalogRead_8@just             cstackCOMMON 0074
LCD_Cmd@comando               cstackCOMMON 0074
LCD_Set_Cursor@columna        cstackCOMMON 0075
LCD_Set_Cursor@corrimiento    cstackCOMMON 0079
LCD_Set_Cursor@linea          cstackCOMMON 0078
LCD_Write_Character@caracter  cstackCOMMON 0073
LCD_Write_String@a            cstackCOMMON 0076
LCD_Write_String@n            cstackCOMMON 0074
_ADCON0bits                   (abs)        001F
_ADCON1bits                   (abs)        009F
_ADC_CHselect                 text16       035E
_ADConfig                     text15       01DB
_ADRESH                       (abs)        001E
_ADRESL                       (abs)        009E
_ANSELbits                    (abs)        0188
_AnalogRead_8                 text14       06C8
_BAUDCTLbits                  (abs)        0187
_INTCONbits                   (abs)        000B
_ISR_ADC                      text17       06EA
_LCD_Cmd                      text13       0621
_LCD_Set_Cursor               text12       05EF
_LCD_Write_Character          text11       072B
_LCD_Write_String             text10       06A3
_LCD_init                     text9        04D9
_PIE1bits                     (abs)        008C
_PIR1bits                     (abs)        000C
_PORTC                        (abs)        0007
_PORTCbits                    (abs)        0007
_PORTD                        (abs)        0008
_RCREG                        (abs)        001A
_RCSTAbits                    (abs)        0018
_SPBRG                        (abs)        0099
_SPBRGH                       (abs)        009A
_TRISAbits                    (abs)        0085
_TRISC                        (abs)        0087
_TRISD                        (abs)        0088
_TRISEbits                    (abs)        0089
_TXREG                        (abs)        0019
_TXSTAbits                    (abs)        0098
__Habs1                       abs1         0000
__Hbank0                      bank0        0000
__Hbank1                      bank1        0000
__Hbank2                      bank2        0000
__Hbank3                      bank3        0000
__HbssBANK0                   bssBANK0     0000
__HbssCOMMON                  bssCOMMON    0000
__Hcinit                      cinit        002A
__Hclrtext                    clrtext      0000
__Hcode                       code         0000
__Hcommon                     common       0000
__Hconfig                     config       2009
__HcstackBANK0                cstackBANK0  0000
__HcstackCOMMON               cstackCOMMON 0000
__HdataBANK0                  dataBANK0    0000
__Heeprom_data                eeprom_data  0000
__Hend_init                   end_init     000F
__Hfunctab                    functab      0000
__HidataBANK0                 idataBANK0   0000
__Hinit                       init         000C
__Hintentry                   intentry     000C
__Hmaintext                   maintext     0000
__Hpowerup                    powerup      0000
__Hram                        ram          0000
__Hreset_vec                  reset_vec    0003
__Hsfr0                       sfr0         0000
__Hsfr1                       sfr1         0000
__Hsfr2                       sfr2         0000
__Hsfr3                       sfr3         0000
__Hspace_0                    (abs)        0744
__Hspace_1                    (abs)        007C
__Hspace_2                    (abs)        0000
__Hspace_3                    (abs)        0000
__Hspace_4                    (abs)        4010
__Hstack                      stack        0000
__Hstrings                    strings      0000
__Htext                       text         0000
__Labs1                       abs1         0000
__Lbank0                      bank0        0000
__Lbank1                      bank1        0000
__Lbank2                      bank2        0000
__Lbank3                      bank3        0000
__LbssBANK0                   bssBANK0     0000
__LbssCOMMON                  bssCOMMON    0000
__Lcinit                      cinit        000F
__Lclrtext                    clrtext      0000
__Lcode                       code         0000
__Lcommon                     common       0000
__Lconfig                     config       0000
__LcstackBANK0                cstackBANK0  0000
__LcstackCOMMON               cstackCOMMON 0000
__LdataBANK0                  dataBANK0    0000
__Leeprom_data                eeprom_data  0000
__Lend_init                   end_init     000C
__Lfunctab                    functab      0000
__LidataBANK0                 idataBANK0   0000
__Linit                       init         000C
__Lintentry                   intentry     0004
__Lmaintext                   maintext     0000
__Lpowerup                    powerup      0000
__Lram                        ram          0000
__Lreset_vec                  reset_vec    0000
__Lsfr0                       sfr0         0000
__Lsfr1                       sfr1         0000
__Lsfr2                       sfr2         0000
__Lsfr3                       sfr3         0000
__Lspace_0                    (abs)        0000
__Lspace_1                    (abs)        0000
__Lspace_2                    (abs)        0000
__Lspace_3                    (abs)        0000
__Lspace_4                    (abs)        0000
__Lstack                      stack        0000
__Lstrings                    strings      0000
__Ltext                       text         0000
__S0                          (abs)        0744
__S1                          (abs)        007C
__S2                          (abs)        0000
__S3                          (abs)        0000
___awdiv                      text5        0470
___awdiv@counter              cstackBANK0  0049
___awdiv@dividend             cstackBANK0  0047
___awdiv@divisor              cstackBANK0  0045
___awdiv@quotient             cstackBANK0  004B
___awdiv@sign                 cstackBANK0  004A
___int_sp                     stack        0000
___latbits                    (abs)        0002
___sp                         stack        0000
___stackhi                    (abs)        0000
___stacklo                    (abs)        0000
___wmul                       text7        067E
___wmul@multiplicand          cstackCOMMON 0074
___wmul@multiplier            cstackCOMMON 0072
___wmul@product               cstackCOMMON 0076
__end_of_ADC_CHselect         text16       03E9
__end_of_ADConfig             text15       02BA
__end_of_AnalogRead_8         text14       06EA
__end_of_ISR_ADC              text17       0702
__end_of_LCD_Cmd              text13       0650
__end_of_LCD_Set_Cursor       text12       0621
__end_of_LCD_Write_Character  text11       073A
__end_of_LCD_Write_String     text10       06C8
__end_of_LCD_init             text9        0540
__end_of___awdiv              text5        04D9
__end_of___wmul               text7        06A3
__end_of__initialization      cinit        0026
__end_of__stringtab           strings      0708
__end_of_enviar               text8        05EF
__end_of_main                 maintext     01DB
__end_of_mapear               text6        035E
__end_of_uint_to_array        text4        0470
__end_of_uint_to_char         text3        05A3
__end_of_usartRC_Read         text2        067E
__end_of_usart_init           text1        072B
__initialization              cinit        000F
__pbssBANK0                   bssBANK0     0020
__pbssCOMMON                  bssCOMMON    007A
__pcstackBANK0                cstackBANK0  0045
__pcstackCOMMON               cstackCOMMON 0070
__pdataBANK0                  dataBANK0    005F
__pidataBANK0                 idataBANK0   0742
__pintentry                   intentry     0004
__pmaintext                   maintext     002A
__pstrings                    strings      0702
__ptext1                      text1        0717
__ptext10                     text10       06A3
__ptext11                     text11       072B
__ptext12                     text12       05EF
__ptext13                     text13       0621
__ptext14                     text14       06C8
__ptext15                     text15       01DB
__ptext16                     text16       035E
__ptext17                     text17       06EA
__ptext2                      text2        0650
__ptext3                      text3        0540
__ptext4                      text4        03E9
__ptext5                      text5        0470
__ptext6                      text6        02BA
__ptext7                      text7        067E
__ptext8                      text8        05A3
__ptext9                      text9        04D9
__size_of_ADC_CHselect        (abs)        0000
__size_of_ADConfig            (abs)        0000
__size_of_AnalogRead_8        (abs)        0000
__size_of_ISR_ADC             (abs)        0000
__size_of_LCD_Cmd             (abs)        0000
__size_of_LCD_Set_Cursor      (abs)        0000
__size_of_LCD_Write_Character (abs)        0000
__size_of_LCD_Write_String    (abs)        0000
__size_of_LCD_init            (abs)        0000
__size_of___awdiv             (abs)        0000
__size_of___wmul              (abs)        0000
__size_of_enviar              (abs)        0000
__size_of_main                (abs)        0000
__size_of_mapear              (abs)        0000
__size_of_uint_to_array       (abs)        0000
__size_of_uint_to_char        (abs)        0000
__size_of_usartRC_Read        (abs)        0000
__size_of_usart_init          (abs)        0000
__stringbase                  strings      0707
__stringtab                   strings      0702
_banderaADC                   dataBANK0    0060
_contador                     bssBANK0     003E
_enviar                       text8        05A3
_main                         maintext     002A
_mapear                       text6        02BA
_num1                         bssBANK0     0044
_num2                         bssBANK0     0043
_num3                         bssBANK0     0042
_uint_to_array                text4        03E9
_uint_to_char                 text3        0540
_usartRC_Read                 text2        0650
_usart_init                   text1        0717
_valorADC_CH0                 bssCOMMON    007A
_valorADC_CH5                 bssCOMMON    007B
btemp                         (abs)        007E
clear_ram0                    clrtext      073A
end_of_initialization         cinit        0026
enviar@valor1                 cstackCOMMON 0074
enviar@valor2                 cstackCOMMON 0072
interrupt_function            intentry     0004
intlevel0                     functab      0000
intlevel1                     functab      0000
intlevel2                     functab      0000
intlevel3                     functab      0000
intlevel4                     functab      0000
intlevel5                     functab      0000
mapear@dividendo              cstackBANK0  0050
mapear@limReal                cstackCOMMON 0078
mapear@limSup                 cstackCOMMON 0079
mapear@resultado              cstackBANK0  004A
mapear@valor                  cstackBANK0  0049
reset_vec                     reset_vec    0000
saved_w                       (abs)        007E
start                         init         000C
start_initialization          cinit        000F
uint_to_array@centenas        cstackBANK0  005A
uint_to_array@decenas         cstackBANK0  0053
uint_to_array@numero          cstackBANK0  005B
uint_to_array@resultado       cstackBANK0  0054
uint_to_char@numChr           cstackCOMMON 0075
uint_to_char@numero           cstackCOMMON 0074
usartRC_Read@lectura          cstackCOMMON 0074
wtemp0                        (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 59 in file "Principal3.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_ADC_CHselect
		_ADConfig
		_AnalogRead_8
		_LCD_Set_Cursor
		_LCD_Write_Character
		_LCD_Write_String
		_LCD_init
		_enviar
		_mapear
		_uint_to_array
		_uint_to_char
		_usartRC_Read
		_usart_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _usart_init *****************
 Defined at:
		line 10 in file "USART.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _usartRC_Read *****************
 Defined at:
		line 25 in file "USART.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  lectura         1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _uint_to_char *****************
 Defined at:
		line 108 in file "LCD.c"
 Parameters:    Size  Location     Type
  numero          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  numero          1    4[COMMON] unsigned char 
  numChr          1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _uint_to_array *****************
 Defined at:
		line 147 in file "LCD.c"
 Parameters:    Size  Location     Type
  numero          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  numero          1   22[BANK0 ] unsigned char 
  resultado       6   15[BANK0 ] unsigned int [3]
  centenas        1   21[BANK0 ] unsigned char 
  decenas         1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      PTR unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       9       0       0       0
      Temps:          0       6       0       0       0
      Totals:         0      15       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK0 ] int 
  dividend        2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2    6[BANK0 ] int 
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       4       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       8       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_uint_to_array
 This function uses a non-reentrant model


 *************** function _mapear *****************
 Defined at:
		line 149 in file "Principal3.c"
 Parameters:    Size  Location     Type
  valor           1    wreg     unsigned char 
  limReal         1    8[COMMON] unsigned char 
  limSup          1    9[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  valor           1    4[BANK0 ] unsigned char 
  resultado       6    5[BANK0 ] unsigned int [3]
  dividendo       2   11[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      PTR unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       9       0       0       0
      Temps:          0       4       0       0       0
      Totals:         2      13       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    2[COMMON] unsigned int 
  multiplicand    2    4[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    6[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    2[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_mapear
		_uint_to_array
 This function uses a non-reentrant model


 *************** function _enviar *****************
 Defined at:
		line 46 in file "USART.c"
 Parameters:    Size  Location     Type
  valor1          1    wreg     unsigned char 
  valor2          1    2[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  valor1          1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_init *****************
 Defined at:
		line 36 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_String *****************
 Defined at:
		line 65 in file "LCD.c"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_1(15), 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] PTR unsigned char 
		 -> STR_1(15), 
  n               2    4[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_Write_Character
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Write_Character *****************
 Defined at:
		line 56 in file "LCD.c"
 Parameters:    Size  Location     Type
  caracter        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  caracter        1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_LCD_Write_String
 This function uses a non-reentrant model


 *************** function _LCD_Set_Cursor *****************
 Defined at:
		line 72 in file "LCD.c"
 Parameters:    Size  Location     Type
  linea           1    wreg     unsigned char 
  columna         1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  linea           1    8[COMMON] unsigned char 
  corrimiento     1    9[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Cmd *****************
 Defined at:
		line 13 in file "LCD.c"
 Parameters:    Size  Location     Type
  comando         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  comando         1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_init
		_LCD_Set_Cursor
		_LCD_clear
		_LCD_home
		_LCD_Shift_links
		_LCD_Shift_rechts
		_LCD_Cursor_rechts
		_LCD_Cursor_links
 This function uses a non-reentrant model


 *************** function _AnalogRead_8 *****************
 Defined at:
		line 89 in file "ADC.c"
 Parameters:    Size  Location     Type
  just            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  just            1    4[COMMON] unsigned char 
  conversion      1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADConfig *****************
 Defined at:
		line 8 in file "ADC.c"
 Parameters:    Size  Location     Type
  oscFreq         1    wreg     unsigned char 
  canal           1    2[COMMON] unsigned char 
  justificado     1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  oscFreq         1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADC_CHselect *****************
 Defined at:
		line 113 in file "ADC.c"
 Parameters:    Size  Location     Type
  canal           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  canal           1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR_ADC *****************
 Defined at:
		line 52 in file "Principal3.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
USART.c
		_usartRC_Read  		CODE           	0650	0000	46
		_enviar        		CODE           	05A3	0000	76
		_usart_init    		CODE           	0717	0000	20

USART.c estimated size: 142

Principal3.c
		_main          		CODE           	002A	0000	433
		_mapear        		CODE           	02BA	0000	164
		_ISR_ADC       		CODE           	06EA	0000	24

Principal3.c estimated size: 621

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	067E	0000	37

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c estimated size: 37

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c
		___awdiv       		CODE           	0470	0000	105

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c estimated size: 105

shared
		__stringtab    		STRING         	0702	0000	6
		__initialization		CODE           	000F	0000	23

shared estimated size: 29

ADC.c
		_AnalogRead_8  		CODE           	06C8	0000	34
		_ADC_CHselect  		CODE           	035E	0000	139
		_ADConfig      		CODE           	01DB	0000	223

ADC.c estimated size: 396

LCD.c
		_uint_to_array 		CODE           	03E9	0000	135
		_LCD_Write_Character		CODE           	072B	0000	15
		_LCD_Cmd       		CODE           	0621	0000	47
		_LCD_Set_Cursor		CODE           	05EF	0000	50
		_LCD_init      		CODE           	04D9	0000	103
		_uint_to_char  		CODE           	0540	0000	99
		_LCD_Write_String		CODE           	06A3	0000	37

LCD.c estimated size: 486

