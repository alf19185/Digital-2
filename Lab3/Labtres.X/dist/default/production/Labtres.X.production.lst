

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 15:45:41 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.31
    20                           ; Generated 13/10/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0037                     _RB7	set	55
   211  0036                     _RB6	set	54
   212  003F                     _RC7	set	63
   213  003E                     _RC6	set	62
   214  003D                     _RC5	set	61
   215  003C                     _RC4	set	60
   216  003B                     _RC3	set	59
   217  003A                     _RC2	set	58
   218  0039                     _RC1	set	57
   219  0038                     _RC0	set	56
   220  0087                     _TRISC	set	135
   221  0086                     _TRISB	set	134
   222                           
   223                           	psect	strings
   224  0003                     __pstrings:
   225  0003                     stringtab:
   226  0003                     __stringtab:
   227  0003                     stringcode:	
   228                           ;	String table - string pointers are 1 byte each
   229                           
   230  0003                     stringdir:
   231  0003  3000               	movlw	high stringdir
   232  0004  008A               	movwf	10
   233  0005  0804               	movf	4,w
   234  0006  0A84               	incf	4,f
   235  0007  0782               	addwf	2,f
   236  0008                     __stringbase:
   237  0008  3400               	retlw	0
   238  0009                     __end_of__stringtab:
   239  0009                     STR_1:
   240  0009  3465               	retlw	101	;'e'
   241  000A  346C               	retlw	108	;'l'
   242  000B  3465               	retlw	101	;'e'
   243  000C  3463               	retlw	99	;'c'
   244  000D  3474               	retlw	116	;'t'
   245  000E  3472               	retlw	114	;'r'
   246  000F  346F               	retlw	111	;'o'
   247  0010  3453               	retlw	83	;'S'
   248  0011  346F               	retlw	111	;'o'
   249  0012  346D               	retlw	109	;'m'
   250  0013  3465               	retlw	101	;'e'
   251  0014  3420               	retlw	32	;' '
   252  0015  344C               	retlw	76	;'L'
   253  0016  3443               	retlw	67	;'C'
   254  0017  3444               	retlw	68	;'D'
   255  0018  3420               	retlw	32	;' '
   256  0019  3448               	retlw	72	;'H'
   257  001A  3465               	retlw	101	;'e'
   258  001B  346C               	retlw	108	;'l'
   259  001C  346C               	retlw	108	;'l'
   260  001D  346F               	retlw	111	;'o'
   261  001E  3420               	retlw	32	;' '
   262  001F  3457               	retlw	87	;'W'
   263  0020  346F               	retlw	111	;'o'
   264  0021  3472               	retlw	114	;'r'
   265  0022  346C               	retlw	108	;'l'
   266  0023  3464               	retlw	100	;'d'
   267  0024  3400               	retlw	0
   268                           
   269                           	psect	cinit
   270  07FC                     start_initialization:	
   271                           ; #config settings
   272                           
   273  07FC                     __initialization:
   274  07FC                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277  07FC                     __end_of__initialization:
   278  07FC  0183               	clrf	3
   279  07FD  120A  118A  2F6D   	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	cstackCOMMON
   282  0070                     __pcstackCOMMON:
   283  0070                     ?_Lcd8_Port:
   284  0070                     ??_Lcd8_Port:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_Lcd8_Cmd:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_Lcd8_Init:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_Lcd8_Write_Char:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_Lcd8_Write_String:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_Lcd8_Shift_Right:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_Lcd8_Shift_Left:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_main:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_Lcd8_Clear:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     Lcd8_Port@a:	
   312                           ; 2 bytes @ 0x0
   313                           
   314                           
   315                           ; 1 bytes @ 0x0
   316  0070                     	ds	1
   317  0071                     ??_Lcd8_Cmd:
   318  0071                     ??_Lcd8_Write_Char:	
   319                           ; 1 bytes @ 0x1
   320                           
   321                           
   322                           ; 1 bytes @ 0x1
   323  0071                     	ds	2
   324  0073                     Lcd8_Cmd@a:
   325  0073                     Lcd8_Write_Char@a:	
   326                           ; 1 bytes @ 0x3
   327                           
   328                           
   329                           ; 1 bytes @ 0x3
   330  0073                     	ds	1
   331  0074                     ??_Lcd8_Clear:
   332  0074                     ?_Lcd8_Set_Cursor:	
   333                           ; 1 bytes @ 0x4
   334                           
   335  0074                     ??_Lcd8_Init:	
   336                           ; 1 bytes @ 0x4
   337                           
   338  0074                     ??_Lcd8_Write_String:	
   339                           ; 1 bytes @ 0x4
   340                           
   341  0074                     ??_Lcd8_Shift_Right:	
   342                           ; 1 bytes @ 0x4
   343                           
   344  0074                     ??_Lcd8_Shift_Left:	
   345                           ; 1 bytes @ 0x4
   346                           
   347  0074                     Lcd8_Set_Cursor@b:	
   348                           ; 1 bytes @ 0x4
   349                           
   350  0074                     Lcd8_Write_String@i:	
   351                           ; 1 bytes @ 0x4
   352                           
   353                           
   354                           ; 2 bytes @ 0x4
   355  0074                     	ds	1
   356  0075                     ??_Lcd8_Set_Cursor:
   357  0075                     Lcd8_Set_Cursor@a:	
   358                           ; 1 bytes @ 0x5
   359                           
   360                           
   361                           ; 1 bytes @ 0x5
   362  0075                     	ds	1
   363  0076                     Lcd8_Write_String@a:
   364                           
   365                           ; 1 bytes @ 0x6
   366  0076                     	ds	1
   367  0077                     ??_main:
   368                           
   369                           ; 1 bytes @ 0x7
   370  0077                     	ds	3
   371  007A                     main@i:
   372                           
   373                           ; 2 bytes @ 0xA
   374  007A                     	ds	2
   375                           
   376                           	psect	maintext
   377  076D                     __pmaintext:	
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 26 in file "Principal3.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  i               2   10[COMMON] int 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : B00/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         2       0       0       0       0
   399 ;;      Temps:          3       0       0       0       0
   400 ;;      Totals:         5       0       0       0       0
   401 ;;Total ram usage:        5 bytes
   402 ;; Hardware stack levels required when called:    3
   403 ;; This function calls:
   404 ;;		_Lcd8_Clear
   405 ;;		_Lcd8_Init
   406 ;;		_Lcd8_Set_Cursor
   407 ;;		_Lcd8_Shift_Left
   408 ;;		_Lcd8_Shift_Right
   409 ;;		_Lcd8_Write_Char
   410 ;;		_Lcd8_Write_String
   411 ;; This function is called by:
   412 ;;		Startup code after reset
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           
   417                           ;psect for function _main
   418  076D                     _main:
   419  076D                     l807:	
   420                           ;incstack = 0
   421                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   422                           
   423                           
   424                           ;Principal3.c: 28:   int i;;Principal3.c: 29:   TRISB = 0x00;
   425  076D  1683               	bsf	3,5	;RP0=1, select bank1
   426  076E  1303               	bcf	3,6	;RP1=0, select bank1
   427  076F  0186               	clrf	6	;volatile
   428                           
   429                           ;Principal3.c: 30:   TRISC = 0x00;
   430  0770  0187               	clrf	7	;volatile
   431  0771                     l809:
   432                           
   433                           ;Principal3.c: 31:   Lcd8_Init();
   434  0771  120A  118A  271F  120A  118A  	fcall	_Lcd8_Init
   435  0776                     l811:
   436                           
   437                           ;Principal3.c: 34:   {;Principal3.c: 35:     Lcd8_Set_Cursor(1,1);
   438  0776  01F4               	clrf	Lcd8_Set_Cursor@b
   439  0777  0AF4               	incf	Lcd8_Set_Cursor@b,f
   440  0778  3001               	movlw	1
   441  0779  120A  118A  26A0  120A  118A  	fcall	_Lcd8_Set_Cursor
   442  077E                     l813:
   443                           
   444                           ;Principal3.c: 36:     Lcd8_Write_String("electroSome LCD Hello World");
   445  077E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   446  077F  120A  118A  26BC  120A  118A  	fcall	_Lcd8_Write_String
   447  0784                     l815:
   448                           
   449                           ;Principal3.c: 37:     for(i=0;i<15;i++)
   450  0784  01FA               	clrf	main@i
   451  0785  01FB               	clrf	main@i+1
   452  0786                     l821:
   453                           
   454                           ;Principal3.c: 38:     {;Principal3.c: 39:       _delay((unsigned long)((1000)*(4000000/
      +                          4000.0)));
   455  0786  3006               	movlw	6
   456  0787  00F9               	movwf	??_main+2
   457  0788  3013               	movlw	19
   458  0789  00F8               	movwf	??_main+1
   459  078A  30AD               	movlw	173
   460  078B  00F7               	movwf	??_main
   461  078C                     u197:
   462  078C  0BF7               	decfsz	??_main,f
   463  078D  2F8C               	goto	u197
   464  078E  0BF8               	decfsz	??_main+1,f
   465  078F  2F8C               	goto	u197
   466  0790  0BF9               	decfsz	??_main+2,f
   467  0791  2F8C               	goto	u197
   468  0792  2F93               	nop2
   469  0793                     l823:
   470                           
   471                           ;Principal3.c: 40:       Lcd8_Shift_Left();
   472  0793  120A  118A  265F  120A  118A  	fcall	_Lcd8_Shift_Left
   473  0798                     l825:
   474                           
   475                           ;Principal3.c: 41:     }
   476  0798  3001               	movlw	1
   477  0799  07FA               	addwf	main@i,f
   478  079A  1803               	skipnc
   479  079B  0AFB               	incf	main@i+1,f
   480  079C  3000               	movlw	0
   481  079D  07FB               	addwf	main@i+1,f
   482  079E                     l827:
   483  079E  087B               	movf	main@i+1,w
   484  079F  3A80               	xorlw	128
   485  07A0  00FF               	movwf	btemp+1
   486  07A1  3080               	movlw	128
   487  07A2  027F               	subwf	btemp+1,w
   488  07A3  1D03               	skipz
   489  07A4  2FA7               	goto	u175
   490  07A5  300F               	movlw	15
   491  07A6  027A               	subwf	main@i,w
   492  07A7                     u175:
   493  07A7  1C03               	skipc
   494  07A8  2FAA               	goto	u171
   495  07A9  2FAB               	goto	u170
   496  07AA                     u171:
   497  07AA  2F86               	goto	l821
   498  07AB                     u170:
   499  07AB                     l829:
   500                           
   501                           ;Principal3.c: 42:     for(i=0;i<15;i++)
   502  07AB  01FA               	clrf	main@i
   503  07AC  01FB               	clrf	main@i+1
   504  07AD                     l835:
   505                           
   506                           ;Principal3.c: 43:     {;Principal3.c: 44:       _delay((unsigned long)((1000)*(4000000/
      +                          4000.0)));
   507  07AD  3006               	movlw	6
   508  07AE  00F9               	movwf	??_main+2
   509  07AF  3013               	movlw	19
   510  07B0  00F8               	movwf	??_main+1
   511  07B1  30AD               	movlw	173
   512  07B2  00F7               	movwf	??_main
   513  07B3                     u207:
   514  07B3  0BF7               	decfsz	??_main,f
   515  07B4  2FB3               	goto	u207
   516  07B5  0BF8               	decfsz	??_main+1,f
   517  07B6  2FB3               	goto	u207
   518  07B7  0BF9               	decfsz	??_main+2,f
   519  07B8  2FB3               	goto	u207
   520  07B9  2FBA               	nop2
   521  07BA                     l837:
   522                           
   523                           ;Principal3.c: 45:       Lcd8_Shift_Right();
   524  07BA  120A  118A  2666  120A  118A  	fcall	_Lcd8_Shift_Right
   525  07BF                     l839:
   526                           
   527                           ;Principal3.c: 46:     }
   528  07BF  3001               	movlw	1
   529  07C0  07FA               	addwf	main@i,f
   530  07C1  1803               	skipnc
   531  07C2  0AFB               	incf	main@i+1,f
   532  07C3  3000               	movlw	0
   533  07C4  07FB               	addwf	main@i+1,f
   534  07C5                     l841:
   535  07C5  087B               	movf	main@i+1,w
   536  07C6  3A80               	xorlw	128
   537  07C7  00FF               	movwf	btemp+1
   538  07C8  3080               	movlw	128
   539  07C9  027F               	subwf	btemp+1,w
   540  07CA  1D03               	skipz
   541  07CB  2FCE               	goto	u185
   542  07CC  300F               	movlw	15
   543  07CD  027A               	subwf	main@i,w
   544  07CE                     u185:
   545  07CE  1C03               	skipc
   546  07CF  2FD1               	goto	u181
   547  07D0  2FD2               	goto	u180
   548  07D1                     u181:
   549  07D1  2FAD               	goto	l835
   550  07D2                     u180:
   551  07D2                     l843:
   552                           
   553                           ;Principal3.c: 47:     Lcd8_Clear();
   554  07D2  120A  118A  2658  120A  118A  	fcall	_Lcd8_Clear
   555                           
   556                           ;Principal3.c: 48:     Lcd8_Set_Cursor(2,1);
   557  07D7  01F4               	clrf	Lcd8_Set_Cursor@b
   558  07D8  0AF4               	incf	Lcd8_Set_Cursor@b,f
   559  07D9  3002               	movlw	2
   560  07DA  120A  118A  26A0  120A  118A  	fcall	_Lcd8_Set_Cursor
   561                           
   562                           ;Principal3.c: 49:     Lcd8_Write_Char('e');
   563  07DF  3065               	movlw	101
   564  07E0  120A  118A  2686  120A  118A  	fcall	_Lcd8_Write_Char
   565                           
   566                           ;Principal3.c: 50:     Lcd8_Write_Char('S');
   567  07E5  3053               	movlw	83
   568  07E6  120A  118A  2686  120A  118A  	fcall	_Lcd8_Write_Char
   569  07EB                     l845:
   570                           
   571                           ;Principal3.c: 51:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   572  07EB  300B               	movlw	11
   573  07EC  00F9               	movwf	??_main+2
   574  07ED  3026               	movlw	38
   575  07EE  00F8               	movwf	??_main+1
   576  07EF  305D               	movlw	93
   577  07F0  00F7               	movwf	??_main
   578  07F1                     u217:
   579  07F1  0BF7               	decfsz	??_main,f
   580  07F2  2FF1               	goto	u217
   581  07F3  0BF8               	decfsz	??_main+1,f
   582  07F4  2FF1               	goto	u217
   583  07F5  0BF9               	decfsz	??_main+2,f
   584  07F6  2FF1               	goto	u217
   585  07F7  2FF8               	nop2
   586  07F8  2F76               	goto	l811
   587  07F9  120A  118A  2800   	ljmp	start
   588  07FC                     __end_of_main:
   589                           
   590                           	psect	text1
   591  06BC                     __ptext1:	
   592 ;; *************** function _Lcd8_Write_String *****************
   593 ;; Defined at:
   594 ;;		line 116 in file "./lcd.h"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  a               1    wreg     PTR unsigned char 
   597 ;;		 -> STR_1(28), 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  a               1    6[COMMON] PTR unsigned char 
   600 ;;		 -> STR_1(28), 
   601 ;;  i               2    4[COMMON] int 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   611 ;;      Params:         0       0       0       0       0
   612 ;;      Locals:         3       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0
   614 ;;      Totals:         3       0       0       0       0
   615 ;;Total ram usage:        3 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; Hardware stack levels required when called:    2
   618 ;; This function calls:
   619 ;;		_Lcd8_Write_Char
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           
   626                           ;psect for function _Lcd8_Write_String
   627  06BC                     _Lcd8_Write_String:
   628                           
   629                           ;incstack = 0
   630                           ; Regs used in _Lcd8_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   631                           ;Lcd8_Write_String@a stored from wreg
   632  06BC  00F6               	movwf	Lcd8_Write_String@a
   633  06BD                     l799:
   634                           
   635                           ;./lcd.h: 116: void Lcd8_Write_String(char *a);./lcd.h: 117: {;./lcd.h: 118:  int i;;./l
      +                          cd.h: 119:  for(i=0;a[i]!='\0';i++)
   636  06BD  01F4               	clrf	Lcd8_Write_String@i
   637  06BE  01F5               	clrf	Lcd8_Write_String@i+1
   638  06BF  2ED3               	goto	l805
   639  06C0                     l801:
   640                           
   641                           ;./lcd.h: 120:   Lcd8_Write_Char(a[i]);
   642  06C0  0874               	movf	Lcd8_Write_String@i,w
   643  06C1  0776               	addwf	Lcd8_Write_String@a,w
   644  06C2  0084               	movwf	4
   645  06C3  120A  118A  2003  120A  118A  	fcall	stringdir
   646  06C8  120A  118A  2686  120A  118A  	fcall	_Lcd8_Write_Char
   647  06CD                     l803:
   648  06CD  3001               	movlw	1
   649  06CE  07F4               	addwf	Lcd8_Write_String@i,f
   650  06CF  1803               	skipnc
   651  06D0  0AF5               	incf	Lcd8_Write_String@i+1,f
   652  06D1  3000               	movlw	0
   653  06D2  07F5               	addwf	Lcd8_Write_String@i+1,f
   654  06D3                     l805:
   655  06D3  0874               	movf	Lcd8_Write_String@i,w
   656  06D4  0776               	addwf	Lcd8_Write_String@a,w
   657  06D5  0084               	movwf	4
   658  06D6  120A  118A  2003  120A  118A  	fcall	stringdir
   659  06DB  3A00               	xorlw	0
   660  06DC  1D03               	skipz
   661  06DD  2EDF               	goto	u161
   662  06DE  2EE0               	goto	u160
   663  06DF                     u161:
   664  06DF  2EC0               	goto	l801
   665  06E0                     u160:
   666  06E0                     l69:
   667  06E0  0008               	return
   668  06E1                     __end_of_Lcd8_Write_String:
   669                           
   670                           	psect	text2
   671  0686                     __ptext2:	
   672 ;; *************** function _Lcd8_Write_Char *****************
   673 ;; Defined at:
   674 ;;		line 107 in file "./lcd.h"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  a               1    wreg     unsigned char 
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  a               1    3[COMMON] unsigned char 
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg, status,2, status,0, pclath, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   688 ;;      Params:         0       0       0       0       0
   689 ;;      Locals:         1       0       0       0       0
   690 ;;      Temps:          2       0       0       0       0
   691 ;;      Totals:         3       0       0       0       0
   692 ;;Total ram usage:        3 bytes
   693 ;; Hardware stack levels used:    1
   694 ;; Hardware stack levels required when called:    1
   695 ;; This function calls:
   696 ;;		_Lcd8_Port
   697 ;; This function is called by:
   698 ;;		_Lcd8_Write_String
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _Lcd8_Write_Char
   705  0686                     _Lcd8_Write_Char:
   706                           
   707                           ;incstack = 0
   708                           ; Regs used in _Lcd8_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   709                           ;Lcd8_Write_Char@a stored from wreg
   710  0686  00F3               	movwf	Lcd8_Write_Char@a
   711  0687                     l707:
   712                           
   713                           ;./lcd.h: 107: void Lcd8_Write_Char(char a);./lcd.h: 108: {;./lcd.h: 109:    RB6 = 1;
   714  0687  1283               	bcf	3,5	;RP0=0, select bank0
   715  0688  1303               	bcf	3,6	;RP1=0, select bank0
   716  0689  1706               	bsf	6,6	;volatile
   717  068A                     l709:
   718                           
   719                           ;./lcd.h: 110:    Lcd8_Port(a);
   720  068A  0873               	movf	Lcd8_Write_Char@a,w
   721  068B  120A  118A  26E1  120A  118A  	fcall	_Lcd8_Port
   722  0690                     l711:
   723                           
   724                           ;./lcd.h: 111:    RB7 = 1;
   725  0690  1283               	bcf	3,5	;RP0=0, select bank0
   726  0691  1303               	bcf	3,6	;RP1=0, select bank0
   727  0692  1786               	bsf	6,7	;volatile
   728  0693                     l713:
   729                           
   730                           ;./lcd.h: 112:   _delay((unsigned long)((4)*(4000000/4000.0)));
   731  0693  3006               	movlw	6
   732  0694  00F2               	movwf	??_Lcd8_Write_Char+1
   733  0695  3030               	movlw	48
   734  0696  00F1               	movwf	??_Lcd8_Write_Char
   735  0697                     u227:
   736  0697  0BF1               	decfsz	??_Lcd8_Write_Char,f
   737  0698  2E97               	goto	u227
   738  0699  0BF2               	decfsz	??_Lcd8_Write_Char+1,f
   739  069A  2E97               	goto	u227
   740  069B  0000               	nop
   741  069C                     l715:
   742                           
   743                           ;./lcd.h: 113:    RB7 = 0;
   744  069C  1283               	bcf	3,5	;RP0=0, select bank0
   745  069D  1303               	bcf	3,6	;RP1=0, select bank0
   746  069E  1386               	bcf	6,7	;volatile
   747  069F                     l63:
   748  069F  0008               	return
   749  06A0                     __end_of_Lcd8_Write_Char:
   750                           
   751                           	psect	text3
   752  0666                     __ptext3:	
   753 ;; *************** function _Lcd8_Shift_Right *****************
   754 ;; Defined at:
   755 ;;		line 123 in file "./lcd.h"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2, status,0, pclath, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0
   772 ;;      Totals:         0       0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    2
   776 ;; This function calls:
   777 ;;		_Lcd8_Cmd
   778 ;; This function is called by:
   779 ;;		_main
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           
   784                           ;psect for function _Lcd8_Shift_Right
   785  0666                     _Lcd8_Shift_Right:
   786  0666                     l747:	
   787                           ;incstack = 0
   788                           ; Regs used in _Lcd8_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
   789                           
   790                           
   791                           ;./lcd.h: 125:  Lcd8_Cmd(0x1C);
   792  0666  301C               	movlw	28
   793  0667  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
   794  066C                     l72:
   795  066C  0008               	return
   796  066D                     __end_of_Lcd8_Shift_Right:
   797                           
   798                           	psect	text4
   799  065F                     __ptext4:	
   800 ;; *************** function _Lcd8_Shift_Left *****************
   801 ;; Defined at:
   802 ;;		line 128 in file "./lcd.h"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, status,2, status,0, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    2
   823 ;; This function calls:
   824 ;;		_Lcd8_Cmd
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           
   831                           ;psect for function _Lcd8_Shift_Left
   832  065F                     _Lcd8_Shift_Left:
   833  065F                     l749:	
   834                           ;incstack = 0
   835                           ; Regs used in _Lcd8_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
   836                           
   837                           
   838                           ;./lcd.h: 130:  Lcd8_Cmd(0x18);
   839  065F  3018               	movlw	24
   840  0660  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
   841  0665                     l75:
   842  0665  0008               	return
   843  0666                     __end_of_Lcd8_Shift_Left:
   844                           
   845                           	psect	text5
   846  06A0                     __ptext5:	
   847 ;; *************** function _Lcd8_Set_Cursor *****************
   848 ;; Defined at:
   849 ;;		line 78 in file "./lcd.h"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  a               1    wreg     unsigned char 
   852 ;;  b               1    4[COMMON] unsigned char 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  a               1    5[COMMON] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0, pclath, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         1       0       0       0       0
   865 ;;      Locals:         1       0       0       0       0
   866 ;;      Temps:          0       0       0       0       0
   867 ;;      Totals:         2       0       0       0       0
   868 ;;Total ram usage:        2 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    2
   871 ;; This function calls:
   872 ;;		_Lcd8_Cmd
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           
   879                           ;psect for function _Lcd8_Set_Cursor
   880  06A0                     _Lcd8_Set_Cursor:
   881                           
   882                           ;incstack = 0
   883                           ; Regs used in _Lcd8_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   884                           ;Lcd8_Set_Cursor@a stored from wreg
   885  06A0  00F5               	movwf	Lcd8_Set_Cursor@a
   886  06A1                     l791:
   887                           
   888                           ;./lcd.h: 78: void Lcd8_Set_Cursor(char a, char b);./lcd.h: 79: {;./lcd.h: 80:  if(a == 
      +                          1)
   889  06A1  0375               	decf	Lcd8_Set_Cursor@a,w
   890  06A2  1D03               	btfss	3,2
   891  06A3  2EA5               	goto	u141
   892  06A4  2EA6               	goto	u140
   893  06A5                     u141:
   894  06A5  2EAE               	goto	l795
   895  06A6                     u140:
   896  06A6                     l793:
   897                           
   898                           ;./lcd.h: 81:    Lcd8_Cmd(0x80 + b);
   899  06A6  0874               	movf	Lcd8_Set_Cursor@b,w
   900  06A7  3E80               	addlw	128
   901  06A8  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
   902  06AD  2EBB               	goto	l57
   903  06AE                     l795:
   904  06AE  3002               	movlw	2
   905  06AF  0675               	xorwf	Lcd8_Set_Cursor@a,w
   906  06B0  1D03               	btfss	3,2
   907  06B1  2EB3               	goto	u151
   908  06B2  2EB4               	goto	u150
   909  06B3                     u151:
   910  06B3  2EBB               	goto	l57
   911  06B4                     u150:
   912  06B4                     l797:
   913                           
   914                           ;./lcd.h: 83:   Lcd8_Cmd(0xC0 + b);
   915  06B4  0874               	movf	Lcd8_Set_Cursor@b,w
   916  06B5  3EC0               	addlw	192
   917  06B6  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
   918  06BB                     l57:
   919  06BB  0008               	return
   920  06BC                     __end_of_Lcd8_Set_Cursor:
   921                           
   922                           	psect	text6
   923  071F                     __ptext6:	
   924 ;; *************** function _Lcd8_Init *****************
   925 ;; Defined at:
   926 ;;		line 86 in file "./lcd.h"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0, pclath, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   940 ;;      Params:         0       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0
   942 ;;      Temps:          2       0       0       0       0
   943 ;;      Totals:         2       0       0       0       0
   944 ;;Total ram usage:        2 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    2
   947 ;; This function calls:
   948 ;;		_Lcd8_Cmd
   949 ;;		_Lcd8_Port
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function _Lcd8_Init
   957  071F                     _Lcd8_Init:
   958  071F                     l727:	
   959                           ;incstack = 0
   960                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
   961                           
   962                           
   963                           ;./lcd.h: 88:  Lcd8_Port(0x00);
   964  071F  3000               	movlw	0
   965  0720  120A  118A  26E1  120A  118A  	fcall	_Lcd8_Port
   966  0725                     l729:
   967                           
   968                           ;./lcd.h: 89:  RB6 = 0;
   969  0725  1283               	bcf	3,5	;RP0=0, select bank0
   970  0726  1303               	bcf	3,6	;RP1=0, select bank0
   971  0727  1306               	bcf	6,6	;volatile
   972  0728                     l731:
   973                           
   974                           ;./lcd.h: 90:  _delay((unsigned long)((25)*(4000000/4000.0)));
   975  0728  3021               	movlw	33
   976  0729  00F5               	movwf	??_Lcd8_Init+1
   977  072A  3076               	movlw	118
   978  072B  00F4               	movwf	??_Lcd8_Init
   979  072C                     u237:
   980  072C  0BF4               	decfsz	??_Lcd8_Init,f
   981  072D  2F2C               	goto	u237
   982  072E  0BF5               	decfsz	??_Lcd8_Init+1,f
   983  072F  2F2C               	goto	u237
   984  0730  0000               	nop
   985  0731                     l733:
   986                           
   987                           ;./lcd.h: 93:   Lcd8_Cmd(0x30);
   988  0731  3030               	movlw	48
   989  0732  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
   990                           
   991                           ;./lcd.h: 94: _delay((unsigned long)((5)*(4000000/4000.0)));
   992  0737  3007               	movlw	7
   993  0738  00F5               	movwf	??_Lcd8_Init+1
   994  0739  307D               	movlw	125
   995  073A  00F4               	movwf	??_Lcd8_Init
   996  073B                     u247:
   997  073B  0BF4               	decfsz	??_Lcd8_Init,f
   998  073C  2F3B               	goto	u247
   999  073D  0BF5               	decfsz	??_Lcd8_Init+1,f
  1000  073E  2F3B               	goto	u247
  1001  073F                     l735:
  1002                           
  1003                           ;./lcd.h: 95:   Lcd8_Cmd(0x30);
  1004  073F  3030               	movlw	48
  1005  0740  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
  1006  0745                     l737:
  1007                           
  1008                           ;./lcd.h: 96:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1009  0745  3014               	movlw	20
  1010  0746  00F5               	movwf	??_Lcd8_Init+1
  1011  0747  3079               	movlw	121
  1012  0748  00F4               	movwf	??_Lcd8_Init
  1013  0749                     u257:
  1014  0749  0BF4               	decfsz	??_Lcd8_Init,f
  1015  074A  2F49               	goto	u257
  1016  074B  0BF5               	decfsz	??_Lcd8_Init+1,f
  1017  074C  2F49               	goto	u257
  1018  074D  2F4E               	nop2
  1019                           
  1020                           ;./lcd.h: 97:   Lcd8_Cmd(0x30);
  1021  074E  3030               	movlw	48
  1022  074F  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
  1023                           
  1024                           ;./lcd.h: 101:   Lcd8_Cmd(0x38);
  1025  0754  3038               	movlw	56
  1026  0755  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
  1027                           
  1028                           ;./lcd.h: 102:   Lcd8_Cmd(0x0C);
  1029  075A  300C               	movlw	12
  1030  075B  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
  1031                           
  1032                           ;./lcd.h: 103:   Lcd8_Cmd(0x01);
  1033  0760  3001               	movlw	1
  1034  0761  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
  1035                           
  1036                           ;./lcd.h: 104:   Lcd8_Cmd(0x06);
  1037  0766  3006               	movlw	6
  1038  0767  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
  1039  076C                     l60:
  1040  076C  0008               	return
  1041  076D                     __end_of_Lcd8_Init:
  1042                           
  1043                           	psect	text7
  1044  0658                     __ptext7:	
  1045 ;; *************** function _Lcd8_Clear *****************
  1046 ;; Defined at:
  1047 ;;		line 73 in file "./lcd.h"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  2   50[None  ] int 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0, pclath, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1061 ;;      Params:         0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    2
  1068 ;; This function calls:
  1069 ;;		_Lcd8_Cmd
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _Lcd8_Clear
  1077  0658                     _Lcd8_Clear:
  1078  0658                     l717:	
  1079                           ;incstack = 0
  1080                           ; Regs used in _Lcd8_Clear: [wreg+status,2+status,0+pclath+cstack]
  1081                           
  1082                           
  1083                           ;./lcd.h: 75:    Lcd8_Cmd(1);
  1084  0658  3001               	movlw	1
  1085  0659  120A  118A  266D  120A  118A  	fcall	_Lcd8_Cmd
  1086  065E                     l51:
  1087  065E  0008               	return
  1088  065F                     __end_of_Lcd8_Clear:
  1089                           
  1090                           	psect	text8
  1091  066D                     __ptext8:	
  1092 ;; *************** function _Lcd8_Cmd *****************
  1093 ;; Defined at:
  1094 ;;		line 64 in file "./lcd.h"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  a               1    wreg     unsigned char 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  a               1    3[COMMON] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         1       0       0       0       0
  1110 ;;      Temps:          2       0       0       0       0
  1111 ;;      Totals:         3       0       0       0       0
  1112 ;;Total ram usage:        3 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:    1
  1115 ;; This function calls:
  1116 ;;		_Lcd8_Port
  1117 ;; This function is called by:
  1118 ;;		_Lcd8_Clear
  1119 ;;		_Lcd8_Set_Cursor
  1120 ;;		_Lcd8_Init
  1121 ;;		_Lcd8_Shift_Right
  1122 ;;		_Lcd8_Shift_Left
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           
  1127                           ;psect for function _Lcd8_Cmd
  1128  066D                     _Lcd8_Cmd:
  1129                           
  1130                           ;incstack = 0
  1131                           ; Regs used in _Lcd8_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1132                           ;Lcd8_Cmd@a stored from wreg
  1133  066D  00F3               	movwf	Lcd8_Cmd@a
  1134  066E                     l697:
  1135                           
  1136                           ;./lcd.h: 64: void Lcd8_Cmd(char a);./lcd.h: 65: {;./lcd.h: 66:   RB6 = 0;
  1137  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1138  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0670  1306               	bcf	6,6	;volatile
  1140  0671                     l699:
  1141                           
  1142                           ;./lcd.h: 67:   Lcd8_Port(a);
  1143  0671  0873               	movf	Lcd8_Cmd@a,w
  1144  0672  120A  118A  26E1  120A  118A  	fcall	_Lcd8_Port
  1145  0677                     l701:
  1146                           
  1147                           ;./lcd.h: 68:   RB7 = 1;
  1148  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0679  1786               	bsf	6,7	;volatile
  1151  067A                     l703:
  1152                           
  1153                           ;./lcd.h: 69:   _delay((unsigned long)((5)*(4000000/4000.0)));
  1154  067A  3007               	movlw	7
  1155  067B  00F2               	movwf	??_Lcd8_Cmd+1
  1156  067C  307D               	movlw	125
  1157  067D  00F1               	movwf	??_Lcd8_Cmd
  1158  067E                     u267:
  1159  067E  0BF1               	decfsz	??_Lcd8_Cmd,f
  1160  067F  2E7E               	goto	u267
  1161  0680  0BF2               	decfsz	??_Lcd8_Cmd+1,f
  1162  0681  2E7E               	goto	u267
  1163  0682                     l705:
  1164                           
  1165                           ;./lcd.h: 70:   RB7 = 0;
  1166  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0684  1386               	bcf	6,7	;volatile
  1169  0685                     l48:
  1170  0685  0008               	return
  1171  0686                     __end_of_Lcd8_Cmd:
  1172                           
  1173                           	psect	text9
  1174  06E1                     __ptext9:	
  1175 ;; *************** function _Lcd8_Port *****************
  1176 ;; Defined at:
  1177 ;;		line 22 in file "./lcd.h"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  a               1    wreg     unsigned char 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  a               1    0[COMMON] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       0       0       0       0
  1192 ;;      Locals:         1       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0
  1194 ;;      Totals:         1       0       0       0       0
  1195 ;;Total ram usage:        1 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_Lcd8_Cmd
  1201 ;;		_Lcd8_Init
  1202 ;;		_Lcd8_Write_Char
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function _Lcd8_Port
  1208  06E1                     _Lcd8_Port:
  1209                           
  1210                           ;incstack = 0
  1211                           ; Regs used in _Lcd8_Port: [wreg]
  1212                           ;Lcd8_Port@a stored from wreg
  1213  06E1  00F0               	movwf	Lcd8_Port@a
  1214  06E2                     l679:
  1215                           
  1216                           ;./lcd.h: 22: void Lcd8_Port(char a);./lcd.h: 23: {;./lcd.h: 24:  if(a & 1)
  1217  06E2  1C70               	btfss	Lcd8_Port@a,0
  1218  06E3  2EE5               	goto	u11
  1219  06E4  2EE6               	goto	u10
  1220  06E5                     u11:
  1221  06E5  2EEA               	goto	l29
  1222  06E6                     u10:
  1223  06E6                     l681:
  1224                           
  1225                           ;./lcd.h: 25:   RC0 = 1;
  1226  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1227  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1228  06E8  1407               	bsf	7,0	;volatile
  1229  06E9  2EED               	goto	l30
  1230  06EA                     l29:	
  1231                           ;./lcd.h: 26:  else
  1232                           
  1233                           
  1234                           ;./lcd.h: 27:   RC0 = 0;
  1235  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  1236  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  1237  06EC  1007               	bcf	7,0	;volatile
  1238  06ED                     l30:
  1239                           
  1240                           ;./lcd.h: 29:  if(a & 2)
  1241  06ED  1CF0               	btfss	Lcd8_Port@a,1
  1242  06EE  2EF0               	goto	u21
  1243  06EF  2EF1               	goto	u20
  1244  06F0                     u21:
  1245  06F0  2EF3               	goto	l31
  1246  06F1                     u20:
  1247  06F1                     l683:
  1248                           
  1249                           ;./lcd.h: 30:   RC1 = 1;
  1250  06F1  1487               	bsf	7,1	;volatile
  1251  06F2  2EF4               	goto	l32
  1252  06F3                     l31:	
  1253                           ;./lcd.h: 31:  else
  1254                           
  1255                           
  1256                           ;./lcd.h: 32:   RC1 = 0;
  1257  06F3  1087               	bcf	7,1	;volatile
  1258  06F4                     l32:
  1259                           
  1260                           ;./lcd.h: 34:  if(a & 4)
  1261  06F4  1D70               	btfss	Lcd8_Port@a,2
  1262  06F5  2EF7               	goto	u31
  1263  06F6  2EF8               	goto	u30
  1264  06F7                     u31:
  1265  06F7  2EFA               	goto	l33
  1266  06F8                     u30:
  1267  06F8                     l685:
  1268                           
  1269                           ;./lcd.h: 35:   RC2 = 1;
  1270  06F8  1507               	bsf	7,2	;volatile
  1271  06F9  2EFB               	goto	l34
  1272  06FA                     l33:	
  1273                           ;./lcd.h: 36:  else
  1274                           
  1275                           
  1276                           ;./lcd.h: 37:   RC2 = 0;
  1277  06FA  1107               	bcf	7,2	;volatile
  1278  06FB                     l34:
  1279                           
  1280                           ;./lcd.h: 39:  if(a & 8)
  1281  06FB  1DF0               	btfss	Lcd8_Port@a,3
  1282  06FC  2EFE               	goto	u41
  1283  06FD  2EFF               	goto	u40
  1284  06FE                     u41:
  1285  06FE  2F01               	goto	l35
  1286  06FF                     u40:
  1287  06FF                     l687:
  1288                           
  1289                           ;./lcd.h: 40:   RC3 = 1;
  1290  06FF  1587               	bsf	7,3	;volatile
  1291  0700  2F02               	goto	l36
  1292  0701                     l35:	
  1293                           ;./lcd.h: 41:  else
  1294                           
  1295                           
  1296                           ;./lcd.h: 42:   RC3 = 0;
  1297  0701  1187               	bcf	7,3	;volatile
  1298  0702                     l36:
  1299                           
  1300                           ;./lcd.h: 44:  if(a & 16)
  1301  0702  1E70               	btfss	Lcd8_Port@a,4
  1302  0703  2F05               	goto	u51
  1303  0704  2F06               	goto	u50
  1304  0705                     u51:
  1305  0705  2F08               	goto	l37
  1306  0706                     u50:
  1307  0706                     l689:
  1308                           
  1309                           ;./lcd.h: 45:   RC4 = 1;
  1310  0706  1607               	bsf	7,4	;volatile
  1311  0707  2F09               	goto	l38
  1312  0708                     l37:	
  1313                           ;./lcd.h: 46:  else
  1314                           
  1315                           
  1316                           ;./lcd.h: 47:   RC4 = 0;
  1317  0708  1207               	bcf	7,4	;volatile
  1318  0709                     l38:
  1319                           
  1320                           ;./lcd.h: 49:  if(a & 32)
  1321  0709  1EF0               	btfss	Lcd8_Port@a,5
  1322  070A  2F0C               	goto	u61
  1323  070B  2F0D               	goto	u60
  1324  070C                     u61:
  1325  070C  2F0F               	goto	l39
  1326  070D                     u60:
  1327  070D                     l691:
  1328                           
  1329                           ;./lcd.h: 50:   RC5 = 1;
  1330  070D  1687               	bsf	7,5	;volatile
  1331  070E  2F10               	goto	l40
  1332  070F                     l39:	
  1333                           ;./lcd.h: 51:  else
  1334                           
  1335                           
  1336                           ;./lcd.h: 52:   RC5 = 0;
  1337  070F  1287               	bcf	7,5	;volatile
  1338  0710                     l40:
  1339                           
  1340                           ;./lcd.h: 54:  if(a & 64)
  1341  0710  1F70               	btfss	Lcd8_Port@a,6
  1342  0711  2F13               	goto	u71
  1343  0712  2F14               	goto	u70
  1344  0713                     u71:
  1345  0713  2F16               	goto	l41
  1346  0714                     u70:
  1347  0714                     l693:
  1348                           
  1349                           ;./lcd.h: 55:   RC6 = 1;
  1350  0714  1707               	bsf	7,6	;volatile
  1351  0715  2F17               	goto	l42
  1352  0716                     l41:	
  1353                           ;./lcd.h: 56:  else
  1354                           
  1355                           
  1356                           ;./lcd.h: 57:   RC6 = 0;
  1357  0716  1307               	bcf	7,6	;volatile
  1358  0717                     l42:
  1359                           
  1360                           ;./lcd.h: 59:  if(a & 128)
  1361  0717  1FF0               	btfss	Lcd8_Port@a,7
  1362  0718  2F1A               	goto	u81
  1363  0719  2F1B               	goto	u80
  1364  071A                     u81:
  1365  071A  2F1D               	goto	l43
  1366  071B                     u80:
  1367  071B                     l695:
  1368                           
  1369                           ;./lcd.h: 60:   RC7 = 1;
  1370  071B  1787               	bsf	7,7	;volatile
  1371  071C  2F1E               	goto	l45
  1372  071D                     l43:	
  1373                           ;./lcd.h: 61:  else
  1374                           
  1375                           
  1376                           ;./lcd.h: 62:   RC7 = 0;
  1377  071D  1387               	bcf	7,7	;volatile
  1378  071E                     l45:
  1379  071E  0008               	return
  1380  071F                     __end_of_Lcd8_Port:
  1381  007E                     btemp	set	126	;btemp
  1382  007E                     wtemp0	set	126

Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd8_Write_String@a	PTR unsigned char  size(1) Largest target is 28
		 -> STR_1(CODE[28]), 


Critical Paths under _main in COMMON

    _main->_Lcd8_Write_String
    _Lcd8_Write_String->_Lcd8_Write_Char
    _Lcd8_Write_Char->_Lcd8_Port
    _Lcd8_Shift_Right->_Lcd8_Cmd
    _Lcd8_Shift_Left->_Lcd8_Cmd
    _Lcd8_Set_Cursor->_Lcd8_Cmd
    _Lcd8_Init->_Lcd8_Cmd
    _Lcd8_Clear->_Lcd8_Cmd
    _Lcd8_Cmd->_Lcd8_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1520
                                              7 COMMON     5     5      0
                         _Lcd8_Clear
                          _Lcd8_Init
                    _Lcd8_Set_Cursor
                    _Lcd8_Shift_Left
                   _Lcd8_Shift_Right
                    _Lcd8_Write_Char
                  _Lcd8_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Write_String                                    3     3      0     258
                                              4 COMMON     3     3      0
                    _Lcd8_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Write_Char                                      3     3      0     135
                                              1 COMMON     3     3      0
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Shift_Right                                     0     0      0     135
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Shift_Left                                      0     0      0     135
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Set_Cursor                                      2     1      1     375
                                              4 COMMON     2     1      1
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Init                                            2     2      0     255
                                              4 COMMON     2     2      0
                           _Lcd8_Cmd
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Clear                                           0     0      0     135
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Cmd                                             3     3      0     135
                                              1 COMMON     3     3      0
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd8_Port                                            1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd8_Clear
     _Lcd8_Cmd
       _Lcd8_Port
   _Lcd8_Init
     _Lcd8_Cmd
       _Lcd8_Port
     _Lcd8_Port
   _Lcd8_Set_Cursor
     _Lcd8_Cmd
       _Lcd8_Port
   _Lcd8_Shift_Left
     _Lcd8_Cmd
       _Lcd8_Port
   _Lcd8_Shift_Right
     _Lcd8_Cmd
       _Lcd8_Port
   _Lcd8_Write_Char
     _Lcd8_Port
   _Lcd8_Write_String
     _Lcd8_Write_Char
       _Lcd8_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 15:45:41 2021

                         pc 0002                          l30 06ED                          l31 06F3  
                        l40 0710                          l32 06F4                          l41 0716  
                        l33 06FA                          l42 0717                          l34 06FB  
                        l43 071D                          l35 0701                          l51 065E  
                        l36 0702                          l60 076C                          l45 071E  
                        l37 0708                          l29 06EA                          l38 0709  
                        l39 070F                          l63 069F                          l48 0685  
                        l72 066C                          l57 06BB                          l75 0665  
                        l69 06E0                          u10 06E6                          u11 06E5  
                        u20 06F1                          u21 06F0                          u30 06F8  
                        u31 06F7                          u40 06FF                          u41 06FE  
                        u50 0706                          u51 0705                          u60 070D  
                        u61 070C                          u70 0714                          u71 0713  
                        u80 071B                          u81 071A                          fsr 0004  
                       l701 0677                         l703 067A                         l711 0690  
                       l705 0682                         l713 0693                         l801 06C0  
                       l731 0728                         l715 069C                         l707 0687  
                       l803 06CD                         l811 0776                         l717 0658  
                       l733 0731                         l709 068A                         l805 06D3  
                       l821 0786                         l813 077E                         l735 073F  
                       l727 071F                         l823 0793                         l815 0784  
                       l807 076D                         l681 06E6                         l737 0745  
                       l729 0725                         l841 07C5                         l825 0798  
                       l809 0771                         l691 070D                         l683 06F1  
                       l747 0666                         l843 07D2                         l835 07AD  
                       l827 079E                         l693 0714                         l685 06F8  
                       l749 065F                         l845 07EB                         l837 07BA  
                       l829 07AB                         l695 071B                         l687 06FF  
                       l679 06E2                         l791 06A1                         l839 07BF  
                       l689 0706                         l697 066E                         l793 06A6  
                       l699 0671                         l795 06AE                         l797 06B4  
                       l799 06BD                         _RC0 0038                         _RC1 0039  
                       _RC2 003A                         _RC3 003B                         _RC4 003C  
                       _RB6 0036                         _RC5 003D                         _RB7 0037  
                       _RC6 003E                         _RC7 003F                         u140 06A6  
                       u141 06A5                         u150 06B4                         u151 06B3  
                       u207 07B3                         u160 06E0                         u161 06DF  
                       u217 07F1                         u170 07AB                         u227 0697  
                       u171 07AA                         u180 07D2                         u237 072C  
                       u181 07D1                         u247 073B                         u175 07A7  
                       u257 0749                         u185 07CE                         u267 067E  
                       u197 078C                         fsr0 0004                  _Lcd8_Clear 0658  
                      STR_1 0009                        _main 076D           ??_Lcd8_Set_Cursor 0075  
                      btemp 007E                        start 0000           ??_Lcd8_Shift_Left 0074  
                     ?_main 0070                       _TRISB 0086                       _TRISC 0087  
                     main@i 007A                       pclath 000A                       status 0003  
          __end_of_Lcd8_Cmd 0686                       wtemp0 007E           ?_Lcd8_Shift_Right 0070  
        ??_Lcd8_Shift_Right 0074             __initialization 07FC                __end_of_main 07FC  
        __size_of_Lcd8_Init 004E          __size_of_Lcd8_Port 003E           ??_Lcd8_Write_Char 0071  
                    ??_main 0077                 ?_Lcd8_Clear 0070           __end_of_Lcd8_Init 076D  
         __end_of_Lcd8_Port 071F     __end_of__initialization 07FC              __pcstackCOMMON 0070  
       __size_of_Lcd8_Clear 0007                   ?_Lcd8_Cmd 0070             _Lcd8_Set_Cursor 06A0  
           _Lcd8_Shift_Left 065F                  __pmaintext 076D            Lcd8_Set_Cursor@a 0075  
          Lcd8_Set_Cursor@b 0074                  ??_Lcd8_Cmd 0071                  __stringtab 0003  
           _Lcd8_Write_Char 0686     __end_of_Lcd8_Set_Cursor 06BC                     __ptext1 06BC  
                   __ptext2 0686                     __ptext3 0666                     __ptext4 065F  
                   __ptext5 06A0                     __ptext6 071F                     __ptext7 0658  
                   __ptext8 066D                     __ptext9 06E1   __size_of_Lcd8_Shift_Right 0007  
   __end_of_Lcd8_Shift_Left 0666                   Lcd8_Cmd@a 0073                ??_Lcd8_Clear 0074  
      end_of_initialization 07FC          __end_of_Lcd8_Clear 065F     __end_of_Lcd8_Write_Char 06A0  
                 _Lcd8_Init 071F                   _Lcd8_Port 06E1            ?_Lcd8_Set_Cursor 0074  
          ?_Lcd8_Shift_Left 0070         start_initialization 07FC           __size_of_Lcd8_Cmd 0019  
         _Lcd8_Write_String 06BC          ?_Lcd8_Write_String 0070                  ?_Lcd8_Init 0070  
                ?_Lcd8_Port 0070         ??_Lcd8_Write_String 0074            _Lcd8_Shift_Right 0666  
                 ___latbits 0002   __end_of_Lcd8_Write_String 06E1            ?_Lcd8_Write_Char 0070  
                 __pstrings 0003                 ??_Lcd8_Init 0074            Lcd8_Write_Char@a 0073  
               ??_Lcd8_Port 0070                 __stringbase 0008                    _Lcd8_Cmd 066D  
__size_of_Lcd8_Write_String 0025          __end_of__stringtab 0009    __end_of_Lcd8_Shift_Right 066D  
             __size_of_main 008F                  Lcd8_Port@a 0070    __size_of_Lcd8_Set_Cursor 001C  
  __size_of_Lcd8_Shift_Left 0007                   stringcode 0003          Lcd8_Write_String@a 0076  
        Lcd8_Write_String@i 0074                    stringdir 0003                    stringtab 0003  
  __size_of_Lcd8_Write_Char 001A  
