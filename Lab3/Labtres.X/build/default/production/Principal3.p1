Version 4.0 HI-TECH Software Intermediate Code
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"544 C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 544:     struct {
[s S19 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF ]
"543
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 543: typedef union {
[u S18 `S19 1 ]
[n S18 . . ]
"554
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 554: extern volatile PIR1bits_t PIR1bits __attribute__((address(0x00C)));
[v _PIR1bits `VS18 ~T0 @X0 0 e@12 ]
"1709
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1709:     struct {
[s S63 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S63 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE ]
"1708
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1708: typedef union {
[u S62 `S63 1 ]
[n S62 . . ]
"1719
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1719: extern volatile PIE1bits_t PIE1bits __attribute__((address(0x08C)));
[v _PIE1bits `VS62 ~T0 @X0 0 e@140 ]
[p mainexit ]
"1603
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1603: extern volatile unsigned char TRISD __attribute__((address(0x088)));
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"1541
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1541: extern volatile unsigned char TRISC __attribute__((address(0x087)));
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"353
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 353: extern volatile unsigned char PORTD __attribute__((address(0x008)));
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"291
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 291: extern volatile unsigned char PORTC __attribute__((address(0x007)));
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"17 ./LCD.h
[; ;./LCD.h: 17: void LCD_init(void);
[v _LCD_init `(v ~T0 @X0 0 ef ]
"16 ./ADC.h
[; ;./ADC.h: 16: void ADConfig(uint8_t oscFreq,uint8_t canal, unsigned char justificado);
[v _ADConfig `(v ~T0 @X0 0 ef3`uc`uc`uc ]
"20 ./LCD.h
[; ;./LCD.h: 20: void LCD_Set_Cursor(uint8_t linea, uint8_t columna);
[v _LCD_Set_Cursor `(v ~T0 @X0 0 ef2`uc`uc ]
"19
[; ;./LCD.h: 19: void LCD_Write_String(char *a);
[v _LCD_Write_String `(v ~T0 @X0 0 ef1`*uc ]
"17 ./USART.h
[; ;./USART.h: 17: uint8_t usart_init(void);
[v _usart_init `(uc ~T0 @X0 0 ef ]
"18
[; ;./USART.h: 18: char usartRC_Read();
[v _usartRC_Read `(uc ~T0 @X0 0 e? ]
[v F36 `(v ~T0 @X0 1 tf1`ul ]
"12 C:\Program Files\Microchip\xc8\v2.31\pic\include\builtins.h
[v __delay `JF36 ~T0 @X0 0 e ]
[p i __delay ]
"20 ./USART.h
[; ;./USART.h: 20: void enviar (uint8_t valor1 ,uint8_t valor2 );
[v _enviar `(v ~T0 @X0 0 ef2`uc`uc ]
"18 ./ADC.h
[; ;./ADC.h: 18: uint8_t AnalogRead_8(unsigned char just);
[v _AnalogRead_8 `(uc ~T0 @X0 0 ef1`uc ]
"22
[; ;./ADC.h: 22: void ADC_CHselect(uint8_t canal);
[v _ADC_CHselect `(v ~T0 @X0 0 ef1`uc ]
"49 Principal3.c
[; ;Principal3.c: 49:             enviar(valorADC_CH5,valorADC_CH0);
[v _mapear `(*ui ~T0 @X0 0 ef3`uc`uc`uc ]
"18 ./LCD.h
[; ;./LCD.h: 18: void LCD_Write_Character(char caracter);
[v _LCD_Write_Character `(v ~T0 @X0 0 ef1`uc ]
"25
[; ;./LCD.h: 25: char uint_to_char(uint8_t numero);
[v _uint_to_char `(uc ~T0 @X0 0 ef1`uc ]
"1252 C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1252:     struct {
[s S45 :1 `uc 1 :1 `uc 1 :4 `uc 1 :2 `uc 1 ]
[n S45 . ADON GO_nDONE CHS ADCS ]
"1258
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1258:     struct {
[s S46 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S46 . . GO CHS0 CHS1 CHS2 CHS3 ADCS0 ADCS1 ]
"1268
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1268:     struct {
[s S47 :1 `uc 1 :1 `uc 1 ]
[n S47 . . nDONE ]
"1272
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1272:     struct {
[s S48 :1 `uc 1 :1 `uc 1 ]
[n S48 . . GO_DONE ]
"1251
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1251: typedef union {
[u S44 `S45 1 `S46 1 `S47 1 `S48 1 ]
[n S44 . . . . . ]
"1277
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1277: extern volatile ADCON0bits_t ADCON0bits __attribute__((address(0x01F)));
[v _ADCON0bits `VS44 ~T0 @X0 0 e@31 ]
"26 ./LCD.h
[; ;./LCD.h: 26: uint16_t * uint_to_array(uint8_t numero);
[v _uint_to_array `(*ui ~T0 @X0 0 ef1`uc ]
"55 C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 55: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"62
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 62: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"69
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 69: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"76
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 76: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"162
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 162: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"169
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 169: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"231
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 231: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"293
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 293: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"355
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 355: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"417
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 417: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"455
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 455: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"462
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 462: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"540
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 540: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"653
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 653: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"660
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 660: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"667
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 667: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"674
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 674: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"768
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 768: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"775
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 775: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"846
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 846: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"853
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 853: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"923
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 923: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"930
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 930: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"937
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 937: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"944
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 944: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1041
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1041: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1136
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1136: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1143
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1143: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1150
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1150: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1157
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1157: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1164
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1164: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1171
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1171: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1241
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1241: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1248
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1248: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1349
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1349: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1419
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1419: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1481
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1481: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1543
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1543: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1605
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1605: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1667
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1667: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1705
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1705: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1761
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1761: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1818
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1818: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1865
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1865: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1930
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1930: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1982
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 1982: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2044
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2044: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2051
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2051: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2058
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2058: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2063
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2063: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2180
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2180: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2349
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2349: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2419
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2419: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2489
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2489: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2559
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2559: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2645
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2645: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2707
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2707: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2777
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2777: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2847
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2847: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2929
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2929: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2973
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2973: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2980
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 2980: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3014
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3014: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3067
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3067: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3132
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3132: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3197
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3197: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3248
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3248: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3253
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3253: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3260
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3260: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3267
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3267: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3274
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3274: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3281
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3281: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3338
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3338: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3390
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3390: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3452
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3452: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3502
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3502: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3547
[; ;C:\Program Files\Microchip\xc8\v2.31\pic\include\proc\pic16f887.h: 3547: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"15 Principal3.c
[; ;Principal3.c: 15: uint8_t banderaSerial = 0;
[p x FOSC  =  INTRC_NOCLKOUT ]
"16
[; ;Principal3.c: 16: uint8_t contador = 0;
[p x WDTE  =  OFF        ]
"17
[; ;Principal3.c: 17: char valorSerial = 'E';
[p x PWRTE  =  OFF       ]
"18
[; ;Principal3.c: 18: 
[p x MCLRE  =  OFF       ]
"19
[; ;Principal3.c: 19: uint16_t * mapear(uint8_t valor, uint8_t limReal, uint8_t limSup);
[p x CP  =  OFF          ]
"20
[; ;Principal3.c: 20: 
[p x CPD  =  OFF         ]
"21
[; ;Principal3.c: 21: 
[p x BOREN  =  OFF       ]
"22
[; ;Principal3.c: 22: void __attribute__((picinterrupt(("")))) ISR_ADC(void){
[p x IESO  =  OFF        ]
"23
[; ;Principal3.c: 23:     if (PIR1bits.ADIF && PIE1bits.ADIE){
[p x FCMEN  =  OFF       ]
"24
[; ;Principal3.c: 24:         PIE1bits.ADIE = 0;
[p x LVP  =  OFF         ]
"27
[; ;Principal3.c: 27: }
[p x BOR4V  =  BOR40V    ]
"28
[; ;Principal3.c: 28: 
[p x WRT  =  OFF         ]
"35
[; ;Principal3.c: 35:     LCD_init();
[v _linea2 `uc ~T0 @X0 -> 12 `i e ]
"37
[; ;Principal3.c: 37:     LCD_Set_Cursor(1,1);
[v _valorADC_CH5 `uc ~T0 @X0 1 e ]
[i _valorADC_CH5
-> -> 0 `i `uc
]
"38
[; ;Principal3.c: 38:     LCD_Write_String("S1    S2    S3");
[v _banderaADC `uc ~T0 @X0 1 e ]
[i _banderaADC
-> -> 1 `i `uc
]
"39
[; ;Principal3.c: 39:     usart_init();
[v _valorADC_CH0 `uc ~T0 @X0 1 e ]
[i _valorADC_CH0
-> -> 0 `i `uc
]
"40
[; ;Principal3.c: 40: 
[v _num1 `*ui ~T0 @X0 1 e ]
"41
[; ;Principal3.c: 41: 
[v _num2 `*ui ~T0 @X0 1 e ]
"42
[; ;Principal3.c: 42:     while(1){
[v _num3 `*ui ~T0 @X0 1 e ]
"43
[; ;Principal3.c: 43:         if(PIR1bits.RCIF == 1){
[v _pot1 `uc ~T0 @X0 1 e ]
[i _pot1
-> -> 0 `i `uc
]
"44
[; ;Principal3.c: 44:             usartRC_Read();
[v _pot2 `uc ~T0 @X0 1 e ]
[i _pot2
-> -> 0 `i `uc
]
"45
[; ;Principal3.c: 45:             _delay((unsigned long)((5)*(4000000/4000.0)));
[v _banderaSerial `uc ~T0 @X0 1 e ]
[i _banderaSerial
-> -> 0 `i `uc
]
"46
[; ;Principal3.c: 46:         }
[v _contador `uc ~T0 @X0 1 e ]
[i _contador
-> -> 0 `i `uc
]
"47
[; ;Principal3.c: 47: 
[v _valorSerial `uc ~T0 @X0 1 e ]
[i _valorSerial
-> -> 69 `ui `uc
]
[v $root$_ISR_ADC `(v ~T0 @X0 0 e ]
"52
[; ;Principal3.c: 52:         if (banderaADC == 1){
[v _ISR_ADC `(v ~T1 @X0 1 ef ]
{
[e :U _ISR_ADC ]
[f ]
"53
[; ;Principal3.c: 53:             switch (ADCON0bits.CHS){
[e $ ! && != -> . . _PIR1bits 0 6 `i -> 0 `i != -> . . _PIE1bits 0 6 `i -> 0 `i 139  ]
{
"54
[; ;Principal3.c: 54:                 case 5:
[e = . . _PIE1bits 0 6 -> -> 0 `i `uc ]
"55
[; ;Principal3.c: 55:                     valorADC_CH5 = AnalogRead_8('H');
[e = _banderaADC -> -> 1 `i `uc ]
"56
[; ;Principal3.c: 56:                     ADC_CHselect(0);
}
[e :U 139 ]
"57
[; ;Principal3.c: 57:                     num1 = mapear(valorADC_CH5, 255, 5);
[e :UE 138 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"59
[; ;Principal3.c: 59:                     LCD_Write_Character(uint_to_char(num1[0]));
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"60
[; ;Principal3.c: 60:                     LCD_Write_Character('.');
[e = _TRISD -> -> 0 `i `uc ]
"61
[; ;Principal3.c: 61:                     LCD_Write_Character(uint_to_char(num1[1]));
[e = _TRISC -> -> 128 `i `uc ]
"63
[; ;Principal3.c: 63:                     LCD_Write_Character('V');
[e = _PORTD -> -> 0 `i `uc ]
"64
[; ;Principal3.c: 64: 
[e = _PORTC -> -> 0 `i `uc ]
"65
[; ;Principal3.c: 65: 
[e ( _LCD_init ..  ]
"66
[; ;Principal3.c: 66: 
[e ( _ADConfig (3 , , -> -> 4 `i `uc -> -> 5 `i `uc -> -> 72 `ui `uc ]
"67
[; ;Principal3.c: 67:                     break;
[e ( _LCD_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"68
[; ;Principal3.c: 68:                 case 0:
[e ( _LCD_Write_String (1 :s 1C ]
"69
[; ;Principal3.c: 69:                     valorADC_CH0 = AnalogRead_8('H');
[e ( _usart_init ..  ]
"72
[; ;Principal3.c: 72:                     LCD_Set_Cursor(2, 6);
[e :U 142 ]
{
"73
[; ;Principal3.c: 73:                     LCD_Write_Character(uint_to_char(num2[0]));
[e $ ! == -> . . _PIR1bits 0 5 `i -> 1 `i 144  ]
{
"74
[; ;Principal3.c: 74:                     LCD_Write_Character('.');
[e ( _usartRC_Read ..  ]
"75
[; ;Principal3.c: 75:                     LCD_Write_Character(uint_to_char(num2[1]));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"76
[; ;Principal3.c: 76:                     LCD_Write_Character(uint_to_char(num2[2]));
}
[e :U 144 ]
"78
[; ;Principal3.c: 78: 
[e $ ! == -> . . _PIR1bits 0 4 `i -> 1 `i 145  ]
{
"79
[; ;Principal3.c: 79: 
[e ( _enviar (2 , _valorADC_CH5 _valorADC_CH0 ]
"80
[; ;Principal3.c: 80: 
}
[e :U 145 ]
"82
[; ;Principal3.c: 82: 
[e $ ! == -> _banderaADC `i -> 1 `i 146  ]
{
"83
[; ;Principal3.c: 83:                 default:
[e $U 148  ]
{
"84
[; ;Principal3.c: 84:                     valorADC_CH0 = 0;
[e :U 149 ]
"85
[; ;Principal3.c: 85:                     valorADC_CH5 = 0;
[e = _valorADC_CH5 ( _AnalogRead_8 (1 -> -> 72 `ui `uc ]
"86
[; ;Principal3.c: 86:             }
[e ( _ADC_CHselect (1 -> -> 0 `i `uc ]
"87
[; ;Principal3.c: 87: 
[e = _num1 ( _mapear (3 , , _valorADC_CH5 -> -> 255 `i `uc -> -> 5 `i `uc ]
"88
[; ;Principal3.c: 88:             banderaADC = 0;
[e ( _LCD_Set_Cursor (2 , -> -> 2 `i `uc -> -> 0 `i `uc ]
"89
[; ;Principal3.c: 89:             PIR1bits.ADIF = 0;
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num1 * -> -> 0 `i `x -> -> # *U _num1 `i `x `uc ]
"90
[; ;Principal3.c: 90:             PIE1bits.ADIE = 1;
[e ( _LCD_Write_Character (1 -> -> 46 `ui `uc ]
"91
[; ;Principal3.c: 91:             ADCON0bits.GO_nDONE = 1;
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num1 * -> -> 1 `i `x -> -> # *U _num1 `i `x `uc ]
"92
[; ;Principal3.c: 92:         }
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num1 * -> -> 2 `i `x -> -> # *U _num1 `i `x `uc ]
"93
[; ;Principal3.c: 93: 
[e ( _LCD_Write_Character (1 -> -> 86 `ui `uc ]
"97
[; ;Principal3.c: 97:             LCD_Write_Character(uint_to_char(num3[0]));
[e $U 147  ]
"98
[; ;Principal3.c: 98:             LCD_Write_Character(uint_to_char(num3[1]));
[e :U 150 ]
"99
[; ;Principal3.c: 99:             LCD_Write_Character(uint_to_char(num3[2]));
[e = _valorADC_CH0 ( _AnalogRead_8 (1 -> -> 72 `ui `uc ]
"100
[; ;Principal3.c: 100:             enviar (valorADC_CH0,valorADC_CH5);
[e ( _ADC_CHselect (1 -> -> 1 `i `uc ]
"101
[e = _num2 ( _mapear (3 , , _valorADC_CH0 -> -> 255 `i `uc -> -> 5 `i `uc ]
"102
[e ( _LCD_Set_Cursor (2 , -> -> 2 `i `uc -> -> 6 `i `uc ]
"103
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num2 * -> -> 0 `i `x -> -> # *U _num2 `i `x `uc ]
"104
[e ( _LCD_Write_Character (1 -> -> 46 `ui `uc ]
"105
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num2 * -> -> 1 `i `x -> -> # *U _num2 `i `x `uc ]
"106
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num2 * -> -> 2 `i `x -> -> # *U _num2 `i `x `uc ]
"107
[e ( _LCD_Write_Character (1 -> -> 86 `ui `uc ]
"111
[e $U 147  ]
"113
[e :U 151 ]
"114
[e = _valorADC_CH0 -> -> 0 `i `uc ]
"115
[e = _valorADC_CH5 -> -> 0 `i `uc ]
"116
}
[e $U 147  ]
[e :U 148 ]
[e [\ -> . . _ADCON0bits 0 2 `i , $ -> 5 `i 149
 , $ -> 0 `i 150
 151 ]
[e :U 147 ]
"118
[e = _banderaADC -> -> 0 `i `uc ]
"119
[e = . . _PIR1bits 0 6 -> -> 0 `i `uc ]
"120
[e = . . _PIE1bits 0 6 -> -> 1 `i `uc ]
"121
[e = . . _ADCON0bits 0 1 -> -> 1 `i `uc ]
"122
}
[e :U 146 ]
"125
[e = _num3 ( _uint_to_array (1 _contador ]
"126
[e ( _LCD_Set_Cursor (2 , -> -> 2 `i `uc -> -> 13 `i `uc ]
"127
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num3 * -> -> 0 `i `x -> -> # *U _num3 `i `x `uc ]
"128
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num3 * -> -> 1 `i `x -> -> # *U _num3 `i `x `uc ]
"129
[e ( _LCD_Write_Character (1 ( _uint_to_char (1 -> *U + _num3 * -> -> 2 `i `x -> -> # *U _num3 `i `x `uc ]
"130
[e ( _enviar (2 , _valorADC_CH0 _valorADC_CH5 ]
"144
[; ;Principal3.c: 144:     }
}
[e :U 141 ]
[e $U 142  ]
[e :U 143 ]
"145
[; ;Principal3.c: 145:     return;
[e $UE 140  ]
"146
[; ;Principal3.c: 146: }
[e :UE 140 ]
}
"149
[; ;Principal3.c: 149: uint16_t * mapear(uint8_t valor, uint8_t limReal, uint8_t limSup){
[v _mapear `(*ui ~T0 @X0 1 ef3`uc`uc`uc ]
{
[e :U _mapear ]
[v _valor `uc ~T0 @X0 1 r1 ]
[v _limReal `uc ~T0 @X0 1 r2 ]
[v _limSup `uc ~T0 @X0 1 r3 ]
[f ]
[v F1350 `ui ~T0 @X0 -> 3 `i s ]
[i F1350
:U ..
"150
[; ;Principal3.c: 150:     uint16_t resultado[3] = {0,0,0};
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 0 `i `ui
..
]
[v _resultado `ui ~T0 @X0 -> 3 `i a ]
[e = _resultado F1350 ]
"151
[; ;Principal3.c: 151:     uint16_t dividendo = valor*limSup;
[v _dividendo `ui ~T0 @X0 1 a ]
[e = _dividendo -> * -> _valor `i -> _limSup `i `ui ]
"152
[; ;Principal3.c: 152:     while (limReal <= dividendo){
[e $U 153  ]
[e :U 154 ]
{
"153
[; ;Principal3.c: 153:         resultado[0] = resultado[0] + 1;
[e = *U + &U _resultado * -> -> -> 0 `i `ui `ux -> -> # *U &U _resultado `ui `ux + *U + &U _resultado * -> -> -> 0 `i `ui `ux -> -> # *U &U _resultado `ui `ux -> -> 1 `i `ui ]
"154
[; ;Principal3.c: 154:         dividendo = dividendo - limReal;
[e = _dividendo - _dividendo -> _limReal `ui ]
"155
[; ;Principal3.c: 155:     }
}
[e :U 153 ]
"152
[; ;Principal3.c: 152:     while (limReal <= dividendo){
[e $ <= -> _limReal `ui _dividendo 154  ]
[e :U 155 ]
"156
[; ;Principal3.c: 156:     dividendo = dividendo *10;
[e = _dividendo * _dividendo -> -> 10 `i `ui ]
"157
[; ;Principal3.c: 157:     while (limReal <= dividendo){
[e $U 156  ]
[e :U 157 ]
{
"158
[; ;Principal3.c: 158:         resultado[1] = resultado[1] +1;
[e = *U + &U _resultado * -> -> -> 1 `i `ui `ux -> -> # *U &U _resultado `ui `ux + *U + &U _resultado * -> -> -> 1 `i `ui `ux -> -> # *U &U _resultado `ui `ux -> -> 1 `i `ui ]
"159
[; ;Principal3.c: 159:         dividendo = dividendo - limReal;
[e = _dividendo - _dividendo -> _limReal `ui ]
"160
[; ;Principal3.c: 160:     }
}
[e :U 156 ]
"157
[; ;Principal3.c: 157:     while (limReal <= dividendo){
[e $ <= -> _limReal `ui _dividendo 157  ]
[e :U 158 ]
"161
[; ;Principal3.c: 161:     dividendo = dividendo *10;
[e = _dividendo * _dividendo -> -> 10 `i `ui ]
"162
[; ;Principal3.c: 162:     while (limReal <= dividendo){
[e $U 159  ]
[e :U 160 ]
{
"163
[; ;Principal3.c: 163:         resultado[2] = resultado[2] +1;
[e = *U + &U _resultado * -> -> -> 2 `i `ui `ux -> -> # *U &U _resultado `ui `ux + *U + &U _resultado * -> -> -> 2 `i `ui `ux -> -> # *U &U _resultado `ui `ux -> -> 1 `i `ui ]
"164
[; ;Principal3.c: 164:         dividendo = dividendo - limReal;
[e = _dividendo - _dividendo -> _limReal `ui ]
"165
[; ;Principal3.c: 165:     }
}
[e :U 159 ]
"162
[; ;Principal3.c: 162:     while (limReal <= dividendo){
[e $ <= -> _limReal `ui _dividendo 160  ]
[e :U 161 ]
"167
[; ;Principal3.c: 167:     return resultado;
[e ) &U _resultado ]
[e $UE 152  ]
"168
[; ;Principal3.c: 168: }
[e :UE 152 ]
}
[a 1C 83 49 32 32 32 32 83 50 32 32 32 32 83 51 0 ]
